{"version":3,"sources":["node_modules/three/build/three.module.js","node_modules/three/examples/jsm/controls/OrbitControls.js","node_modules/three/examples/jsm/helpers/VertexNormalsHelper.js","node_modules/@jscad/modeling/src/utils/flatten.js","node_modules/@jscad/modeling/src/maths/mat4/create.js","node_modules/@jscad/modeling/src/maths/mat4/add.js","node_modules/@jscad/modeling/src/maths/mat4/clone.js","node_modules/@jscad/modeling/src/maths/mat4/equals.js","node_modules/@jscad/modeling/src/maths/mat4/identity.js","node_modules/@jscad/modeling/src/maths/mat4/constants.js","node_modules/@jscad/modeling/src/maths/mat4/fromRotation.js","node_modules/@jscad/modeling/src/maths/mat4/fromScaling.js","node_modules/@jscad/modeling/src/maths/mat4/fromTaitBryanRotation.js","node_modules/@jscad/modeling/src/maths/mat4/fromTranslation.js","node_modules/@jscad/modeling/src/maths/mat4/fromValues.js","node_modules/@jscad/modeling/src/maths/mat4/fromXRotation.js","node_modules/@jscad/modeling/src/maths/mat4/fromYRotation.js","node_modules/@jscad/modeling/src/maths/mat4/fromZRotation.js","node_modules/@jscad/modeling/src/maths/vec3/create.js","node_modules/@jscad/modeling/src/maths/vec3/cross.js","node_modules/@jscad/modeling/src/maths/vec3/dot.js","node_modules/@jscad/modeling/src/maths/mat4/isMirroring.js","node_modules/@jscad/modeling/src/maths/mat4/mirrorByPlane.js","node_modules/@jscad/modeling/src/maths/mat4/multiply.js","node_modules/@jscad/modeling/src/maths/mat4/rotate.js","node_modules/@jscad/modeling/src/maths/mat4/rotateX.js","node_modules/@jscad/modeling/src/maths/mat4/rotateY.js","node_modules/@jscad/modeling/src/maths/mat4/rotateZ.js","node_modules/@jscad/modeling/src/maths/mat4/scale.js","node_modules/@jscad/modeling/src/maths/mat4/subtract.js","node_modules/@jscad/modeling/src/maths/mat4/toString.js","node_modules/@jscad/modeling/src/maths/mat4/translate.js","node_modules/@jscad/modeling/src/maths/mat4/index.js","node_modules/@jscad/modeling/src/maths/vec2/create.js","node_modules/@jscad/modeling/src/maths/vec2/abs.js","node_modules/@jscad/modeling/src/maths/vec2/add.js","node_modules/@jscad/modeling/src/maths/vec2/angleRadians.js","node_modules/@jscad/modeling/src/maths/vec2/angle.js","node_modules/@jscad/modeling/src/maths/vec2/angleDegrees.js","node_modules/@jscad/modeling/src/maths/vec2/fromValues.js","node_modules/@jscad/modeling/src/maths/constants.js","node_modules/@jscad/modeling/src/maths/utils/quantizeForSpace.js","node_modules/@jscad/modeling/src/maths/vec2/canonicalize.js","node_modules/@jscad/modeling/src/maths/vec2/clone.js","node_modules/@jscad/modeling/src/maths/vec3/abs.js","node_modules/@jscad/modeling/src/maths/vec3/add.js","node_modules/@jscad/modeling/src/maths/vec3/angle.js","node_modules/@jscad/modeling/src/maths/vec3/fromValues.js","node_modules/@jscad/modeling/src/maths/vec3/canonicalize.js","node_modules/@jscad/modeling/src/maths/vec3/clone.js","node_modules/@jscad/modeling/src/maths/vec3/distance.js","node_modules/@jscad/modeling/src/maths/vec3/divide.js","node_modules/@jscad/modeling/src/maths/vec3/equals.js","node_modules/@jscad/modeling/src/maths/vec3/fromArray.js","node_modules/@jscad/modeling/src/maths/vec3/fromScalar.js","node_modules/@jscad/modeling/src/maths/vec3/fromVec2.js","node_modules/@jscad/modeling/src/maths/vec3/length.js","node_modules/@jscad/modeling/src/maths/vec3/lerp.js","node_modules/@jscad/modeling/src/maths/vec3/max.js","node_modules/@jscad/modeling/src/maths/vec3/min.js","node_modules/@jscad/modeling/src/maths/vec3/multiply.js","node_modules/@jscad/modeling/src/maths/vec3/negate.js","node_modules/@jscad/modeling/src/maths/vec3/normalize.js","node_modules/@jscad/modeling/src/maths/vec3/orthogonal.js","node_modules/@jscad/modeling/src/maths/vec3/rotateX.js","node_modules/@jscad/modeling/src/maths/vec3/rotateY.js","node_modules/@jscad/modeling/src/maths/vec3/rotateZ.js","node_modules/@jscad/modeling/src/maths/vec3/scale.js","node_modules/@jscad/modeling/src/maths/vec3/snap.js","node_modules/@jscad/modeling/src/maths/vec3/squaredDistance.js","node_modules/@jscad/modeling/src/maths/vec3/squaredLength.js","node_modules/@jscad/modeling/src/maths/vec3/subtract.js","node_modules/@jscad/modeling/src/maths/vec3/toString.js","node_modules/@jscad/modeling/src/maths/vec3/transform.js","node_modules/@jscad/modeling/src/maths/vec3/unit.js","node_modules/@jscad/modeling/src/maths/vec3/index.js","node_modules/@jscad/modeling/src/maths/vec2/cross.js","node_modules/@jscad/modeling/src/maths/vec2/distance.js","node_modules/@jscad/modeling/src/maths/vec2/divide.js","node_modules/@jscad/modeling/src/maths/vec2/dot.js","node_modules/@jscad/modeling/src/maths/vec2/equals.js","node_modules/@jscad/modeling/src/maths/vec2/fromAngleRadians.js","node_modules/@jscad/modeling/src/maths/vec2/fromAngle.js","node_modules/@jscad/modeling/src/maths/vec2/fromAngleDegrees.js","node_modules/@jscad/modeling/src/maths/vec2/fromArray.js","node_modules/@jscad/modeling/src/maths/vec2/fromScalar.js","node_modules/@jscad/modeling/src/maths/vec2/length.js","node_modules/@jscad/modeling/src/maths/vec2/lerp.js","node_modules/@jscad/modeling/src/maths/vec2/max.js","node_modules/@jscad/modeling/src/maths/vec2/min.js","node_modules/@jscad/modeling/src/maths/vec2/multiply.js","node_modules/@jscad/modeling/src/maths/vec2/negate.js","node_modules/@jscad/modeling/src/maths/vec2/rotate.js","node_modules/@jscad/modeling/src/maths/vec2/normal.js","node_modules/@jscad/modeling/src/maths/vec2/normalize.js","node_modules/@jscad/modeling/src/maths/vec2/scale.js","node_modules/@jscad/modeling/src/maths/vec2/snap.js","node_modules/@jscad/modeling/src/maths/vec2/squaredDistance.js","node_modules/@jscad/modeling/src/maths/vec2/squaredLength.js","node_modules/@jscad/modeling/src/maths/vec2/subtract.js","node_modules/@jscad/modeling/src/maths/vec2/toString.js","node_modules/@jscad/modeling/src/maths/vec2/transform.js","node_modules/@jscad/modeling/src/maths/vec2/index.js","node_modules/@jscad/modeling/src/geometries/geom2/create.js","node_modules/@jscad/modeling/src/geometries/geom2/clone.js","node_modules/@jscad/modeling/src/geometries/geom2/fromPoints.js","node_modules/@jscad/modeling/src/geometries/geom2/fromCompactBinary.js","node_modules/@jscad/modeling/src/geometries/geom2/isA.js","node_modules/@jscad/modeling/src/geometries/geom2/applyTransforms.js","node_modules/@jscad/modeling/src/geometries/geom2/toSides.js","node_modules/@jscad/modeling/src/geometries/geom2/reverse.js","node_modules/@jscad/modeling/src/geometries/geom2/toOutlines.js","node_modules/@jscad/modeling/src/geometries/geom2/toPoints.js","node_modules/@jscad/modeling/src/geometries/geom2/toString.js","node_modules/@jscad/modeling/src/geometries/geom2/toCompactBinary.js","node_modules/@jscad/modeling/src/geometries/geom2/transform.js","node_modules/@jscad/modeling/src/geometries/geom2/index.js","node_modules/@jscad/modeling/src/geometries/poly3/create.js","node_modules/@jscad/modeling/src/geometries/poly3/clone.js","node_modules/@jscad/modeling/src/geometries/poly3/fromPoints.js","node_modules/@jscad/modeling/src/geometries/poly3/fromPointsAndPlane.js","node_modules/@jscad/modeling/src/geometries/poly3/invert.js","node_modules/@jscad/modeling/src/geometries/poly3/isA.js","node_modules/@jscad/modeling/src/maths/vec4/create.js","node_modules/@jscad/modeling/src/maths/vec4/clone.js","node_modules/@jscad/modeling/src/maths/plane/equals.js","node_modules/@jscad/modeling/src/maths/plane/flip.js","node_modules/@jscad/modeling/src/maths/vec4/fromValues.js","node_modules/@jscad/modeling/src/maths/plane/fromNormalAndPoint.js","node_modules/@jscad/modeling/src/maths/plane/fromPoints.js","node_modules/@jscad/modeling/src/maths/vec4/dot.js","node_modules/@jscad/modeling/src/maths/vec4/fromScalar.js","node_modules/@jscad/modeling/src/maths/vec4/toString.js","node_modules/@jscad/modeling/src/maths/vec4/transform.js","node_modules/@jscad/modeling/src/maths/vec4/index.js","node_modules/@jscad/modeling/src/maths/plane/fromPointsRandom.js","node_modules/@jscad/modeling/src/maths/plane/signedDistanceToPoint.js","node_modules/@jscad/modeling/src/maths/plane/transform.js","node_modules/@jscad/modeling/src/maths/plane/index.js","node_modules/@jscad/modeling/src/geometries/poly3/isConvex.js","node_modules/@jscad/modeling/src/geometries/poly3/measureArea.js","node_modules/@jscad/modeling/src/geometries/poly3/measureBoundingBox.js","node_modules/@jscad/modeling/src/geometries/poly3/measureBoundingSphere.js","node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","node_modules/@jscad/modeling/src/geometries/poly3/plane.js","node_modules/@jscad/modeling/src/geometries/poly3/toPoints.js","node_modules/@jscad/modeling/src/geometries/poly3/toString.js","node_modules/@jscad/modeling/src/geometries/poly3/transform.js","node_modules/@jscad/modeling/src/geometries/poly3/index.js","node_modules/@jscad/modeling/src/geometries/geom3/create.js","node_modules/@jscad/modeling/src/geometries/geom3/clone.js","node_modules/@jscad/modeling/src/geometries/geom3/fromPoints.js","node_modules/@jscad/modeling/src/geometries/geom3/fromCompactBinary.js","node_modules/@jscad/modeling/src/geometries/geom3/applyTransforms.js","node_modules/@jscad/modeling/src/geometries/geom3/toPolygons.js","node_modules/@jscad/modeling/src/geometries/geom3/invert.js","node_modules/@jscad/modeling/src/geometries/geom3/isA.js","node_modules/@jscad/modeling/src/geometries/geom3/toPoints.js","node_modules/@jscad/modeling/src/geometries/geom3/toString.js","node_modules/@jscad/modeling/src/geometries/geom3/toCompactBinary.js","node_modules/@jscad/modeling/src/geometries/geom3/transform.js","node_modules/@jscad/modeling/src/geometries/geom3/index.js","node_modules/@jscad/modeling/src/geometries/path2/create.js","node_modules/@jscad/modeling/src/geometries/path2/clone.js","node_modules/@jscad/modeling/src/geometries/path2/close.js","node_modules/@jscad/modeling/src/geometries/path2/fromPoints.js","node_modules/@jscad/modeling/src/geometries/path2/applyTransforms.js","node_modules/@jscad/modeling/src/geometries/path2/toPoints.js","node_modules/@jscad/modeling/src/geometries/path2/appendArc.js","node_modules/@jscad/modeling/src/geometries/path2/appendPoints.js","node_modules/@jscad/modeling/src/geometries/path2/appendBezier.js","node_modules/@jscad/modeling/src/geometries/path2/concat.js","node_modules/@jscad/modeling/src/geometries/path2/eachPoint.js","node_modules/@jscad/modeling/src/geometries/path2/equals.js","node_modules/@jscad/modeling/src/geometries/path2/fromCompactBinary.js","node_modules/@jscad/modeling/src/geometries/path2/isA.js","node_modules/@jscad/modeling/src/geometries/path2/reverse.js","node_modules/@jscad/modeling/src/geometries/path2/toString.js","node_modules/@jscad/modeling/src/geometries/path2/toCompactBinary.js","node_modules/@jscad/modeling/src/geometries/path2/transform.js","node_modules/@jscad/modeling/src/geometries/path2/index.js","node_modules/@jscad/modeling/src/colors/colorize.js","node_modules/@jscad/modeling/src/colors/cssColors.js","node_modules/@jscad/modeling/src/colors/colorNameToRgb.js","node_modules/@jscad/modeling/src/colors/hexToRgb.js","node_modules/@jscad/modeling/src/colors/hueToColorComponent.js","node_modules/@jscad/modeling/src/colors/hslToRgb.js","node_modules/@jscad/modeling/src/colors/hsvToRgb.js","node_modules/@jscad/modeling/src/colors/rgbToHex.js","node_modules/@jscad/modeling/src/colors/rgbToHsl.js","node_modules/@jscad/modeling/src/colors/rgbToHsv.js","node_modules/@jscad/modeling/src/colors/index.js","node_modules/@jscad/modeling/src/curves/bezier/create.js","node_modules/@jscad/modeling/src/curves/bezier/valueAt.js","node_modules/@jscad/modeling/src/curves/bezier/tangentAt.js","node_modules/@jscad/modeling/src/curves/bezier/index.js","node_modules/@jscad/modeling/src/curves/index.js","node_modules/@jscad/modeling/src/maths/utils/area.js","node_modules/@jscad/modeling/src/geometries/poly2/measureArea.js","node_modules/@jscad/modeling/src/geometries/poly2/create.js","node_modules/@jscad/modeling/src/geometries/poly2/flip.js","node_modules/@jscad/modeling/src/geometries/poly2/arePointsInside.js","node_modules/@jscad/modeling/src/geometries/poly2/index.js","node_modules/@jscad/modeling/src/geometries/index.js","node_modules/@jscad/modeling/src/maths/line2/create.js","node_modules/@jscad/modeling/src/maths/line2/clone.js","node_modules/@jscad/modeling/src/maths/line2/direction.js","node_modules/@jscad/modeling/src/maths/line2/origin.js","node_modules/@jscad/modeling/src/maths/line2/closestPoint.js","node_modules/@jscad/modeling/src/maths/line2/distanceToPoint.js","node_modules/@jscad/modeling/src/maths/line2/equals.js","node_modules/@jscad/modeling/src/maths/line2/fromValues.js","node_modules/@jscad/modeling/src/maths/line2/fromPoints.js","node_modules/@jscad/modeling/src/maths/utils/clamp.js","node_modules/@jscad/modeling/src/maths/utils/interpolateBetween2DPointsForY.js","node_modules/@jscad/modeling/src/maths/utils/intersect.js","node_modules/@jscad/modeling/src/maths/utils/solve2Linear.js","node_modules/@jscad/modeling/src/maths/utils/index.js","node_modules/@jscad/modeling/src/maths/line2/intersectPointOfLines.js","node_modules/@jscad/modeling/src/maths/line2/reverse.js","node_modules/@jscad/modeling/src/maths/line2/toString.js","node_modules/@jscad/modeling/src/maths/line2/transform.js","node_modules/@jscad/modeling/src/maths/line2/xAtY.js","node_modules/@jscad/modeling/src/maths/line2/index.js","node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","node_modules/@jscad/modeling/src/maths/line3/create.js","node_modules/@jscad/modeling/src/maths/line3/clone.js","node_modules/@jscad/modeling/src/maths/line3/closestPoint.js","node_modules/@jscad/modeling/src/maths/line3/direction.js","node_modules/@jscad/modeling/src/maths/line3/distanceToPoint.js","node_modules/@jscad/modeling/src/maths/line3/equals.js","node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","node_modules/@jscad/modeling/src/maths/line3/fromPoints.js","node_modules/@jscad/modeling/src/maths/line3/intersectPointOfLineAndPlane.js","node_modules/@jscad/modeling/src/maths/line3/origin.js","node_modules/@jscad/modeling/src/maths/line3/reverse.js","node_modules/@jscad/modeling/src/maths/line3/toString.js","node_modules/@jscad/modeling/src/maths/line3/transform.js","node_modules/@jscad/modeling/src/maths/line3/index.js","node_modules/@jscad/modeling/src/maths/index.js","node_modules/@jscad/modeling/src/measurements/measureArea.js","node_modules/@jscad/modeling/src/measurements/measureAggregateArea.js","node_modules/@jscad/modeling/src/measurements/measureBoundingBox.js","node_modules/@jscad/modeling/src/measurements/measureAggregateBoundingBox.js","node_modules/@jscad/modeling/src/measurements/calculateEpsilonFromBounds.js","node_modules/@jscad/modeling/src/measurements/measureAggregateEpsilon.js","node_modules/@jscad/modeling/src/measurements/measureVolume.js","node_modules/@jscad/modeling/src/measurements/measureAggregateVolume.js","node_modules/@jscad/modeling/src/measurements/measureEpsilon.js","node_modules/@jscad/modeling/src/measurements/index.js","node_modules/@jscad/modeling/src/primitives/commonChecks.js","node_modules/@jscad/modeling/src/primitives/arc.js","node_modules/@jscad/modeling/src/primitives/ellipse.js","node_modules/@jscad/modeling/src/primitives/circle.js","node_modules/@jscad/modeling/src/primitives/cuboid.js","node_modules/@jscad/modeling/src/primitives/cube.js","node_modules/@jscad/modeling/src/primitives/cylinderElliptic.js","node_modules/@jscad/modeling/src/primitives/cylinder.js","node_modules/@jscad/modeling/src/primitives/ellipsoid.js","node_modules/@jscad/modeling/src/primitives/polyhedron.js","node_modules/@jscad/modeling/src/primitives/geodesicSphere.js","node_modules/@jscad/modeling/src/primitives/line.js","node_modules/@jscad/modeling/src/primitives/polygon.js","node_modules/@jscad/modeling/src/primitives/rectangle.js","node_modules/@jscad/modeling/src/primitives/roundedCuboid.js","node_modules/@jscad/modeling/src/primitives/roundedCylinder.js","node_modules/@jscad/modeling/src/primitives/roundedRectangle.js","node_modules/@jscad/modeling/src/primitives/sphere.js","node_modules/@jscad/modeling/src/primitives/square.js","node_modules/@jscad/modeling/src/primitives/star.js","node_modules/@jscad/modeling/src/operations/transforms/mirror.js","node_modules/@jscad/modeling/src/operations/extrusions/slice/calculatePlane.js","node_modules/@jscad/modeling/src/operations/extrusions/slice/create.js","node_modules/@jscad/modeling/src/operations/extrusions/slice/clone.js","node_modules/@jscad/modeling/src/operations/extrusions/slice/equals.js","node_modules/@jscad/modeling/src/operations/extrusions/slice/fromPoints.js","node_modules/@jscad/modeling/src/operations/extrusions/slice/fromSides.js","node_modules/@jscad/modeling/src/operations/extrusions/slice/isA.js","node_modules/@jscad/modeling/src/operations/extrusions/slice/reverse.js","node_modules/@jscad/modeling/src/operations/extrusions/slice/toEdges.js","node_modules/@jscad/modeling/src/operations/booleans/mayOverlap.js","node_modules/@jscad/modeling/src/operations/booleans/trees/Node.js","node_modules/@jscad/modeling/src/operations/booleans/trees/splitLineSegmentByPlane.js","node_modules/@jscad/modeling/src/operations/booleans/trees/splitPolygonByPlane.js","node_modules/@jscad/modeling/src/operations/booleans/trees/PolygonTreeNode.js","node_modules/@jscad/modeling/src/operations/booleans/trees/Tree.js","node_modules/@jscad/modeling/src/operations/booleans/trees/index.js","node_modules/@jscad/modeling/src/operations/booleans/intersectGeom3Sub.js","node_modules/@jscad/modeling/src/operations/extrusions/slice/toPolygons.js","node_modules/@jscad/modeling/src/operations/extrusions/slice/toString.js","node_modules/@jscad/modeling/src/operations/extrusions/slice/transform.js","node_modules/@jscad/modeling/src/operations/extrusions/slice/index.js","node_modules/@jscad/modeling/src/operations/extrusions/extrudeWalls.js","node_modules/@jscad/modeling/src/operations/extrusions/extrudeFromSlices.js","node_modules/@jscad/modeling/src/operations/extrusions/extrudeRotate.js","node_modules/@jscad/modeling/src/operations/transforms/rotate.js","node_modules/@jscad/modeling/src/operations/transforms/translate.js","node_modules/@jscad/modeling/src/primitives/torus.js","node_modules/@jscad/modeling/src/primitives/index.js","node_modules/@jscad/modeling/src/text/fonts/single-line/hershey/simplex.js","node_modules/@jscad/modeling/src/text/vectorParams.js","node_modules/@jscad/modeling/src/text/vectorChar.js","node_modules/@jscad/modeling/src/text/vectorText.js","node_modules/@jscad/modeling/src/text/index.js","node_modules/@jscad/modeling/src/utils/areAllShapesTheSameType.js","node_modules/@jscad/modeling/src/utils/degToRad.js","node_modules/@jscad/modeling/src/utils/fnNumberSort.js","node_modules/@jscad/modeling/src/utils/insertSorted.js","node_modules/@jscad/modeling/src/utils/radiusToSegments.js","node_modules/@jscad/modeling/src/utils/radToDeg.js","node_modules/@jscad/modeling/src/utils/index.js","node_modules/@jscad/modeling/src/operations/booleans/fromFakePolygons.js","node_modules/@jscad/modeling/src/operations/booleans/to3DWalls.js","node_modules/@jscad/modeling/src/maths/OrthoNormalBasis.js","node_modules/@jscad/modeling/src/operations/booleans/reTesselateCoplanarPolygons.js","node_modules/@jscad/modeling/src/operations/booleans/retessellate.js","node_modules/@jscad/modeling/src/operations/booleans/intersectGeom3.js","node_modules/@jscad/modeling/src/operations/booleans/intersectGeom2.js","node_modules/@jscad/modeling/src/operations/booleans/intersect.js","node_modules/@jscad/modeling/src/operations/booleans/subtractGeom3Sub.js","node_modules/@jscad/modeling/src/operations/booleans/subtractGeom3.js","node_modules/@jscad/modeling/src/operations/booleans/subtractGeom2.js","node_modules/@jscad/modeling/src/operations/booleans/subtract.js","node_modules/@jscad/modeling/src/operations/booleans/unionGeom3Sub.js","node_modules/@jscad/modeling/src/operations/booleans/unionGeom3.js","node_modules/@jscad/modeling/src/operations/booleans/unionGeom2.js","node_modules/@jscad/modeling/src/operations/booleans/union.js","node_modules/@jscad/modeling/src/operations/booleans/index.js","node_modules/@jscad/modeling/src/operations/expansions/offsetFromPoints.js","node_modules/@jscad/modeling/src/operations/expansions/expandGeom2.js","node_modules/@jscad/modeling/src/operations/expansions/extrudePolygon.js","node_modules/@jscad/modeling/src/operations/expansions/expandShell.js","node_modules/@jscad/modeling/src/operations/expansions/expandGeom3.js","node_modules/@jscad/modeling/src/operations/expansions/expandPath2.js","node_modules/@jscad/modeling/src/operations/expansions/expand.js","node_modules/@jscad/modeling/src/operations/expansions/offsetGeom2.js","node_modules/@jscad/modeling/src/operations/expansions/offsetPath2.js","node_modules/@jscad/modeling/src/operations/expansions/offset.js","node_modules/@jscad/modeling/src/operations/expansions/index.js","node_modules/@jscad/modeling/src/operations/extrusions/extrudeLinearGeom2.js","node_modules/@jscad/modeling/src/operations/extrusions/extrudeLinear.js","node_modules/@jscad/modeling/src/operations/extrusions/extrudeRectangularPath2.js","node_modules/@jscad/modeling/src/operations/extrusions/extrudeRectangularGeom2.js","node_modules/@jscad/modeling/src/operations/extrusions/extrudeRectangular.js","node_modules/@jscad/modeling/src/operations/extrusions/index.js","node_modules/@jscad/modeling/src/operations/hulls/hullPoints2.js","node_modules/@jscad/modeling/src/operations/hulls/hullPath2.js","node_modules/@jscad/modeling/src/operations/hulls/hullGeom2.js","node_modules/@jscad/modeling/src/operations/hulls/quickhull/point-line-distance.js","node_modules/@jscad/modeling/src/operations/hulls/quickhull/get-plane-normal.js","node_modules/@jscad/modeling/src/operations/hulls/quickhull/VertexList.js","node_modules/@jscad/modeling/src/operations/hulls/quickhull/Vertex.js","node_modules/@jscad/modeling/src/operations/hulls/quickhull/HalfEdge.js","node_modules/@jscad/modeling/src/operations/hulls/quickhull/Face.js","node_modules/@jscad/modeling/src/operations/hulls/quickhull/QuickHull.js","node_modules/@jscad/modeling/src/operations/hulls/quickhull/index.js","node_modules/@jscad/modeling/src/operations/hulls/hullGeom3.js","node_modules/@jscad/modeling/src/operations/hulls/hull.js","node_modules/@jscad/modeling/src/operations/hulls/hullChain.js","node_modules/@jscad/modeling/src/operations/hulls/index.js","node_modules/@jscad/modeling/src/operations/modifiers/snapPolygons.js","node_modules/@jscad/modeling/src/operations/modifiers/mergePolygons.js","node_modules/@jscad/modeling/src/operations/modifiers/insertTjunctions.js","node_modules/@jscad/modeling/src/operations/modifiers/triangulatePolygons.js","node_modules/@jscad/modeling/src/operations/modifiers/edges.js","node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","node_modules/@jscad/modeling/src/operations/modifiers/generalize.js","node_modules/@jscad/modeling/src/operations/modifiers/snap.js","node_modules/@jscad/modeling/src/operations/modifiers/index.js","node_modules/@jscad/modeling/src/utils/padArrayToLength.js","node_modules/@jscad/modeling/src/operations/transforms/align.js","node_modules/@jscad/modeling/src/operations/transforms/center.js","node_modules/@jscad/modeling/src/operations/transforms/scale.js","node_modules/@jscad/modeling/src/operations/transforms/transform.js","node_modules/@jscad/modeling/src/operations/transforms/index.js","node_modules/@jscad/modeling/src/index.js","src/csg-2-geom.js","node_modules/three/src/extras/Earcut.js","node_modules/@jscad/csg/src/core/utils.js","node_modules/@jscad/csg/src/core/math/Vector2.js","node_modules/@jscad/csg/src/core/math/Vector3.js","node_modules/@jscad/csg/src/core/math/Line2.js","node_modules/@jscad/csg/src/core/constants.js","node_modules/@jscad/csg/src/core/math/Line3.js","node_modules/@jscad/csg/src/core/math/Plane.js","node_modules/@jscad/csg/src/core/math/OrthoNormalBasis.js","node_modules/@jscad/csg/src/core/math/Matrix4.js","node_modules/@jscad/csg/src/core/mutators.js","node_modules/@jscad/csg/src/core/math/Vertex3.js","node_modules/@jscad/csg/src/core/connectors.js","node_modules/@jscad/csg/src/core/math/Vertex2.js","node_modules/@jscad/csg/src/core/math/Side.js","node_modules/@jscad/csg/src/core/math/lineUtils.js","node_modules/@jscad/csg/src/core/utils/cagValidation.js","node_modules/@jscad/csg/src/api/ops-booleans.js","node_modules/@jscad/csg/src/core/CAGFactories.js","node_modules/@jscad/csg/src/core/FuzzyFactory.js","node_modules/@jscad/csg/src/core/FuzzyFactory3d.js","node_modules/@jscad/csg/src/core/FuzzyFactory2d.js","node_modules/@jscad/csg/src/core/utils/canonicalize.js","node_modules/@jscad/csg/src/core/math/reTesselateCoplanarPolygons.js","node_modules/@jscad/csg/src/core/utils/retesellate.js","node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","node_modules/@jscad/csg/src/api/ops-cnc.js","node_modules/@jscad/csg/src/api/optionParsers.js","node_modules/@jscad/csg/src/core/math/Path2.js","node_modules/@jscad/csg/src/api/helpers.js","node_modules/@jscad/csg/src/api/ops-extrusions.js","node_modules/@jscad/csg/src/api/cagOutlinePaths.js","node_modules/@jscad/csg/src/core/utils/toArray.js","node_modules/@jscad/csg/src/api/center.js","node_modules/@jscad/csg/src/api/ops-expandContract.js","node_modules/@jscad/csg/src/core/CAG.js","node_modules/@jscad/csg/src/core/math/Polygon2.js","node_modules/@jscad/csg/src/core/CSGFactories.js","node_modules/@jscad/csg/src/api/solidFromSlices.js","node_modules/@jscad/csg/src/core/math/Polygon3.js","node_modules/@jscad/csg/src/core/trees.js","node_modules/@jscad/csg/src/core/Properties.js","node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","node_modules/@jscad/csg/src/core/utils/csgMeasurements.js","node_modules/@jscad/csg/src/core/utils/csgProjections.js","node_modules/@jscad/csg/src/api/ops-cuts.js","node_modules/@jscad/csg/src/core/CSG.js","node_modules/@jscad/csg/src/api/primitives2d.js","node_modules/@jscad/csg/src/api/primitives3d.js","node_modules/@jscad/csg/src/api/debugHelpers.js","node_modules/@jscad/csg/csg.js","node_modules/@jscad/csg/src/api/primitives2d-api.js","node_modules/@jscad/csg/src/api/ops-transformations.js","src/jscad-primitives3d-api.ts","node_modules/@jscad/csg/src/api/primitives3d-api.js","node_modules/@jscad/csg/src/api/color.js","node_modules/@jscad/csg/src/api/maths.js","node_modules/@jscad/csg/src/fonts/single-line/hershey/simplex.js","node_modules/@jscad/csg/src/api/text.js","node_modules/@jscad/csg/src/api/debug.js","node_modules/@jscad/csg/src/api/log.js","node_modules/@jscad/csg/src/api/index.js","node_modules/@jscad/csg/api.js","src/index.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","SRGB8_ALPHA8_ASTC_4x4_Format","SRGB8_ALPHA8_ASTC_5x4_Format","SRGB8_ALPHA8_ASTC_5x5_Format","SRGB8_ALPHA8_ASTC_6x5_Format","SRGB8_ALPHA8_ASTC_6x6_Format","SRGB8_ALPHA8_ASTC_8x5_Format","SRGB8_ALPHA8_ASTC_8x6_Format","SRGB8_ALPHA8_ASTC_8x8_Format","SRGB8_ALPHA8_ASTC_10x5_Format","SRGB8_ALPHA8_ASTC_10x6_Format","SRGB8_ALPHA8_ASTC_10x8_Format","SRGB8_ALPHA8_ASTC_10x10_Format","SRGB8_ALPHA8_ASTC_12x10_Format","SRGB8_ALPHA8_ASTC_12x12_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","EventDispatcher","addEventListener","type","listener","_listeners","undefined","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","slice","i","l","length","call","_lut","toString","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toUpperCase","clamp","value","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","MathUtils","Object","freeze","__proto__","Vector2","constructor","width","height","setScalar","scalar","setX","setY","setComponent","Error","getComponent","clone","copy","v","add","w","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","prototype","isVector2","Matrix3","arguments","error","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","rotate","theta","translate","matrix","isMatrix3","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","canvas","document","createElementNS","context","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","defineProperty","name","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","updateMatrix","source","toJSON","meta","isRootObject","textures","output","metadata","generator","wrap","images","url","Array","isArray","isDataTexture","serializeImage","dispose","transformUv","uv","needsUpdate","isTexture","HTMLImageElement","ImageBitmap","data","Vector4","z","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","acos","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","isVector4","WebGLRenderTarget","options","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","setTexture","setSize","isWebGLRenderTarget","WebGLMultisampleRenderTarget","samples","isWebGLMultisampleRenderTarget","Quaternion","_x","_y","_z","_w","slerp","qa","qb","qm","slerpQuaternions","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","Number","EPSILON","len","tDir","multiplyQuaternionsFlat","_onChangeCallback","quaternion","setFromEuler","euler","update","isEuler","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","angleTo","rotateTowards","step","conjugate","p","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","_onChange","callback","isQuaternion","Vector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","denominator","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","isVector3","Box3","Infinity","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","count","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","_vector$b","setFromObject","object","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","boundingBox","computeBoundingBox","_box$3","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$3","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","clampedPoint","getBoundingSphere","intersect","_points","isBox3","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_toFarthestPoint","_toPoint","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","missingRadiusHalf","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","position","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","isMatrix4","_matrix$1","_quaternion$3","Euler","DefaultOrder","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","RotationOrders","Layers","mask","channel","enable","enableAll","toggle","disable","disableAll","layers","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","parent","DefaultUp","onRotationChange","onQuaternionChange","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","userData","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","isObject3D","remove","clear","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","JSON","stringify","isInstancedMesh","instanceMatrix","instanceColor","serialize","library","element","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","parse","_vector1","_vector2$1","_normalMatrix","Plane","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","delta","start","intersectsLine","startSign","endSign","end","coplanarPoint","optionalNormalMatrix","referencePoint","isPlane","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","getUV","p3","uv1","uv2","uv3","isFrontFacing","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","d4","vc","d5","d6","vb","va","materialId","Material","fog","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","alphaToCoverage","premultipliedAlpha","toneMapped","assign","create","isMaterial","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","flatShading","currentValue","isColor","isRoot","color","getHex","roughness","metalness","sheen","emissive","emissiveIntensity","specular","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","morphTargets","morphNormals","skinning","srcPlanes","dstPlanes","_colorKeywords","_hslA","_hslB","hue2rgb","SRGBToLinear","LinearToSRGB","Color","setRGB","setHex","setStyle","hex","setHSL","style","handleAlpha","string","parseFloat","exec","components","parseInt","charAt","setColorName","toLowerCase","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","normalized","NAMES","MeshBasicMaterial","isMeshBasicMaterial","_vector$9","_vector2","BufferAttribute","itemSize","TypeError","usage","updateRange","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","copyColorsArray","colors","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZ","setXYZW","onUpload","isBufferAttribute","Int8BufferAttribute","Int8Array","Uint8BufferAttribute","Uint8Array","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Int16Array","Uint16BufferAttribute","Uint16Array","Int32BufferAttribute","Int32Array","Uint32BufferAttribute","Uint32Array","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","Float32Array","Float64BufferAttribute","Float64Array","arrayMax","TYPED_ARRAYS","getTypedArray","buffer","_id","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","isNaN","jl","computeFaceNormals","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","merge","isBufferGeometry","attribute1","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","array2","geometry2","newAttribute","morphArray","keys","hasMorphAttributes","attributeArray","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","String","raycaster","intersects","intersection","morphPosition","groupMaterial","checkBufferGeometryIntersection","faceIndex","face","isGeometry","checkIntersection","morphInfluences","influence","boneTransform","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","BoxBufferGeometry","cloneUniforms","property","mergeUniforms","uniforms","merged","UniformsUtils","default_vertex","default_fragment","ShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","isShaderMaterial","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","skew","isPerspectiveCamera","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","currentXrEnabled","xr","currentRenderTarget","getRenderTarget","setRenderTarget","render","CubeTexture","_needsFlipEnvMap","isCubeTexture","WebGLCubeRenderTarget","dummy","isInteger","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","DataTexture","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","get","isInterleavedBufferAttribute","deleteBuffer","delete","cached","elementSize","PlaneGeometry","width_half","height_half","segment_width","segment_height","PlaneBufferGeometry","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmissionmap_fragment","transmissionmap_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshtoon_frag","meshtoon_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","ShaderChunk","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","background","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","transmission","transmissionMap","WebGLBackground","cubemaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","isScene","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","stride","vertexAttribIPointer","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","isInstancedInterleavedBuffer","_maxInstanceCount","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","reset","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","useCache","materialProperties","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","workInfluences","objectInfluences","influences","sort","MAX_SAFE_INTEGER","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","DataTexture2DArray","wrapR","isDataTexture2DArray","DataTexture3D","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","safeSetTexture2D","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT6Array","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","updateCache","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","addLineNumbers","split","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","getShaderInfoLog","trim","getShaderSource","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","getActiveAttrib","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","WebGLProgram","cacheKey","gammaFactorDefine","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","lightMapEncoding","outputEncoding","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getMaxBones","bones","nVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","getParameters","shadows","environment","isMeshStandardMaterial","isFogExp2","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","acquireProgram","pl","preexistingProgram","releaseProgram","pop","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","defaultProgram","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","finish","WebGLRenderLists","lists","renderCallDepth","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","vsm_frag","vsm_vert","WebGLShadowMap","_renderer","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterials","_distanceMaterials","_materialCache","_maxTextureSize","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","mapPass","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","renderObject","VSMPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","useSkinning","useInstancing","getDistanceMaterialVariant","getDepthMaterial","result","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","k","kl","depthMaterial","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","enabledCapabilities","xrFramebuffer","currentBoundFramebuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","bindXRFramebuffer","framebuffer","bindFramebuffer","useProgram","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","frontFace","cullFace","setLineWidth","lineWidth","factor","activeTexture","webglSlot","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texImage3D","WebGLTextures","_gl","utils","_videoTextures","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","textureProperties","__maxMipLevel","log2","getInternalFormat","internalFormatName","glFormat","glType","filterFallback","deallocateTexture","isVideoTexture","onRenderTargetDispose","deallocateRenderTarget","__webglInit","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","textureUnits","resetTextureUnits","textureUnit","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","uploadCubeTexture","wrappingToGL","filterToGL","setTextureParameters","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","pixelStorei","convert","glInternalFormat","mipmap","isDepthTexture","isCompressedTexture","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isRenderTarget3D","createFramebuffer","glTextureType","isTexture3D","updateRenderTargetMipmap","updateMultisampleRenderTarget","blitFramebuffer","warnedTexture2D","warnedTextureCube","WebGLUtils","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","cameras","isArrayCamera","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","disconnect","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","getPose","targetRaySpace","transform","inputjoint","jointPose","getJointPose","jointName","joint","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","WebXRManager","framebufferScaleFactor","referenceSpaceType","pose","controllers","inputSourcesMap","Map","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","onSessionEnd","forEach","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setSession","onInputSourcesChange","getContextAttributes","xrCompatible","makeXRCompatible","layerInit","antialias","baseLayer","XRWebGLLayer","updateRenderState","requestReferenceSpace","inputSources","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","getCamera","depthNear","depthFar","onAnimationFrameCallback","getViewerPose","views","cameraVRNeedsUpdate","WebGLMaterials","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","refreshUniformsCommon","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","uvScaleMap","uv2ScaleMap","createCanvasElement","display","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","renderObjectImmediate","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","uvArray","colorArray","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","material2","getProgram","window","projectObject","opaqueObjects","transparentObjects","renderObjects","isLOD","isImmediateRenderObject","camera2","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isOrthographicCamera","boneTexture","boneMatrices","boneTextureSize","markUniformsLightsNeedsUpdate","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","halfFloatSupportedByExt","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","texSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","FogExp2","Fog","Scene","InterleavedBuffer","arrayBuffers","_uuid","ib","isInterleavedBuffer","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","levels","addLevel","getCurrentLevel","getObjectForDistance","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","bindMatrixInverse","bind","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","weight","boneIndex","boneInverses","Bone","isBone","_offsetMatrix","_identityMatrix","Skeleton","inverse","bone","getBoneByName","fromJSON","json","boneInverse","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","getColorAt","getMatrixAt","raycastTimes","instanceId","setColorAt","setMatrixAt","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","computeLineDistances","lineDistances","params","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","LineLoop","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","video","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","CompressedTexture","CanvasTexture","isCanvasTexture","DepthTexture","CircleGeometry","segments","thetaStart","thetaLength","vertex","segment","CircleBufferGeometry","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","CylinderBufferGeometry","ConeGeometry","ConeBufferGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","PolyhedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","prev","invSize","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","hole","findHoleBridge","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","px","py","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","sum","ShapeUtils","contour","isClockWise","pts","triangulateShape","holes","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","extrudeByPath","splineTube","binormal","position2","getSpacedPoints","computeFrenetFrames","shapePoints","extractPoints","reverse","hl","ahole","concat","scalePt2","pt","vec","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","binormals","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","ExtrudeBufferGeometry","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","IcosahedronBufferGeometry","LatheGeometry","phiStart","phiLength","inverseSegments","base","n1","LatheBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","ParametricGeometry","func","slices","stacks","EPS","pu","pv","sliceCount","ParametricBufferGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","RingBufferGeometry","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","ShapeBufferGeometry","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","SphereBufferGeometry","TetrahedronGeometry","TetrahedronBufferGeometry","TextGeometry","text","font","isFont","generateShapes","TextBufferGeometry","TorusGeometry","tube","tubularSegments","arc","TorusBufferGeometry","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TorusKnotBufferGeometry","TubeGeometry","closed","frames","P","generateBufferData","generateSegment","generateIndices","getPointAt","TubeBufferGeometry","WireframeGeometry","edge","edges","o","ol","edge1","edge2","Geometries","RawShaderMaterial","ior","Materials","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","getSettings_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","trackType","getInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","morphTarget","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","Promise","resolve","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","loading","FileLoader","setTimeout","dataUriRegex","dataUriRegexResult","request","mimeType","isBase64","decodeURIComponent","atob","response","responseType","charCodeAt","Blob","parser","DOMParser","parseFromString","XMLHttpRequest","open","callbacks","overrideMimeType","header","send","setResponseType","setMimeType","AnimationLoader","CompressedTextureLoader","loaded","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","onImageError","substr","CubeTextureLoader","urls","DataTextureLoader","texData","TextureLoader","isJPEG","search","Curve","arcLengthDivisions","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","mat","MAX_VALUE","tz","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","twoPi","deltaAngle","samePoints","isEllipseCurve","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","pz","CatmullRomCurve3","curveType","intPoint","isCatmullRomCurve3","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","absarc","absellipse","ellipse","firstPoint","lastPoint","Shape","getPointsHoles","holesPts","Light","HemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","SpotLight","power","_lightPositionWorld","_lookTarget","PointLightShadow","_cubeDirections","_cubeUps","PointLight","OrthographicCamera","scaleW","scaleH","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","isSphericalHarmonics3","LightProbe","MaterialLoader","getTexture","shading","setTextures","LoaderUtils","decodeText","TextDecoder","decode","fromCharCode","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","InstancedBufferAttribute","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","arrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","geometryShapes","bufferGeometryLoader","details","loadImage","deserializeImage","currentUrl","deserializedImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","objectAnimations","setTexturePath","ImageBitmapLoader","createImageBitmap","fetch","setOptions","fetchOptions","credentials","headers","then","res","blob","colorSpaceConversion","imageBitmap","catch","isImageBitmapLoader","ShapePath","subPaths","currentPath","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","Font","paths","createPaths","chars","line_height","yMax","yMin","underlineThickness","char","ret","createPath","glyph","glyphs","familyName","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","action","ha","FontLoader","substring","AudioContext","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","sky","ground","isHemisphereLightProbe","AmbientLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","_getValue_direct","_getValue_array","resolvedProperty","_getValue_arrayElement","_getValue_toArray","_setValue_direct","targetObject","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","indicesByUUID","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","InstancedInterleavedBuffer","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","ImmediateRenderObject","_vector$3","SpotLightHelper","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","isSkeletonHelper","boneList","PointLightHelper","sphereSize","_vector$1","_color1","_color2","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","_v1","_v2","_v3","DirectionalLightHelper","lightPlane","targetLine","_vector","_camera","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","_box","BoxHelper","Box3Helper","PlaneHelper","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setColor","AxesHelper","_floatView","_int32View","DataUtils","toHalfFloat","val","LOD_MIN","LOD_MAX","SIZE_MAX","EXTRA_LOD_SIGMA","TOTAL_LODS","MAX_SAMPLES","ENCODINGS","backgroundMaterial","backgroundBox","_flatCamera","_lodPlanes","_sizeLods","_sigmas","_createPlanes","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","convertLinearToRGBE","maxComponent","fExp","PMREMGenerator","_pingPongRenderTarget","_blurMaterial","_getBlurShader","_equirectShader","_cubemapShader","_compileMaterial","fromScene","sigma","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapShader","compileEquirectangularShader","_getEquirectShader","outputTarget","_setViewport","_textureToCubeUV","_isLDR","_createRenderTarget","tmpMesh","cubeCamera","upSign","forwardSign","originalAutoClear","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","outputSize","lod","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","_getEncodings","LineStrip","LinePieces","NoColors","FaceColors","VertexColors","MeshFaceMaterial","MultiMaterial","isMultiMaterial","PointCloud","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","construct","fromPoints","AxisHelper","BoundingBoxHelper","EdgesHelper","setColors","WireframeHelper","Handlers","XHRLoader","BinaryTextureLoader","empty","isIntersectionBox","isIntersectionSphere","setFromMatrix","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","getInverse","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","prototypenormal","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","getChildByName","renderDepth","getWorldRotation","applyMatrix","eulerOrder","useQuaternion","setDrawMode","drawMode","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","computeOffsets","removeAttribute","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","initMaterial","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","renderReverseSided","renderSingleSided","WebGLRenderTargetCube","audioLoader","getData","updateCubeMap","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","CanvasRenderer","JSONLoader","SceneUtils","createMultiMaterialObject","detach","LensFlare","revision","__THREE__","_three","require","_changeEvent","_startEvent","_endEvent","OrbitControls","minDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","UP","BOTTOM","mouseButtons","touches","ONE","TWO","target0","position0","zoom0","_domElementKeyEvents","getPolarAngle","spherical","getAzimuthalAngle","listenToKeyEvents","onKeyDown","saveState","STATE","NONE","quat","quatInverse","lastPosition","lastQuaternion","twoPI","rotateLeft","getAutoRotationAngle","sphericalDelta","panOffset","zoomChanged","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseUp","handleMouseWheel","handleKeyDown","code","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","handleTouchEnd","pointerType","onMouseDown","onMouseMove","onMouseUp","mouseAction","button","ctrlKey","metaKey","shiftKey","passive","MapControls","VertexNormalsHelper","nNormals","objGeometry","objPos","objNorm","idx","_threeModule","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","iter","Symbol","iterator","arr2","CSG2Geom","csg","polygons","polygon","first","second","third","geo","transforms","pArray","nArray","nx","ny","nz","_loop","currentPosition","nl","toAverage","averageNormal","indexes","_OrbitControls","_VertexNormalsHelper","_modeling","_interopRequireDefault","_csg2Geom","THREE","_interopRequireWildcard","_Earcut","_jscadPrimitives3dApi","_getRequireWildcardCache","nodeInterop","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","hasOwnProperty","desc","_require$booleanOps","booleanOps","oldUnion","oldDifference","innerWidth","innerHeight","body","appendChild","keyLight","helper","shadowFrustumSize","shadowCameraHelper","ambientLight","shadowMaterial","shadowPlane","axesHelper","cameraLookTarget","controls","_Modeling$primitives","Modeling","primitives","cuboid","cylinder","cylinderElliptic","geodesicSphere","roundedCuboid","roundedCylinder","torus","_Modeling$transforms","_Modeling$booleans","booleans","subtract","wireMaterial","normalsLength","csgMesh","csgGeometry","wireMesh","normalsHelper","cuttingSize","topFrontCube","topBackCube","bottomFrontCube","bottomBackCube","mater","threeCube","handleAnimationFrame","handleResize","debounce","wait","timeoutId","_len","args","_key","clearTimeout","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","some"],"mappings":"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AiBA,CAAA,EAAG;EAE5B,MAAMyC,cAAc,GAAG,IAAIjoC,iBAAiB,CAAE;IAE7C9zF,IAAI,EAAE,iBAAiB;IAEvB07B,QAAQ,EAAE;MACT,QAAQ,EAAE;QAAEtqC,KAAK,EAAE;MAAK,CAAC;MACzB,eAAe,EAAE;QAAEA,KAAK,EAAE8lI,SAAS,CAAE5qI,cAAc;MAAG,CAAC;MACvD,gBAAgB,EAAE;QAAE8E,KAAK,EAAE8lI,SAAS,CAAE5qI,cAAc;MAAG;IACxD,CAAC;IAED2vC,YAAY,EAAE+/F,sBAAsB,CAAC,CAAC;IAEtC9/F,cAAc,EAAE,UAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAM+/F,aAAa,CAAC,CAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;IAED71G,QAAQ,EAAEziC,UAAU;IACpBqjC,SAAS,EAAE,KAAK;IAChBC,UAAU,EAAE;EAEb,CAAE,CAAC;EAEH,OAAO80G,cAAc;AAEtB;AAEA,SAASC,sBAAsBA,CAAA,EAAG;EAEjC,OAAO,WAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAAE;AAEF;AAEA,SAASC,aAAaA,CAAA,EAAG;EAExB,OAAO,WAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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K,CAAC,CAACvX,GAAG,CAAEk+H,GAAI,CAAC;QAEpFt7G,QAAQ,CAAC4X,MAAM,CAAE08G,GAAG,EAAEhZ,GAAG,CAAC5iI,CAAC,EAAE4iI,GAAG,CAACtiI,CAAC,EAAEsiI,GAAG,CAACnyH,CAAE,CAAC;QAE3CmrI,GAAG,GAAGA,GAAG,GAAG,CAAC;QAEbt0H,QAAQ,CAAC4X,MAAM,CAAE08G,GAAG,EAAE/Y,GAAG,CAAC7iI,CAAC,EAAE6iI,GAAG,CAACviI,CAAC,EAAEuiI,GAAG,CAACpyH,CAAE,CAAC;QAE3CmrI,GAAG,GAAGA,GAAG,GAAG,CAAC;MAEd;IAED;IAEAt0H,QAAQ,CAACnX,WAAW,GAAG,IAAI;EAE5B;AAED;AAAC3f,OAAA,CAAA+qJ,mBAAA,GAAAA,mBAAA;;AC3GD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjljEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACprCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfxtJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClhLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACprHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzvxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzvLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnvtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnfvQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpttVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACblCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjdjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACplJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxlvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACttSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtrMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjBA,IAAAM,YAAA,GAAAlI,OAAA;AAKqC,SAAAmI,mBAAAC,GAAA,WAAAC,kBAAA,CAAAD,GAAA,KAAAE,gBAAA,CAAAF,GAAA,KAAAG,2BAAA,CAAAH,GAAA,KAAAI,kBAAA;AAAA,SAAAA,mBAAA,cAAAj+G,SAAA;AAAA,SAAAg+G,4BAAAp6C,CAAA,EAAAs6C,MAAA,SAAAt6C,CAAA,qBAAAA,CAAA,sBAAAu6C,iBAAA,CAAAv6C,CAAA,EAAAs6C,MAAA,OAAAv8I,CAAA,GAAA4D,MAAA,CAAAmE,SAAA,CAAAlJ,QAAA,CAAAF,IAAA,CAAAsjG,CAAA,EAAA1jG,KAAA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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxprtNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACptVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChverWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpjzXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpzrtfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClhDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzpiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjjjaO,IAAA,GAAG,GAAI,OAAO,CAAC,gBAAgB,CAAC,CAAA,GAA7B;AACF,IAAA,MAAM,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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2010-2021 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '128';\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst FlatShading = 1;\nconst SmoothShading = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst CubeUVRefractionMapping = 307;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedShort565Type = 1019;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst RGBEFormat = RGBAFormat;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBIntegerFormat = 1032;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\nconst SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\nconst SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\nconst SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\nconst SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\nconst SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\nconst SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\nconst SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\nconst SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\nconst SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\nconst SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\nconst SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\nconst SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\nconst SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\nconst GammaEncoding = 3007;\nconst RGBEEncoding = 3002;\nconst LogLuvEncoding = 3003;\nconst RGBM7Encoding = 3004;\nconst RGBM16Encoding = 3005;\nconst RGBDEncoding = 3006;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [];\n\nfor ( let i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toUpperCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidian modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t\t } else {\n\n\t\treturn 0;\n\n\t\t }\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s % 2147483647;\n\n\t// Park-Miller algorithm\n\n\t_seed = _seed * 16807 % 2147483647;\n\n\treturn ( _seed - 1 ) / 2147483646;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nvar MathUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler\n});\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nVector2.prototype.isVector2 = true;\n\nclass Matrix3 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tscale( sx, sy ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tconst te = this.elements;\n\n\t\tconst a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tconst a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nMatrix3.prototype.isMatrix3 = true;\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n}\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.image = image;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tconst image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tlet url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( let i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t// check cube texture with data textures\n\n\t\t\t\t\t\tif ( image[ i ].isDataTexture ) {\n\n\t\t\t\t\t\t\turl.push( serializeImage( image[ i ].image ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\turl.push( serializeImage( image[ i ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = serializeImage( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype.isTexture = true;\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.prototype.slice.call( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nVector4.prototype.isVector4 = true;\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width, height, options ) {\n\n\t\tsuper();\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\toptions = options || {};\n\n\t\tthis.texture = new Texture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.texture.image = {};\n\t\tthis.texture.image.width = width;\n\t\tthis.texture.image.height = height;\n\t\tthis.texture.image.depth = 1;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t}\n\n\tsetTexture( texture ) {\n\n\t\ttexture.image = {\n\t\t\twidth: this.width,\n\t\t\theight: this.height,\n\t\t\tdepth: this.depth\n\t\t};\n\n\t\tthis.texture = texture;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\n\nclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, options ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.samples = 4;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy.call( this, source );\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n}\n\nWebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget = true;\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerp( qa, qb, qm, t ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.' );\n\t\treturn qm.slerpQuaternions( qa, qb, t );\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\tthis.copy( qa ).slerp( qb, t );\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n}\n\nQuaternion.prototype.isQuaternion = true;\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nVector3.prototype.isVector3 = true;\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.union( _box$3 );\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$3.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$3, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$3 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$b.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t}\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nBox3.prototype.isBox3 = true;\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the seperating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is seperating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _toFarthestPoint = /*@__PURE__*/ new Vector3();\nconst _toPoint = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n\n\t\t_toPoint.subVectors( point, this.center );\n\n\t\tconst lengthSq = _toPoint.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\t\t\tconst missingRadiusHalf = ( length - this.radius ) * 0.5;\n\n\t\t\t// Nudge this sphere towards the target point. Add half the missing distance to radius,\n\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\n\t\t\t// the whole missing distance were just added to radius.\n\n\t\t\tthis.center.add( _toPoint.multiplyScalar( missingRadiusHalf / length ) );\n\t\t\tthis.radius += missingRadiusHalf;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n\n\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\n\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\n\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\n\n\t\t_toFarthestPoint.subVectors( sphere.center, this.center ).normalize().multiplyScalar( sphere.radius );\n\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _toFarthestPoint ) );\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _toFarthestPoint ) );\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nMatrix4.prototype.isMatrix4 = true;\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order, update ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\ttoVector3( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n}\n\nEuler.prototype.isEuler = true;\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = new /*@__PURE__*/ Vector3();\nconst _q1 = new /*@__PURE__*/ Quaternion();\nconst _m1$1 = new /*@__PURE__*/ Matrix4();\nconst _target = new /*@__PURE__*/ Vector3();\n\nconst _position$3 = new /*@__PURE__*/ Vector3();\nconst _scale$2 = new /*@__PURE__*/ Vector3();\nconst _quaternion$2 = new /*@__PURE__*/ Quaternion();\n\nconst _xAxis = new /*@__PURE__*/ Vector3( 1, 0, 0 );\nconst _yAxis = new /*@__PURE__*/ Vector3( 0, 1, 0 );\nconst _zAxis = new /*@__PURE__*/ Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender() {}\n\tonAfterRender() {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\ttarget = new Quaternion();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast() {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype.isObject3D = true;\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2$1.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nPlane.prototype.isPlane = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3$1.x );\n\t\ttarget.addScaledVector( uv2, _v3$1.y );\n\t\ttarget.addScaledVector( uv3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Plane();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.vertexColors = false;\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.stencilWriteMask = 0xff;\n\tthis.stencilFunc = AlwaysStencilFunc;\n\tthis.stencilRef = 0;\n\tthis.stencilFuncMask = 0xff;\n\tthis.stencilFail = KeepStencilOp;\n\tthis.stencilZFail = KeepStencilOp;\n\tthis.stencilZPass = KeepStencilOp;\n\tthis.stencilWrite = false;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.alphaToCoverage = false;\n\tthis.premultipliedAlpha = false;\n\n\tthis.visible = true;\n\n\tthis.toneMapped = true;\n\n\tthis.userData = {};\n\n\tthis.version = 0;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBuild: function ( /* shaderobject, renderer */ ) {},\n\n\tonBeforeCompile: function ( /* shaderobject, renderer */ ) {},\n\n\tcustomProgramCacheKey: function () {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tconst isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen && this.sheen.isColor ) data.sheen = this.sheen.getHex();\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.morphNormals === true ) data.morphNormals = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\nObject.defineProperty( Material.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tconst l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopyGammaToLinear( color, gammaFactor = 2.0 ) {\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToGamma( color, gammaFactor = 2.0 ) {\n\n\t\tconst safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t}\n\n\tconvertGammaToLinear( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToGamma( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex() {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t}\n\n\tgetHexString() {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle() {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\tif ( attribute.normalized === true ) {\n\n\t\t\t// assuming Uint8Array\n\n\t\t\tthis.r /= 255;\n\t\t\tthis.g /= 255;\n\t\t\tthis.b /= 255;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\n\nColor.prototype.isColor = true;\nColor.prototype.r = 1;\nColor.prototype.g = 1;\nColor.prototype.b = 1;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nconst _vector$9 = new /*@__PURE__*/ Vector3();\nconst _vector2 = new /*@__PURE__*/ Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.onUploadCallback = function () {};\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tcopyColorsArray( colors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tlet color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector2sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector3sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector4sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2.fromBufferAttribute( this, i );\n\t\t\t\t_vector2.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2.x, _vector2.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.x = this.getX( i );\n\t\t\t_vector$9.y = this.getY( i );\n\t\t\t_vector$9.z = this.getZ( i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.x = this.getX( i );\n\t\t\t_vector$9.y = this.getY( i );\n\t\t\t_vector$9.z = this.getZ( i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.x = this.getX( i );\n\t\t\t_vector$9.y = this.getY( i );\n\t\t\t_vector$9.z = this.getZ( i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n}\n\nBufferAttribute.prototype.isBufferAttribute = true;\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nFloat16BufferAttribute.prototype.isFloat16BufferAttribute = true;\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tlet max = array[ 0 ];\n\n\tfor ( let i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nlet _id = 0;\n\nconst _m1 = new /*@__PURE__*/ Matrix4();\nconst _obj = new /*@__PURE__*/ Object3D();\nconst _offset = new /*@__PURE__*/ Vector3();\nconst _box$1 = new /*@__PURE__*/ Box3();\nconst _boxMorphTargets = new /*@__PURE__*/ Box3();\nconst _vector$8 = new /*@__PURE__*/ Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeFaceNormals() {\n\n\t\t// backwards compatibility\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( attributes.tangent === undefined ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = attributes.tangent.array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tmerge( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tconst attribute1 = attributes[ key ];\n\t\t\tconst attributeArray1 = attribute1.array;\n\n\t\t\tconst attribute2 = geometry.attributes[ key ];\n\t\t\tconst attributeArray2 = attribute2.array;\n\n\t\t\tconst attributeOffset = attribute2.itemSize * offset;\n\t\t\tconst length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\tfor ( let i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t const parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t const values = [];\n\n\t\t for ( const key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nBufferGeometry.prototype.isBufferGeometry = true;\n\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _tempB = /*@__PURE__*/ new Vector3();\nconst _tempC = /*@__PURE__*/ new Vector3();\n\nconst _morphA = /*@__PURE__*/ new Vector3();\nconst _morphB = /*@__PURE__*/ new Vector3();\nconst _morphC = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tlet intersection;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\tconst uv = geometry.attributes.uv;\n\t\t\tconst uv2 = geometry.attributes.uv2;\n\t\t\tconst groups = geometry.groups;\n\t\t\tconst drawRange = geometry.drawRange;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t// indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tconst end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tconst end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst a = i;\n\t\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n}\n\nMesh.prototype.isMesh = true;\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t_vA$1.fromBufferAttribute( position, a );\n\t_vB$1.fromBufferAttribute( position, b );\n\t_vC$1.fromBufferAttribute( position, c );\n\n\tconst morphInfluences = object.morphTargetInfluences;\n\n\tif ( material.morphTargets && morphPosition && morphInfluences ) {\n\n\t\t_morphA.set( 0, 0, 0 );\n\t\t_morphB.set( 0, 0, 0 );\n\t\t_morphC.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\tconst influence = morphInfluences[ i ];\n\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t} else {\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA$1 ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB$1 ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC$1 ), influence );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_vA$1.add( _morphA );\n\t\t_vB$1.add( _morphB );\n\t\t_vC$1.add( _morphC );\n\n\t}\n\n\tif ( object.isSkinnedMesh && material.skinning ) {\n\n\t\tobject.boneTransform( a, _vA$1 );\n\t\tobject.boneTransform( b, _vB$1 );\n\t\tobject.boneTransform( c, _vC$1 );\n\n\t}\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv2, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv2, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n/**\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.skinning = false; // set to use skinning attribute streams\n\t\tthis.morphTargets = false; // set to use morph targets\n\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.skinning = source.skinning;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nCamera.prototype.isCamera = true;\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nPerspectiveCamera.prototype.isPerspectiveCamera = true;\n\nconst fov = 90, aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget !== true ) {\n\n\t\t\tconsole.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\t\tformat = format !== undefined ? format : RGBFormat;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\t// Why CubeTexture._needsFlipEnvMap is necessary:\n\t\t//\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag _needsFlipEnvMap controls this conversion. The flip is not required (and thus _needsFlipEnvMap is set to false)\n\t\t// when using WebGLCubeRenderTarget.texture as a cube texture.\n\n\t\tthis._needsFlipEnvMap = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nCubeTexture.prototype.isCubeTexture = true;\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size, options, dummy ) {\n\n\t\tif ( Number.isInteger( options ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )' );\n\n\t\t\toptions = dummy;\n\n\t\t}\n\n\t\tsuper( size, size, options );\n\n\t\toptions = options || {};\n\n\t\tthis.texture = new CubeTexture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.texture._needsFlipEnvMap = false;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.format = RGBAFormat; // see #18859\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\nclass DataTexture extends Texture {\n\n\tconstructor( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data || null, width: width || 1, height: height || 1 };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nDataTexture.prototype.isDataTexture = true;\n\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$2.center.set( 0, 0, 0 );\n\t\t_sphere$2.radius = 0.7071067811865476;\n\t\t_sphere$2.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type = 5126;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = 5131;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularRoughness;\\n\\tvec3 specularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmissionmap_fragment = \"#ifdef USE_TRANSMISSIONMAP\\n\\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\\n#endif\";\n\nvar transmissionmap_pars_fragment = \"#ifdef USE_TRANSMISSIONMAP\\n\\tuniform sampler2D transmissionMap;\\n#endif\";\n\nvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nvar cube_frag = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nvar meshtoon_frag = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshtoon_vert = \"#define TOON\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshphysical_frag = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n\\t#define TRANSMISSION\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef TRANSMISSION\\n\\tuniform float transmission;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <transmissionmap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#ifdef TRANSMISSION\\n\\t\\tfloat totalTransmission = transmission;\\n\\t#endif\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <transmissionmap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#ifdef TRANSMISSION\\n\\t\\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\\n\\t#endif\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphysical_vert = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar shadow_vert = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmissionmap_fragment: transmissionmap_fragment,\n\ttransmissionmap_pars_fragment: transmissionmap_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_frag: background_frag,\n\tbackground_vert: background_vert,\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshmatcap_frag: meshmatcap_frag,\n\tmeshmatcap_vert: meshmatcap_vert,\n\tmeshtoon_frag: meshtoon_frag,\n\tmeshtoon_vert: meshtoon_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert,\n\tsprite_frag: sprite_frag,\n\tsprite_vert: sprite_vert\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\t\tuv2Transform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tsheen: { value: new Color( 0x000000 ) },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nfunction WebGLBackground( renderer, cubemaps, state, objects, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = 0;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tbackground = cubemaps.get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background._needsFlipEnvMap ) ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( 34921 );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( geometry, index );\n\n\t\t\tif ( updateBuffers ) saveCache( geometry, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh === true ) {\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( geometry, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tfor ( const key in geometryAttributes ) {\n\n\t\t\tconst cachedAttribute = cachedAttributes[ key ];\n\t\t\tconst geometryAttribute = geometryAttributes[ key ];\n\n\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\tif ( cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\tattributesNum ++;\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( geometry, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tconst data = {};\n\t\t\tdata.attribute = attribute;\n\n\t\t\tif ( attribute.data ) {\n\n\t\t\t\tdata.data = attribute.data;\n\n\t\t\t}\n\n\t\t\tcache[ key ] = data;\n\n\t\t\tattributesNum ++;\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tconst geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( name === 'instanceMatrix' ) {\n\n\t\t\t\t\tconst attribute = attributes.get( object.instanceMatrix );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 0, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 1, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 2, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 3, 1 );\n\n\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 0, 4, type, false, 64, 0 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 1, 4, type, false, 64, 16 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 2, 4, type, false, 64, 32 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 3, 4, type, false, 64, 48 );\n\n\t\t\t\t} else if ( name === 'instanceColor' ) {\n\n\t\t\t\t\tconst attribute = attributes.get( object.instanceColor );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute, 1 );\n\n\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute, 3, type, false, 12, 0 );\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatilibity\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\t/* eslint-disable no-undef */\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\t/* eslint-enable no-undef */\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( 34930 );\n\tconst maxVertexTextures = gl.getParameter( 35660 );\n\tconst maxTextureSize = gl.getParameter( 3379 );\n\tconst maxCubemapSize = gl.getParameter( 34076 );\n\n\tconst maxAttributes = gl.getParameter( 34921 );\n\tconst maxVertexUniforms = gl.getParameter( 36347 );\n\tconst maxVaryings = gl.getParameter( 36348 );\n\tconst maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\tlet influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tconst influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tworkInfluences.sort( numericalSort );\n\n\t\tconst morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tconst morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tconst influence = workInfluences[ i ];\n\t\t\tconst index = influence[ 0 ];\n\t\t\tconst value = influence[ 1 ];\n\n\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t} else {\n\n\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass DataTexture2DArray extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\nclass DataTexture3D extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nDataTexture3D.prototype.isDataTexture3D = true;\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nconst emptyTexture = new Texture();\nconst emptyTexture2dArray = new DataTexture2DArray();\nconst emptyTexture3d = new DataTexture3D();\nconst emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tconst cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\tconst seq = this.seq;\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program ) {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n\tconst n = gl.getProgramParameter( program, 35718 );\n\n\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\tconst u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tconst v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tconst r = [];\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction addLineNumbers( string ) {\n\n\tconst lines = string.split( '\\n' );\n\n\tfor ( let i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tcase LogLuvEncoding:\n\t\t\treturn [ 'LogLuv', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, 35713 );\n\tconst log = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && log === '' ) return '';\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\tconst source = gl.getShaderSource( shader );\n\n\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers( source );\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string\n\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n}\n\nfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\treturn loopReplacer( match, start, end, snippet );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\n\n\tconst gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t( ( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.map ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcap ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMap ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMap ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.lightMap ? getTexelDecodingFunction( 'lightMapTexelToLinear', parameters.lightMapEncoding ) : '',\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst floatVertexTextures = capabilities.floatVertexTextures;\n\tconst maxVertexUniforms = capabilities.maxVertexUniforms;\n\tconst vertexTextures = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tconst parameterNames = [\n\t\t'precision', 'isWebGL2', 'supportsVertexTextures', 'outputEncoding', 'instancing', 'instancingColor',\n\t\t'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'envMapCubeUV',\n\t\t'lightMap', 'lightMapEncoding', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'tangentSpaceNormalMap', 'clearcoatMap', 'clearcoatRoughnessMap', 'clearcoatNormalMap', 'displacementMap', 'specularMap',\n\t\t'roughnessMap', 'metalnessMap', 'gradientMap',\n\t\t'alphaMap', 'combine', 'vertexColors', 'vertexAlphas', 'vertexTangents', 'vertexUvs', 'uvsVertexOnly', 'fog', 'useFog', 'fogExp2',\n\t\t'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning',\n\t\t'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals', 'premultipliedAlpha',\n\t\t'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights',\n\t\t'numDirLightShadows', 'numPointLightShadows', 'numSpotLightShadows',\n\t\t'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights',\n\t\t'alphaTest', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering',\n\t\t'sheen', 'transmissionMap'\n\t];\n\n\tfunction getMaxBones( object ) {\n\n\t\tconst skeleton = object.skeleton;\n\t\tconst bones = skeleton.bones;\n\n\t\tif ( floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tconst nVertexUniforms = maxVertexUniforms;\n\t\t\tconst nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tconst maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map ) {\n\n\t\tlet encoding;\n\n\t\tif ( map && map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map && map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.' );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t} else {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = cubemaps.get( material.envMap || environment );\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tconst maxBones = object.isSkinnedMesh ? getMaxBones( object ) : 0;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet vertexShader, fragmentShader;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget !== null ) ? getTextureEncodingFromMap( currentRenderTarget.texture ) : renderer.outputEncoding,\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map ),\n\t\t\tmatcap: !! material.matcap,\n\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap ),\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( envMap ),\n\t\t\tenvMapCubeUV: ( !! envMap ) && ( ( envMap.mapping === CubeUVReflectionMapping ) || ( envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\tlightMapEncoding: getTextureEncodingFromMap( material.lightMap ),\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\tclearcoatMap: !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: !! material.clearcoatNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: !! material.sheen,\n\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && object.geometry && object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap || !! material.transmissionMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.transmissionMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: !! material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.fragmentShader );\n\t\t\tarray.push( parameters.vertexShader );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tfor ( let i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\tarray.push( renderer.outputEncoding );\n\t\t\tarray.push( renderer.gammaFactor );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList( properties ) {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transparent = [];\n\n\tconst defaultProgram = { id: - 1 };\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: materialProperties.program || defaultProgram,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = materialProperties.program || defaultProgram;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).unshift( renderItem );\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.program = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists( properties ) {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tlet list;\n\n\t\tif ( lists.has( scene ) === false ) {\n\n\t\t\tlist = new WebGLRenderList( properties );\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= lists.get( scene ).length ) {\n\n\t\t\t\tlist = new WebGLRenderList( properties );\n\t\t\t\tlists.get( scene ).push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = lists.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\n\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights() {\n\n\t\tlights.setup( lightsArray );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tlet renderState;\n\n\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStates.get( scene ).length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStates.get( scene ).push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n/**\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.fog = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nvar vsm_frag = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\\n\\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean * HALF_SAMPLE_RATE;\\n\\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nvar vsm_vert = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterials = [],\n\t\t_distanceMaterials = [],\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\n\t\tdefines: {\n\t\t\tSAMPLE_RATE: 2.0 / 8.0,\n\t\t\tHALF_SAMPLE_RATE: 1.0 / 8.0\n\t\t},\n\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vsm_vert,\n\n\t\tfragmentShader: vsm_frag\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tconst pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\tconst index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\tlet material = _depthMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDepthMaterial( {\n\n\t\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_depthMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDistanceMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\tconst index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\tlet material = _distanceMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDistanceMaterial( {\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDepthMaterial( object, geometry, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tlet getMaterialVariant = getDepthMaterialVariant;\n\t\tlet customMaterial = object.customDepthMaterial;\n\n\t\tif ( light.isPointLight === true ) {\n\n\t\t\tgetMaterialVariant = getDistanceMaterialVariant;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( customMaterial === undefined ) {\n\n\t\t\tlet useMorphing = false;\n\n\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t}\n\n\t\t\tlet useSkinning = false;\n\n\t\t\tif ( object.isSkinnedMesh === true ) {\n\n\t\t\t\tif ( material.skinning === true ) {\n\n\t\t\t\t\tuseSkinning = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst useInstancing = object.isInstancedMesh === true;\n\n\t\t\tresult = getMaterialVariant( useMorphing, useSkinning, useInstancing );\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, geometry, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tlet enabledCapabilities = {};\n\n\tlet xrFramebuffer = null;\n\tlet currentBoundFramebuffers = {};\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( 35661 );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst currentScissor = new Vector4( 0, 0, gl.canvas.width, gl.canvas.height );\n\tconst currentViewport = new Vector4( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindXRFramebuffer( framebuffer ) {\n\n\t\tif ( framebuffer !== xrFramebuffer ) {\n\n\t\t\tgl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\txrFramebuffer = framebuffer;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( framebuffer === null && xrFramebuffer !== null ) framebuffer = xrFramebuffer; // use active XR framebuffer if available\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// 36009 is equivalent to 36160\n\n\t\t\t\tif ( target === 36009 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36160 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === 36160 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36009 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: 32774,\n\t\t[ SubtractEquation ]: 32778,\n\t\t[ ReverseSubtractEquation ]: 32779\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = 32775;\n\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: 0,\n\t\t[ OneFactor ]: 1,\n\t\t[ SrcColorFactor ]: 768,\n\t\t[ SrcAlphaFactor ]: 770,\n\t\t[ SrcAlphaSaturateFactor ]: 776,\n\t\t[ DstColorFactor ]: 774,\n\t\t[ DstAlphaFactor ]: 772,\n\t\t[ OneMinusSrcColorFactor ]: 769,\n\t\t[ OneMinusSrcAlphaFactor ]: 771,\n\t\t[ OneMinusDstColorFactor ]: 775,\n\t\t[ OneMinusDstAlphaFactor ]: 773\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 0, 769, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 769 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( 32926 )\n\t\t\t: disable( 32926 );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( 3042 );\n\t\tgl.disable( 2884 );\n\t\tgl.disable( 2929 );\n\t\tgl.disable( 32823 );\n\t\tgl.disable( 3089 );\n\t\tgl.disable( 2960 );\n\t\tgl.disable( 32926 );\n\n\t\tgl.blendEquation( 32774 );\n\t\tgl.blendFunc( 1, 0 );\n\t\tgl.blendFuncSeparate( 1, 0, 1, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( 513 );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( 519, 0, 0xffffffff );\n\t\tgl.stencilOp( 7680, 7680, 7680 );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( 1029 );\n\t\tgl.frontFace( 2305 );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( 33984 );\n\n\t\tgl.bindFramebuffer( 36160, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( 36009, null );\n\t\t\tgl.bindFramebuffer( 36008, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\txrFramebuffer = null;\n\t\tcurrentBoundFramebuffers = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tbindXRFramebuffer: bindXRFramebuffer,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\tnew OffscreenCanvas( width, height ) :\n\t\t\tdocument.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\ttextureProperties.__maxMipLevel = Math.log2( Math.max( width, height ) );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 6407 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34837;\n\t\t\tif ( glType === 5131 ) internalFormat = 34843;\n\t\t\tif ( glType === 5121 ) internalFormat = 32849;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = 32856;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: 10497,\n\t\t[ ClampToEdgeWrapping ]: 33071,\n\t\t[ MirroredRepeatWrapping ]: 33648\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: 9728,\n\t\t[ NearestMipmapNearestFilter ]: 9984,\n\t\t[ NearestMipmapLinearFilter ]: 9986,\n\n\t\t[ LinearFilter ]: 9729,\n\t\t[ LinearMipmapNearestFilter ]: 9985,\n\t\t[ LinearMipmapLinearFilter ]: 9987\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = 3553;\n\n\t\tif ( texture.isDataTexture2DArray ) textureType = 35866;\n\t\tif ( texture.isDataTexture3D ) textureType = 32879;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\tconst image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\n\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format );\n\n\t\tlet glType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\tlet mipmap;\n\t\tconst mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = 6402;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// validation checks for WebGL 1\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else if ( texture.isDataTexture2DArray ) {\n\n\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tgenerateMipmap( textureType, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\tconst isCompressed = ( texture && ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture ) );\n\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\tconst cubeImage = [];\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t} else {\n\n\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst image = cubeImage[ 0 ],\n\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\tlet mipmaps;\n\n\t\tif ( isCompressed ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else {\n\n\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t// We assume images for cube map have the same size.\n\t\t\tgenerateMipmap( 34067, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst glFormat = utils.convert( texture.format );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\tif ( textureTarget === 32879 || textureTarget === 35866 ) {\n\n\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t} else {\n\n\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = 33189;\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tconst glFormat = utils.convert( texture.format );\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\t\ttextureProperties.__version = texture.version;\n\n\t\tinfo.memory.textures ++;\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\tconst isRenderTarget3D = texture.isDataTexture3D || texture.isDataTexture2DArray;\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Handles WebGL2 RGBFormat fallback - #18858\n\n\t\tif ( isWebGL2 && texture.format === RGBFormat && ( texture.type === FloatType || texture.type === HalfFloatType ) ) {\n\n\t\t\ttexture.format = RGBAFormat;\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.' );\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, null );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067, texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 34067, null );\n\n\t\t} else {\n\n\t\t\tlet glTextureType = 3553;\n\n\t\t\tif ( isRenderTarget3D ) {\n\n\t\t\t\t// Render targets containing layers, i.e: Texture 3D and 2d arrays\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tconst isTexture3D = texture.isDataTexture3D;\n\t\t\t\t\tglTextureType = isTexture3D ? 32879 : 35866;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 3553, texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 3553, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tconst width = renderTarget.width;\n\t\t\t\tconst height = renderTarget.height;\n\t\t\t\tlet mask = 16384;\n\n\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tstate.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t\tstate.bindFramebuffer( 36008, null );\n\t\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn ( isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\tMath.min( maxSamples, renderTarget.samples ) : 0;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\t// backwards compatibility\n\n\tlet warnedTexture2D = false;\n\tlet warnedTextureCube = false;\n\n\tfunction safeSetTexture2D( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\tif ( warnedTexture2D === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.' );\n\t\t\t\twarnedTexture2D = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\tsetTexture2D( texture, slot );\n\n\t}\n\n\tfunction safeSetTextureCube( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLCubeRenderTarget ) {\n\n\t\t\tif ( warnedTextureCube === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.' );\n\t\t\t\twarnedTextureCube = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\n\t\tsetTextureCube( texture, slot );\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n\tthis.safeSetTexture2D = safeSetTexture2D;\n\tthis.safeSetTextureCube = safeSetTextureCube;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\t\tif ( p === UnsignedShort565Type ) return 33635;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBFormat ) return 6407;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return 36244;\n\t\tif ( p === RGFormat ) return 33319;\n\t\tif ( p === RGIntegerFormat ) return 33320;\n\t\tif ( p === RGBIntegerFormat ) return 36248;\n\t\tif ( p === RGBAIntegerFormat ) return 36249;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nArrayCamera.prototype.isArrayCamera = true;\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nGroup.prototype.isGroup = true;\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\t\t\t\t\t\t// ??\n\t\t\t\t\t\thand.add( joint );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst joint = hand.joints[ inputjoint.jointName ];\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\t\tconst state = renderer.state;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\n\t\tlet pose = null;\n\n\t\tconst controllers = [];\n\t\tconst inputSourcesMap = new Map();\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controller = inputSourcesMap.get( event.inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tinputSourcesMap.forEach( function ( controller, inputSource ) {\n\n\t\t\t\tcontroller.disconnect( inputSource );\n\n\t\t\t} );\n\n\t\t\tinputSourcesMap.clear();\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\tstate.bindXRFramebuffer( null );\n\t\t\trenderer.setRenderTarget( renderer.getRenderTarget() );\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn referenceSpace;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tconst attributes = gl.getContextAttributes();\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tconst layerInit = {\n\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t};\n\n\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\tconst baseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\tsession.updateRenderState( { baseLayer: baseLayer } );\n\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\tconst inputSources = session.inputSources;\n\n\t\t\t// Assign inputSources to available controllers\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tinputSourcesMap.set( inputSources[ i ], controllers[ i ] );\n\n\t\t\t}\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\t\tinputSourcesMap.delete( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.getCamera = function ( camera ) {\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update camera and its children\n\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\t\t\tcamera.matrix.copy( cameraVR.matrix );\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( referenceSpace );\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\t\t\t\tconst baseLayer = session.renderState.baseLayer;\n\n\t\t\t\tstate.bindXRFramebuffer( baseLayer.framebuffer );\n\n\t\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\t\t\t\t\tconst viewport = baseLayer.getViewport( view );\n\n\t\t\t\t\tconst camera = cameras[ i ];\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst inputSources = session.inputSources;\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst controller = controllers[ i ];\n\t\t\t\tconst inputSource = inputSources[ i ];\n\n\t\t\t\tcontroller.update( inputSource, frame, referenceSpace );\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsLambert( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material );\n\n\t\t\t} else {\n\n\t\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDepth( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsNormal( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap._needsFlipEnvMap ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tconst maxMipLevel = properties.get( envMap ).__maxMipLevel;\n\n\t\t\tif ( maxMipLevel !== undefined ) {\n\n\t\t\t\tuniforms.maxMipLevel.value = maxMipLevel;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\t\tif ( material.sheen ) uniforms.sheen.value.copy( material.sheen );\n\n\t\tif ( material.clearcoatMap ) {\n\n\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t}\n\n\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t}\n\n\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.transmission.value = material.transmission;\n\n\t\tif ( material.transmissionMap ) {\n\n\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters ) {\n\n\tparameters = parameters || {};\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\tconst renderListStack = [];\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\textensions.init( capabilities );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( properties );\n\t\trenderLists = new WebGLRenderLists( properties );\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, state, objects, _premultipliedAlpha );\n\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.shadowMap = shadowMap;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\n\n\t\t\ttarget = new Vector4();\n\n\t\t}\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getClearColor() now requires a Color as an argument' );\n\n\t\t\ttarget = new Color();\n\n\t\t}\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= 16384;\n\t\tif ( depth === undefined || depth ) bits |= 256;\n\t\tif ( stencil === undefined || stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\n\t\txr.dispose();\n\n\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tconst infoAutoReset = info.autoReset;\n\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\tconst shadowMapType = shadowMap.type;\n\n\t\tinitGLContext();\n\n\t\tinfo.autoReset = infoAutoReset;\n\t\tshadowMap.enabled = shadowMapEnabled;\n\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\tshadowMap.type = shadowMapType;\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReferences( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\tconst programs = properties.get( material ).programs;\n\n\t\tif ( programs !== undefined ) {\n\n\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tbindingStates.initAttributes();\n\n\t\tconst buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.position );\n\t\t\t_gl.bufferData( 34962, object.positionArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.normal );\n\t\t\t_gl.bufferData( 34962, object.normalArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.uv );\n\t\t\t_gl.bufferData( 34962, object.uvArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.color );\n\t\t\t_gl.bufferData( 34962, object.colorArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tbindingStates.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( 4, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tif ( material.morphTargets || material.morphNormals ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tconst dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tconst drawStart = Math.max( rangeStart, groupStart );\n\t\tconst drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tconst drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tgetProgram( material2, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tfunction onXRSessionStart() {\n\n\t\tanimation.stop();\n\n\t}\n\n\tfunction onXRSessionEnd() {\n\n\t\tanimation.start();\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tlet renderTarget, forceClear;\n\n\t\tif ( arguments[ 2 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\n\t\t\trenderTarget = arguments[ 2 ];\n\n\t\t}\n\n\t\tif ( arguments[ 3 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );\n\t\t\tforceClear = arguments[ 3 ];\n\n\t\t}\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tcamera = xr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\tcurrentRenderList.init();\n\n\t\trenderListStack.push( currentRenderList );\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights();\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\tif ( renderTarget !== undefined ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\t// _gl.finish();\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\trenderStateStack.pop();\n\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\trenderListStack.pop();\n\n\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderList = null;\n\n\t\t}\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\tcurrentRenderState.setupLightsView( camera2 );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tconst program = setProgram( camera, scene, material, object );\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tbindingStates.reset();\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction getProgram( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet programs = materialProperties.programs;\n\n\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = cubemaps.get( material.envMap || materialProperties.environment );\n\n\t\tif ( programs === undefined ) {\n\n\t\t\t// new material\n\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tprograms = new Map();\n\t\t\tmaterialProperties.programs = programs;\n\n\t\t}\n\n\t\tlet program = programs.get( programCacheKey );\n\n\t\tif ( program !== undefined ) {\n\n\t\t\t// early out if program and light state is identical\n\n\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\treturn program;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBuild( parameters, _this );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.currentProgram = program;\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\treturn program;\n\n\t}\n\n\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\tmaterialProperties.instancing = parameters.instancing;\n\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\n\t}\n\n\tfunction setProgram( camera, scene, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\n\t\tconst envMap = cubemaps.get( material.envMap || environment );\n\t\tconst vertexAlphas = material.vertexColors === true && object.geometry && object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4;\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tlet needsProgramChange = false;\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tneedsProgramChange = true;\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\t//\n\n\t\tlet program = materialProperties.currentProgram;\n\n\t\tif ( needsProgramChange === true ) {\n\n\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst p_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// otherwise textures used for skinning can take over texture units reserved for other material textures\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tconst bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tlet size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tlet framebuffer = null;\n\t\tlet isCube = false;\n\t\tlet isRenderTarget3D = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tif ( texture.isDataTexture3D || texture.isDataTexture2DArray ) {\n\n\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t}\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t_gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\t\tconst glFormat = utils.convert( texture.format );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( 3553, level, glFormat, position.x, position.y, width, height, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst { width, height, data } = srcTexture.image;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\t\tlet glTarget;\n\n\t\tif ( dstTexture.isDataTexture3D ) {\n\n\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\tglTarget = 32879;\n\n\t\t} else if ( dstTexture.isDataTexture2DArray ) {\n\n\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\tglTarget = 35866;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tconst unpackRowLen = _gl.getParameter( 3314 );\n\t\tconst unpackImageHeight = _gl.getParameter( 32878 );\n\t\tconst unpackSkipPixels = _gl.getParameter( 3316 );\n\t\tconst unpackSkipRows = _gl.getParameter( 3315 );\n\t\tconst unpackSkipImages = _gl.getParameter( 32877 );\n\n\t\t_gl.pixelStorei( 3314, width );\n\t\t_gl.pixelStorei( 32878, height );\n\t\t_gl.pixelStorei( 3316, sourceBox.min.x );\n\t\t_gl.pixelStorei( 3315, sourceBox.min.y );\n\t\t_gl.pixelStorei( 32877, sourceBox.min.z );\n\n\t\t_gl.texSubImage3D(\n\t\t\tglTarget,\n\t\t\tlevel,\n\t\t\tposition.x,\n\t\t\tposition.y,\n\t\t\tposition.z,\n\t\t\tsourceBox.max.x - sourceBox.min.x + 1,\n\t\t\tsourceBox.max.y - sourceBox.min.y + 1,\n\t\t\tsourceBox.max.z - sourceBox.min.z + 1,\n\t\t\tglFormat,\n\t\t\tglType,\n\t\t\tdata\n\t\t);\n\n\t\t_gl.pixelStorei( 3314, unpackRowLen );\n\t\t_gl.pixelStorei( 32878, unpackImageHeight );\n\t\t_gl.pixelStorei( 3316, unpackSkipPixels );\n\t\t_gl.pixelStorei( 3315, unpackSkipRows );\n\t\t_gl.pixelStorei( 32877, unpackSkipImages );\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\t_currentActiveCubeFace = 0;\n\t\t_currentActiveMipmapLevel = 0;\n\t\t_currentRenderTarget = null;\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nFog.prototype.isFog = true;\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.environment !== null ) data.object.environment = this.environment.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nScene.prototype.isScene = true;\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.onUploadCallback = function () {};\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new InterleavedBuffer( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.prototype.slice.call( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nInterleavedBuffer.prototype.isInterleavedBuffer = true;\n\nconst _vector$6 = new /*@__PURE__*/ Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized ) {\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.x = this.getX( i );\n\t\t\t_vector$6.y = this.getY( i );\n\t\t\t_vector$6.z = this.getZ( i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.x = this.getX( i );\n\t\t\t_vector$6.y = this.getY( i );\n\t\t\t_vector$6.z = this.getZ( i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.x = this.getX( i );\n\t\t\t_vector$6.y = this.getY( i );\n\t\t\t_vector$6.z = this.getZ( i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// deinterleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interlaved attribtue\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nInterleavedBufferAttribute.prototype.isInterleavedBufferAttribute = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getUV( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nSprite.prototype.isSprite = true;\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\treturn this;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.x = skinWeight.getX( i );\n\t\t\tvector.y = skinWeight.getY( i );\n\t\t\tvector.z = skinWeight.getZ( i );\n\t\t\tvector.w = skinWeight.getW( i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tboneTransform( index, target ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.fromBufferAttribute( geometry.attributes.position, index ).applyMatrix4( this.bindMatrix );\n\n\t\ttarget.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\ttarget.addScaledVector( _vector$5.copy( _basePosition ).applyMatrix4( _matrix ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nSkinnedMesh.prototype.isSkinnedMesh = true;\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nBone.prototype.isBone = true;\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.frame = - 1;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _mesh = /*@__PURE__*/ new Mesh();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.instanceMatrix = new BufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.frustumCulled = false;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new BufferAttribute( new Float32Array( this.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nInstancedMesh.prototype.isInstancedMesh = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nLine.prototype.isLine = true;\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\tconst lineDistances = [];\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineSegments.prototype.isLineSegments = true;\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nLineLoop.prototype.isLineLoop = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t}\n\n}\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nPoints.prototype.isPoints = true;\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.format = format !== undefined ? format : RGBFormat;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nVideoTexture.prototype.isVideoTexture = true;\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nCanvasTexture.prototype.isCanvasTexture = true;\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps\t= false;\n\n\t}\n\n\n}\n\nDepthTexture.prototype.isDepthTexture = true;\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices, indices, radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n}\n\nconst _v0 = new Vector3();\nconst _v1$1 = new Vector3();\nconst _normal = new Vector3();\nconst _triangle = new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry, thresholdAngle ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t\tif ( geometry.isGeometry === true ) {\n\n\t\t\tconsole.error( 'THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst precisionPoints = 4;\n\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\tconst indexAttr = geometry.getIndex();\n\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\tconst indexArr = [ 0, 0, 0 ];\n\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\tconst hashes = new Array( 3 );\n\n\t\tconst edgeData = {};\n\t\tconst vertices = [];\n\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\tif ( indexAttr ) {\n\n\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t} else {\n\n\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t}\n\n\t\t\tconst { a, b, c } = _triangle;\n\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t// create hashes for the edge from the vertices\n\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t// skip degenerate triangles\n\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// iterate over every edge\n\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\tfor ( const key in edgeData ) {\n\n\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tlet p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\tif ( outerNode ) {\n\n\t\tconst b = splitPolygon( outerNode, hole );\n\n\t\t// filter collinear points around the cuts\n\t\tfilterPoints( outerNode, outerNode.next );\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode;\n\tconst hx = hole.x;\n\tconst hy = hole.y;\n\tlet qx = - Infinity, m;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n\t\t( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t\t( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t\tequals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes, options ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tlet depth = options.depth !== undefined ? options.depth : 100;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t// deprecated options\n\n\t\t\tif ( options.amount !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\t\tdepth = options.amount;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points, segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices and uvs\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t\t// if the geometry is closed, we need to average the normals along the seam.\n\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\tif ( phiLength === Math.PI * 2 ) {\n\n\t\t\tconst normals = this.attributes.normal.array;\n\t\t\tconst n1 = new Vector3();\n\t\t\tconst n2 = new Vector3();\n\t\t\tconst n = new Vector3();\n\n\t\t\t// this is the buffer offset for the last line of vertices\n\n\t\t\tconst base = segments * points.length * 3;\n\n\t\t\tfor ( let i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t\t// select the normal of the vertex in the first line\n\n\t\t\t\tn1.x = normals[ j + 0 ];\n\t\t\t\tn1.y = normals[ j + 1 ];\n\t\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t\t// select the normal of the vertex in the last line\n\n\t\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t\t// average normals\n\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t\t// assign the new values to both normals\n\n\t\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n}\n\n/**\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html\n */\n\nclass ParametricGeometry extends BufferGeometry {\n\n\tconstructor( func, slices, stacks ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ParametricGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tconst EPS = 0.00001;\n\n\t\tconst normal = new Vector3();\n\n\t\tconst p0 = new Vector3(), p1 = new Vector3();\n\t\tconst pu = new Vector3(), pv = new Vector3();\n\n\t\tif ( func.length < 3 ) {\n\n\t\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t\t}\n\n\t\t// generate vertices, normals and uvs\n\n\t\tconst sliceCount = slices + 1;\n\n\t\tfor ( let i = 0; i <= stacks; i ++ ) {\n\n\t\t\tconst v = i / stacks;\n\n\t\t\tfor ( let j = 0; j <= slices; j ++ ) {\n\n\t\t\t\tconst u = j / slices;\n\n\t\t\t\t// vertex\n\n\t\t\t\tfunc( u, v, p0 );\n\t\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t\t// normal\n\n\t\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, v );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let i = 0; i < stacks; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < slices; j ++ ) {\n\n\t\t\t\tconst a = i * sliceCount + j;\n\t\t\t\tconst b = i * sliceCount + j + 1;\n\t\t\t\tconst c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\t\tconst d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t\t// faces one and two\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes, curveSegments = 12 ) {\n\n\t\tsuper();\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 8, heightSegments = 6, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n}\n\n/**\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */\n\nclass TextGeometry extends ExtrudeGeometry {\n\n\tconstructor( text, parameters = {} ) {\n\n\t\tconst font = parameters.font;\n\n\t\tif ( ! ( font && font.isFont ) ) {\n\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\treturn new BufferGeometry();\n\n\t\t}\n\n\t\tconst shapes = font.generateShapes( text, parameters.size );\n\n\t\t// translate parameters to ExtrudeGeometry API\n\n\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t// defaults\n\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\tsuper( shapes, parameters );\n\n\t\tthis.type = 'TextGeometry';\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path, tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry ) {\n\n\t\tsuper();\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tif ( geometry.isGeometry === true ) {\n\n\t\t\tconsole.error( 'THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\n\t\t// helper variables\n\n\t\tconst edge = [ 0, 0 ], edges = {};\n\n\t\tconst vertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst indices = geometry.index;\n\t\t\tlet groups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\tconst start = group.start;\n\t\t\t\tconst count = group.count;\n\n\t\t\t\tfor ( let i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tconst edge1 = indices.getX( i + j );\n\t\t\t\t\t\tconst edge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tconst key = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( const key in edges ) {\n\n\t\t\t\tconst e = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\n/**\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\treturn this;\n\n\t}\n\n}\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.vertexTangents = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.vertexTangents = source.vertexTangents;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n/**\n * parameters = {\n *  clearcoat: <float>,\n *  clearcoatMap: new THREE.Texture( <Image> ),\n *  clearcoatRoughness: <float>,\n *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),\n *  clearcoatNormalScale: <Vector2>,\n *  clearcoatNormalMap: new THREE.Texture( <Image> ),\n *\n *  reflectivity: <float>,\n *  ior: <float>,\n *\n *  sheen: <Color>,\n *\n *  transmission: <float>,\n *  transmissionMap: new THREE.Texture( <Image> )\n * }\n */\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoat = 0.0;\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\tObject.defineProperty( this, 'ior', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( 1 + 0.4 * this.reflectivity ) / ( 1 - 0.4 * this.reflectivity );\n\n\t\t\t},\n\t\t\tset: function ( ior ) {\n\n\t\t\t\tthis.reflectivity = clamp( 2.5 * ( ior - 1 ) / ( ior + 1 ), 0, 1 );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.sheen = null; // null will disable sheen bsdf\n\n\t\tthis.transmission = 0.0;\n\t\tthis.transmissionMap = null;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.reflectivity = source.reflectivity;\n\n\t\tif ( source.sheen ) {\n\n\t\t\tthis.sheen = ( this.sheen || new Color() ).copy( source.sheen );\n\n\t\t} else {\n\n\t\t\tthis.sheen = null;\n\n\t\t}\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.MultiplyOperation,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *\n *  map: new THREE.Texture( <Image> ),\n *  gradientMap: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n/**\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  matcap: new THREE.Texture( <Image> ),\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nvar Materials = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tMeshMatcapMaterial: MeshMatcapMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\nconst AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tconst n = times.length;\n\t\tconst result = new Array( n );\n\t\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tconst nValues = values.length;\n\t\tconst result = new values.constructor( nValues );\n\n\t\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tconst srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tlet i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tlet value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t},\n\n\tsubclip: function ( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\t\tconst clip = sourceClip.clone();\n\n\t\tclip.name = name;\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tconst track = clip.tracks[ i ];\n\t\t\tconst valueSize = track.getValueSize();\n\n\t\t\tconst times = [];\n\t\t\tconst values = [];\n\n\t\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( times.length === 0 ) continue;\n\n\t\t\ttrack.times = AnimationUtils.convertArray( times, track.times.constructor );\n\t\t\ttrack.values = AnimationUtils.convertArray( values, track.values.constructor );\n\n\t\t\ttracks.push( track );\n\n\t\t}\n\n\t\tclip.tracks = tracks;\n\n\t\t// find minimum .times value across all tracks in the trimmed clip\n\n\t\tlet minStartTime = Infinity;\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// shift all tracks such that clip begins at t=0\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t\t}\n\n\t\tclip.resetDuration();\n\n\t\treturn clip;\n\n\t},\n\n\tmakeClipAdditive: function ( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\t\tif ( fps <= 0 ) fps = 30;\n\n\t\tconst numTracks = referenceClip.tracks.length;\n\t\tconst referenceTime = referenceFrame / fps;\n\n\t\t// Make each track's values relative to the values at the reference frame\n\t\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t\t// Skip this track if it's non-numeric\n\t\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t\t} );\n\n\t\t\tif ( targetTrack === undefined ) continue;\n\n\t\t\tlet referenceOffset = 0;\n\t\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t\t}\n\n\t\t\tlet targetOffset = 0;\n\t\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t\t}\n\n\t\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\t\tlet referenceValue;\n\n\t\t\t// Find the value to subtract out of the track\n\t\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else {\n\n\t\t\t\t// Interpolate to the reference value\n\t\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t\t}\n\n\t\t\t// Conjugate the quaternion\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t\t}\n\n\t\t\t// Subtract the reference value from all of the track values\n\n\t\t\tconst numTimes = targetTrack.times.length;\n\t\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart,\n\t\t\t\t\t\treferenceValue,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\t\treturn targetClip;\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n// ALIAS DEFINITIONS\n\nInterpolant.prototype.beforeStart_ = Interpolant.prototype.copySampleValue_;\nInterpolant.prototype.afterEnd_ = Interpolant.prototype.copySampleValue_;\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = AnimationUtils.arraySlice( this.times ),\n\t\t\tvalues = AnimationUtils.arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = AnimationUtils.arraySlice( this.times, 0 );\n\t\tconst values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nconst loading = {};\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tconst dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tconst dataUriRegexResult = url.match( dataUriRegex );\n\t\tlet request;\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tconst mimeType = dataUriRegexResult[ 1 ];\n\t\t\tconst isBase64 = !! dataUriRegexResult[ 2 ];\n\n\t\t\tlet data = dataUriRegexResult[ 3 ];\n\t\t\tdata = decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tlet response;\n\t\t\t\tconst responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tconst view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\trequest = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tconst response = this.response;\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( const header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.encoding !== undefined ) {\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tconst isJPEG = url.search( /\\.jpe?g($|\\?)/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = new Vector3();\nconst px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n/**\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst tangent = optionalTarget || new Vector2();\n\n\t\ttangent.copy( this.v2 ).sub( this.v1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineCurve.prototype.isLineCurve = true;\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineCurve3';\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nSplineCurve.prototype.isSplineCurve = true;\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nLight.prototype.isLight = true;\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nHemisphereLight.prototype.isHemisphereLight = true;\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nSpotLightShadow.prototype.isSpotLightShadow = true;\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// intensity = power per solid angle.\n\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// intensity = power per solid angle.\n\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nSpotLight.prototype.isSpotLight = true;\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nPointLightShadow.prototype.isPointLightShadow = true;\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// intensity = power per solid angle.\n\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// intensity = power per solid angle.\n\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nPointLight.prototype.isPointLight = true;\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nOrthographicCamera.prototype.isOrthographicCamera = true;\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t}\n\n}\n\nDirectionalLightShadow.prototype.isDirectionalLightShadow = true;\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nDirectionalLight.prototype.isDirectionalLight = true;\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nAmbientLight.prototype.isAmbientLight = true;\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\nRectAreaLight.prototype.isRectAreaLight = true;\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nSphericalHarmonics3.prototype.isSphericalHarmonics3 = true;\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nLightProbe.prototype.isLightProbe = true;\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = new Color().setHex( json.sheen );\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.morphNormals !== undefined ) material.morphNormals = json.morphNormals;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\n\t\tif ( json.vertexTangents !== undefined ) material.vertexTangents = json.vertexTangents;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON( this );\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nInstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute ) {\n\n\t\tif ( typeof ( normalized ) === 'number' ) {\n\n\t\t\tmeshPerAttribute = normalized;\n\n\t\t\tnormalized = false;\n\n\t\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t\t}\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON()\t{\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nInstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ] instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\t\tlet geometryShapes;\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TubeGeometry':\n\t\t\t\t\tcase 'TubeBufferGeometry':\n\n\t\t\t\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.closed\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tgeometryShapes = [];\n\n\t\t\t\t\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tgeometryShapes = [];\n\n\t\t\t\t\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Loading \"Geometry\" is not supported anymore.' );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor ( let j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tconst material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timages[ image.uuid ].push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timages[ image.uuid ].push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\n\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\timages[ image.uuid ] = deserializedImage;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tlet texture;\n\t\t\t\tconst image = images[ data.image ];\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( image );\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture( image.data, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new BufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new BufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/* DEPRECATED */\n\n\tsetTexturePath( value ) {\n\n\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nImageBitmapLoader.prototype.isImageBitmapLoader = true;\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tconst toChange = [];\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nclass Font {\n\n\tconstructor( data ) {\n\n\t\tthis.type = 'Font';\n\n\t\tthis.data = data;\n\n\t}\n\n\tgenerateShapes( text, size = 100 ) {\n\n\t\tconst shapes = [];\n\t\tconst paths = createPaths( text, size, this.data );\n\n\t\tfor ( let p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nfunction createPaths( text, size, data ) {\n\n\tconst chars = Array.from( text );\n\tconst scale = size / data.resolution;\n\tconst line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tconst paths = [];\n\n\tlet offsetX = 0, offsetY = 0;\n\n\tfor ( let i = 0; i < chars.length; i ++ ) {\n\n\t\tconst char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tconst ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tconst glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) {\n\n\t\tconsole.error( 'THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.' );\n\n\t\treturn;\n\n\t}\n\n\tconst path = new ShapePath();\n\n\tlet x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tconst outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( let i = 0, l = outline.length; i < l; ) {\n\n\t\t\tconst action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\nFont.prototype.isFont = true;\n\nclass FontLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tconst font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\treturn new Font( json );\n\n\t}\n\n}\n\nlet _context;\n\nconst AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\t_context = value;\n\n\t}\n\n};\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nHemisphereLightProbe.prototype.isHemisphereLightProbe = true;\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nAmbientLightProbe.prototype.isAmbientLightProbe = true;\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\tconst projectionMatrix = camera.projectionMatrix.clone();\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( ! matches ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nAnimationObjectGroup.prototype.isAnimationObjectGroup = true;\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nAnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array( 1 );\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nInstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nGLBufferAttribute.prototype.isGLBufferAttribute = true;\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera && camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera && camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = false, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = false, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$4.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nBox2.prototype.isBox2 = true;\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass ImmediateRenderObject extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.material = material;\n\t\tthis.render = function ( /* renderCallback */ ) {};\n\n\t\tthis.hasPositions = false;\n\t\tthis.hasNormals = false;\n\t\tthis.hasColors = false;\n\t\tthis.hasUvs = false;\n\n\t\tthis.positionArray = null;\n\t\tthis.normalArray = null;\n\t\tthis.colorArray = null;\n\t\tthis.uvArray = null;\n\n\t\tthis.count = 0;\n\n\t}\n\n}\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'SkeletonHelper';\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the radials\n\n\t\tfor ( let i = 0; i <= radials; i ++ ) {\n\n\t\t\tconst v = ( i / radials ) * ( Math.PI * 2 );\n\n\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( x, 0, z );\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\t// create the circles\n\n\t\tfor ( let i = 0; i <= circles; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / circles * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2', colorFrustum );\n\t\taddLine( 'n2', 'n4', colorFrustum );\n\t\taddLine( 'n4', 'n3', colorFrustum );\n\t\taddLine( 'n3', 'n1', colorFrustum );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2', colorFrustum );\n\t\taddLine( 'f2', 'f4', colorFrustum );\n\t\taddLine( 'f4', 'f3', colorFrustum );\n\t\taddLine( 'f3', 'f1', colorFrustum );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1', colorFrustum );\n\t\taddLine( 'n2', 'f2', colorFrustum );\n\t\taddLine( 'n3', 'f3', colorFrustum );\n\t\taddLine( 'n4', 'f4', colorFrustum );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1', colorCone );\n\t\taddLine( 'p', 'n2', colorCone );\n\t\taddLine( 'p', 'n3', colorCone );\n\t\taddLine( 'p', 'n4', colorCone );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2', colorUp );\n\t\taddLine( 'u2', 'u3', colorUp );\n\t\taddLine( 'u3', 'u1', colorUp );\n\n\t\t// target\n\n\t\taddLine( 'c', 't', colorTarget );\n\t\taddLine( 'p', 'c', colorCross );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2', colorCross );\n\t\taddLine( 'cn3', 'cn4', colorCross );\n\n\t\taddLine( 'cf1', 'cf2', colorCross );\n\t\taddLine( 'cf3', 'cf4', colorCross );\n\n\t\tfunction addLine( a, b, color ) {\n\n\t\t\taddPoint( a, color );\n\t\t\taddPoint( b, color );\n\n\t\t}\n\n\t\tfunction addPoint( id, color ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tlet scale = - this.plane.constant;\n\n\t\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\t\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _floatView = new Float32Array( 1 );\nconst _int32View = new Int32Array( _floatView.buffer );\n\nclass DataUtils {\n\n\t// Converts float32 to float16 (stored as uint16 value).\n\n\tstatic toHalfFloat( val ) {\n\n\t\t// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n\t\t/* This method is faster than the OpenEXR implementation (very often\n\t\t* used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t* by James Tursa?s half-precision code. */\n\n\t\t_floatView[ 0 ] = val;\n\t\tconst x = _int32View[ 0 ];\n\n\t\tlet bits = ( x >> 16 ) & 0x8000; /* Get the sign */\n\t\tlet m = ( x >> 12 ) & 0x07ff; /* Keep one extra bit for rounding */\n\t\tconst e = ( x >> 23 ) & 0xff; /* Using int is faster here */\n\n\t\t/* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t* half, return signed zero. */\n\t\tif ( e < 103 ) return bits;\n\n\t\t/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\t\tif ( e > 142 ) {\n\n\t\t\tbits |= 0x7c00;\n\t\t\t/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t* not Inf, so make sure we set one mantissa bit too. */\n\t\t\tbits |= ( ( e == 255 ) ? 0 : 1 ) && ( x & 0x007fffff );\n\t\t\treturn bits;\n\n\t\t}\n\n\t\t/* If exponent underflows but not too much, return a denormal */\n\t\tif ( e < 113 ) {\n\n\t\t\tm |= 0x0800;\n\t\t\t/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t* to 1, which is OK. */\n\t\t\tbits |= ( m >> ( 114 - e ) ) + ( ( m >> ( 113 - e ) ) & 1 );\n\t\t\treturn bits;\n\n\t\t}\n\n\t\tbits |= ( ( e - 112 ) << 10 ) | ( m >> 1 );\n\t\t/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t* the exponent, which is OK. */\n\t\tbits += m & 1;\n\t\treturn bits;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\nconst LOD_MAX = 8;\nconst SIZE_MAX = Math.pow( 2, LOD_MAX );\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\nconst TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst ENCODINGS = {\n\t[ LinearEncoding ]: 0,\n\t[ sRGBEncoding ]: 1,\n\t[ RGBEEncoding ]: 2,\n\t[ RGBM7Encoding ]: 3,\n\t[ RGBM16Encoding ]: 4,\n\t[ RGBDEncoding ]: 5,\n\t[ GammaEncoding ]: 6\n};\n\nconst backgroundMaterial = new MeshBasicMaterial( {\n\tside: BackSide,\n\tdepthWrite: false,\n\tdepthTest: false,\n} );\nconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst { _lodPlanes, _sizeLods, _sigmas } = /*@__PURE__*/ _createPlanes();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nfunction convertLinearToRGBE( color ) {\n\n\tconst maxComponent = Math.max( color.r, color.g, color.b );\n\tconst fExp = Math.min( Math.max( Math.ceil( Math.log2( maxComponent ) ), - 128.0 ), 127.0 );\n\tcolor.multiplyScalar( Math.pow( 2.0, - fExp ) );\n\n\tconst alpha = ( fExp + 128.0 ) / 255.0;\n\treturn alpha;\n\n}\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._blurMaterial = _getBlurShader( MAX_SAMPLES );\n\t\tthis._equirectShader = null;\n\t\tthis._cubemapShader = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular ) {\n\n\t\treturn this._fromTexture( equirectangular );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap ) {\n\n\t\treturn this._fromTexture( cubemap );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapShader === null ) {\n\n\t\t\tthis._cubemapShader = _getCubemapShader();\n\t\t\tthis._compileMaterial( this._cubemapShader );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectShader === null ) {\n\n\t\t\tthis._equirectShader = _getEquirectShader();\n\t\t\tthis._compileMaterial( this._equirectShader );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._blurMaterial.dispose();\n\n\t\tif ( this._cubemapShader !== null ) this._cubemapShader.dispose();\n\t\tif ( this._equirectShader !== null ) this._equirectShader.dispose();\n\n\t\tfor ( let i = 0; i < _lodPlanes.length; i ++ ) {\n\n\t\t\t_lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t// private interface\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._pingPongRenderTarget.dispose();\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\tconst cubeUVRenderTarget = this._allocateTargets( texture );\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets( texture ) { // warning: null texture is valid\n\n\t\tconst params = {\n\t\t\tmagFilter: NearestFilter,\n\t\t\tminFilter: NearestFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: UnsignedByteType,\n\t\t\tformat: RGBEFormat,\n\t\t\tencoding: _isLDR( texture ) ? texture.encoding : RGBEEncoding,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( params );\n\t\tcubeUVRenderTarget.depthBuffer = texture ? false : true;\n\t\tthis._pingPongRenderTarget = _createRenderTarget( params );\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( _lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst outputEncoding = renderer.outputEncoding;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.outputEncoding = LinearEncoding;\n\t\trenderer.autoClear = false;\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background ).convertSRGBToLinear();\n\t\t\t\tscene.background = null;\n\n\t\t\t\tconst alpha = convertLinearToRGBE( backgroundMaterial.color );\n\t\t\t\tbackgroundMaterial.opacity = alpha;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor ).convertSRGBToLinear();\n\n\t\t\tconst alpha = convertLinearToRGBE( backgroundMaterial.color );\n\t\t\tbackgroundMaterial.opacity = alpha;\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\t\t\tif ( col == 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col == 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\t_setViewport( cubeUVRenderTarget,\n\t\t\t\tcol * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX );\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.outputEncoding = outputEncoding;\n\t\trenderer.autoClear = originalAutoClear;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tif ( texture.isCubeTexture ) {\n\n\t\t\tif ( this._cubemapShader == null ) {\n\n\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( this._equirectShader == null ) {\n\n\t\t\t\tthis._equirectShader = _getEquirectShader();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = texture.isCubeTexture ? this._cubemapShader : this._equirectShader;\n\t\tconst mesh = new Mesh( _lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tif ( ! texture.isCubeTexture ) {\n\n\t\t\tuniforms[ 'texelSize' ].value.set( 1.0 / texture.image.width, 1.0 / texture.image.height );\n\n\t\t}\n\n\t\tuniforms[ 'inputEncoding' ].value = ENCODINGS[ texture.encoding ];\n\t\tuniforms[ 'outputEncoding' ].value = ENCODINGS[ cubeUVRenderTarget.texture.encoding ];\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < TOTAL_LODS; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( _sigmas[ i ] * _sigmas[ i ] - _sigmas[ i - 1 ] * _sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( _lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = _sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i == 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = LOD_MAX - lodIn;\n\t\tblurUniforms[ 'inputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];\n\t\tblurUniforms[ 'outputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];\n\n\t\tconst outputSize = _sizeLods[ lodOut ];\n\t\tconst x = 3 * Math.max( 0, SIZE_MAX - 2 * outputSize );\n\t\tconst y = ( lodOut === 0 ? 0 : 2 * SIZE_MAX ) + 2 * outputSize * ( lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0 );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\nfunction _isLDR( texture ) {\n\n\tif ( texture === undefined || texture.type !== UnsignedByteType ) return false;\n\n\treturn texture.encoding === LinearEncoding || texture.encoding === sRGBEncoding || texture.encoding === GammaEncoding;\n\n}\n\nfunction _createPlanes() {\n\n\tconst _lodPlanes = [];\n\tconst _sizeLods = [];\n\tconst _sigmas = [];\n\n\tlet lod = LOD_MAX;\n\n\tfor ( let i = 0; i < TOTAL_LODS; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\t_sizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > LOD_MAX - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - LOD_MAX + LOD_MIN - 1 ];\n\n\t\t} else if ( i == 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\t_sigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 1 );\n\t\tconst min = - texelSize / 2;\n\t\tconst max = 1 + texelSize / 2;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\t_lodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { _lodPlanes, _sizeLods, _sigmas };\n\n}\n\nfunction _createRenderTarget( params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( 3 * SIZE_MAX, 3 * SIZE_MAX, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( maxSamples ) {\n\n\tconst weights = new Float32Array( maxSamples );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new RawShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: { 'n': maxSamples },\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${ _getEncodings() }\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectShader() {\n\n\tconst texelSize = new Vector2( 1, 1 );\n\tconst shaderMaterial = new RawShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'texelSize': { value: texelSize },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${ _getEncodings() }\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getCubemapShader() {\n\n\tconst shaderMaterial = new RawShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${ _getEncodings() }\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction _getEncodings() {\n\n\treturn /* glsl */`\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t`;\n\n}\n\nconst LineStrip = 0;\nconst LinePieces = 1;\nconst NoColors = 0;\nconst FaceColors = 1;\nconst VertexColors = 2;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials = [] ) {\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setUsage( DynamicDrawUsage );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nPath.prototype.fromPoints = function ( points ) {\n\n\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\treturn this.setFromPoints( points );\n\n};\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nLoader.prototype.extractUrlBase = function ( url ) {\n\n\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\treturn LoaderUtils.extractUrlBase( url );\n\n};\n\nLoader.Handlers = {\n\n\tadd: function ( /* regex, loader */ ) {\n\n\t\tconsole.error( 'THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.' );\n\n\t},\n\n\tget: function ( /* file */ ) {\n\n\t\tconsole.error( 'THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.' );\n\n\t}\n\n};\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\n//\n\nBox2.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nBox2.prototype.empty = function () {\n\n\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\treturn this.isEmpty();\n\n};\n\nBox2.prototype.isIntersectionBox = function ( box ) {\n\n\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\treturn this.intersectsBox( box );\n\n};\n\nBox2.prototype.size = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\treturn this.getSize( optionalTarget );\n\n};\n\n//\n\nBox3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nBox3.prototype.empty = function () {\n\n\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\treturn this.isEmpty();\n\n};\n\nBox3.prototype.isIntersectionBox = function ( box ) {\n\n\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\treturn this.intersectsBox( box );\n\n};\n\nBox3.prototype.isIntersectionSphere = function ( sphere ) {\n\n\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\treturn this.intersectsSphere( sphere );\n\n};\n\nBox3.prototype.size = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\treturn this.getSize( optionalTarget );\n\n};\n\n//\n\nSphere.prototype.empty = function () {\n\n\tconsole.warn( 'THREE.Sphere: .empty() has been renamed to .isEmpty().' );\n\treturn this.isEmpty();\n\n};\n\n//\n\nFrustum.prototype.setFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().' );\n\treturn this.setFromProjectionMatrix( m );\n\n};\n\n//\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\n//\n\nMatrix3.prototype.flattenToArrayOffset = function ( array, offset ) {\n\n\tconsole.warn( 'THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );\n\treturn this.toArray( array, offset );\n\n};\n\nMatrix3.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\treturn vector.applyMatrix3( this );\n\n};\n\nMatrix3.prototype.multiplyVector3Array = function ( /* a */ ) {\n\n\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n};\n\nMatrix3.prototype.applyToBufferAttribute = function ( attribute ) {\n\n\tconsole.warn( 'THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.' );\n\treturn attribute.applyMatrix3( this );\n\n};\n\nMatrix3.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {\n\n\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n};\n\nMatrix3.prototype.getInverse = function ( matrix ) {\n\n\tconsole.warn( 'THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );\n\treturn this.copy( matrix ).invert();\n\n};\n\n//\n\nMatrix4.prototype.extractPosition = function ( m ) {\n\n\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\treturn this.copyPosition( m );\n\n};\n\nMatrix4.prototype.flattenToArrayOffset = function ( array, offset ) {\n\n\tconsole.warn( 'THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );\n\treturn this.toArray( array, offset );\n\n};\n\nMatrix4.prototype.getPosition = function () {\n\n\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\treturn new Vector3().setFromMatrixColumn( this, 3 );\n\n};\n\nMatrix4.prototype.setRotationFromQuaternion = function ( q ) {\n\n\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\treturn this.makeRotationFromQuaternion( q );\n\n};\n\nMatrix4.prototype.multiplyToArray = function () {\n\n\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n};\n\nMatrix4.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\treturn vector.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.multiplyVector4 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\treturn vector.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.multiplyVector3Array = function ( /* a */ ) {\n\n\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateAxis = function ( v ) {\n\n\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\tv.transformDirection( this );\n\n};\n\nMatrix4.prototype.crossVector = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\treturn vector.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.translate = function () {\n\n\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateX = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateY = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateZ = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateByAxis = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n};\n\nMatrix4.prototype.applyToBufferAttribute = function ( attribute ) {\n\n\tconsole.warn( 'THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.' );\n\treturn attribute.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {\n\n\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n};\n\nMatrix4.prototype.makeFrustum = function ( left, right, bottom, top, near, far ) {\n\n\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n};\n\nMatrix4.prototype.getInverse = function ( matrix ) {\n\n\tconsole.warn( 'THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );\n\treturn this.copy( matrix ).invert();\n\n};\n\n//\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\n//\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nQuaternion.prototype.inverse = function ( ) {\n\n\tconsole.warn( 'THREE.Quaternion: .inverse() has been renamed to invert().' );\n\treturn this.invert();\n\n};\n\n//\n\nRay.prototype.isIntersectionBox = function ( box ) {\n\n\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\treturn this.intersectsBox( box );\n\n};\n\nRay.prototype.isIntersectionPlane = function ( plane ) {\n\n\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\treturn this.intersectsPlane( plane );\n\n};\n\nRay.prototype.isIntersectionSphere = function ( sphere ) {\n\n\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\treturn this.intersectsSphere( sphere );\n\n};\n\n//\n\nTriangle.prototype.area = function () {\n\n\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\treturn this.getArea();\n\n};\n\nTriangle.prototype.barycoordFromPoint = function ( point, target ) {\n\n\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\treturn this.getBarycoord( point, target );\n\n};\n\nTriangle.prototype.midpoint = function ( target ) {\n\n\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\treturn this.getMidpoint( target );\n\n};\n\nTriangle.prototypenormal = function ( target ) {\n\n\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\treturn this.getNormal( target );\n\n};\n\nTriangle.prototype.plane = function ( target ) {\n\n\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\treturn this.getPlane( target );\n\n};\n\nTriangle.barycoordFromPoint = function ( point, a, b, c, target ) {\n\n\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n};\n\nTriangle.normal = function ( a, b, c, target ) {\n\n\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\treturn Triangle.getNormal( a, b, c, target );\n\n};\n\n//\n\nShape.prototype.extractAllPoints = function ( divisions ) {\n\n\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\treturn this.extractPoints( divisions );\n\n};\n\nShape.prototype.extrude = function ( options ) {\n\n\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\treturn new ExtrudeGeometry( this, options );\n\n};\n\nShape.prototype.makeGeometry = function ( options ) {\n\n\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\treturn new ShapeGeometry( this, options );\n\n};\n\n//\n\nVector2.prototype.fromAttribute = function ( attribute, index, offset ) {\n\n\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\treturn this.fromBufferAttribute( attribute, index, offset );\n\n};\n\nVector2.prototype.distanceToManhattan = function ( v ) {\n\n\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\treturn this.manhattanDistanceTo( v );\n\n};\n\nVector2.prototype.lengthManhattan = function () {\n\n\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\treturn this.manhattanLength();\n\n};\n\n//\n\nVector3.prototype.setEulerFromRotationMatrix = function () {\n\n\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n};\n\nVector3.prototype.setEulerFromQuaternion = function () {\n\n\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n};\n\nVector3.prototype.getPositionFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\treturn this.setFromMatrixPosition( m );\n\n};\n\nVector3.prototype.getScaleFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\treturn this.setFromMatrixScale( m );\n\n};\n\nVector3.prototype.getColumnFromMatrix = function ( index, matrix ) {\n\n\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\treturn this.setFromMatrixColumn( matrix, index );\n\n};\n\nVector3.prototype.applyProjection = function ( m ) {\n\n\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\treturn this.applyMatrix4( m );\n\n};\n\nVector3.prototype.fromAttribute = function ( attribute, index, offset ) {\n\n\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\treturn this.fromBufferAttribute( attribute, index, offset );\n\n};\n\nVector3.prototype.distanceToManhattan = function ( v ) {\n\n\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\treturn this.manhattanDistanceTo( v );\n\n};\n\nVector3.prototype.lengthManhattan = function () {\n\n\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\treturn this.manhattanLength();\n\n};\n\n//\n\nVector4.prototype.fromAttribute = function ( attribute, index, offset ) {\n\n\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\treturn this.fromBufferAttribute( attribute, index, offset );\n\n};\n\nVector4.prototype.lengthManhattan = function () {\n\n\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\treturn this.manhattanLength();\n\n};\n\n//\n\nObject3D.prototype.getChildByName = function ( name ) {\n\n\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\treturn this.getObjectByName( name );\n\n};\n\nObject3D.prototype.renderDepth = function () {\n\n\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n};\n\nObject3D.prototype.translate = function ( distance, axis ) {\n\n\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\treturn this.translateOnAxis( axis, distance );\n\n};\n\nObject3D.prototype.getWorldRotation = function () {\n\n\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n};\n\nObject3D.prototype.applyMatrix = function ( matrix ) {\n\n\tconsole.warn( 'THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().' );\n\treturn this.applyMatrix4( matrix );\n\n};\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nMesh.prototype.setDrawMode = function () {\n\n\tconsole.error( 'THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n};\n\nObject.defineProperties( Mesh.prototype, {\n\n\tdrawMode: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.' );\n\t\t\treturn TrianglesDrawMode;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n\t\t}\n\t}\n\n} );\n\nSkinnedMesh.prototype.initBones = function () {\n\n\tconsole.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n\n};\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( 'THREE.PerspectiveCamera.setLens is deprecated. ' +\n\t\t\t'Use .setFocalLength and .filmGauge for a photographic setup.' );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tdynamic: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\treturn this.usage === DynamicDrawUsage;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\tthis.setUsage( DynamicDrawUsage );\n\n\t\t}\n\t}\n\n} );\n\nBufferAttribute.prototype.setDynamic = function ( value ) {\n\n\tconsole.warn( 'THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\treturn this;\n\n};\n\nBufferAttribute.prototype.copyIndicesArray = function ( /* indices */ ) {\n\n\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n},\n\nBufferAttribute.prototype.setArray = function ( /* array */ ) {\n\n\tconsole.error( 'THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n};\n\n//\n\nBufferGeometry.prototype.addIndex = function ( index ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\tthis.setIndex( index );\n\n};\n\nBufferGeometry.prototype.addAttribute = function ( name, attribute ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().' );\n\n\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\treturn this.setAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t}\n\n\tif ( name === 'index' ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\tthis.setIndex( attribute );\n\n\t\treturn this;\n\n\t}\n\n\treturn this.setAttribute( name, attribute );\n\n};\n\nBufferGeometry.prototype.addDrawCall = function ( start, count, indexOffset ) {\n\n\tif ( indexOffset !== undefined ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t}\n\n\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\tthis.addGroup( start, count );\n\n};\n\nBufferGeometry.prototype.clearDrawCalls = function () {\n\n\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\tthis.clearGroups();\n\n};\n\nBufferGeometry.prototype.computeOffsets = function () {\n\n\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n};\n\nBufferGeometry.prototype.removeAttribute = function ( name ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().' );\n\n\treturn this.deleteAttribute( name );\n\n};\n\nBufferGeometry.prototype.applyMatrix = function ( matrix ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().' );\n\treturn this.applyMatrix4( matrix );\n\n};\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\nInterleavedBuffer.prototype.setDynamic = function ( value ) {\n\n\tconsole.warn( 'THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\treturn this;\n\n};\n\nInterleavedBuffer.prototype.setArray = function ( /* array */ ) {\n\n\tconsole.error( 'THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n};\n\n//\n\nExtrudeGeometry.prototype.getArrays = function () {\n\n\tconsole.error( 'THREE.ExtrudeGeometry: .getArrays() has been removed.' );\n\n};\n\nExtrudeGeometry.prototype.addShapeList = function () {\n\n\tconsole.error( 'THREE.ExtrudeGeometry: .addShapeList() has been removed.' );\n\n};\n\nExtrudeGeometry.prototype.addShape = function () {\n\n\tconsole.error( 'THREE.ExtrudeGeometry: .addShape() has been removed.' );\n\n};\n\n//\n\nScene.prototype.dispose = function () {\n\n\tconsole.error( 'THREE.Scene: .dispose() has been removed.' );\n\n};\n\n//\n\nUniform.prototype.onUpdate = function () {\n\n\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\treturn this;\n\n};\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\n\toverdraw: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t}\n\t},\n\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t},\n\n\tstencilMask: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\treturn this.stencilFuncMask;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\tthis.stencilFuncMask = value;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nWebGLRenderer.prototype.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\tthis.setRenderTarget( renderTarget );\n\tthis.clear( color, depth, stencil );\n\n};\n\nWebGLRenderer.prototype.animate = function ( callback ) {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\tthis.setAnimationLoop( callback );\n\n};\n\nWebGLRenderer.prototype.getCurrentRenderTarget = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\treturn this.getRenderTarget();\n\n};\n\nWebGLRenderer.prototype.getMaxAnisotropy = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\treturn this.capabilities.getMaxAnisotropy();\n\n};\n\nWebGLRenderer.prototype.getPrecision = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\treturn this.capabilities.precision;\n\n};\n\nWebGLRenderer.prototype.resetGLState = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\treturn this.state.reset();\n\n};\n\nWebGLRenderer.prototype.supportsFloatTextures = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\treturn this.extensions.get( 'OES_texture_float' );\n\n};\n\nWebGLRenderer.prototype.supportsHalfFloatTextures = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\treturn this.extensions.get( 'OES_texture_half_float' );\n\n};\n\nWebGLRenderer.prototype.supportsStandardDerivatives = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n};\n\nWebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n};\n\nWebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n};\n\nWebGLRenderer.prototype.supportsBlendMinMax = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n};\n\nWebGLRenderer.prototype.supportsVertexTextures = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\treturn this.capabilities.vertexTextures;\n\n};\n\nWebGLRenderer.prototype.supportsInstancedArrays = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n};\n\nWebGLRenderer.prototype.enableScissorTest = function ( boolean ) {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\tthis.setScissorTest( boolean );\n\n};\n\nWebGLRenderer.prototype.initMaterial = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.addPrePlugin = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.addPostPlugin = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.updateShadowMap = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setFaceCulling = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.allocTextureUnit = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setTexture = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setTexture2D = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setTextureCube = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.getActiveMipMapLevel = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().' );\n\treturn this.getActiveMipmapLevel();\n\n};\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\tcontext: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.' );\n\t\t\treturn this.getContext();\n\n\t\t}\n\t},\n\tvr: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .vr has been renamed to .xr' );\n\t\t\treturn this.xr;\n\n\t\t}\n\t},\n\tgammaInput: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\n\t\t}\n\t},\n\tgammaOutput: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\tthis.outputEncoding = ( value === true ) ? sRGBEncoding : LinearEncoding;\n\n\t\t}\n\t},\n\ttoneMappingWhitePoint: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\t\t\treturn 1.0;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\n\t\t}\n\t},\n\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tconsole.warn( 'THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).' );\n\treturn new WebGLCubeRenderTarget( width, options );\n\n}\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tconst scope = this;\n\tconst audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\nCubeCamera.prototype.clear = function ( renderer, color, depth, stencil ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .clear() is now .renderTarget.clear().' );\n\treturn this.renderTarget.clear( renderer, color, depth, stencil );\n\n};\n\nImageUtils.crossOrigin = undefined;\n\nImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\tconst loader = new TextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tconst texture = loader.load( url, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\tconst loader = new CubeTextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tconst texture = loader.load( urls, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadCompressedTexture = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\nImageUtils.loadCompressedTextureCube = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n}\n\n//\n\nfunction JSONLoader() {\n\n\tconsole.error( 'THREE.JSONLoader has been removed.' );\n\n}\n\n//\n\nconst SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js' );\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t/* eslint-disable no-undef */\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\t/* eslint-enable no-undef */\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, AxisHelper, BackSide, BasicDepthPacking, BasicShadowMap, BinaryTextureLoader, Bone, BooleanKeyframeTrack, BoundingBoxHelper, Box2, Box3, Box3Helper, BoxGeometry as BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasRenderer, CanvasTexture, CatmullRomCurve3, CineonToneMapping, CircleGeometry as CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, CompressedTexture, CompressedTextureLoader, ConeGeometry as ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubeUVRefractionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry as CylinderBufferGeometry, CylinderGeometry, Cylindrical, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry as DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicBufferAttribute, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EdgesHelper, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry as ExtrudeBufferGeometry, ExtrudeGeometry, FaceColors, FileLoader, FlatShading, Float16BufferAttribute, Float32Attribute, Float32BufferAttribute, Float64Attribute, Float64BufferAttribute, FloatType, Fog, FogExp2, Font, FontLoader, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GammaEncoding, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry as IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16Attribute, Int16BufferAttribute, Int32Attribute, Int32BufferAttribute, Int8Attribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, JSONLoader, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry as LatheBufferGeometry, LatheGeometry, Layers, LensFlare, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LinePieces, LineSegments, LineStrip, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LogLuvEncoding, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils as Math, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshFaceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiMaterial, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColors, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry as OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, ParametricGeometry as ParametricBufferGeometry, ParametricGeometry, Particle, ParticleBasicMaterial, ParticleSystem, ParticleSystemMaterial, Path, PerspectiveCamera, Plane, PlaneGeometry as PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointCloud, PointCloudMaterial, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry as PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBDEncoding, RGBEEncoding, RGBEFormat, RGBFormat, RGBIntegerFormat, RGBM16Encoding, RGBM7Encoding, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry as RingBufferGeometry, RingGeometry, SRGB8_ALPHA8_ASTC_10x10_Format, SRGB8_ALPHA8_ASTC_10x5_Format, SRGB8_ALPHA8_ASTC_10x6_Format, SRGB8_ALPHA8_ASTC_10x8_Format, SRGB8_ALPHA8_ASTC_12x10_Format, SRGB8_ALPHA8_ASTC_12x12_Format, SRGB8_ALPHA8_ASTC_4x4_Format, SRGB8_ALPHA8_ASTC_5x4_Format, SRGB8_ALPHA8_ASTC_5x5_Format, SRGB8_ALPHA8_ASTC_6x5_Format, SRGB8_ALPHA8_ASTC_6x6_Format, SRGB8_ALPHA8_ASTC_8x5_Format, SRGB8_ALPHA8_ASTC_8x6_Format, SRGB8_ALPHA8_ASTC_8x8_Format, Scene, SceneUtils, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry as ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, SmoothShading, Sphere, SphereGeometry as SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry as TetrahedronBufferGeometry, TetrahedronGeometry, TextGeometry as TextBufferGeometry, TextGeometry, Texture, TextureLoader, TorusGeometry as TorusBufferGeometry, TorusGeometry, TorusKnotGeometry as TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry as TubeBufferGeometry, TubeGeometry, UVMapping, Uint16Attribute, Uint16BufferAttribute, Uint32Attribute, Uint32BufferAttribute, Uint8Attribute, Uint8BufferAttribute, Uint8ClampedAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, Vertex, VertexColors, VideoTexture, WebGL1Renderer, WebGLCubeRenderTarget, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderTargetCube, WebGLRenderer, WebGLUtils, WireframeGeometry, WireframeHelper, WrapAroundEnding, XHRLoader, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, sRGBEncoding };\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart );\n\t\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd );\n\t\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove );\n\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t\t// no-op\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly( event ) {\n\n\t\t\tconst dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tconst dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tconst dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t\t// no-op\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.pointerType ) {\n\n\t\t\t\tcase 'mouse':\n\t\t\t\tcase 'pen':\n\t\t\t\t\tonMouseDown( event );\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO touch\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.pointerType ) {\n\n\t\t\t\tcase 'mouse':\n\t\t\t\tcase 'pen':\n\t\t\t\t\tonMouseMove( event );\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO touch\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tswitch ( event.pointerType ) {\n\n\t\t\t\tcase 'mouse':\n\t\t\t\tcase 'pen':\n\t\t\t\t\tonMouseUp( event );\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO touch\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\t// Prevent the browser from scrolling.\n\t\t\tevent.preventDefault();\n\n\t\t\t// Manually set the focus since calling preventDefault above\n\t\t\t// prevents the browser from setting it automatically.\n\n\t\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseUp( event ) {\n\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\thandleMouseUp( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault(); // prevent scrolling\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault(); // prevent scrolling\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchEnd( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\thandleTouchEnd( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\tscope.domElement.addEventListener( 'touchstart', onTouchStart, { passive: false } );\n\t\tscope.domElement.addEventListener( 'touchend', onTouchEnd );\n\t\tscope.domElement.addEventListener( 'touchmove', onTouchMove, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n","import {\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tLineSegments,\n\tLineBasicMaterial,\n\tMatrix3,\n\tVector3\n} from 'three';\n\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\nconst _normalMatrix = new Matrix3();\n\nclass VertexNormalsHelper extends LineSegments {\n\n\tconstructor( object, size = 1, color = 0xff0000 ) {\n\n\t\tlet nNormals = 0;\n\n\t\tconst objGeometry = object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.VertexNormalsHelper no longer supports Geometry. Use BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t\t}\n\n\t\t//\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.setAttribute( 'position', positions );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.size = size;\n\t\tthis.type = 'VertexNormalsHelper';\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\t_normalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tconst matrixWorld = this.object.matrixWorld;\n\n\t\tconst position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tconst objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.VertexNormalsHelper no longer supports Geometry. Use BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tconst objPos = objGeometry.attributes.position;\n\n\t\t\tconst objNorm = objGeometry.attributes.normal;\n\n\t\t\tlet idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( let j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\t_v1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\t_v2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\t_v2.applyMatrix3( _normalMatrix ).normalize().multiplyScalar( this.size ).add( _v1 );\n\n\t\t\t\tposition.setXYZ( idx, _v1.x, _v1.y, _v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, _v2.x, _v2.y, _v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t}\n\n}\n\n\nexport { VertexNormalsHelper };\n","/**\n * Flatten the given list of arguments into a single flat array.\n * The arguments can be composed of multiple depths of objects and arrays.\n * @param {Array} arr - list of arguments\n * @returns {Array} a flat list of arguments\n * @alias module:modeling/utils.flatten\n */\nconst flatten = (arr) => arr.reduce((acc, val) => Array.isArray(val) ? acc.concat(flatten(val)) : acc.concat(val), [])\n\nmodule.exports = flatten\n","/**\n * Represents a 4x4 matrix which is column-major (when typed out it looks row-major).\n * See fromValues().\n * @typedef {Array} mat4\n */\n\n/**\n * Creates a new identity matrix\n *\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.create\n */\nconst create = () => [\n  1, 0, 0, 0,\n  0, 1, 0, 0,\n  0, 0, 1, 0,\n  0, 0, 0, 1\n]\n\nmodule.exports = create\n","const create = require('./create')\n\n/**\n * Adds the two matrices.\n *\n * @param {mat4} [out] - the receiving matrix\n * @param {mat4} a - the first operand\n * @param {mat4} b - the second operand\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.add\n */\nconst add = (...params) => {\n  let out\n  let a\n  let b\n  if (params.length === 2) {\n    out = create()\n    a = params[0]\n    b = params[1]\n  } else {\n    out = params[0]\n    a = params[1]\n    b = params[2]\n  }\n  out[0] = a[0] + b[0]\n  out[1] = a[1] + b[1]\n  out[2] = a[2] + b[2]\n  out[3] = a[3] + b[3]\n  out[4] = a[4] + b[4]\n  out[5] = a[5] + b[5]\n  out[6] = a[6] + b[6]\n  out[7] = a[7] + b[7]\n  out[8] = a[8] + b[8]\n  out[9] = a[9] + b[9]\n  out[10] = a[10] + b[10]\n  out[11] = a[11] + b[11]\n  out[12] = a[12] + b[12]\n  out[13] = a[13] + b[13]\n  out[14] = a[14] + b[14]\n  out[15] = a[15] + b[15]\n  return out\n}\n\nmodule.exports = add\n","const create = require('./create')\n\n/**\n * Creates a clone of the given matrix.\n *\n * @param {mat4} [out] - receiving matrix\n * @param {mat4} matrix - matrix to clone\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.clone\n */\nconst clone = (...params) => {\n  let out, a\n  if (params.length === 1) {\n    out = create()\n    a = params[0]\n  } else {\n    out = params[0]\n    a = params[1]\n  }\n  out[0] = a[0]\n  out[1] = a[1]\n  out[2] = a[2]\n  out[3] = a[3]\n  out[4] = a[4]\n  out[5] = a[5]\n  out[6] = a[6]\n  out[7] = a[7]\n  out[8] = a[8]\n  out[9] = a[9]\n  out[10] = a[10]\n  out[11] = a[11]\n  out[12] = a[12]\n  out[13] = a[13]\n  out[14] = a[14]\n  out[15] = a[15]\n  return out\n}\n\nmodule.exports = clone\n","/**\n * Returns whether or not the matrices have exactly the same elements in the same position.\n *\n * @param {mat4} a - the first matrix\n * @param {mat4} b - the second matrix\n * @returns {Boolean} true if the matrices are equal\n * @alias module:modeling/maths/mat4.equals\n */\nconst equals = (a, b) => (\n  a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\n  a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] &&\n  a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&\n  a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15]\n)\n\nmodule.exports = equals\n","const create = require('./create')\n\n/**\n * Set a matrix to the identity matrix.\n *\n * @param {mat4} [out] - the receiving matrix\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.identity\n */\nconst identity = (...params) => {\n  let out\n  if (params.length === 1) {\n    out = params[0]\n  } else {\n    out = create()\n  }\n  out[0] = 1\n  out[1] = 0\n  out[2] = 0\n  out[3] = 0\n  out[4] = 0\n  out[5] = 1\n  out[6] = 0\n  out[7] = 0\n  out[8] = 0\n  out[9] = 0\n  out[10] = 1\n  out[11] = 0\n  out[12] = 0\n  out[13] = 0\n  out[14] = 0\n  out[15] = 1\n  return out\n}\n\nmodule.exports = identity\n","const EPSILON = 0.000001\n\nmodule.exports = {\n  EPSILON\n}\n","const create = require('./create')\nconst identity = require('./identity')\n\nconst { EPSILON } = require('./constants')\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} [out] - mat4 receiving operation result\n * @param {Number} rad - the angle to rotate the matrix by\n * @param {vec3} axis - the axis of which to rotate around\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.fromRotation\n * @example\n * let matrix = fromRotation(Math.PI / 2, [0, 0, 3])\n */\nconst fromRotation = (...params) => {\n  let out\n  let rad\n  let axis\n\n  if (params.length === 2) {\n    out = create()\n    rad = params[0]\n    axis = params[1]\n  } else {\n    out = params[0]\n    rad = params[1]\n    axis = params[2]\n  }\n  let [x, y, z] = axis\n  let len = Math.sqrt(x * x + y * y + z * z)\n\n  if (Math.abs(len) < EPSILON) {\n    // axis is 0,0,0 or almost\n    return identity(out)\n  }\n\n  len = 1 / len\n  x *= len\n  y *= len\n  z *= len\n\n  const s = Math.sin(rad)\n  const c = Math.cos(rad)\n  const t = 1 - c\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c\n  out[1] = y * x * t + z * s\n  out[2] = z * x * t - y * s\n  out[3] = 0\n  out[4] = x * y * t - z * s\n  out[5] = y * y * t + c\n  out[6] = z * y * t + x * s\n  out[7] = 0\n  out[8] = x * z * t + y * s\n  out[9] = y * z * t - x * s\n  out[10] = z * z * t + c\n  out[11] = 0\n  out[12] = 0\n  out[13] = 0\n  out[14] = 0\n  out[15] = 1\n  return out\n}\n\nmodule.exports = fromRotation\n","const create = require('./create')\n\n/**\n * Creates a matrix from a vector scaling.\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} [out] - mat4 receiving operation result\n * @param {vec3} vec - X, Y, Z factors by which to scale\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.fromScaling\n * @example\n * let matrix = fromScaling([1, 2, 0.5])\n */\nconst fromScaling = (...params) => {\n  let out\n  let v\n  if (params.length === 1) {\n    out = create()\n    v = params[0]\n  } else {\n    out = params[0]\n    v = params[1]\n  }\n  out[0] = v[0]\n  out[1] = 0\n  out[2] = 0\n  out[3] = 0\n  out[4] = 0\n  out[5] = v[1]\n  out[6] = 0\n  out[7] = 0\n  out[8] = 0\n  out[9] = 0\n  out[10] = v[2]\n  out[11] = 0\n  out[12] = 0\n  out[13] = 0\n  out[14] = 0\n  out[15] = 1\n  return out\n}\n\nmodule.exports = fromScaling\n","\nconst clone = require('./clone')\n\n/**\n * Creates a matrix from the given Tait–Bryan angles.\n * Tait-Bryan Euler angle convention using active, intrinsic rotations around the axes in the order z-y-x.\n * @see https://en.wikipedia.org/wiki/Euler_angles\n * @param {Number} yaw - Z rotation in radians\n * @param {Number} pitch - Y rotation in radians\n * @param {Number} roll - X rotation in radians\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.fromTaitBryanRotation\n * @example\n * let matrix = fromTaitBryanRotation(Math.PI / 2, 0, Math.PI)\n */\nconst fromTaitBryanRotation = (yaw, pitch, roll) => {\n  // precompute sines and cosines of Euler angles\n  const sy = Math.sin(yaw)\n  const cy = Math.cos(yaw)\n  const sp = Math.sin(pitch)\n  const cp = Math.cos(pitch)\n  const sr = Math.sin(roll)\n  const cr = Math.cos(roll)\n\n  // create and populate rotation matrix\n  // left-hand-rule rotation\n  // const els = [\n  //  cp*cy, sr*sp*cy - cr*sy, sr*sy + cr*sp*cy, 0,\n  //  cp*sy, cr*cy + sr*sp*sy, cr*sp*sy - sr*cy, 0,\n  //  -sp, sr*cp, cr*cp, 0,\n  //  0, 0, 0, 1\n  // ]\n  // right-hand-rule rotation\n  const els = [\n    cp * cy, cp * sy, -sp, 0,\n    sr * sp * cy - cr * sy, cr * cy + sr * sp * sy, sr * cp, 0,\n    sr * sy + cr * sp * cy, cr * sp * sy - sr * cy, cr * cp, 0,\n    0, 0, 0, 1\n  ]\n  return clone(els)\n}\n\nmodule.exports = fromTaitBryanRotation\n","const create = require('./create')\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} [out] - mat4 receiving operation result\n * @param {vec3} vec - offset (vector) of translation\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.fromTranslation\n * @example\n * let matrix = fromTranslation([1, 2, 3])\n */\nconst fromTranslation = (...params) => {\n  let out\n  let v\n  if (params.length === 1) {\n    out = create()\n    v = params[0]\n  } else {\n    out = params[0]\n    v = params[1]\n  }\n  out[0] = 1\n  out[1] = 0\n  out[2] = 0\n  out[3] = 0\n  out[4] = 0\n  out[5] = 1\n  out[6] = 0\n  out[7] = 0\n  out[8] = 0\n  out[9] = 0\n  out[10] = 1\n  out[11] = 0\n  out[12] = v[0]\n  out[13] = v[1]\n  out[14] = v[2]\n  out[15] = 1\n  return out\n}\n\nmodule.exports = fromTranslation\n","const create = require('./create')\n\n/**\n * Create a matrix with the given values.\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.fromValues\n * @example\n * let matrix = fromValues(\n *   1, 0, 0, 1,\n *   0, 1, 0, 0,\n *   0, 0, 1, 0,\n *   0, 0, 0, 1\n * )\n */\nconst fromValues = (m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) => {\n  const out = create()\n  out[0] = m00\n  out[1] = m01\n  out[2] = m02\n  out[3] = m03\n  out[4] = m10\n  out[5] = m11\n  out[6] = m12\n  out[7] = m13\n  out[8] = m20\n  out[9] = m21\n  out[10] = m22\n  out[11] = m23\n  out[12] = m30\n  out[13] = m31\n  out[14] = m32\n  out[15] = m33\n  return out\n}\n\nmodule.exports = fromValues\n","const create = require('./create')\n\n/**\n * Creates a matrix from the given angle around the X axis.\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} [out] - mat4 receiving operation result\n * @param {Number} rad - the angle to rotate the matrix by\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.fromXRotation\n * @example\n * let matrix = fromXRotation(Math.PI / 2)\n */\nconst fromXRotation = (...params) => {\n  let out\n  let rad\n  if (params.length === 1) {\n    out = create()\n    rad = params[0]\n  } else {\n    out = params[0]\n    rad = params[1]\n  }\n  const s = Math.sin(rad)\n  const c = Math.cos(rad)\n\n  // Perform axis-specific matrix multiplication\n  out[0] = 1\n  out[1] = 0\n  out[2] = 0\n  out[3] = 0\n  out[4] = 0\n  out[5] = c\n  out[6] = s\n  out[7] = 0\n  out[8] = 0\n  out[9] = -s\n  out[10] = c\n  out[11] = 0\n  out[12] = 0\n  out[13] = 0\n  out[14] = 0\n  out[15] = 1\n  return out\n}\n\nmodule.exports = fromXRotation\n","const create = require('./create')\n\n/**\n * Creates a matrix from the given angle around the Y axis.\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} [out] - mat4 receiving operation result\n * @param {Number} rad - the angle to rotate the matrix by\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.fromYRotation\n * @example\n * let matrix = fromYRotation(Math.PI / 2)\n */\nconst fromYRotation = (...params) => {\n  let out\n  let rad\n  if (params.length === 1) {\n    out = create()\n    rad = params[0]\n  } else {\n    out = params[0]\n    rad = params[1]\n  }\n  const s = Math.sin(rad)\n  const c = Math.cos(rad)\n\n  // Perform axis-specific matrix multiplication\n  out[0] = c\n  out[1] = 0\n  out[2] = -s\n  out[3] = 0\n  out[4] = 0\n  out[5] = 1\n  out[6] = 0\n  out[7] = 0\n  out[8] = s\n  out[9] = 0\n  out[10] = c\n  out[11] = 0\n  out[12] = 0\n  out[13] = 0\n  out[14] = 0\n  out[15] = 1\n  return out\n}\n\nmodule.exports = fromYRotation\n","const create = require('./create')\n\n/**\n * Creates a matrix from the given angle around the Z axis.\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} [out] - mat4 receiving operation result\n * @param {Number} rad - the angle to rotate the matrix by\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.fromZRotation\n * @example\n * let matrix = fromZRotation(Math.PI / 2)\n */\nconst fromZRotation = (...params) => {\n  let out\n  let rad\n  if (params.length === 1) {\n    out = create()\n    rad = params[0]\n  } else {\n    out = params[0]\n    rad = params[1]\n  }\n  const s = Math.sin(rad)\n  const c = Math.cos(rad)\n\n  // Perform axis-specific matrix multiplication\n  out[0] = c\n  out[1] = s\n  out[2] = 0\n  out[3] = 0\n  out[4] = -s\n  out[5] = c\n  out[6] = 0\n  out[7] = 0\n  out[8] = 0\n  out[9] = 0\n  out[10] = 1\n  out[11] = 0\n  out[12] = 0\n  out[13] = 0\n  out[14] = 0\n  out[15] = 1\n  return out\n}\n\nmodule.exports = fromZRotation\n","/**\n * Represents a three dimensional vector.\n * See fromValues().\n * @typedef {Array} vec3\n */\n\n/**\n * Creates a new vector initialized to [0,0,0].\n *\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.create\n */\nconst create = () => [0, 0, 0]\n\nmodule.exports = create\n","const create = require('./create')\n\n/**\n * Computes the cross product of the given vectors.\n *\n * @param {vec3} [out] - the receiving vector\n * @param {vec3} a - the first operand\n * @param {vec3} b - the second operand\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.cross\n */\nconst cross = (...params) => {\n  let out\n  let a\n  let b\n  if (params.length === 2) {\n    out = create()\n    a = params[0]\n    b = params[1]\n  } else {\n    out = params[0]\n    a = params[1]\n    b = params[2]\n  }\n  const ax = a[0]\n  const ay = a[1]\n  const az = a[2]\n  const bx = b[0]\n  const by = b[1]\n  const bz = b[2]\n\n  out[0] = ay * bz - az * by\n  out[1] = az * bx - ax * bz\n  out[2] = ax * by - ay * bx\n  return out\n}\n\nmodule.exports = cross\n","/**\n * Calculates the dot product of two vectors.\n *\n * @param {vec3} a - the first operand\n * @param {vec3} b - the second operand\n * @returns {Number} dot product\n * @alias module:modeling/maths/vec3.dot\n */\nconst dot = (a, b) => a[0] * b[0] + a[1] * b[1] + a[2] * b[2]\n\nmodule.exports = dot\n","const cross = require('../vec3/cross')\nconst dot = require('../vec3/dot')\n\n/**\n * Determine whether the given matrix is a mirroring transformation.\n *\n * @param {mat4} matrix - the matrix\n * @returns {Boolean} true if matrix is a mirroring transformation\n * @alias module:modeling/maths/mat4.isMirroring\n */\nconst isMirroring = (mat) => {\n  const u = [mat[0], mat[4], mat[8]]\n  const v = [mat[1], mat[5], mat[9]]\n  const w = [mat[2], mat[6], mat[10]]\n\n  // for a true orthogonal, non-mirrored base, u.cross(v) == w\n  // If they have an opposite direction then we are mirroring\n  const mirrorvalue = dot(cross(u, v), w)\n  const ismirror = (mirrorvalue < 0)\n  return ismirror\n}\n\nmodule.exports = isMirroring\n","const create = require('./create')\n\n/**\n * Create a matrix for mirroring onto an arbitrary plane.\n *\n * @param {mat4} [out] - receiving matrix\n * @param {vec4} plane - plane of which to mirror the matrix\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.mirrorByPlane\n */\nconst mirrorByPlane = (...params) => {\n  let out\n  let plane\n  if (params.length === 1) {\n    out = create()\n    plane = params[0]\n  } else {\n    out = params[0]\n    plane = params[1]\n  }\n  const [nx, ny, nz, w] = plane\n\n  out[0] = (1.0 - 2.0 * nx * nx)\n  out[1] = (-2.0 * ny * nx)\n  out[2] = (-2.0 * nz * nx)\n  out[3] = 0\n  out[4] = (-2.0 * nx * ny)\n  out[5] = (1.0 - 2.0 * ny * ny)\n  out[6] = (-2.0 * nz * ny)\n  out[7] = 0\n  out[8] = (-2.0 * nx * nz)\n  out[9] = (-2.0 * ny * nz)\n  out[10] = (1.0 - 2.0 * nz * nz)\n  out[11] = 0\n  out[12] = (2.0 * nx * w)\n  out[13] = (2.0 * ny * w)\n  out[14] = (2.0 * nz * w)\n  out[15] = 1\n\n  return out\n}\n\nmodule.exports = mirrorByPlane\n","const create = require('./create')\n\n/**\n * Multiplies the two matrices.\n *\n * @param {mat4} [out] - the receiving matrix\n * @param {mat4} a - the first operand\n * @param {mat4} b - the second operand\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.multiply\n */\nconst multiply = (...params) => {\n  let out\n  let a\n  let b\n  if (params.length === 2) {\n    out = create()\n    a = params[0]\n    b = params[1]\n  } else {\n    out = params[0]\n    a = params[1]\n    b = params[2]\n  }\n  const a00 = a[0]\n  const a01 = a[1]\n  const a02 = a[2]\n  const a03 = a[3]\n  const a10 = a[4]\n  const a11 = a[5]\n  const a12 = a[6]\n  const a13 = a[7]\n  const a20 = a[8]\n  const a21 = a[9]\n  const a22 = a[10]\n  const a23 = a[11]\n  const a30 = a[12]\n  const a31 = a[13]\n  const a32 = a[14]\n  const a33 = a[15]\n\n  // Cache only the current line of the second matrix\n  let b0 = b[0]\n  let b1 = b[1]\n  let b2 = b[2]\n  let b3 = b[3]\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n\n  b0 = b[4]\n  b1 = b[5]\n  b2 = b[6]\n  b3 = b[7]\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n\n  b0 = b[8]\n  b1 = b[9]\n  b2 = b[10]\n  b3 = b[11]\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n\n  b0 = b[12]\n  b1 = b[13]\n  b2 = b[14]\n  b3 = b[15]\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n  return out\n}\n\nmodule.exports = multiply\n","const create = require('./create')\nconst clone = require('./clone')\n\n/**\n * Rotates a matrix by the given angle about the given axis.\n *\n * @param {mat4} [out] - the receiving matrix\n * @param {Number} rad - the angle to rotate the matrix by\n * @param {vec3} axis - the axis to rotate around\n * @param {mat4} matrix - the matrix to rotate\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.rotate\n */\nconst rotate = (...params) => {\n  let out\n  let matrix\n  let rad\n  let axis\n  if (params.length === 3) {\n    out = create()\n    rad = params[0]\n    axis = params[1]\n    matrix = params[2]\n  } else {\n    out = params[0]\n    rad = params[1]\n    axis = params[2]\n    matrix = params[3]\n  }\n\n  let [x, y, z] = axis\n  let len = Math.sqrt(x * x + y * y + z * z)\n\n  if (Math.abs(len) < 0.000001) {\n    // axis is 0,0,0 or almost\n    return clone(out, matrix)\n  }\n\n  len = 1 / len\n  x *= len\n  y *= len\n  z *= len\n\n  const s = Math.sin(rad)\n  const c = Math.cos(rad)\n  const t = 1 - c\n\n  const a00 = matrix[0]\n  const a01 = matrix[1]\n  const a02 = matrix[2]\n  const a03 = matrix[3]\n  const a10 = matrix[4]\n  const a11 = matrix[5]\n  const a12 = matrix[6]\n  const a13 = matrix[7]\n  const a20 = matrix[8]\n  const a21 = matrix[9]\n  const a22 = matrix[10]\n  const a23 = matrix[11]\n\n  // Construct the elements of the rotation matrix\n  const b00 = x * x * t + c\n  const b01 = y * x * t + z * s\n  const b02 = z * x * t - y * s\n  const b10 = x * y * t - z * s\n  const b11 = y * y * t + c\n  const b12 = z * y * t + x * s\n  const b20 = x * z * t + y * s\n  const b21 = y * z * t - x * s\n  const b22 = z * z * t + c\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22\n\n  if (matrix !== out) { // If the source and destination differ, copy the unchanged last row\n    out[12] = matrix[12]\n    out[13] = matrix[13]\n    out[14] = matrix[14]\n    out[15] = matrix[15]\n  }\n  return out\n}\n\nmodule.exports = rotate\n","const create = require('./create')\n\n/**\n * Rotates a matrix by the given angle around the X axis.\n *\n * @param {mat4} [out] - the receiving matrix\n * @param {Number} angle - the angle to rotate the matrix by (in radian)\n * @param {mat4} matrix - the matrix to rotate\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.rotateX\n */\nconst rotateX = (...params) => {\n  let out\n  let angle\n  let matrix\n  if (params.length === 2) {\n    out = create()\n    angle = params[0]\n    matrix = params[1]\n  } else {\n    out = params[0]\n    angle = params[1]\n    matrix = params[2]\n  }\n\n  const s = Math.sin(angle)\n  const c = Math.cos(angle)\n  const a10 = matrix[4]\n  const a11 = matrix[5]\n  const a12 = matrix[6]\n  const a13 = matrix[7]\n  const a20 = matrix[8]\n  const a21 = matrix[9]\n  const a22 = matrix[10]\n  const a23 = matrix[11]\n\n  if (matrix !== out) { // If the source and destination differ, copy the unchanged rows\n    out[0] = matrix[0]\n    out[1] = matrix[1]\n    out[2] = matrix[2]\n    out[3] = matrix[3]\n    out[12] = matrix[12]\n    out[13] = matrix[13]\n    out[14] = matrix[14]\n    out[15] = matrix[15]\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s\n  out[5] = a11 * c + a21 * s\n  out[6] = a12 * c + a22 * s\n  out[7] = a13 * c + a23 * s\n  out[8] = a20 * c - a10 * s\n  out[9] = a21 * c - a11 * s\n  out[10] = a22 * c - a12 * s\n  out[11] = a23 * c - a13 * s\n  return out\n}\n\nmodule.exports = rotateX\n","const create = require('./create')\n\n/**\n * Rotates a matrix by the given angle around the Y axis.\n *\n * @param {mat4} [out] - the receiving matrix\n * @param {Number} angle - the angle to rotate the matrix by (in radian)\n * @param {mat4} matrix - the matrix to rotate\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.rotateY\n */\nconst rotateY = (...params) => {\n  let out\n  let angle\n  let matrix\n  if (params.length === 2) {\n    out = create()\n    angle = params[0]\n    matrix = params[1]\n  } else {\n    out = params[0]\n    angle = params[1]\n    matrix = params[2]\n  }\n  const s = Math.sin(angle)\n  const c = Math.cos(angle)\n  const a00 = matrix[0]\n  const a01 = matrix[1]\n  const a02 = matrix[2]\n  const a03 = matrix[3]\n  const a20 = matrix[8]\n  const a21 = matrix[9]\n  const a22 = matrix[10]\n  const a23 = matrix[11]\n\n  if (matrix !== out) { // If the source and destination differ, copy the unchanged rows\n    out[4] = matrix[4]\n    out[5] = matrix[5]\n    out[6] = matrix[6]\n    out[7] = matrix[7]\n    out[12] = matrix[12]\n    out[13] = matrix[13]\n    out[14] = matrix[14]\n    out[15] = matrix[15]\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s\n  out[1] = a01 * c - a21 * s\n  out[2] = a02 * c - a22 * s\n  out[3] = a03 * c - a23 * s\n  out[8] = a00 * s + a20 * c\n  out[9] = a01 * s + a21 * c\n  out[10] = a02 * s + a22 * c\n  out[11] = a03 * s + a23 * c\n  return out\n}\n\nmodule.exports = rotateY\n","const create = require('./create')\n\n/**\n * Rotates a matrix by the given angle around the Y axis.\n *\n * @param {mat4} [out] - the receiving matrix\n * @param {Number} angle - the angle to rotate the matrix by (in radian)\n * @param {mat4} matrix - the matrix to rotate\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.rotateZ\n */\nconst rotateZ = (...params) => {\n  let out\n  let angle\n  let matrix\n  if (params.length === 2) {\n    out = create()\n    angle = params[0]\n    matrix = params[1]\n  } else {\n    out = params[0]\n    angle = params[1]\n    matrix = params[2]\n  }\n  const s = Math.sin(angle)\n  const c = Math.cos(angle)\n  const a00 = matrix[0]\n  const a01 = matrix[1]\n  const a02 = matrix[2]\n  const a03 = matrix[3]\n  const a10 = matrix[4]\n  const a11 = matrix[5]\n  const a12 = matrix[6]\n  const a13 = matrix[7]\n\n  if (matrix !== out) { // If the source and destination differ, copy the unchanged last row\n    out[8] = matrix[8]\n    out[9] = matrix[9]\n    out[10] = matrix[10]\n    out[11] = matrix[11]\n    out[12] = matrix[12]\n    out[13] = matrix[13]\n    out[14] = matrix[14]\n    out[15] = matrix[15]\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s\n  out[1] = a01 * c + a11 * s\n  out[2] = a02 * c + a12 * s\n  out[3] = a03 * c + a13 * s\n  out[4] = a10 * c - a00 * s\n  out[5] = a11 * c - a01 * s\n  out[6] = a12 * c - a02 * s\n  out[7] = a13 * c - a03 * s\n  return out\n}\n\nmodule.exports = rotateZ\n","const create = require('./create')\n\n/**\n * Scales the matrix by the given dimensions.\n *\n * @param {mat4} [out] - the receiving matrix\n * @param {vec3} dimensions - the dimensions to scale the matrix by\n * @param {mat4} matrix - the matrix to scale\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.scale\n */\nconst scale = (...params) => {\n  let out\n  let vector\n  let matrix\n\n  if (params.length === 2) {\n    out = create()\n    vector = params[0]\n    matrix = params[1]\n  } else {\n    out = params[0]\n    vector = params[1]\n    matrix = params[2]\n  }\n\n  const x = vector[0]\n  const y = vector[1]\n  const z = vector[2]\n\n  out[0] = matrix[0] * x\n  out[1] = matrix[1] * x\n  out[2] = matrix[2] * x\n  out[3] = matrix[3] * x\n  out[4] = matrix[4] * y\n  out[5] = matrix[5] * y\n  out[6] = matrix[6] * y\n  out[7] = matrix[7] * y\n  out[8] = matrix[8] * z\n  out[9] = matrix[9] * z\n  out[10] = matrix[10] * z\n  out[11] = matrix[11] * z\n  out[12] = matrix[12]\n  out[13] = matrix[13]\n  out[14] = matrix[14]\n  out[15] = matrix[15]\n  return out\n}\n\nmodule.exports = scale\n","const create = require('./create')\n\n/**\n * Subtracts matrix b from matrix a.\n *\n * @param {mat4} [out] - the receiving matrix\n * @param {mat4} a - the first operand\n * @param {mat4} b - the second operand\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.subtract\n */\nconst subtract = (...params) => {\n  let out\n  let a\n  let b\n  if (params.length === 2) {\n    out = create()\n    a = params[0]\n    b = params[1]\n  } else {\n    out = params[0]\n    a = params[1]\n    b = params[2]\n  }\n  out[0] = a[0] - b[0]\n  out[1] = a[1] - b[1]\n  out[2] = a[2] - b[2]\n  out[3] = a[3] - b[3]\n  out[4] = a[4] - b[4]\n  out[5] = a[5] - b[5]\n  out[6] = a[6] - b[6]\n  out[7] = a[7] - b[7]\n  out[8] = a[8] - b[8]\n  out[9] = a[9] - b[9]\n  out[10] = a[10] - b[10]\n  out[11] = a[11] - b[11]\n  out[12] = a[12] - b[12]\n  out[13] = a[13] - b[13]\n  out[14] = a[14] - b[14]\n  out[15] = a[15] - b[15]\n  return out\n}\n\nmodule.exports = subtract\n","/**\n * Return a string representing the given matrix.\n *\n * @param {mat4} matrix - the matrix of reference\n * @returns {String} string representation\n * @alias module:modeling/maths/mat4.toString\n */\nconst toString = (mat) => `[${mat[0].toFixed(7)}, ${mat[1].toFixed(7)}, ${mat[2].toFixed(7)}, ${mat[3].toFixed(7)}, ${mat[4].toFixed(7)}, ${mat[5].toFixed(7)}, ${mat[6].toFixed(7)}, ${mat[7].toFixed(7)}, ${mat[8].toFixed(7)}, ${mat[9].toFixed(7)}, ${mat[10].toFixed(7)}, ${mat[11].toFixed(7)}, ${mat[12].toFixed(7)}, ${mat[13].toFixed(7)}, ${mat[14].toFixed(7)}, ${mat[15].toFixed(7)}]`\n\nmodule.exports = toString\n","const create = require('./create')\n\n/**\n * Translate the matrix by the given offset vector.\n *\n * @param {mat4} [out] - the receiving matrix\n * @param {vec3} offsets - offset vector to translate by\n * @param {mat4} matrix - the matrix to translate\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.translate\n */\nconst translate = (...params) => {\n  let out\n  let vector\n  let matrix\n  if (params.length === 2) {\n    out = create()\n    vector = params[0]\n    matrix = params[1]\n  } else {\n    out = params[0]\n    vector = params[1]\n    matrix = params[2]\n  }\n  const x = vector[0]\n  const y = vector[1]\n  const z = vector[2]\n  let a00\n  let a01\n  let a02\n  let a03\n  let a10\n  let a11\n  let a12\n  let a13\n  let a20\n  let a21\n  let a22\n  let a23\n\n  if (matrix === out) {\n  // 0-11 assignments are unnecessary\n    out[12] = matrix[0] * x + matrix[4] * y + matrix[8] * z + matrix[12]\n    out[13] = matrix[1] * x + matrix[5] * y + matrix[9] * z + matrix[13]\n    out[14] = matrix[2] * x + matrix[6] * y + matrix[10] * z + matrix[14]\n    out[15] = matrix[3] * x + matrix[7] * y + matrix[11] * z + matrix[15]\n  } else {\n    a00 = matrix[0]; a01 = matrix[1]; a02 = matrix[2]; a03 = matrix[3]\n    a10 = matrix[4]; a11 = matrix[5]; a12 = matrix[6]; a13 = matrix[7]\n    a20 = matrix[8]; a21 = matrix[9]; a22 = matrix[10]; a23 = matrix[11]\n\n    out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03\n    out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13\n    out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23\n\n    out[12] = a00 * x + a10 * y + a20 * z + matrix[12]\n    out[13] = a01 * x + a11 * y + a21 * z + matrix[13]\n    out[14] = a02 * x + a12 * y + a22 * z + matrix[14]\n    out[15] = a03 * x + a13 * y + a23 * z + matrix[15]\n  }\n\n  return out\n}\n\nmodule.exports = translate\n","/**\n * Represents a 4x4 matrix which is column-major (when typed out it looks row-major).\n * @see {@link mat4} for data structure information.\n * @module modeling/maths/mat4\n */\nmodule.exports = {\n  add: require('./add'),\n  clone: require('./clone'),\n  create: require('./create'),\n  equals: require('./equals'),\n  fromRotation: require('./fromRotation'),\n  fromScaling: require('./fromScaling'),\n  fromTaitBryanRotation: require('./fromTaitBryanRotation'),\n  fromTranslation: require('./fromTranslation'),\n  fromValues: require('./fromValues'),\n  fromXRotation: require('./fromXRotation'),\n  fromYRotation: require('./fromYRotation'),\n  fromZRotation: require('./fromZRotation'),\n  identity: require('./identity'),\n  isMirroring: require('./isMirroring'),\n  mirrorByPlane: require('./mirrorByPlane'),\n  multiply: require('./multiply'),\n  rotate: require('./rotate'),\n  rotateX: require('./rotateX'),\n  rotateY: require('./rotateY'),\n  rotateZ: require('./rotateZ'),\n  scale: require('./scale'),\n  subtract: require('./subtract'),\n  toString: require('./toString'),\n  translate: require('./translate')\n}\n","/**\n * Represents a two dimensional vector.\n * See fromValues().\n * @typedef {Array} vec2\n */\n\n/**\n * Creates a new vector, intialized to [0,0].\n *\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.create\n */\nconst create = () => [0, 0]\n\nmodule.exports = create\n","const create = require('./create')\n\n/**\n * Calculates the absolute coordinates of the given vector.\n *\n * @param {vec2} [out] - the receiving vector\n * @param {vec2} vec - the vector of reference\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.abs\n */\nconst abs = (...params) => {\n  let out\n  let vec\n  if (params.length === 1) {\n    out = create()\n    vec = params[0]\n  } else {\n    out = params[0]\n    vec = params[1]\n  }\n  out[0] = Math.abs(vec[0])\n  out[1] = Math.abs(vec[1])\n  return out\n}\n\nmodule.exports = abs\n","const create = require('./create')\n\n/**\n * Adds the coordinates of two vectors (A+B).\n *\n * @param {vec2} [out] - the receiving vector\n * @param {vec2} a - the first operand\n * @param {vec2} b - the second operand\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.add\n */\nconst add = (...params) => {\n  let out\n  let a\n  let b\n  if (params.length === 2) {\n    out = create()\n    a = params[0]\n    b = params[1]\n  } else {\n    out = params[0]\n    a = params[1]\n    b = params[2]\n  }\n  out[0] = a[0] + b[0]\n  out[1] = a[1] + b[1]\n  return out\n}\n\nmodule.exports = add\n","/**\n * Calculate the angle of the given vector.\n * @param {vec2} vector - the vector of reference\n * @returns {Number} angle in radians\n * @alias module:modeling/maths/vec2.angleRadians\n */\nconst angleRadians = (vector) => Math.atan2(vector[1], vector[0]) // y=sin, x=cos\n\nmodule.exports = angleRadians\n","module.exports = require('./angleRadians')\n","const angleRadians = require('./angleRadians')\n\n/**\n * Calculate the angle of the given vector.\n * @param {vec2} vector - the vector of reference\n * @returns {Number} angle in degrees\n * @alias module:modeling/maths/vec2.angleDegrees\n */\nconst angleDegrees = (vector) => angleRadians(vector) * 57.29577951308232\n\nmodule.exports = angleDegrees\n","const create = require('./create')\n\n/**\n * Creates a new vector initialized with the given values.\n *\n * @param {Number} x - X coordinate\n * @param {Number} y - Y coordinate\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.fromValues\n */\nconst fromValues = (x, y) => {\n  const out = create()\n  out[0] = x\n  out[1] = y\n  return out\n}\n\nmodule.exports = fromValues\n","/**\n * The resolution of space, currently one hundred nanometers.\n * This should be 1 / EPS.\n * @alias module:modeling/maths.spatialResolution\n * @default\n */\nconst spatialResolution = 1e5\n\n/**\n * Epsilon used during determination of near zero distances.\n * This should be 1 / spacialResolution.\n * @default\n * @alias module:modeling/maths.EPS\n */\nconst EPS = 1e-5\n\nmodule.exports = {\n  EPS,\n  spatialResolution\n}\n","const { spatialResolution } = require('../constants')\n\n// Quantize values for use in spatial coordinates, and so on.\nconst quantizeForSpace = (value) => (Math.round(value * spatialResolution) / spatialResolution)\n\nmodule.exports = quantizeForSpace\n","const fromValues = require('./fromValues')\nconst quantizeForSpace = require('../utils/quantizeForSpace')\n\nconst canonicalize = (vector) => fromValues(quantizeForSpace(vector[0]),\n  quantizeForSpace(vector[1]))\n\nmodule.exports = canonicalize\n","const create = require('./create')\n\n/**\n * Create a clone of the given vector.\n *\n * @param {vec2} [out] - receiving vector\n * @param {vec2} vec - vector to clone\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.clone\n */\nconst clone = (...params) => {\n  let out\n  let vec\n  if (params.length === 1) {\n    out = create()\n    vec = params[0]\n  } else {\n    out = params[0]\n    vec = params[1]\n  }\n  out[0] = vec[0]\n  out[1] = vec[1]\n  return out\n}\n\nmodule.exports = clone\n","const create = require('./create')\n\n/**\n * Calculates the absolute coordinates of the give vector.\n *\n * @param {vec3} [out] - the receiving vector\n * @param {vec3} vec - the vector of reference\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.abs\n */\nconst abs = (...params) => {\n  let out\n  let vec\n  if (params.length === 1) {\n    out = create()\n    vec = params[0]\n  } else {\n    out = params[0]\n    vec = params[1]\n  }\n  out[0] = Math.abs(vec[0])\n  out[1] = Math.abs(vec[1])\n  out[2] = Math.abs(vec[2])\n  return out\n}\n\nmodule.exports = abs\n","const create = require('./create')\n\n/**\n * Adds the coordinates of two vectors (A+B).\n *\n * @param {vec3} [out] - the receiving vector\n * @param {vec3} a - the first operand\n * @param {vec3} b - the second operand\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.add\n */\nconst add = (...params) => {\n  let out\n  let a\n  let b\n  if (params.length === 2) {\n    out = create()\n    a = params[0]\n    b = params[1]\n  } else {\n    out = params[0]\n    a = params[1]\n    b = params[2]\n  }\n  out[0] = a[0] + b[0]\n  out[1] = a[1] + b[1]\n  out[2] = a[2] + b[2]\n  return out\n}\n\nmodule.exports = add\n","const dot = require('./dot')\n\n/**\n * Calculate the angle between two vectors.\n * @param {vec3} a - the first operand\n * @param {vec3} b - the second operand\n * @returns {Number} angle (radians)\n * @alias module:modeling/maths/vec3.angle\n */\nconst angle = (a, b) => {\n  const ax = a[0]\n  const ay = a[1]\n  const az = a[2]\n  const bx = b[0]\n  const by = b[1]\n  const bz = b[2]\n  const mag1 = Math.sqrt(ax * ax + ay * ay + az * az)\n  const mag2 = Math.sqrt(bx * bx + by * by + bz * bz)\n  const mag = mag1 * mag2\n  const cosine = mag && dot(a, b) / mag\n  return Math.acos(Math.min(Math.max(cosine, -1), 1))\n}\n\nmodule.exports = angle\n","const create = require('./create')\n\n/**\n * Creates a new vector initialized with the given values.\n *\n * @param {Number} x - X component\n * @param {Number} y - Y component\n * @param {Number} z - Z component\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.fromValues\n */\nconst fromValues = (x, y, z) => {\n  const out = create()\n  out[0] = x\n  out[1] = y\n  out[2] = z\n  return out\n}\n\nmodule.exports = fromValues\n","const fromValues = require('./fromValues')\nconst quantizeForSpace = require('../utils/quantizeForSpace')\n\nconst canonicalize = (vector) => fromValues(quantizeForSpace(vector[0]),\n  quantizeForSpace(vector[1]),\n  vector[2] === undefined ? 0 : quantizeForSpace(vector[2]))\n\nmodule.exports = canonicalize\n","const create = require('./create')\n\n/**\n * Create a clone of the given vector.\n *\n * @param {vec3} [out] - receiving vector\n * @param {vec3} vec - vector to clone\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.clone\n */\nconst clone = (...params) => {\n  let out\n  let vec\n  if (params.length === 1) {\n    out = create()\n    vec = params[0]\n  } else {\n    out = params[0]\n    vec = params[1]\n  }\n  out[0] = vec[0]\n  out[1] = vec[1]\n  out[2] = vec[2]\n  return out\n}\n\nmodule.exports = clone\n","/**\n * Calculates the euclidian distance between the given vectors.\n *\n * @param {vec3} a - the first operand\n * @param {vec3} b - the second operand\n * @returns {Number} distance\n * @alias module:modeling/maths/vec3.distance\n */\nconst distance = (a, b) => {\n  const x = b[0] - a[0]\n  const y = b[1] - a[1]\n  const z = b[2] - a[2]\n  return Math.hypot(x, y, z)\n}\n\nmodule.exports = distance\n","const create = require('./create')\n\n/**\n * Divides the coordinates of two vectors (A/B).\n *\n * @param {vec3} [out] - the receiving vector\n * @param {vec3} a - the dividend vector\n * @param {vec3} b - the divisor vector\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.divide\n */\nconst divide = (...params) => {\n  let out\n  let a\n  let b\n  if (params.length === 2) {\n    out = create()\n    a = params[0]\n    b = params[1]\n  } else {\n    out = params[0]\n    a = params[1]\n    b = params[2]\n  }\n  out[0] = a[0] / b[0]\n  out[1] = a[1] / b[1]\n  out[2] = a[2] / b[2]\n  return out\n}\n\nmodule.exports = divide\n","/**\n * Compare the given vectors for equality.\n *\n * @param {vec3} a - the first operand\n * @param {vec3} b - the second operand\n * @returns {Boolean} true if a and b are equal\n * @alias module:modeling/maths/vec3.equals\n */\nconst equals = (a, b) => (a[0] === b[0]) && (a[1] === b[1]) && (a[2] === b[2])\n\nmodule.exports = equals\n","const create = require('./create')\n\n/**\n * Creates a new vector initialized with the values in the given array.\n * @param {Array} data - array of numerical values\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.fromArray\n */\nconst fromArray = (data) => {\n  const out = create()\n  out[0] = data[0]\n  out[1] = data[1]\n  out[2] = data[2]\n  return out\n}\n\nmodule.exports = fromArray\n","const fromValues = require('./fromValues')\n\n/**\n * Creates a vector from a single scalar value.\n * All components of the resulting vector have the given value.\n * @param {Float} scalar\n * @returns {Vec3} a new vector\n * @alias module:modeling/maths/vec3.fromScalar\n */\nconst fromScalar = (scalar) => fromValues(scalar, scalar, scalar)\n\nmodule.exports = fromScalar\n","const fromValues = require('./fromValues')\n\n/**\n * Create a new vector by extending a 2D vector with a Z value.\n * @param {Array} vector - the vector of values\n * @param {Number} [z=0] - Z value\n * @alias module:modeling/maths/vec3.fromVec2\n */\nconst fromVector2 = (vec2, z = 0) => fromValues(vec2[0], vec2[1], z)\n\nmodule.exports = fromVector2\n","/**\n * Calculates the length of a vector.\n *\n * @param {vec3} vector - vector to calculate length of\n * @returns {Number} length\n * @alias module:modeling/maths/vec3.length\n */\nconst length = (a) => {\n  const x = a[0]\n  const y = a[1]\n  const z = a[2]\n  return Math.hypot(x, y, z)\n}\n\nmodule.exports = length\n","const create = require('./create')\n\n/**\n * Performs a linear interpolation between two vectors.\n *\n * @param {vec3} [out] - the receiving vector\n * @param {Number} t - interpolant (0.0 to 1.0) applied between the two inputs\n * @param {vec3} a - the first operand\n * @param {vec3} b - the second operand\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.lerp\n */\nconst lerp = (...params) => {\n  let out\n  let t\n  let a\n  let b\n  if (params.length === 3) {\n    out = create()\n    t = params[0]\n    a = params[1]\n    b = params[2]\n  } else {\n    out = params[0]\n    t = params[1]\n    a = params[2]\n    b = params[3]\n  }\n  out[0] = a[0] + t * (b[0] - a[0])\n  out[1] = a[1] + t * (b[1] - a[1])\n  out[2] = a[2] + t * (b[2] - a[2])\n  return out\n}\n\nmodule.exports = lerp\n","const create = require('./create')\n\n/**\n * Returns the maximum coordinates of the given vectors.\n *\n * @param {vec3} [out] - the receiving vector\n * @param {vec3} a - the first operand\n * @param {vec3} b - the second operand\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.max\n */\nconst max = (...params) => {\n  let out\n  let a\n  let b\n  if (params.length === 2) {\n    out = create()\n    a = params[0]\n    b = params[1]\n  } else {\n    out = params[0]\n    a = params[1]\n    b = params[2]\n  }\n  out[0] = Math.max(a[0], b[0])\n  out[1] = Math.max(a[1], b[1])\n  out[2] = Math.max(a[2], b[2])\n  return out\n}\n\nmodule.exports = max\n","const create = require('./create')\n\n/**\n * Returns the minimum coordinates of the given vectors.\n *\n * @param {vec3} [out] - the receiving vector\n * @param {vec3} a - the first operand\n * @param {vec3} b - the second operand\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.min\n */\nconst min = (...params) => {\n  let out\n  let a\n  let b\n  if (params.length === 2) {\n    out = create()\n    a = params[0]\n    b = params[1]\n  } else {\n    out = params[0]\n    a = params[1]\n    b = params[2]\n  }\n  out[0] = Math.min(a[0], b[0])\n  out[1] = Math.min(a[1], b[1])\n  out[2] = Math.min(a[2], b[2])\n  return out\n}\n\nmodule.exports = min\n","const create = require('./create')\n\n/**\n * Multiplies the coordinates of the given vectors (A*B).\n *\n * @param {vec3} [out] - the receiving vector\n * @param {vec3} a - the first operand\n * @param {vec3} b - the second operand\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.multiply\n */\nconst multiply = (...params) => {\n  let out\n  let a\n  let b\n  if (params.length === 2) {\n    out = create()\n    a = params[0]\n    b = params[1]\n  } else {\n    out = params[0]\n    a = params[1]\n    b = params[2]\n  }\n  out[0] = a[0] * b[0]\n  out[1] = a[1] * b[1]\n  out[2] = a[2] * b[2]\n  return out\n}\n\nmodule.exports = multiply\n","const create = require('./create')\n\n/**\n * Negates the coordinates of a vector.\n *\n * @param {vec3} [out] - the receiving vector\n * @param {vec3} vector - vector to negate\n * @returns {vec3} a new vectory\n * @alias module:modeling/maths/vec3.negate\n */\nconst negate = (...params) => {\n  let out\n  let a\n  if (params.length === 1) {\n    out = create()\n    a = params[0]\n  } else {\n    out = params[0]\n    a = params[1]\n  }\n  out[0] = -a[0]\n  out[1] = -a[1]\n  out[2] = -a[2]\n  return out\n}\n\nmodule.exports = negate\n","const create = require('./create')\n\n/**\n * Normalize the given vector.\n *\n * @param {vec3} [out] - the receiving vector\n * @param {vec3} vector - vector to normalize\n * @returns {vec3} a new (unit) vector\n * @alias module:modeling/maths/vec3.normalize\n */\nconst normalize = (...params) => {\n  let a\n  let out\n  if (params.length === 1) {\n    a = params[0]\n    out = create()\n  } else {\n    out = params[0]\n    a = params[1]\n  }\n  const x = a[0]\n  const y = a[1]\n  const z = a[2]\n  let len = x * x + y * y + z * z\n  if (len > 0) {\n    len = 1 / Math.sqrt(len)\n  }\n  out[0] = x * len\n  out[1] = y * len\n  out[2] = z * len\n  return out\n}\n\nmodule.exports = normalize\n","const abs = require('./abs')\nconst create = require('./create')\n\n/**\n * Create a vector that is somewhat orthogonal to the given vector.\n * @param {vec3} [out] - the receiving vector\n * @param {vec3} vector - vector of reference\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.orthogonal\n */\nconst orthogonal = (...params) => {\n  let out\n  let vec\n  if (params.length === 1) {\n    out = create()\n    vec = params[0]\n  } else {\n    out = params[0]\n    vec = params[1]\n  }\n  abs(out, vec)\n  if ((out[0] <= out[1]) && (out[0] <= out[2])) {\n    out[0] = 1\n    out[1] = 0\n    out[2] = 0\n  } else if ((out[1] <= out[0]) && (out[1] <= out[2])) {\n    out[0] = 0\n    out[1] = 1\n    out[2] = 0\n  } else {\n    out[0] = 0\n    out[1] = 0\n    out[2] = 1\n  }\n  return out\n}\n\nmodule.exports = orthogonal\n","const create = require('./create')\n\n/**\n * Rotate the given vector around the given origin, X axis only.\n * @param {vec3} [out] - the receiving vector\n * @param {Number} angle - the angle of rotation\n * @param {vec3} origin - the origin of the rotation\n * @param {vec3} vector - the vector to rotate\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.rotateX\n */\nconst rotateX = (...params) => {\n  let out\n  let angle\n  let vector\n  let origin\n  if (params.length === 3) {\n    out = create()\n    angle = params[0]\n    origin = params[1]\n    vector = params[2]\n  } else {\n    out = params[0]\n    angle = params[1]\n    origin = params[2]\n    vector = params[3]\n  }\n  const p = []\n  const r = []\n\n  // translate point to the origin\n  p[0] = vector[0] - origin[0]\n  p[1] = vector[1] - origin[1]\n  p[2] = vector[2] - origin[2]\n\n  // perform rotation\n  r[0] = p[0]\n  r[1] = p[1] * Math.cos(angle) - p[2] * Math.sin(angle)\n  r[2] = p[1] * Math.sin(angle) + p[2] * Math.cos(angle)\n\n  // translate to correct position\n  out[0] = r[0] + origin[0]\n  out[1] = r[1] + origin[1]\n  out[2] = r[2] + origin[2]\n\n  return out\n}\n\nmodule.exports = rotateX\n","const create = require('./create')\n\n/**\n * Rotate the given vector around the given origin, Y axis only.\n * @param {vec3} [out] - the receiving vector\n * @param {Number} angle - the angle of rotation\n * @param {vec3} origin - the origin of the rotation\n * @param {vec3} vector - the vector to rotate\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.rotateY\n */\nconst rotateY = (...params) => {\n  let out\n  let angle\n  let vector\n  let origin\n  if (params.length === 3) {\n    out = create()\n    angle = params[0]\n    origin = params[1]\n    vector = params[2]\n  } else {\n    out = params[0]\n    angle = params[1]\n    origin = params[2]\n    vector = params[3]\n  }\n  const p = []\n  const r = []\n\n  // translate point to the origin\n  p[0] = vector[0] - origin[0]\n  p[1] = vector[1] - origin[1]\n  p[2] = vector[2] - origin[2]\n\n  // perform rotation\n  r[0] = p[2] * Math.sin(angle) + p[0] * Math.cos(angle)\n  r[1] = p[1]\n  r[2] = p[2] * Math.cos(angle) - p[0] * Math.sin(angle)\n\n  // translate to correct position\n  out[0] = r[0] + origin[0]\n  out[1] = r[1] + origin[1]\n  out[2] = r[2] + origin[2]\n\n  return out\n}\n\nmodule.exports = rotateY\n","const create = require('./create')\n\n/**\n * Rotate the given vector around the given origin, Z axis only.\n * @param {vec3} [out] - the receiving vector\n * @param {Number} angle - the angle of rotation in radians\n * @param {vec3} origin - the origin of the rotation\n * @param {vec3} vector - the vector to rotate\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.rotateZ\n */\nconst rotateZ = (...params) => {\n  let out\n  let angle\n  let vector\n  let origin\n  if (params.length === 3) {\n    out = create()\n    angle = params[0]\n    origin = params[1]\n    vector = params[2]\n  } else {\n    out = params[0]\n    angle = params[1]\n    origin = params[2]\n    vector = params[3]\n  }\n  const p = []\n  const r = []\n  // Translate point to the origin\n  p[0] = vector[0] - origin[0]\n  p[1] = vector[1] - origin[1]\n\n  // perform rotation\n  r[0] = (p[0] * Math.cos(angle)) - (p[1] * Math.sin(angle))\n  r[1] = (p[0] * Math.sin(angle)) + (p[1] * Math.cos(angle))\n\n  // translate to correct position\n  out[0] = r[0] + origin[0]\n  out[1] = r[1] + origin[1]\n  out[2] = vector[2]\n\n  return out\n}\n\nmodule.exports = rotateZ\n","const create = require('./create')\n\n/**\n * Scales the coordinates of the given vector by a scalar number.\n *\n * @param {vec3} [out] - the receiving vector\n * @param {Number} amount - amount to scale the vector by\n * @param {vec3} vector - the vector to scale\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.scale\n */\nconst scale = (...params) => {\n  let out\n  let vector\n  let amount\n  if (params.length === 2) {\n    out = create()\n    amount = params[0]\n    vector = params[1]\n  } else {\n    out = params[0]\n    amount = params[1]\n    vector = params[2]\n  }\n  out[0] = vector[0] * amount\n  out[1] = vector[1] * amount\n  out[2] = vector[2] * amount\n  return out\n}\n\nmodule.exports = scale\n","/**\n * Snaps the coordinates of the given vector to the given epsilon.\n *\n * @param {vec3} out - the receiving vector\n * @param {Number} epsilon - epsilon of precision, less than 0\n * @param {vec3} vector - the vector to snap\n * @returns {vec3} the resulting vector\n * @alias module:modeling/maths/vec3.snap\n */\nconst snap = (output, epsilon, input) => {\n  output[0] = Math.round(input[0] / epsilon) * epsilon + 0\n  output[1] = Math.round(input[1] / epsilon) * epsilon + 0\n  output[2] = Math.round(input[2] / epsilon) * epsilon + 0\n  return output\n}\n\nmodule.exports = snap\n","/**\n * Calculates the squared distance between two vectors.\n *\n * @param {vec3} a - the first operand\n * @param {vec3} b - the second operand\n * @returns {Number} squared distance\n * @alias module:modeling/maths/vec3.squaredDistance\n */\nconst squaredDistance = (a, b) => {\n  const x = b[0] - a[0]\n  const y = b[1] - a[1]\n  const z = b[2] - a[2]\n  return x * x + y * y + z * z\n}\n\nmodule.exports = squaredDistance\n","/**\n * Calculates the squared length of the given vector.\n *\n * @param {vec3} vector - vector to calculate squared length of\n * @returns {Number} squared length\n * @alias module:modeling/maths/vec3.squaredLength\n */\nconst squaredLength = (a) => {\n  const x = a[0]\n  const y = a[1]\n  const z = a[2]\n  return x * x + y * y + z * z\n}\n\nmodule.exports = squaredLength\n","const create = require('./create')\n\n/**\n * Subtracts the coordinates of two vectors (A-B).\n *\n * @param {vec3} [out] - the receiving vector\n * @param {vec3} a - the minuend vector\n * @param {vec3} b - the subtrahend vector\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.subtract\n */\nconst subtract = (...params) => {\n  let out\n  let a\n  let b\n  if (params.length === 2) {\n    out = create()\n    a = params[0]\n    b = params[1]\n  } else {\n    out = params[0]\n    a = params[1]\n    b = params[2]\n  }\n  out[0] = a[0] - b[0]\n  out[1] = a[1] - b[1]\n  out[2] = a[2] - b[2]\n  return out\n}\n\nmodule.exports = subtract\n","/**\n * Convert the given vector to a representative string.\n * @param {vec3} vector - vector of reference\n * @returns {String} string representation\n * @alias module:modeling/maths/vec3.toString\n */\nconst toString = (vec) => `[${vec[0].toFixed(7)}, ${vec[1].toFixed(7)}, ${vec[2].toFixed(7)}]`\n\nmodule.exports = toString\n","const create = require('./create')\n\n/**\n * Transforms the given vector using the given matrix.\n * @param {vec3} [out] - the receiving vector\n * @param {mat4} matrix - the transform matrix\n * @param {vec3} vector - the vector to transform\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.transform\n */\nconst transform = (...params) => {\n  let out\n  let vector\n  let matrix\n  if (params.length === 2) {\n    out = create()\n    matrix = params[0]\n    vector = params[1]\n  } else {\n    out = params[0]\n    matrix = params[1]\n    vector = params[2]\n  }\n\n  const x = vector[0]\n  const y = vector[1]\n  const z = vector[2]\n  let w = matrix[3] * x + matrix[7] * y + matrix[11] * z + matrix[15]\n  w = w || 1.0\n  out[0] = (matrix[0] * x + matrix[4] * y + matrix[8] * z + matrix[12]) / w\n  out[1] = (matrix[1] * x + matrix[5] * y + matrix[9] * z + matrix[13]) / w\n  out[2] = (matrix[2] * x + matrix[6] * y + matrix[10] * z + matrix[14]) / w\n  return out\n}\n\nmodule.exports = transform\n","const create = require('./create')\nconst length = require('./length')\n\n/**\n * Calculates the unit vector of the given vector.\n *\n * @param {vec3} [out] - the receiving vector\n * @param {vec3} vector - the vector for calculations\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.unit\n */\nconst unit = (...params) => {\n  let out\n  let vector\n  if (params.length === 1) {\n    out = create()\n    vector = params[0]\n  } else {\n    out = params[0]\n    vector = params[1]\n  }\n  const magnitude = length(vector) // calculate the magnitude\n  out[0] = vector[0] / magnitude\n  out[1] = vector[1] / magnitude\n  out[2] = vector[2] / magnitude\n  return out\n}\n\nmodule.exports = unit\n","/**\n * Represents a three dimensional vector.\n * @see {@link vec3} for data structure information.\n * @module modeling/maths/vec3\n */\nmodule.exports = {\n  abs: require('./abs'),\n  add: require('./add'),\n  angle: require('./angle'),\n  canonicalize: require('./canonicalize'),\n  clone: require('./clone'),\n  create: require('./create'),\n  cross: require('./cross'),\n  distance: require('./distance'),\n  divide: require('./divide'),\n  dot: require('./dot'),\n  equals: require('./equals'),\n  fromArray: require('./fromArray'),\n  fromScalar: require('./fromScalar'),\n  fromValues: require('./fromValues'),\n  fromVec2: require('./fromVec2'),\n  length: require('./length'),\n  lerp: require('./lerp'),\n  max: require('./max'),\n  min: require('./min'),\n  multiply: require('./multiply'),\n  negate: require('./negate'),\n  normalize: require('./normalize'),\n  orthogonal: require('./orthogonal'),\n  rotateX: require('./rotateX'),\n  rotateY: require('./rotateY'),\n  rotateZ: require('./rotateZ'),\n  scale: require('./scale'),\n  snap: require('./snap'),\n  squaredDistance: require('./squaredDistance'),\n  squaredLength: require('./squaredLength'),\n  subtract: require('./subtract'),\n  toString: require('./toString'),\n  transform: require('./transform'),\n  unit: require('./unit')\n}\n","const vec3 = require('../vec3/index')\n\n/**\n * Computes the cross product (3D) of two vectors.\n *\n * @param {vec3} [out] - the receiving vector (3D)\n * @param {vec2} a - the first operand\n * @param {vec2} b - the second operand\n * @returns {vec3} a new 3D vector\n * @alias module:modeling/maths/vec2.cross\n */\nconst cross = (...params) => {\n  let out\n  let a\n  let b\n  if (params.length === 2) {\n    out = vec3.create()\n    a = params[0]\n    b = params[1]\n  } else {\n    out = params[0]\n    a = params[1]\n    b = params[2]\n  }\n  out[0] = 0\n  out[1] = 0\n  out[2] = a[0] * b[1] - a[1] * b[0]\n  // alternative return vec3.cross(out, vec3.fromVec2(a), vec3.fromVec2(b))\n  return out\n}\n\nmodule.exports = cross\n","/**\n * Calculates the distance between two vectors.\n *\n * @param {vec2} a - the first operand\n * @param {vec2} b - the second operand\n * @returns {Number} distance\n * @alias module:modeling/maths/vec2.distance\n */\nconst distance = (a, b) => {\n  const x = b[0] - a[0]\n  const y = b[1] - a[1]\n  return Math.hypot(x, y)\n}\n\nmodule.exports = distance\n","const create = require('./create')\n\n/**\n * Divides the coordinates of two vectors (A/B).\n *\n * @param {vec2} [out] - the receiving vector\n * @param {vec2} a - the first operand\n * @param {vec2} b - the second operand\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.divide\n */\nconst divide = (...params) => {\n  let out\n  let a\n  let b\n  if (params.length === 2) {\n    out = create()\n    a = params[0]\n    b = params[1]\n  } else {\n    out = params[0]\n    a = params[1]\n    b = params[2]\n  }\n  out[0] = a[0] / b[0]\n  out[1] = a[1] / b[1]\n  return out\n}\n\nmodule.exports = divide\n","/**\n * Calculates the dot product of two vectors.\n *\n * @param {vec2} a - the first operand\n * @param {vec2} b - the second operand\n * @returns {Number} dot product\n * @alias module:modeling/maths/vec2.dot\n */\nconst dot = (a, b) => a[0] * b[0] + a[1] * b[1]\n\nmodule.exports = dot\n","/**\n * Compare the given vectors for equality.\n *\n * @param {vec2} a - the first operand\n * @param {vec2} b - the second operand\n * @returns {Boolean} true if a and b are equal\n * @alias module:modeling/maths/vec2.equals\n */\nconst equals = (a, b) => (a[0] === b[0]) && (a[1] === b[1])\n\nmodule.exports = equals\n","const fromValues = require('./fromValues')\n\n/**\n * Create a new vector in the direction of the given angle.\n * @param {Number} angle - angle in radians\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.fromAngleRadians\n */\nconst fromAngleRadians = (radians) => fromValues(Math.cos(radians), Math.sin(radians))\n\nmodule.exports = fromAngleRadians\n","// this is just an alias\nmodule.exports = require('./fromAngleRadians')\n","const fromValues = require('./fromValues')\n\n/**\n * Create a new vector in the direction of the given angle.\n * @param {Number} angle - angle in degrees\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.fromAngleDegrees\n */\nconst fromAngleDegrees = (degrees) => {\n  const radians = Math.PI * degrees / 180\n  return fromValues(Math.cos(radians), Math.sin(radians))\n}\n\nmodule.exports = fromAngleDegrees\n","const create = require('./create')\n\n/**\n * Create a new vector initialized with the values in the given array.\n * @param {Array} data - array of numerical values\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.fromArray\n */\nconst fromArray = (data) => {\n  const out = create()\n  out[0] = data[0]\n  out[1] = data[1]\n  return out\n}\n\nmodule.exports = fromArray\n","const fromValues = require('./fromValues')\n\n/**\n * Create a vector from a single scalar value.\n * @param  {Number} scalar\n * @returns {Vec2} a new vector\n * @alias module:modeling/maths/vec2.fromScalar\n */\nconst fromScalar = (scalar) => fromValues(scalar, scalar)\n\nmodule.exports = fromScalar\n","/**\n * Calculates the length of the given vector.\n *\n * @param {vec2} vector - vector of reference\n * @returns {Number} length\n * @alias module:modeling/maths/vec2.length\n */\nconst length = (a) => {\n  const x = a[0]\n  const y = a[1]\n  return Math.hypot(x, y)\n}\n\nmodule.exports = length\n","const create = require('./create')\n\n/**\n * Performs a linear interpolation between two vectors.\n *\n * @param {vec2} [out] - the receiving vector\n * @param {Number} t - interpolation amount between the two vectors\n * @param {vec2} a - the first operand\n * @param {vec2} b - the second operand\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.lerp\n */\nconst lerp = (...params) => {\n  let out\n  let t\n  let a\n  let b\n  if (params.length === 3) {\n    out = create()\n    t = params[0]\n    a = params[1]\n    b = params[2]\n  } else {\n    out = params[0]\n    t = params[1]\n    a = params[2]\n    b = params[3]\n  }\n  const ax = a[0]\n  const ay = a[1]\n  out[0] = ax + t * (b[0] - ax)\n  out[1] = ay + t * (b[1] - ay)\n  return out\n}\n\nmodule.exports = lerp\n","const create = require('./create')\n\n/**\n * Returns the maximum coordinates of two vectors.\n *\n * @param {vec2} [out] - the receiving vector\n * @param {vec2} a - the first operand\n * @param {vec2} b - the second operand\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.max\n */\nconst max = (...params) => {\n  let out\n  let a\n  let b\n  if (params.length === 2) {\n    out = create()\n    a = params[0]\n    b = params[1]\n  } else {\n    out = params[0]\n    a = params[1]\n    b = params[2]\n  }\n  out[0] = Math.max(a[0], b[0])\n  out[1] = Math.max(a[1], b[1])\n  return out\n}\n\nmodule.exports = max\n","const create = require('./create')\n\n/**\n * Returns the minimum coordinates of two vectors.\n *\n * @param {vec2} [out] - the receiving vector\n * @param {vec2} a - the first operand\n * @param {vec2} b - the second operand\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.min\n */\nconst min = (...params) => {\n  let out\n  let a\n  let b\n  if (params.length === 2) {\n    out = create()\n    a = params[0]\n    b = params[1]\n  } else {\n    out = params[0]\n    a = params[1]\n    b = params[2]\n  }\n  out[0] = Math.min(a[0], b[0])\n  out[1] = Math.min(a[1], b[1])\n  return out\n}\n\nmodule.exports = min\n","const create = require('./create')\n\n/**\n * Multiplies the coordinates of two vectors (A*B).\n *\n * @param {vec2} [out] - the receiving vector\n * @param {vec2} a - the first operand\n * @param {vec2} b - the second operand\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.multiply\n */\nconst multiply = (...params) => {\n  let out\n  let a\n  let b\n  if (params.length === 2) {\n    out = create()\n    a = params[0]\n    b = params[1]\n  } else {\n    out = params[0]\n    a = params[1]\n    b = params[2]\n  }\n  out[0] = a[0] * b[0]\n  out[1] = a[1] * b[1]\n  return out\n}\n\nmodule.exports = multiply\n","const create = require('./create')\n\n/**\n * Negates the coordinates of the given vector.\n *\n * @param {vec2} [out] - the receiving vector\n * @param {vec2} a - vector to negate\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.negate\n */\nconst negate = (...params) => {\n  let out\n  let a\n  if (params.length === 1) {\n    out = create()\n    a = params[0]\n  } else {\n    out = params[0]\n    a = params[1]\n  }\n  out[0] = -a[0]\n  out[1] = -a[1]\n  return out\n}\n\nmodule.exports = negate\n","const create = require('./create')\n\n/**\n * Rotates the given vector by the given angle.\n *\n * @param {vec2} [out] - the receiving vector\n * @param {Number} angle - the angle of rotation (radians)\n * @param {vec2} vector - the vector to rotate\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.rotate\n */\nconst rotate = (...params) => {\n  let out\n  let vector\n  let angle\n  if (params.length === 2) {\n    out = create()\n    angle = params[0]\n    vector = params[1]\n  } else {\n    out = params[0]\n    angle = params[1]\n    vector = params[2]\n  }\n\n  const c = Math.cos(angle)\n  const s = Math.sin(angle)\n  const x = vector[0]\n  const y = vector[1]\n\n  out[0] = x * c - y * s\n  out[1] = x * s + y * c\n\n  return out\n}\n\nmodule.exports = rotate\n","const rotate = require('./rotate')\n\n/**\n * Calculates the normal of the given vector.\n * The normal value is the given vector rotated 90 degress.\n *\n * @param {vec2} [out] - receiving vector\n * @param {vec2} vec - given value\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.normal\n */\nconst normal = (...params) => {\n  if (params.length === 1) {\n    const vec = params[0]\n    return rotate((Math.PI / 2), vec)\n  } else {\n    const out = params[0]\n    const vec = params[1]\n    return rotate(out, (Math.PI / 2), vec)\n  }\n}\n\nmodule.exports = normal\n","const create = require('./create')\n\n/**\n * Normalize the given vector.\n *\n * @param {vec2} [out] - the receiving vector\n * @param {vec2} a - vector to normalize\n * @returns {vec2} a new (unit) vector\n * @alias module:modeling/maths/vec2.normalize\n */\nconst normalize = (...params) => {\n  let a\n  let out\n  if (params.length === 1) {\n    out = create()\n    a = params[0]\n  } else {\n    out = params[0]\n    a = params[1]\n  }\n  const x = a[0]\n  const y = a[1]\n  let len = x * x + y * y\n  if (len > 0) {\n    len = 1 / Math.sqrt(len)\n  }\n  out[0] = x * len\n  out[1] = y * len\n  return out\n}\n\n// old this.dividedBy(this.length())\n\nmodule.exports = normalize\n","const create = require('./create')\n\n/**\n * Scales the coordinates of the given vector.\n *\n * @param {vec2} [out] - the receiving vector\n * @param {Number} amount - amount to scale\n * @param {vec2} vector - the vector to scale\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.scale\n */\nconst scale = (...params) => {\n  let out\n  let vector\n  let amount\n  if (params.length === 2) {\n    out = create()\n    amount = params[0]\n    vector = params[1]\n  } else {\n    out = params[0]\n    amount = params[1]\n    vector = params[2]\n  }\n  out[0] = vector[0] * amount\n  out[1] = vector[1] * amount\n  return out\n}\n\nmodule.exports = scale\n","/**\n * Snaps the coordinates of the given vector to the given epsilon.\n *\n * @param {vec2} out - the receiving vector\n * @param {Number} epsilon - epsilon of precision, less than 0\n * @param {vec2} vector - the vector to snap\n * @returns {vec2} the resulting vector\n * @alias module:modeling/maths/vec2.snap\n */\nconst snap = (output, epsilon, input) => {\n  output[0] = Math.round(input[0] / epsilon) * epsilon + 0\n  output[1] = Math.round(input[1] / epsilon) * epsilon + 0\n  return output\n}\n\nmodule.exports = snap\n","/**\n * Calculates the squared distance between the given vectors.\n *\n * @param {vec2} a - the first operand\n * @param {vec2} b - the second operand\n * @returns {Number} squared distance\n * @alias module:modeling/maths/vec2.squaredDistance\n */\nconst squaredDistance = (a, b) => {\n  const x = b[0] - a[0]\n  const y = b[1] - a[1]\n  return x * x + y * y\n}\n\nmodule.exports = squaredDistance\n","/**\n * Calculates the squared length of the given vector.\n *\n * @param {vec2} vector - vector of reference\n * @returns {Number} squared length\n * @alias module:modeling/maths/vec2.squaredLength\n */\nconst squaredLength = (a) => {\n  const x = a[0]\n  const y = a[1]\n  return x * x + y * y\n}\n\nmodule.exports = squaredLength\n","const create = require('./create')\n\n/**\n * Subtracts the coordinates of two vectors (A-B).\n *\n * @param {vec2} [out] - the receiving vector\n * @param {vec2} a - the first operand\n * @param {vec2} b - the second operand\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.subtract\n */\nconst subtract = (...params) => {\n  let out\n  let a\n  let b\n  if (params.length === 2) {\n    out = create()\n    a = params[0]\n    b = params[1]\n  } else {\n    out = params[0]\n    a = params[1]\n    b = params[2]\n  }\n  out[0] = a[0] - b[0]\n  out[1] = a[1] - b[1]\n  return out\n}\n\nmodule.exports = subtract\n","/**\n * Convert the given vector to a representative string.\n * @param {vec2} vector - vector of reference\n * @returns {String} string representation\n * @alias module:modeling/maths/vec2.toString\n */\nconst toString = (vec) => `[${vec[0].toFixed(7)}, ${vec[1].toFixed(7)}]`\n\nmodule.exports = toString\n","const create = require('./create')\n\n/**\n * Transforms the given vector using the given matrix.\n *\n * @param {vec2} [out] - the receiving vector\n * @param {mat4} matrix - matrix to transform with\n * @param {vec2} vector - the vector to transform\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.transform\n */\nconst transform = (...params) => {\n  let out\n  let matrix\n  let vector\n  if (params.length === 2) {\n    out = create()\n    matrix = params[0]\n    vector = params[1]\n  } else {\n    out = params[0]\n    matrix = params[1]\n    vector = params[2]\n  }\n  const x = vector[0]\n  const y = vector[1]\n  out[0] = matrix[0] * x + matrix[4] * y + matrix[12]\n  out[1] = matrix[1] * x + matrix[5] * y + matrix[13]\n  return out\n}\n\nmodule.exports = transform\n","/**\n * Represents a two dimensional vector.\n * @module modeling/maths/vec2\n */\nmodule.exports = {\n  abs: require('./abs'),\n  add: require('./add'),\n  angle: require('./angle'),\n  angleDegrees: require('./angleDegrees'),\n  angleRadians: require('./angleRadians'),\n  canonicalize: require('./canonicalize'),\n  clone: require('./clone'),\n  create: require('./create'),\n  cross: require('./cross'),\n  distance: require('./distance'),\n  divide: require('./divide'),\n  dot: require('./dot'),\n  equals: require('./equals'),\n  fromAngle: require('./fromAngle'),\n  fromAngleDegrees: require('./fromAngleDegrees'),\n  fromAngleRadians: require('./fromAngleRadians'),\n  fromArray: require('./fromArray'),\n  fromScalar: require('./fromScalar'),\n  fromValues: require('./fromValues'),\n  length: require('./length'),\n  lerp: require('./lerp'),\n  max: require('./max'),\n  min: require('./min'),\n  multiply: require('./multiply'),\n  negate: require('./negate'),\n  normal: require('./normal'),\n  normalize: require('./normalize'),\n  rotate: require('./rotate'),\n  scale: require('./scale'),\n  snap: require('./snap'),\n  squaredDistance: require('./squaredDistance'),\n  squaredLength: require('./squaredLength'),\n  subtract: require('./subtract'),\n  toString: require('./toString'),\n  transform: require('./transform')\n}\n","const mat4 = require('../../maths/mat4')\n\n/**\n * Represents a 2D geometry consisting of a list of sides.\n * @typedef {Object} geom2\n * @property {Array} sides - list of sides, each side containing two points\n * @property {mat4} transforms - transforms to apply to the sides, see transform()\n */\n\n/**\n * Create a new 2D geometry composed of unordered sides (two connected points).\n * @param {Array} [sides] - list of sides where each side is an array of two points\n * @returns {geom2} a new geometry\n * @alias module:modeling/geometries/geom2.create\n */\nconst create = (sides) => {\n  if (sides === undefined) {\n    sides = [] // empty contents\n  }\n  return {\n    sides: sides,\n    transforms: mat4.identity()\n  }\n}\n\nmodule.exports = create\n","const mat4 = require('../../maths/mat4')\nconst vec2 = require('../../maths/vec2')\n\nconst create = require('./create')\n\n/**\n * Performs a deep clone of the given geometry.\n * @param {geom2} geometry - the geometry to clone\n * @returns {geom2} new geometry\n * @alias module:modeling/geometries/geom2.clone\n */\nconst clone = (geometry) => {\n  const out = create()\n  out.sides = geometry.sides.map((side) => [vec2.clone(side[0]), vec2.clone(side[1])])\n  out.transforms = mat4.clone(geometry.transforms)\n  return out\n}\n\nmodule.exports = clone\n","const vec2 = require('../../maths/vec2')\n\nconst create = require('./create')\n\n/**\n * Create a new 2D geometry from the given points.\n * The direction (rotation) of the points is not relevant,\n * as the points can define a convex or a concave polygon.\n * The geometry must not self intersect, i.e. the sides cannot cross.\n * @param {Array} points - list of points in 2D space\n * @returns {geom2} a new geometry\n * @alias module:modeling/geometries/geom2.fromPoints\n */\nconst fromPoints = (points) => {\n  if (!Array.isArray(points)) {\n    throw new Error('the given points must be an array')\n  }\n  let length = points.length\n  if (length < 3) {\n    throw new Error('the given points must define a closed geometry with three or more points')\n  }\n  // adjust length if the given points are closed by the same point\n  if (vec2.equals(points[0], points[length - 1])) --length\n\n  const sides = []\n  let prevpoint = points[length - 1]\n  for (let i = 0; i < length; i++) {\n    const point = points[i]\n    sides.push([vec2.fromArray(prevpoint), vec2.fromArray(point)])\n    prevpoint = point\n  }\n  return create(sides)\n}\n\nmodule.exports = fromPoints\n","const mat4 = require('../../maths/mat4')\nconst vec2 = require('../../maths/vec2')\n\nconst create = require('./create')\n\n/**\n * Create a new 2D geometry from the given compact binary data.\n * @param {Array} data - compact binary data\n * @returns {geom2} a new geometry\n * @alias module:modeling/geometries/geom2.fromCompactBinary\n */\nconst fromCompactBinary = (data) => {\n  if (data[0] !== 0) throw new Error('invalid compact binary data')\n\n  const created = create()\n\n  created.transforms = mat4.clone(data.slice(1, 17))\n\n  for (let i = 21; i < data.length; i += 4) {\n    const point0 = vec2.fromValues(data[i + 0], data[i + 1])\n    const point1 = vec2.fromValues(data[i + 2], data[i + 3])\n    created.sides.push([point0, point1])\n  }\n  // transfer known properties, i.e. color\n  if (data[17] >= 0) {\n    created.color = [data[17], data[18], data[19], data[20]]\n  }\n  // TODO: how about custom properties or fields ?\n  return created\n}\n\nmodule.exports = fromCompactBinary\n","/**\n * Determin if the given object is a 2D geometry.\n * @param {Object} object - the object to interogate\n * @returns {Boolean} true, if the object matches a geom2 based object\n * @alias module:modeling/geometries/geom2.isA\n */\nconst isA = (object) => {\n  if (object && typeof object === 'object') {\n    if ('sides' in object && 'transforms' in object) {\n      if (Array.isArray(object.sides) && 'length' in object.transforms) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nmodule.exports = isA\n","const mat4 = require('../../maths/mat4')\nconst vec2 = require('../../maths/vec2')\n\n/*\n * Apply the transforms of the given geometry.\n * NOTE: This function must be called BEFORE exposing any data. See toSides().\n * @param {geom2} geometry - the geometry to transform\n * @returns {geom2} the given geometry\n *\n * @example\n * geometry = applyTransforms(geometry)\n */\nconst applyTransforms = (geometry) => {\n  if (mat4.equals(geometry.transforms, mat4.identity())) return geometry\n\n  // apply transforms to each side\n  geometry.sides = geometry.sides.map((side) => {\n    const p0 = vec2.transform(geometry.transforms, side[0])\n    const p1 = vec2.transform(geometry.transforms, side[1])\n    return [p0, p1]\n  })\n  mat4.identity(geometry.transforms)\n  return geometry\n}\n\nmodule.exports = applyTransforms\n","const applyTransforms = require('./applyTransforms')\n\n/**\n * Produces an array of sides from the given geometry.\n * The returned array should not be modified as the data is shared with the geometry.\n * NOTE: The sides returned do NOT define an order. Use toOutlines() for ordered points.\n * @param {geom2} geometry - the geometry\n * @returns {Array} an array of sides\n * @alias module:modeling/geometries/geom2.toSides\n *\n * @example\n * let sharedsides = toSides(geometry)\n */\nconst toSides = (geometry) => applyTransforms(geometry).sides\n\nmodule.exports = toSides\n","const create = require('./create')\nconst toSides = require('./toSides')\n\n/**\n * Reverses the given geometry so that the sides are flipped in the opposite order.\n * This swaps the left (interior) and right (exterior) edges.\n * @param {geom2} geometry - the geometry to reverse\n * @returns {geom2} the new reversed geometry\n * @alias module:modeling/geometries/geom2.reverse\n *\n * @example\n * let newgeometry = reverse(geometry)\n */\nconst reverse = (geometry) => {\n  const oldsides = toSides(geometry)\n\n  const newsides = oldsides.map((side) => [side[1], side[0]])\n  newsides.reverse() // is this required?\n  return create(newsides)\n}\n\nmodule.exports = reverse\n","const vec2 = require('../../maths/vec2')\n\nconst toSides = require('./toSides')\n\n/*\n * Create a list of edges which SHARE vertices.\n * This allows the edges to be traversed in order.\n */\nconst toEdges = (sides) => {\n  const uniquevertices = []\n  const getUniqueVertex = (vertex) => {\n    const i = uniquevertices.findIndex((v) => vec2.equals(v, vertex))\n    if (i < 0) {\n      uniquevertices.push(vertex)\n      return vertex\n    }\n    return uniquevertices[i]\n  }\n\n  const edges = []\n  sides.forEach((side) => {\n    edges.push([getUniqueVertex(side[0]), getUniqueVertex(side[1])])\n  })\n  return edges\n}\n\n/**\n * Create the outline(s) of the given geometry.\n * @param  {geom2} geometry\n * @returns {Array} an array of outlines, where each outline is an array of ordered points\n * @alias module:modeling/geometries/geom2.toOutlines\n *\n * @example\n * let geometry = subtract(rectangle({size: [5, 5]}), rectangle({size: [3, 3]}))\n * let outlines = toOutlines(geometry) // returns two outlines\n */\nconst toOutlines = (geometry) => {\n  const vertexMap = new Map()\n  const edges = toEdges(toSides(geometry))\n  edges.forEach((edge) => {\n    if (!(vertexMap.has(edge[0]))) {\n      vertexMap.set(edge[0], [])\n    }\n    const sideslist = vertexMap.get(edge[0])\n    sideslist.push(edge)\n  })\n\n  const outlines = []\n  while (true) {\n    let startside\n    for (const [vertex, edges] of vertexMap) {\n      startside = edges.shift()\n      if (!startside) {\n        vertexMap.delete(vertex)\n        continue\n      }\n      break\n    }\n    if (startside === undefined) break // all starting sides have been visited\n\n    const connectedVertexPoints = []\n    const startvertex = startside[0]\n    while (true) {\n      connectedVertexPoints.push(startside[0])\n      const nextvertex = startside[1]\n      if (nextvertex === startvertex) break // the outline has been closed\n      const nextpossiblesides = vertexMap.get(nextvertex)\n      if (!nextpossiblesides) {\n        throw new Error('the given geometry is not closed. verify proper construction')\n      }\n      let nextsideindex = -1\n      if (nextpossiblesides.length === 1) {\n        nextsideindex = 0\n      } else {\n        // more than one side starting at the same vertex\n        let bestangle\n        const startangle = vec2.angleDegrees(vec2.subtract(startside[1], startside[0]))\n        for (let sideindex = 0; sideindex < nextpossiblesides.length; sideindex++) {\n          const nextpossibleside = nextpossiblesides[sideindex]\n          const nextangle = vec2.angleDegrees(vec2.subtract(nextpossibleside[1], nextpossibleside[0]))\n          let angledif = nextangle - startangle\n          if (angledif < -180) angledif += 360\n          if (angledif >= 180) angledif -= 360\n          if ((nextsideindex < 0) || (angledif > bestangle)) {\n            nextsideindex = sideindex\n            bestangle = angledif\n          }\n        }\n      }\n      const nextside = nextpossiblesides[nextsideindex]\n      nextpossiblesides.splice(nextsideindex, 1) // remove side from list\n      if (nextpossiblesides.length === 0) {\n        vertexMap.delete(nextvertex)\n      }\n      startside = nextside\n    } // inner loop\n\n    // due to the logic of fromPoints()\n    // move the first point to the last\n    if (connectedVertexPoints.length > 0) {\n      connectedVertexPoints.push(connectedVertexPoints.shift())\n    }\n    outlines.push(connectedVertexPoints)\n  } // outer loop\n  vertexMap.clear()\n  return outlines\n}\n\nmodule.exports = toOutlines\n","const toSides = require('./toSides')\n\n/**\n * Produces an array of points from the given geometry.\n * The returned array should not be modified as the points are shared with the geometry.\n * NOTE: The points returned do NOT define an order. Use toOutlines() for ordered points.\n * @param {geom2} geometry - the geometry\n * @returns {Array} an array of points\n * @alias module:modeling/geometries/geom2.toPoints\n *\n * @example\n * let sharedpoints = toPoints(geometry)\n */\nconst toPoints = (geometry) => {\n  const sides = toSides(geometry)\n  const points = sides.map((side) => side[0])\n  // due to the logic of fromPoints()\n  // move the first point to the last\n  if (points.length > 0) {\n    points.push(points.shift())\n  }\n  return points\n}\n\nmodule.exports = toPoints\n","const vec2 = require('../../maths/vec2')\n\nconst toSides = require('./toSides')\n\n/**\n * Create a string representing the contents of the given geometry.\n * @param {geom2} geometry - the geometry\n * @returns {String} a representive string\n * @alias module:modeling/geometries/geom2.toString\n *\n * @example\n * console.out(toString(geometry))\n */\nconst toString = (geometry) => {\n  const sides = toSides(geometry)\n  let result = 'geom2 (' + sides.length + ' sides):\\n[\\n'\n  sides.forEach((side) => {\n    result += '  [' + vec2.toString(side[0]) + ', ' + vec2.toString(side[1]) + ']\\n'\n  })\n  result += ']\\n'\n  return result\n}\n\nmodule.exports = toString\n","/**\n * Produces a compact binary representation from the given geometry.\n * @param {geom2} geometry - the geometry\n * @returns {TypedArray} compact binary representation\n * @alias module:modeling/geometries/geom2.toCompactBinary\n */\nconst toCompactBinary = (geom) => {\n  const sides = geom.sides\n  const transforms = geom.transforms\n  let color = [-1, -1, -1, -1]\n  if (geom.color) color = geom.color\n\n  // FIXME why Float32Array?\n  const compacted = new Float32Array(1 + 16 + 4 + (sides.length * 4)) // type + transforms + color + sides data\n\n  compacted[0] = 0 // type code: 0 => geom2, 1 => geom3 , 2 => path2\n\n  compacted[1] = transforms[0]\n  compacted[2] = transforms[1]\n  compacted[3] = transforms[2]\n  compacted[4] = transforms[3]\n  compacted[5] = transforms[4]\n  compacted[6] = transforms[5]\n  compacted[7] = transforms[6]\n  compacted[8] = transforms[7]\n  compacted[9] = transforms[8]\n  compacted[10] = transforms[9]\n  compacted[11] = transforms[10]\n  compacted[12] = transforms[11]\n  compacted[13] = transforms[12]\n  compacted[14] = transforms[13]\n  compacted[15] = transforms[14]\n  compacted[16] = transforms[15]\n\n  compacted[17] = color[0]\n  compacted[18] = color[1]\n  compacted[19] = color[2]\n  compacted[20] = color[3]\n\n  for (let i = 0; i < sides.length; i++) {\n    const ci = i * 4 + 21\n    const point0 = sides[i][0]\n    const point1 = sides[i][1]\n    compacted[ci + 0] = point0[0]\n    compacted[ci + 1] = point0[1]\n    compacted[ci + 2] = point1[0]\n    compacted[ci + 3] = point1[1]\n  }\n  // TODO: how about custom properties or fields ?\n  return compacted\n}\n\nmodule.exports = toCompactBinary\n","const mat4 = require('../../maths/mat4')\n\nconst create = require('./create')\n\n/**\n * Transform the given geometry using the given matrix.\n * This is a lazy transform of the sides, as this function only adjusts the transforms.\n * The transforms are applied when accessing the sides via toSides().\n * @param {mat4} matrix - the matrix to transform with\n * @param {geom2} geometry - the geometry to transform\n * @returns {geom2} a new geometry\n * @alias module:modeling/geometries/geom2.transform\n *\n * @example\n * let newgeometry = transform(fromZRotation(degToRad(90)), geometry)\n */\nconst transform = (matrix, geometry) => {\n  const newgeometry = create(geometry.sides) // reuse the sides\n\n  newgeometry.transforms = mat4.multiply(matrix, geometry.transforms)\n  return newgeometry\n}\n\nmodule.exports = transform\n","/**\n * Represents a 2D geometry consisting of a list of sides.\n * @see {@link geom2} for data structure information.\n * @module modeling/geometries/geom2\n */\nmodule.exports = {\n  clone: require('./clone'),\n  create: require('./create'),\n  fromPoints: require('./fromPoints'),\n  fromCompactBinary: require('./fromCompactBinary'),\n  isA: require('./isA'),\n  reverse: require('./reverse'),\n  toOutlines: require('./toOutlines'),\n  toPoints: require('./toPoints'),\n  toSides: require('./toSides'),\n  toString: require('./toString'),\n  toCompactBinary: require('./toCompactBinary'),\n  transform: require('./transform')\n}\n","\n/**\n * Represents a convex 3D polygon. The vertices used to initialize a polygon must\n * be coplanar and form a convex shape. The vertices do not have to be `vec3`\n * instances but they must behave similarly.\n * @typedef {Object} poly3\n * @property {Array} vertices - list of ordered vertices (3D)\n */\n\n/**\n * Creates a new 3D polygon with initial values.\n *\n * @param {Array} [vertices] - a list of vertices (3D)\n * @returns {poly3} a new polygon\n * @alias module:modeling/geometries/poly3.create\n */\nconst create = (vertices) => {\n  if (vertices === undefined || vertices.length < 3) {\n    vertices = [] // empty contents\n  }\n  return { vertices: vertices }\n}\n\nmodule.exports = create\n","const create = require('./create')\n\nconst vec3 = require('../../maths/vec3')\n\n/**\n * Create a deep clone of the given polygon\n *\n * @param {poly3} [out] - receiving polygon\n * @param {poly3} polygon - polygon to clone\n * @returns {poly3} a new polygon\n * @alias module:modeling/geometries/poly3.clone\n */\nconst clone = (...params) => {\n  let out\n  let poly3\n  if (params.length === 1) {\n    out = create()\n    poly3 = params[0]\n  } else {\n    out = params[0]\n    poly3 = params[1]\n  }\n  // deep clone of vertices\n  out.vertices = poly3.vertices.map((vec) => vec3.clone(vec))\n  return out\n}\n\nmodule.exports = clone\n","const vec3 = require('../../maths/vec3')\n\nconst create = require('./create')\n\n/**\n * Create a polygon from the given points.\n *\n * @param {Array} points - list of points (3D)\n * @returns {poly3} a new polygon\n * @alias module:modeling/geometries/poly3.fromPoints\n *\n * @example\n * const points = [\n *   [0,  0, 0],\n *   [0, 10, 0],\n *   [0, 10, 10]\n * ]\n * const polygon = fromPoints(points)\n */\nconst fromPoints = (points) => {\n  const vertices = points.map((point) => vec3.clone(point))\n  return create(vertices)\n}\n\nmodule.exports = fromPoints\n","const create = require('./create')\n\n/**\n * Create a polygon from the given vertices and plane.\n * NOTE: No checks are performed on the parameters.\n * @param {Array} vertices - list of vertices (3D)\n * @param {plane} plane - plane of the polygon\n * @returns {poly3} a new polygon\n * @alias module:modeling/geometries/poly3.fromPointsAndPlane\n */\nconst fromPointsAndPlane = (vertices, plane) => {\n  const poly = create(vertices)\n  poly.plane = plane // retain the plane for later use\n  return poly\n}\n\nmodule.exports = fromPointsAndPlane\n","const create = require('./create')\n\n/**\n * Invert the give polygon to face the opposite direction.\n *\n * @param {poly3} polygon - the polygon to invert\n * @returns {poly3} a new poly3\n * @alias module:modeling/geometries/poly3.invert\n */\nconst invert = (polygon) => {\n  const vertices = polygon.vertices.slice().reverse()\n  return create(vertices)\n}\n\nmodule.exports = invert\n","/**\n * Determin if the given object is a polygon.\n * @param {Object} object - the object to interogate\n * @returns {Boolean} true if the object matches a poly3\n * @alias module:modeling/geometries/poly3.isA\n */\nconst isA = (object) => {\n  if (object && typeof object === 'object') {\n    if ('vertices' in object) {\n      if (Array.isArray(object.vertices)) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nmodule.exports = isA\n","/**\n * Represents a four dimensional vector.\n * See fromValues().\n * @typedef {Array} vec4\n */\n\n/**\n * Creates a new vector initialized to [0,0,0,0].\n *\n * @returns {vec4} a new vector\n * @alias module:modeling/maths/vec4.create\n */\nconst create = () => [0, 0, 0, 0]\n\nmodule.exports = create\n","const create = require('./create')\n\n/**\n * Create a clone of the given vector.\n *\n * @param {vec4} [out] - receiving vector\n * @param {vec4} vector - vector to clone\n * @returns {vec4} a new vector\n * @alias module:modeling/maths/vec4.clone\n */\nconst clone = (...params) => {\n  let out, vec\n  if (params.length === 1) {\n    out = create()\n    vec = params[0]\n  } else {\n    out = params[0]\n    vec = params[1]\n  }\n  out[0] = vec[0]\n  out[1] = vec[1]\n  out[2] = vec[2]\n  out[3] = vec[3]\n  return out\n}\n\nmodule.exports = clone\n","/**\n * Compare the given planes for equality.\n *\n * @param {plane} a - the first plane\n * @param {plane} b - the second plane\n * @return {Boolean} true if planes are equal\n * @alias module:modeling/maths/plane.equals\n */\nconst equals = (a, b) => ((a[0] === b[0]) && (a[1] === b[1]) && (a[2] === b[2]) && (a[3] === b[3]))\n\nmodule.exports = equals\n","const create = require('../vec4/create')\n\n/**\n * Flip the given plane.\n *\n * @param {plane} [out] - receiving plane\n * @param {plane} plane - plane to flip\n * @return {plane} a new plane\n * @alias module:modeling/maths/plane.flip\n */\nconst flip = (...params) => {\n  let out, vec\n  if (params.length === 1) {\n    out = create()\n    vec = params[0]\n  } else {\n    out = params[0]\n    vec = params[1]\n  }\n  out[0] = -vec[0]\n  out[1] = -vec[1]\n  out[2] = -vec[2]\n  out[3] = -vec[3]\n  return out\n}\n\nmodule.exports = flip\n","const create = require('./create')\n\n/**\n * Creates a new vector with the given values.\n *\n * @param {Number} x - X component\n * @param {Number} y - Y component\n * @param {Number} z - Z component\n * @param {Number} w - W component\n * @returns {vec4} a new vector\n * @alias module:modeling/maths/vec4.fromValues\n */\nconst fromValues = (x, y, z, w) => {\n  const out = create()\n  out[0] = x\n  out[1] = y\n  out[2] = z\n  out[3] = w\n  return out\n}\n\nmodule.exports = fromValues\n","const vec3 = require('../vec3')\nconst fromValues = require('../vec4/fromValues')\n\n/**\n * Represents a plane in 3D coordinate space as determined by a normal (perpendicular to the plane)\n * and distance from 0,0,0.\n * The contents of the array are a normal [0,1,2] and a distance [3].\n * @see https://en.wikipedia.org/wiki/Hesse_normal_form\n * @typedef {Array} plane\n */\n\n/**\n * Create a new plane from the given normal and point values.\n * @param {vec3} normal - directional vector\n * @param {vec3} point - origin of plane\n * @returns {plane} a new plane\n * @alias module:modeling/maths/plane.fromNormalAndPoint\n */\nconst fromNormalAndPoint = (normal, point) => {\n  const u = vec3.unit(normal)\n  const w = vec3.dot(point, u)\n\n  return fromValues(u[0], u[1], u[2], w)\n}\n\nmodule.exports = fromNormalAndPoint\n","const vec3 = require('../vec3')\nconst fromValues = require('../vec4/fromValues')\n\n/**\n * Create a plane from the given points.\n *\n * @param {vec3} a - 3D point\n * @param {vec3} b - 3D point\n * @param {vec3} c - 3D point\n * @returns {plane} a new plane\n * @alias module:modeling/maths/plane.fromPoints\n */\nconst fromPoints = (a, b, c) => {\n  const ba = vec3.subtract(b, a)\n  const ca = vec3.subtract(c, a)\n  vec3.cross(ba, ba, ca)\n  vec3.unit(ba, ba) // normal part\n  const w = vec3.dot(ba, a)\n  return fromValues(ba[0], ba[1], ba[2], w)\n}\n\nmodule.exports = fromPoints\n","/**\n * Calculates the dot product of the given vectors.\n *\n * @param {vec4} a - the first vector\n * @param {vec4} b - the second vector\n * @returns {Number} dot product\n * @alias module:modeling/maths/vec4.dot\n */\nconst dot = (a, b) => a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3]\n\nmodule.exports = dot\n","const fromValues = require('./fromValues')\n\n/**\n * Create a new vector from the given scalar value.\n *\n * @param  {Number} scalar\n * @returns {vec4} a new vector\n * @alias module:modeling/maths/vec4.fromScalar\n */\nconst fromScalar = (scalar) => fromValues(scalar, scalar, scalar, scalar)\n\nmodule.exports = fromScalar\n","/**\n * Convert the given vector to a representative string.\n *\n * @param {vec4} vector - vector to convert\n * @returns {String} representative string\n * @alias module:modeling/maths/vec4.toString\n */\nconst toString = (vec) => `(${vec[0].toFixed(9)}, ${vec[1].toFixed(9)}, ${vec[2].toFixed(9)}, ${vec[3].toFixed(9)})`\n\nmodule.exports = toString\n","const create = require('./create')\n\n/**\n * Transform the given vector using the given matrix.\n *\n * @param {vec4} [out] - the receiving vector (optional)\n * @param {mat4} matrix - matrix to transform with\n * @param {vec4} vector - the vector to transform\n * @returns {vec4} a new vector\n * @alias module:modeling/maths/vec4.transform\n */\nconst transform = (...params) => {\n  let out\n  let vector\n  let matrix\n  if (params.length === 2) {\n    out = create()\n    matrix = params[0]\n    vector = params[1]\n  } else {\n    out = params[0]\n    matrix = params[1]\n    vector = params[2]\n  }\n\n  const [x, y, z, w] = vector\n\n  out[0] = Math.fround(matrix[0] * x + matrix[4] * y + matrix[8] * z + matrix[12] * w)\n  out[1] = Math.fround(matrix[1] * x + matrix[5] * y + matrix[9] * z + matrix[13] * w)\n  out[2] = Math.fround(matrix[2] * x + matrix[6] * y + matrix[10] * z + matrix[14] * w)\n  out[3] = Math.fround(matrix[3] * x + matrix[7] * y + matrix[11] * z + matrix[15] * w)\n  return out\n}\n\nmodule.exports = transform\n","/**\n * Represents a four dimensional vector.\n * @see {@link vec4} for data structure information.\n * @module modeling/maths/vec4\n */\nmodule.exports = {\n  clone: require('./clone'),\n  create: require('./create'),\n  dot: require('./dot'),\n  fromScalar: require('./fromScalar'),\n  fromValues: require('./fromValues'),\n  toString: require('./toString'),\n  transform: require('./transform')\n}\n","const { EPS } = require('../constants')\n\nconst vec3 = require('../vec3')\n\nconst { fromValues } = require('../vec4')\n\n/**\n * Create a new plane from the given points like fromPoints,\n * but allow the vectors to be on one point or one line.\n * In such a case, a random plane through the given points is constructed.\n * @param {vec3} a - 3D point\n * @param {vec3} b - 3D point\n * @param {vec3} c - 3D point\n * @returns {plane} a new plane\n * @alias module:modeling/maths/plane.fromPointsRandom\n */\nconst fromPointsRandom = (a, b, c) => {\n  let ba = vec3.subtract(b, a)\n  let ca = vec3.subtract(c, a)\n  if (vec3.length(ba) < EPS) {\n    ba = vec3.orthogonal(ca)\n  }\n  if (vec3.length(ca) < EPS) {\n    ca = vec3.orthogonal(ba)\n  }\n  let normal = vec3.cross(ba, ca)\n  if (vec3.length(normal) < EPS) {\n    // this would mean that ba == ca.negated()\n    ca = vec3.orthogonal(ba)\n    normal = vec3.cross(ba, ca)\n  }\n  normal = vec3.unit(normal)\n  return fromValues(normal[0], normal[1], normal[2], vec3.dot(normal, a))\n}\n\nmodule.exports = fromPointsRandom\n","const vec3 = require('../vec3')\n\n/**\n * Calculate the distance to the given point.\n * @param {plane} plane - plane of reference\n * @param {vec3} point - point of reference\n * @return {Number} signed distance to point\n * @alias module:modeling/maths/plane.signedDistanceToPoint\n */\nconst signedDistanceToPoint = (plane, vector) => vec3.dot(plane, vector) - plane[3]\n\nmodule.exports = signedDistanceToPoint\n","const mat4 = require('../mat4')\nconst vec3 = require('../vec3')\n\nconst fromPoints = require('./fromPoints')\nconst flip = require('./flip')\n\n/**\n * Transform the given plane using the given matrix\n * @param {mat4} matrix - the matrix to transform with\n * @param {plane} plane - the plane to transform\n * @return {Array} a new plane\n * @alias module:modeling/maths/plane.transform\n */\nconst transform = (matrix, plane) => {\n  const ismirror = mat4.isMirroring(matrix)\n  // get two vectors in the plane:\n  const r = vec3.orthogonal(plane)\n  const u = vec3.cross(plane, r)\n  const v = vec3.cross(plane, u)\n  // get 3 points in the plane:\n  let point1 = vec3.multiply(plane, [plane[3], plane[3], plane[3]])\n  let point2 = vec3.add(point1, u)\n  let point3 = vec3.add(point1, v)\n  // transform the points:\n  point1 = vec3.transform(matrix, point1)\n  point2 = vec3.transform(matrix, point2)\n  point3 = vec3.transform(matrix, point3)\n  // and create a new plane from the transformed points:\n  let newplane = fromPoints(point1, point2, point3)\n  if (ismirror) {\n    // the transform is mirroring so mirror the plane\n    newplane = flip(newplane)\n  }\n  return newplane\n}\n\nmodule.exports = transform\n","/**\n * Represents a plane in 3D coordinate space as determined by a normal (perpendicular to the plane)\n * and distance from 0,0,0.\n * @see {@link plane} for data structure information.\n * @module modeling/maths/plane\n */\nmodule.exports = {\n  /**\n   * @see [vec4.clone()]{@link module:modeling/maths/vec4.clone}\n   * @function clone\n   */\n  clone: require('../vec4/clone'),\n  /**\n   * @see [vec4.create()]{@link module:modeling/maths/vec4.create}\n   * @function create\n   */\n  create: require('../vec4/create'),\n  equals: require('./equals'),\n  flip: require('./flip'),\n  fromNormalAndPoint: require('./fromNormalAndPoint'),\n  /**\n   * @see [vec4.fromValues()]{@link module:modeling/maths/vec4.fromValues}\n   * @function fromValues\n   */\n  fromValues: require('../vec4/fromValues'),\n  fromPoints: require('./fromPoints'),\n  fromPointsRandom: require('./fromPointsRandom'),\n  signedDistanceToPoint: require('./signedDistanceToPoint'),\n  /**\n   * @see [vec4.toString()]{@link module:modeling/maths/vec4.toString}\n   * @function toString\n   */\n  toString: require('../vec4/toString'),\n  transform: require('./transform')\n}\n","const plane = require('../../maths/plane')\nconst vec3 = require('../../maths/vec3')\n\n/**\n * Check whether the given polygon is convex.\n * @param {poly3} polygon - the polygon to interogate\n * @returns {Boolean} true if convex\n * @alias module:modeling/geometries/poly3.isConvex\n */\nconst isConvex = (poly3) => areVerticesConvex(poly3.vertices)\n\nconst areVerticesConvex = (vertices) => {\n  const numvertices = vertices.length\n  if (numvertices > 2) {\n    // note: plane ~= normal point\n    const normal = plane.fromPoints(vertices[0], vertices[1], vertices[2])\n    let prevprevpos = vertices[numvertices - 2]\n    let prevpos = vertices[numvertices - 1]\n    for (let i = 0; i < numvertices; i++) {\n      const pos = vertices[i]\n      if (!isConvexPoint(prevprevpos, prevpos, pos, normal)) {\n        return false\n      }\n      prevprevpos = prevpos\n      prevpos = pos\n    }\n  }\n  return true\n}\n\n// calculate whether three points form a convex corner\n//  prevpoint, point, nextpoint: the 3 coordinates (Vector3D instances)\n//  normal: the normal vector of the plane\nconst isConvexPoint = (prevpoint, point, nextpoint, normal) => {\n  const crossproduct = vec3.cross(\n    vec3.subtract(point, prevpoint),\n    vec3.subtract(nextpoint, point)\n  )\n  const crossdotnormal = vec3.dot(crossproduct, normal)\n  return crossdotnormal >= 0\n}\n\nmodule.exports = isConvex\n","const vec3 = require('../../maths/vec3')\n\n/**\n * Measure the area of the given polygon.\n * @see 2000 softSurfer http://geomalgorithms.com\n * @param {poly3} polygon - the polygon to measure\n * @return {Number} area of the polygon\n * @alias module:modeling/geometries/poly3.measureArea\n */\nconst measureArea = (poly3) => {\n  const n = poly3.vertices.length\n  if (n < 3) {\n    return 0 // degenerate polygon\n  }\n  const vertices = poly3.vertices\n\n  // calculate a real normal\n  const a = vertices[0]\n  const b = vertices[1]\n  const c = vertices[2]\n  const ba = vec3.subtract(b, a)\n  const ca = vec3.subtract(c, a)\n  const normal = vec3.cross(ba, ca)\n\n  // determin direction of projection\n  const ax = Math.abs(normal[0])\n  const ay = Math.abs(normal[1])\n  const az = Math.abs(normal[2])\n  const an = Math.sqrt((ax * ax) + (ay * ay) + (az * az)) // length of normal\n\n  let coord = 3 // ignore Z coordinates\n  if ((ax > ay) && (ax > az)) {\n    coord = 1 // ignore X coordinates\n  } else\n  if (ay > az) {\n    coord = 2 // ignore Y coordinates\n  }\n\n  let area = 0\n  let h = 0\n  let i = 1\n  let j = 2\n  switch (coord) {\n    case 1: // ignore X coordinates\n      // compute area of 2D projection\n      for (i = 1; i < n; i++) {\n        h = i - 1\n        j = (i + 1) % n\n        area += (vertices[i][1] * (vertices[j][2] - vertices[h][2]))\n      }\n      area += (vertices[0][1] * (vertices[1][2] - vertices[n - 1][2]))\n      // scale to get area\n      area *= (an / (2 * normal[0]))\n      break\n\n    case 2: // ignore Y coordinates\n      // compute area of 2D projection\n      for (i = 1; i < n; i++) {\n        h = i - 1\n        j = (i + 1) % n\n        area += (vertices[i][2] * (vertices[j][0] - vertices[h][0]))\n      }\n      area += (vertices[0][2] * (vertices[1][0] - vertices[n - 1][0]))\n      // scale to get area\n      area *= (an / (2 * normal[1]))\n      break\n\n    case 3: // ignore Z coordinates\n    default:\n      // compute area of 2D projection\n      for (i = 1; i < n; i++) {\n        h = i - 1\n        j = (i + 1) % n\n        area += (vertices[i][0] * (vertices[j][1] - vertices[h][1]))\n      }\n      area += (vertices[0][0] * (vertices[1][1] - vertices[n - 1][1]))\n      // scale to get area\n      area *= (an / (2 * normal[2]))\n      break\n  }\n  return area\n}\n\nmodule.exports = measureArea\n","const vec3 = require('../../maths/vec3')\n\n/**\n * @param {poly3} polygon - the polygon to measure\n * @returns {Array} an array of two vectors (3D);  minimum and maximum coordinates\n * @alias module:modeling/geometries/poly3.measureBoundingBox\n */\nconst measureBoundingBox = (poly3) => {\n  const vertices = poly3.vertices\n  const numvertices = vertices.length\n  const min = numvertices === 0 ? vec3.create() : vec3.clone(vertices[0])\n  const max = vec3.clone(min)\n  for (let i = 1; i < numvertices; i++) {\n    vec3.min(min, min, vertices[i])\n    vec3.max(max, max, vertices[i])\n  }\n  return [min, max]\n}\n\nmodule.exports = measureBoundingBox\n","const vec3 = require('../../maths/vec3')\nconst measureBoundingBox = require('./measureBoundingBox')\n\n/**\n * Measure the bounding sphere of the given polygon.\n * @param {poly3} polygon - the polygon to measure\n * @returns {Array} the computed bounding sphere; center point (3D) and radius\n * @alias module:modeling/geometries/poly3.measureBoundingSphere\n */\nconst measureBoundingSphere = (poly3) => {\n  const box = measureBoundingBox(poly3)\n  const center = box[0]\n  vec3.add(center, box[0], box[1])\n  vec3.scale(center, 0.5, center)\n  const radius = vec3.distance(center, box[1])\n  return [center, radius]\n}\n\nmodule.exports = measureBoundingSphere\n","const vec3 = require('../../maths/vec3')\n\n/**\n * Measure the signed volume of the given polygon, which must be convex.\n * The volume is that formed by the tetrahedon connected to the axis [0,0,0],\n * and will be positive or negative based on the rotation of the vertices.\n * @see http://chenlab.ece.cornell.edu/Publication/Cha/icip01_Cha.pdf\n * @param {poly3} polygon - the polygon to measure\n * @return {Number} volume of the polygon\n * @alias module:modeling/geometries/poly3.measureSignedVolume\n */\nconst measureSignedVolume = (poly3) => {\n  let signedVolume = 0\n  const vertices = poly3.vertices\n  // calculate based on triangluar polygons\n  for (let i = 0; i < vertices.length - 2; i++) {\n    const cross = vec3.cross(vertices[i + 1], vertices[i + 2])\n    signedVolume += vec3.dot(vertices[0], cross)\n  }\n  signedVolume /= 6\n  return signedVolume\n}\n\nmodule.exports = measureSignedVolume\n","const mplane = require('../../maths/plane/')\n\nconst plane = (polygon) => {\n  if (!polygon.plane) {\n    const vertices = polygon.vertices\n    polygon.plane = mplane.fromPoints(vertices[0], vertices[1], vertices[2])\n  }\n  return polygon.plane\n}\n\nmodule.exports = plane\n","/**\n * Return the given geometry as a list of points.\n * NOTE: The returned array should not be modified as the points are shared with the geometry.\n * @param {poly3} polygon - the polygon\n * @return {Array} list of points (3D)\n * @alias module:modeling/geometries/poly3.toPoints\n */\nconst toPoints = (geometry) => geometry.vertices\n\nmodule.exports = toPoints\n","const vec3 = require('../../maths/vec3/')\n\n/**\n * @param {poly3} polygon - the polygon to measure\n * @return {String} the string representation\n * @alias module:modeling/geometries/poly3.toString\n */\nconst toString = (poly3) => {\n  let result = 'poly3: vertices: ['\n  poly3.vertices.forEach((vertex) => {\n    result += `${vec3.toString(vertex)}, `\n  })\n  result += ']'\n  return result\n}\n\nmodule.exports = toString\n","const mat4 = require('../../maths/mat4')\nconst vec3 = require('../../maths/vec3')\n\nconst create = require('./create')\n\n/**\n * Transform the given polygon using the given matrix.\n * @param {mat4} matrix - the matrix to transform with\n * @param {poly3} polygon - the polygon to transform\n * @returns {poly3} a new polygon\n * @alias module:modeling/geometries/poly3.transform\n */\nconst transform = (matrix, poly3) => {\n  const vertices = poly3.vertices.map((vertex) => vec3.transform(matrix, vertex))\n  if (mat4.isMirroring(matrix)) {\n    // reverse the order to preserve the orientation\n    vertices.reverse()\n  }\n  return create(vertices)\n}\n\nmodule.exports = transform\n","/**\n * Represents a convex 3D polygon consisting of a list of vertices.\n * @see {@link poly3} for data structure information.\n * @module modeling/geometries/poly3\n */\nmodule.exports = {\n  clone: require('./clone'),\n  create: require('./create'),\n  fromPoints: require('./fromPoints'),\n  fromPointsAndPlane: require('./fromPointsAndPlane'),\n  invert: require('./invert'),\n  isA: require('./isA'),\n  isConvex: require('./isConvex'),\n  measureArea: require('./measureArea'),\n  measureBoundingBox: require('./measureBoundingBox'),\n  measureBoundingSphere: require('./measureBoundingSphere'),\n  measureSignedVolume: require('./measureSignedVolume'),\n  plane: require('./plane'),\n  toPoints: require('./toPoints'),\n  toString: require('./toString'),\n  transform: require('./transform')\n}\n","const mat4 = require('../../maths/mat4')\n\n/**\n * Represents a 3D geometry consisting of a list of polygons.\n * @typedef {Object} geom3\n * @property {Array} polygons - list of polygons, each polygon containing three or more points\n * @property {Boolean} isRetesselated - true if retesselation has been performed\n * @property {mat4} transforms - transforms to apply to the sides, see transform()\n */\n\n/**\n * Create a new 3D geometry composed of the given polygons.\n * @param {Array} [polygons] - list of polygons, or undefined\n * @returns {geom3} a new geometry\n * @alias module:modeling/geometries/geom3.create\n */\nconst create = (polygons) => {\n  if (polygons === undefined) {\n    polygons = [] // empty contents\n  }\n  return {\n    polygons: polygons,\n    isRetesselated: false,\n    transforms: mat4.create()\n  }\n}\n\nmodule.exports = create\n","const mat4 = require('../../maths/mat4')\n\nconst poly3 = require('../poly3')\n\nconst create = require('./create')\n\n/**\n * Performs a deep clone of the given geometry.\n * @param {geom3} geometry - the geometry to clone\n * @returns {geom3} a new geometry\n * @alias module:modeling/geometries/geom3.clone\n */\nconst clone = (geometry) => {\n  const out = create()\n  out.polygons = geometry.polygons.map((polygon) => poly3.clone(polygon))\n  out.isRetesselated = geometry.isRetesselated\n  out.transforms = mat4.clone(geometry.transforms)\n  return out\n}\n\nmodule.exports = clone\n","const poly3 = require('../poly3')\n\nconst create = require('./create')\n\n/**\n * Construct a new 3D geometry from a list of points.\n * The list of points should contain sub-arrays, each defining a single polygon of points.\n * In addition, the points should follow the right-hand rule for rotation in order to\n * define an external facing polygon.\n * @param {Array} listofpoints - list of lists, where each list is a set of points to construct a polygon\n * @returns {geom3} a new geometry\n * @alias module:modeling/geometries/geom3.fromPoints\n */\nconst fromPoints = (listofpoints) => {\n  if (!Array.isArray(listofpoints)) {\n    throw new Error('the given points must be an array')\n  }\n\n  const polygons = listofpoints.map((points, index) => {\n    // TODO catch the error, and rethrow with index\n    const polygon = poly3.fromPoints(points)\n    return polygon\n  })\n  const result = create(polygons)\n  return result\n}\n\nmodule.exports = fromPoints\n","const vec3 = require('../../maths/vec3')\nconst mat4 = require('../../maths/mat4')\n\nconst poly3 = require('../poly3')\n\nconst create = require('./create')\n\n/**\n * Construct a new 3D geometry from the given compact binary data.\n * @param {TypedArray} data - compact binary data\n * @returns {geom3} a new geometry\n * @alias module:modeling/geometries/geom3.fromCompactBinary\n */\nconst fromCompactBinary = (data) => {\n  if (data[0] !== 1) throw new Error('invalid compact binary data')\n\n  const created = create()\n\n  created.transforms = mat4.clone(data.slice(1, 17))\n\n  created.isRetesselated = !!data[17]\n\n  const numberOfVertices = data[22]\n  let ci = 23\n  let vi = data.length - (numberOfVertices * 3)\n  while (vi < data.length) {\n    const verticesPerPolygon = data[ci]\n    ci++\n\n    const vertices = []\n    for (let i = 0; i < verticesPerPolygon; i++) {\n      vertices.push(vec3.fromValues(data[vi], data[vi + 1], data[vi + 2]))\n      vi += 3\n    }\n    created.polygons.push(poly3.create(vertices))\n  }\n\n  // transfer known properities, i.e. color\n  if (data[18] >= 0) {\n    created.color = [data[18], data[19], data[20], data[21]]\n  }\n  // TODO: how about custom properties or fields ?\n  return created\n}\n\nmodule.exports = fromCompactBinary\n","const mat4 = require('../../maths/mat4')\n\nconst poly3 = require('../poly3')\n\n/*\n * Apply the transforms of the given geometry.\n * NOTE: This function must be called BEFORE exposing any data. See toPolygons.\n * @param {geom3} geometry - the geometry to transform\n * @returns {geom3} the given geometry\n * @example\n * geometry = applyTransforms(geometry)\n */\nconst applyTransforms = (geometry) => {\n  if (mat4.equals(geometry.transforms, mat4.identity())) return geometry\n\n  // apply transforms to each polygon\n  // const isMirror = mat4.isMirroring(geometry.transforms)\n  // TBD if (isMirror) newvertices.reverse()\n  geometry.polygons = geometry.polygons.map((polygon) => poly3.transform(geometry.transforms, polygon))\n  mat4.identity(geometry.transforms)\n  return geometry\n}\n\nmodule.exports = applyTransforms\n","const applyTransforms = require('./applyTransforms')\n\n/**\n * Produces an array of polygons from the given geometry, after applying transforms.\n * The returned array should not be modified as the polygons are shared with the geometry.\n * @param {geom3} geometry - the geometry\n * @returns {Array} an array of polygons\n * @alias module:modeling/geometries/geom3.toPolygons\n *\n * @example\n * let sharedpolygons = toPolygons(geometry)\n */\nconst toPolygons = (geometry) => applyTransforms(geometry).polygons\n\nmodule.exports = toPolygons\n","const poly3 = require('../poly3')\n\nconst create = require('./create')\nconst toPolygons = require('./toPolygons')\n\n/**\n * Invert the given geometry, transposing solid and empty space.\n * @params {geom3} geometry - the geometry to invert\n * @returns {geom3} a new geometry\n * @alias module:modeling/geometries/geom3.invert\n */\nconst invert = (geometry) => {\n  const polygons = toPolygons(geometry)\n  const newpolygons = polygons.map((polygon) => poly3.invert(polygon))\n  return create(newpolygons)\n}\n\nmodule.exports = invert\n","/**\n * Determin if the given object is a 3D geometry.\n * @param {object} object - the object to interogate\n * @returns {Boolean} true if the object matches a geom3\n * @alias module:modeling/geometries/geom3.isA\n */\nconst isA = (object) => {\n  if (object && typeof object === 'object') {\n    if ('polygons' in object && 'transforms' in object) {\n      if (Array.isArray(object.polygons) && 'length' in object.transforms) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nmodule.exports = isA\n","const poly3 = require('../poly3')\n\nconst toPolygons = require('./toPolygons')\n\n/**\n * Return the given geometry as a list of points, after applying transforms.\n * The returned array should not be modified as the points are shared with the geometry.\n * @return {Array} list of points, where each sub-array represents a polygon\n * @alias module:modeling/geometries/geom3.toPoints\n */\nconst toPoints = (geometry) => {\n  const polygons = toPolygons(geometry)\n  const listofpoints = polygons.map((polygon) => poly3.toPoints(polygon))\n  return listofpoints\n}\n\nmodule.exports = toPoints\n","const poly3 = require('../poly3')\n\nconst toPolygons = require('./toPolygons')\n\n/**\n * Create a string representing the contents of the given geometry.\n * @param {geom3} geometry - the geometry\n * @returns {String} a representive string\n * @alias module:modeling/geometries/geom3.toString\n *\n * @example\n * console.out(toString(geometry))\n */\nconst toString = (geometry) => {\n  const polygons = toPolygons(geometry)\n  let result = 'geom3 (' + polygons.length + ' polygons):\\n'\n  polygons.forEach((polygon) => {\n    result += '  ' + poly3.toString(polygon) + '\\n'\n  })\n  return result\n}\n\nmodule.exports = toString\n","const poly3 = require('../poly3')\n\n/**\n * Return the given geometry in compact binary representation.\n * @param {geom3} geometry - the geometry\n * @return {TypedArray} compact binary representation\n * @alias module:modeling/geometries/geom3.toCompactBinary\n */\nconst toCompactBinary = (geom) => {\n  const polygons = geom.polygons\n  const transforms = geom.transforms\n\n  const numberOfPolygons = polygons.length\n  const numberOfVertices = polygons.reduce((count, polygon) => count + polygon.vertices.length, 0)\n  let color = [-1, -1, -1, -1]\n  if (geom.color) color = geom.color\n\n  // FIXME why Float32Array?\n  const compacted = new Float32Array(1 + 16 + 1 + 4 + 1 + numberOfPolygons + (numberOfVertices * 3))\n  // type + transforms + isRetesselated + color + numberOfPolygons + numberOfVerticesPerPolygon[] + vertices data[]\n\n  compacted[0] = 1 // type code: 0 => geom2, 1 => geom3 , 2 => path2\n\n  compacted[1] = transforms[0]\n  compacted[2] = transforms[1]\n  compacted[3] = transforms[2]\n  compacted[4] = transforms[3]\n  compacted[5] = transforms[4]\n  compacted[6] = transforms[5]\n  compacted[7] = transforms[6]\n  compacted[8] = transforms[7]\n  compacted[9] = transforms[8]\n  compacted[10] = transforms[9]\n  compacted[11] = transforms[10]\n  compacted[12] = transforms[11]\n  compacted[13] = transforms[12]\n  compacted[14] = transforms[13]\n  compacted[15] = transforms[14]\n  compacted[16] = transforms[15]\n\n  compacted[17] = geom.isRetesselated ? 1 : 0\n\n  compacted[18] = color[0]\n  compacted[19] = color[1]\n  compacted[20] = color[2]\n  compacted[21] = color[3]\n\n  compacted[22] = numberOfVertices\n\n  let ci = 23\n  let vi = ci + numberOfPolygons\n  polygons.forEach((polygon) => {\n    const points = poly3.toPoints(polygon)\n    // record the number of vertices per polygon\n    compacted[ci] = points.length\n    ci++\n    // convert the vertices\n    for (let i = 0; i < points.length; i++) {\n      const point = points[i]\n      compacted[vi + 0] = point[0]\n      compacted[vi + 1] = point[1]\n      compacted[vi + 2] = point[2]\n      vi += 3\n    }\n  })\n  // TODO: how about custom properties or fields ?\n  return compacted\n}\n\nmodule.exports = toCompactBinary\n","const mat4 = require('../../maths/mat4')\n\nconst create = require('./create')\n\n/**\n * Transform the given geometry using the given matrix.\n * This is a lazy transform of the polygons, as this function only adjusts the transforms.\n * See applyTransforms() for the actual application of the transforms to the polygons.\n * @param {mat4} matrix - the matrix to transform with\n * @param {geom3} geometry - the geometry to transform\n * @returns {geom3} a new geometry\n * @alias module:modeling/geometries/geom3.transform\n *\n * @example\n * let newgeometry = transform(fromXRotation(degToRad(90)), geometry)\n */\nconst transform = (matrix, geometry) => {\n  const newgeometry = create(geometry.polygons) // reuse the polygons\n  newgeometry.isRetesselated = geometry.isRetesselated\n\n  newgeometry.transforms = mat4.multiply(matrix, geometry.transforms)\n  return newgeometry\n}\n\nmodule.exports = transform\n","/**\n * Represents a 3D geometry consisting of a list of polygons.\n * @see {@link geom3} for data structure information.\n * @module modeling/geometries/geom3\n */\nmodule.exports = {\n  clone: require('./clone'),\n  create: require('./create'),\n  fromPoints: require('./fromPoints'),\n  fromCompactBinary: require('./fromCompactBinary'),\n  invert: require('./invert'),\n  isA: require('./isA'),\n  toPoints: require('./toPoints'),\n  toPolygons: require('./toPolygons'),\n  toString: require('./toString'),\n  toCompactBinary: require('./toCompactBinary'),\n  transform: require('./transform')\n}\n","const mat4 = require('../../maths/mat4')\n\n/**\n * Represents a 2D geometry consisting of a list of ordered points.\n * @typedef {Object} path2\n * @property {Array} points - list of ordered points\n * @property {Boolean} isClosed - true if the path is closed where start and end points are the same\n * @property {mat4} transforms - transforms to apply to the points, see transform()\n */\n\n/**\n * Create an empty, open path.\n * @returns {path2} a new path\n * @alias module:modeling/geometries/path2.create\n *\n * @example\n * let newpath = create()\n */\nconst create = (points) => {\n  if (points === undefined) {\n    points = []\n  }\n  return {\n    points: points,\n    isClosed: false,\n    transforms: mat4.identity()\n  }\n}\n\nmodule.exports = create\n","const mat4 = require('../../maths/mat4')\nconst vec2 = require('../../maths/vec2')\n\nconst create = require('./create')\n\n/**\n * Performs a deep clone of the give geometry.\n * @param {path2} geometry - the geometry to clone\n * @returns {path2} a new path\n * @alias module:modeling/geometries/path2.clone\n */\nconst clone = (geometry) => {\n  const out = create()\n  out.points = geometry.points.map((point) => vec2.clone(point))\n  out.isClosed = geometry.isClosed\n  out.transforms = mat4.clone(geometry.transforms)\n  return out\n}\n\nmodule.exports = clone\n","const { EPS } = require('../../maths/constants')\n\nconst vec2 = require('../../maths/vec2')\n\nconst clone = require('./clone')\n\n/**\n * Close the given geometry.\n * @param {path2} geometry - the path to close\n * @returns {path2} a new path\n * @alias module:modeling/geometries/path2.close\n */\nconst close = (geometry) => {\n  if (geometry.isClosed) return geometry\n\n  const cloned = clone(geometry)\n  cloned.isClosed = true\n\n  if (cloned.points.length > 1) {\n    // make sure the paths are formed properly\n    const points = cloned.points\n    const p0 = points[0]\n    let pn = points[points.length - 1]\n    while (vec2.distance(p0, pn) < (EPS * EPS)) {\n      points.pop()\n      if (points.length === 1) break\n      pn = points[points.length - 1]\n    }\n  }\n  return cloned\n}\n\nmodule.exports = close\n","const { EPS } = require('../../maths/constants')\n\nconst vec2 = require('../../maths/vec2')\n\nconst close = require('./close')\nconst create = require('./create')\n\n/**\n * Create a new path from the given points.\n * The points must be provided an array of points,\n * where each point is an array of two numbers.\n * @param {Object} options - options for construction\n * @param {Boolean} [options.closed=false] - if the path should be open or closed\n * @param {Array} points - array of points (2D) from which to create the path\n * @returns {path2} a new path\n * @alias module:modeling/geometries/path2.fromPoints\n *\n * @example:\n * my newpath = fromPoints({closed: true}, [[10, 10], [-10, 10]])\n */\nconst fromPoints = (options, points) => {\n  const defaults = { closed: false }\n  let { closed } = Object.assign({}, defaults, options)\n\n  let created = create()\n  created.points = points.map((point) => vec2.fromArray(point))\n\n  // check if first and last points are equal\n  if (created.points.length > 1) {\n    const p0 = created.points[0]\n    const pn = created.points[created.points.length - 1]\n    if (vec2.distance(p0, pn) < (EPS * EPS)) {\n      // and close automatically\n      closed = true\n    }\n  }\n  if (closed === true) created = close(created)\n\n  return created\n}\n\nmodule.exports = fromPoints\n","const mat4 = require('../../maths/mat4')\nconst vec2 = require('../../maths/vec2')\n\n/*\n * Apply the transforms of the given geometry.\n * NOTE: This function must be called BEFORE exposing any data. See toPoints.\n * @param {path} geometry - the geometry to transform\n * @returns {path} the given geometry\n * @example\n * geometry = applyTransforms(geometry)\n */\nconst applyTransforms = (geometry) => {\n  if (mat4.equals(geometry.transforms, mat4.identity())) return geometry\n\n  geometry.points = geometry.points.map((point) => vec2.transform(geometry.transforms, point))\n  mat4.identity(geometry.transforms)\n  return geometry\n}\n\nmodule.exports = applyTransforms\n","const applyTransforms = require('./applyTransforms')\n\n/**\n * Produces an array of points from the given geometry.\n * The returned array should not be modified as the data is shared with the geometry.\n * @param {path2} geometry - the geometry\n * @returns {Array} an array of points\n * @alias module:modeling/geometries/path2.toPoints\n *\n * @example\n * let sharedpoints = toPoints(geometry)\n */\nconst toPoints = (geometry) => applyTransforms(geometry).points\n\nmodule.exports = toPoints\n","const vec2 = require('../../maths/vec2')\n\nconst fromPoints = require('./fromPoints')\nconst toPoints = require('./toPoints')\n\n/**\n * Append a series of points to the given geometry that represent an arc.\n * This implementation follows the SVG specifications.\n * @see http://www.w3.org/TR/SVG/paths.html#PathDataEllipticalArcCommands\n * @param {Object} options - options for construction\n * @param {vec2} options.endpoint - end point of arc (REQUIRED)\n * @param {vec2} [options.radius=[0,0]] - radius of arc (X and Y)\n * @param {Number} [options.xaxisrotation=0] - rotation (RADIANS) of the X axis of the arc with respect to the X axis of the coordinate system\n * @param {Boolean} [options.clockwise=false] - draw an arc clockwise with respect to the center point\n * @param {Boolean} [options.large=false] - draw an arc longer than PI radians\n * @param {Number} [options.segments=16] - number of segments per full rotation\n * @param {path2} geometry - the path of which to append the arc\n * @returns {path2} a new path with the appended points\n * @alias module:modeling/geometries/path2.appendArc\n *\n * @example\n * let p1 = path2.fromPoints({}, [[27.5,-22.96875]]);\n * p1 = path2.appendPoints([[27.5,-3.28125]], p1);\n * p1 = path2.appendArc({endpoint: [12.5, -22.96875], radius: [15, -19.6875]}, p1);\n */\nconst appendArc = (options, geometry) => {\n  const defaults = {\n    radius: [0, 0], // X and Y radius\n    xaxisrotation: 0,\n    clockwise: false,\n    large: false,\n    segments: 16\n  }\n  let { endpoint, radius, xaxisrotation, clockwise, large, segments } = Object.assign({}, defaults, options)\n\n  // validate the given options\n  if (!Array.isArray(endpoint)) throw new Error('endpoint must be an array of X and Y values')\n  if (endpoint.length < 2) throw new Error('endpoint must contain X and Y values')\n  endpoint = vec2.fromArray(endpoint)\n\n  if (!Array.isArray(radius)) throw new Error('radius must be an array of X and Y values')\n  if (radius.length < 2) throw new Error('radius must contain X and Y values')\n\n  if (segments < 4) throw new Error('segments must be four or more')\n\n  const decimals = 100000\n\n  // validate the given geometry\n  if (geometry.isClosed) {\n    throw new Error('the given path cannot be closed')\n  }\n\n  const points = toPoints(geometry)\n  if (points.length < 1) {\n    throw new Error('the given path must contain one or more points (as the starting point for the arc)')\n  }\n\n  let xradius = radius[0]\n  let yradius = radius[1]\n  const startpoint = points[points.length - 1]\n\n  // round to precision in order to have determinate calculations\n  xradius = Math.round(xradius * decimals) / decimals\n  yradius = Math.round(yradius * decimals) / decimals\n  endpoint = vec2.fromValues(Math.round(endpoint[0] * decimals) / decimals, Math.round(endpoint[1] * decimals) / decimals)\n\n  const sweepFlag = !clockwise\n  let newpoints = []\n  if ((xradius === 0) || (yradius === 0)) {\n    // http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes:\n    // If rx = 0 or ry = 0, then treat this as a straight line from (x1, y1) to (x2, y2) and stop\n    newpoints.push(endpoint)\n  } else {\n    xradius = Math.abs(xradius)\n    yradius = Math.abs(yradius)\n\n    // see http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes :\n    const phi = xaxisrotation\n    const cosphi = Math.cos(phi)\n    const sinphi = Math.sin(phi)\n    const minushalfdistance = vec2.scale(0.5, vec2.subtract(startpoint, endpoint))\n    // F.6.5.1:\n    // round to precision in order to have determinate calculations\n    const x = Math.round((cosphi * minushalfdistance[0] + sinphi * minushalfdistance[1]) * decimals) / decimals\n    const y = Math.round((-sinphi * minushalfdistance[0] + cosphi * minushalfdistance[1]) * decimals) / decimals\n    const startTranslated = vec2.fromValues(x, y)\n    // F.6.6.2:\n    const biglambda = (startTranslated[0] * startTranslated[0]) / (xradius * xradius) + (startTranslated[1] * startTranslated[1]) / (yradius * yradius)\n    if (biglambda > 1.0) {\n      // F.6.6.3:\n      const sqrtbiglambda = Math.sqrt(biglambda)\n      xradius *= sqrtbiglambda\n      yradius *= sqrtbiglambda\n      // round to precision in order to have determinate calculations\n      xradius = Math.round(xradius * decimals) / decimals\n      yradius = Math.round(yradius * decimals) / decimals\n    }\n    // F.6.5.2:\n    let multiplier1 = Math.sqrt((xradius * xradius * yradius * yradius - xradius * xradius * startTranslated[1] * startTranslated[1] - yradius * yradius * startTranslated[0] * startTranslated[0]) / (xradius * xradius * startTranslated[1] * startTranslated[1] + yradius * yradius * startTranslated[0] * startTranslated[0]))\n    if (sweepFlag === large) multiplier1 = -multiplier1\n    let centerTranslated = vec2.fromValues(xradius * startTranslated[1] / yradius, -yradius * startTranslated[0] / xradius)\n    centerTranslated = vec2.scale(multiplier1, centerTranslated)\n    // F.6.5.3:\n    let center = vec2.fromValues(cosphi * centerTranslated[0] - sinphi * centerTranslated[1], sinphi * centerTranslated[0] + cosphi * centerTranslated[1])\n    center = vec2.add(center, vec2.scale(0.5, vec2.add(startpoint, endpoint)))\n\n    // F.6.5.5:\n    const vector1 = vec2.fromValues((startTranslated[0] - centerTranslated[0]) / xradius, (startTranslated[1] - centerTranslated[1]) / yradius)\n    const vector2 = vec2.fromValues((-startTranslated[0] - centerTranslated[0]) / xradius, (-startTranslated[1] - centerTranslated[1]) / yradius)\n    const theta1 = vec2.angleRadians(vector1)\n    const theta2 = vec2.angleRadians(vector2)\n    let deltatheta = theta2 - theta1\n    deltatheta = deltatheta % (2 * Math.PI)\n    if ((!sweepFlag) && (deltatheta > 0)) {\n      deltatheta -= 2 * Math.PI\n    } else if ((sweepFlag) && (deltatheta < 0)) {\n      deltatheta += 2 * Math.PI\n    }\n\n    // Ok, we have the center point and angle range (from theta1, deltatheta radians) so we can create the ellipse\n    let numsteps = Math.ceil(Math.abs(deltatheta) / (2 * Math.PI) * segments) + 1\n    if (numsteps < 1) numsteps = 1\n    for (let step = 1; step <= numsteps; step++) {\n      const theta = theta1 + step / numsteps * deltatheta\n      const costheta = Math.cos(theta)\n      const sintheta = Math.sin(theta)\n      // F.6.3.1:\n      let point = vec2.fromValues(cosphi * xradius * costheta - sinphi * yradius * sintheta, sinphi * xradius * costheta + cosphi * yradius * sintheta)\n      point = vec2.add(point, center)\n      newpoints.push(point)\n    }\n  }\n  newpoints = points.concat(newpoints)\n  const result = fromPoints({}, newpoints)\n  return result\n}\n\nmodule.exports = appendArc\n","const fromPoints = require('./fromPoints')\nconst toPoints = require('./toPoints')\n\n/**\n * Append the given list of points to the end of the given geometry.\n * @param {Array} points - the points (2D) to append to the given path\n * @param {path2} geometry - the given path\n * @returns {path2} a new path with the appended points\n * @alias module:modeling/geometries/path2.appendPoints\n * @example\n * let newpath = appendPoints([[3, 4], [4, 5]], oldpath)\n */\nconst appendPoints = (points, geometry) => {\n  if (geometry.isClosed) {\n    throw new Error('cannot append points to a closed path')\n  }\n\n  let newpoints = toPoints(geometry)\n  newpoints = newpoints.concat(points)\n\n  return fromPoints({}, newpoints)\n}\n\nmodule.exports = appendPoints\n","const vec2 = require('../../maths/vec2')\n\nconst appendPoints = require('./appendPoints')\nconst toPoints = require('./toPoints')\n\n/**\n * Append a series of points to the given geometry that represent a Bezier curve.\n * The Bézier curve starts at the last point in the given geometry, and ends at the last control point.\n * The other control points are intermediate control points to transition the curve from start to end points.\n * The first control point may be null to ensure a smooth transition occurs. In this case,\n * the second to last point of the given geometry is mirrored into the control points of the Bezier curve.\n * In other words, the trailing gradient of the geometry matches the new gradient of the curve.\n * @param {Object} options - options for construction\n * @param {Array} options.controlPoints - list of control points (2D) for the bezier curve\n * @param {Number} [options.segment=16] - number of segments per 360 rotation\n * @param {path2} geometry - the path of which to appended points\n * @returns {path2} a new path with the appended points\n * @alias module:modeling/geometries/path2.appendBezier\n *\n * @example\n * let p5 = path2.create({}, [[10,-20]])\n * p5 = path2.appendBezier({controlPoints: [[10,-10],[25,-10],[25,-20]]}, p5);\n * p5 = path2.appendBezier({controlPoints: [null, [25,-30],[40,-30],[40,-20]]}, p5)\n */\nconst appendBezier = (options, geometry) => {\n  const defaults = {\n    segments: 16\n  }\n  let { controlPoints, segments } = Object.assign({}, defaults, options)\n\n  // validate the given options\n  if (!Array.isArray(controlPoints)) throw new Error('controlPoints must be an array of one or more points')\n  if (controlPoints.length < 1) throw new Error('controlPoints must be an array of one or more points')\n\n  if (segments < 4) throw new Error('segments must be four or more')\n\n  // validate the given geometry\n  if (geometry.isClosed) {\n    throw new Error('the given geometry cannot be closed')\n  }\n\n  const points = toPoints(geometry)\n  if (points.length < 1) {\n    throw new Error('the given path must contain one or more points (as the starting point for the bezier curve)')\n  }\n\n  // make a copy of the control points\n  controlPoints = controlPoints.slice()\n\n  // special handling of null control point (only first is allowed)\n  const firstControlPoint = controlPoints[0]\n  if (firstControlPoint === null) {\n    if (controlPoints.length < 2) {\n      throw new Error('a null control point must be passed with one more control points')\n    }\n    // special handling of a previous bezier curve\n    let lastBezierControlPoint = points[points.length - 2]\n    if ('lastBezierControlPoint' in geometry) {\n      lastBezierControlPoint = geometry.lastBezierControlPoint\n    }\n    if (!Array.isArray(lastBezierControlPoint)) {\n      throw new Error('the given path must contain TWO or more points if given a null control point')\n    }\n    // replace the first control point with the mirror of the last bezier control point\n    let controlpoint = points[points.length - 1]\n    controlpoint = vec2.scale(2, controlpoint)\n    controlpoint = vec2.subtract(controlpoint, lastBezierControlPoint)\n\n    controlPoints[0] = controlpoint\n  }\n\n  // add a control point for the previous end point\n  controlPoints.unshift(points[points.length - 1])\n\n  const bezierOrder = controlPoints.length - 1\n  const factorials = []\n  let fact = 1\n  for (let i = 0; i <= bezierOrder; ++i) {\n    if (i > 0) fact *= i\n    factorials.push(fact)\n  }\n\n  const binomials = []\n  for (let i = 0; i <= bezierOrder; ++i) {\n    const binomial = factorials[bezierOrder] / (factorials[i] * factorials[bezierOrder - i])\n    binomials.push(binomial)\n  }\n\n  const getPointForT = (t) => {\n    let tk = 1 // = pow(t,k)\n    let oneMinusTNMinusK = Math.pow(1 - t, bezierOrder) // = pow( 1-t, bezierOrder - k)\n    const invOneMinusT = (t !== 1) ? (1 / (1 - t)) : 1\n    const point = vec2.create() // 0, 0, 0\n    for (let k = 0; k <= bezierOrder; ++k) {\n      if (k === bezierOrder) oneMinusTNMinusK = 1\n      const bernsteinCoefficient = binomials[k] * tk * oneMinusTNMinusK\n      const derivativePoint = vec2.scale(bernsteinCoefficient, controlPoints[k])\n      vec2.add(point, point, derivativePoint)\n      tk *= t\n      oneMinusTNMinusK *= invOneMinusT\n    }\n    return point\n  }\n\n  const newpoints = []\n  const newpointsT = []\n  const numsteps = bezierOrder + 1\n  for (let i = 0; i < numsteps; ++i) {\n    const t = i / (numsteps - 1)\n    const point = getPointForT(t)\n    newpoints.push(point)\n    newpointsT.push(t)\n  }\n\n  // subdivide each segment until the angle at each vertex becomes small enough:\n  let subdivideBase = 1\n  const maxangle = Math.PI * 2 / segments\n  const maxsinangle = Math.sin(maxangle)\n  while (subdivideBase < newpoints.length - 1) {\n    const dir1 = vec2.normalize(vec2.subtract(newpoints[subdivideBase], newpoints[subdivideBase - 1]))\n    const dir2 = vec2.normalize(vec2.subtract(newpoints[subdivideBase + 1], newpoints[subdivideBase]))\n    const sinangle = vec2.cross(dir1, dir2) // the sine of the angle\n    if (Math.abs(sinangle[2]) > maxsinangle) {\n      // angle is too big, we need to subdivide\n      const t0 = newpointsT[subdivideBase - 1]\n      const t1 = newpointsT[subdivideBase + 1]\n      const newt0 = t0 + (t1 - t0) * 1 / 3\n      const newt1 = t0 + (t1 - t0) * 2 / 3\n      const point0 = getPointForT(newt0)\n      const point1 = getPointForT(newt1)\n      // remove the point at subdivideBase and replace with 2 new points:\n      newpoints.splice(subdivideBase, 1, point0, point1)\n      newpointsT.splice(subdivideBase, 1, newt0, newt1)\n      // re - evaluate the angles, starting at the previous junction since it has changed:\n      subdivideBase--\n      if (subdivideBase < 1) subdivideBase = 1\n    } else {\n      ++subdivideBase\n    }\n  }\n\n  // append to the new points to the given path\n  // but skip the first new point because it is identical to the last point in the given path\n  newpoints.shift()\n  const result = appendPoints(newpoints, geometry)\n  result.lastBezierControlPoint = controlPoints[controlPoints.length - 2]\n  return result\n}\n\nmodule.exports = appendBezier\n","const fromPoints = require('./fromPoints')\nconst toPoints = require('./toPoints')\n\n/**\n * Concatenate the given paths.\n * A concatenation of zero paths is an empty, open path.\n * A concatenation of one closed path to a series of open paths produces a closed path.\n * A concatenation of a path to a closed path is an error.\n * @param {...path2} paths - the paths to concatenate\n * @returns {path2} a new path\n * @alias module:modeling/geometries/path2.concat\n *\n * @example\n * let newpath = concat(fromPoints({}, [[1, 2]]), fromPoints({}, [[3, 4]]))\n */\nconst concat = (...paths) => {\n  // Only the last path can be closed, producing a closed path.\n  let isClosed = false\n  for (const path of paths) {\n    if (isClosed) {\n      throw new Error('Cannot concatenate to a closed path')\n    }\n    isClosed = path.isClosed\n  }\n  let newpoints = []\n  paths.forEach((path) => {\n    newpoints = newpoints.concat(toPoints(path))\n  })\n  return fromPoints({ closed: isClosed }, newpoints)\n}\n\nmodule.exports = concat\n","const toPoints = require('./toPoints')\n\n/**\n * Calls a function for each point in the geometry.\n * @param {Object} options - options\n * @param {Function} thunk - the function to call\n * @param {path2} geometry - the geometry to traverse\n * @alias module:modeling/geometries/path2.eachPoint\n *\n * @example\n * eachPoint({}, accumulate, geometry)\n */\nconst eachPoint = (options, thunk, path) => {\n  toPoints(path).forEach(thunk)\n}\n\nmodule.exports = eachPoint\n","const vec2 = require('../../maths/vec2')\n\nconst toPoints = require('./toPoints')\n\n/**\n  * Determine if the given paths are equal.\n  * For closed paths, this includes equality under point order rotation.\n  * @param {path2} a - the first path to compare\n  * @param {path2} b - the second path to compare\n  * @returns {Boolean}\n  * @alias module:modeling/geometries/path2.equals\n  */\nconst equals = (a, b) => {\n  if (a.isClosed !== b.isClosed) {\n    return false\n  }\n  if (a.points.length !== b.points.length) {\n    return false\n  }\n\n  const apoints = toPoints(a)\n  const bpoints = toPoints(b)\n\n  // closed paths might be equal under graph rotation\n  // so try comparison by rotating across all points\n  const length = apoints.length\n  let offset = 0\n  do {\n    let unequal = false\n    for (let i = 0; i < length; i++) {\n      if (!vec2.equals(apoints[i], bpoints[(i + offset) % length])) {\n        unequal = true\n        break\n      }\n    }\n    if (unequal === false) {\n      return true\n    }\n    // unequal open paths should only be compared once, never rotated\n    if (!a.isClosed) {\n      return false\n    }\n  } while (++offset < length)\n  return false\n}\n\nmodule.exports = equals\n","const mat4 = require('../../maths/mat4')\nconst vec2 = require('../../maths/vec2')\n\nconst create = require('./create')\n\n/**\n * Create a new path from the given compact binary data.\n * @param {TypedArray} data - compact binary data\n * @returns {path2} a new path\n * @alias module:modeling/geometries/path2.fromCompactBinary\n */\nconst fromCompactBinary = (data) => {\n  if (data[0] !== 2) throw new Error('invalid compact binary data')\n\n  const created = create()\n\n  created.transforms = mat4.clone(data.slice(1, 17))\n\n  created.isClosed = !!data[17]\n\n  for (let i = 22; i < data.length; i += 2) {\n    const point = vec2.fromValues(data[i], data[i + 1])\n    created.points.push(point)\n  }\n  // transfer known properties, i.e. color\n  if (data[18] >= 0) {\n    created.color = [data[18], data[19], data[20], data[21]]\n  }\n  // TODO: how about custom properties or fields ?\n  return created\n}\n\nmodule.exports = fromCompactBinary\n","/**\n * Determin if the given object is a path2 geometry.\n * @param {Object} object - the object to interogate\n * @returns {Boolean} true if the object matches a path2\n * @alias module:modeling/geometries/path2.isA\n */\nconst isA = (object) => {\n  if (object && typeof object === 'object') {\n    // see create for the required attributes and types\n    if ('points' in object && 'transforms' in object && 'isClosed' in object) {\n      // NOTE: transforms should be a TypedArray, which has a read-only length\n      if (Array.isArray(object.points) && 'length' in object.transforms) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nmodule.exports = isA\n","const clone = require('./clone')\n\n/**\n * Reverses the path so that the points are in the opposite order.\n * This swaps the left (interior) and right (exterior) edges.\n * @param {path2} geometry - the geometry to reverse\n * @returns {path2} a new path\n * @alias module:modeling/geometries/path2.reverse\n *\n * @example\n * let newpath = reverse(mypath)\n */\nconst reverse = (path) => {\n  // NOTE: this only updates the order of the points\n  const cloned = clone(path)\n  cloned.points = path.points.slice().reverse()\n  return cloned\n}\n\nmodule.exports = reverse\n","const vec2 = require('../../maths/vec2')\n\nconst toPoints = require('./toPoints')\n\n/**\n * Create a string representing the contents of the given path.\n * @param {path2} geometry - the path\n * @returns {String} a representive string\n * @alias module:modeling/geometries/path2.toString\n *\n * @example\n * console.out(toString(path))\n */\nconst toString = (geometry) => {\n  const points = toPoints(geometry)\n  let result = 'path (' + points.length + ' points, ' + geometry.isClosed + '):\\n[\\n'\n  points.forEach((point) => {\n    result += '  ' + vec2.toString(point) + ',\\n'\n  })\n  result += ']\\n'\n  return result\n}\n\nmodule.exports = toString\n","/**\n * Produce a compact binary representation from the given path.\n * @param {path2} geometry - the path\n * @returns {TypedArray} compact binary representation\n * @alias module:modeling/geometries/path2.toCompactBinary\n */\nconst toCompactBinary = (geom) => {\n  const points = geom.points\n  const transforms = geom.transforms\n  let color = [-1, -1, -1, -1]\n  if (geom.color) color = geom.color\n\n  // FIXME why Float32Array?\n  const compacted = new Float32Array(1 + 16 + 1 + 4 + (points.length * 2)) // type + transforms + isClosed + color + points data\n\n  compacted[0] = 2 // type code: 0 => geom2, 1 => geom3 , 2 => path2\n\n  compacted[1] = transforms[0]\n  compacted[2] = transforms[1]\n  compacted[3] = transforms[2]\n  compacted[4] = transforms[3]\n  compacted[5] = transforms[4]\n  compacted[6] = transforms[5]\n  compacted[7] = transforms[6]\n  compacted[8] = transforms[7]\n  compacted[9] = transforms[8]\n  compacted[10] = transforms[9]\n  compacted[11] = transforms[10]\n  compacted[12] = transforms[11]\n  compacted[13] = transforms[12]\n  compacted[14] = transforms[13]\n  compacted[15] = transforms[14]\n  compacted[16] = transforms[15]\n\n  compacted[17] = geom.isClosed ? 1 : 0\n\n  compacted[18] = color[0]\n  compacted[19] = color[1]\n  compacted[20] = color[2]\n  compacted[21] = color[3]\n\n  for (let j = 0; j < points.length; j++) {\n    const ci = j * 2 + 22\n    const point = points[j]\n    compacted[ci] = point[0]\n    compacted[ci + 1] = point[1]\n  }\n  // TODO: how about custom properties or fields ?\n  return compacted\n}\n\nmodule.exports = toCompactBinary\n","const mat4 = require('../../maths/mat4')\n\nconst create = require('./create')\n\n/**\n * Transform the given geometry using the given matrix.\n * This is a lazy transform of the points, as this function only adjusts the transforms.\n * The transforms are applied when accessing the points via toPoints().\n * @param {mat4} matrix - the matrix to transform with\n * @param {path2} geometry - the geometry to transform\n * @returns {path2} a new path\n * @alias module:modeling/geometries/path2.transform\n *\n * @example\n * let newpath = transform(fromZRotation(Math.PI / 4), path)\n */\nconst transform = (matrix, geometry) => {\n  const newgeometry = create(geometry.points) // reuse the points\n  newgeometry.isClosed = geometry.isClosed\n\n  newgeometry.transforms = mat4.multiply(matrix, geometry.transforms)\n  return newgeometry\n}\n\nmodule.exports = transform\n","/**\n * Represents a 2D geometry consisting of a list of ordered points.\n * @see {@link path2} for data structure information.\n * @module modeling/geometries/path2\n */\nmodule.exports = {\n  appendArc: require('./appendArc'),\n  appendBezier: require('./appendBezier'),\n  appendPoints: require('./appendPoints'),\n  clone: require('./clone'),\n  close: require('./close'),\n  concat: require('./concat'),\n  create: require('./create'),\n  eachPoint: require('./eachPoint'),\n  equals: require('./equals'),\n  fromPoints: require('./fromPoints'),\n  fromCompactBinary: require('./fromCompactBinary'),\n  isA: require('./isA'),\n  reverse: require('./reverse'),\n  toPoints: require('./toPoints'),\n  toString: require('./toString'),\n  toCompactBinary: require('./toCompactBinary'),\n  transform: require('./transform')\n}\n","const flatten = require('../utils/flatten')\n\nconst geom2 = require('../geometries/geom2')\nconst geom3 = require('../geometries/geom3')\nconst path2 = require('../geometries/path2')\nconst poly3 = require('../geometries/poly3')\n\nconst colorGeom2 = (color, object) => {\n  const newgeom2 = geom2.create(geom2.toSides(object))\n  newgeom2.color = color\n  return newgeom2\n}\n\nconst colorGeom3 = (color, object) => {\n  const newgeom3 = geom3.create(geom3.toPolygons(object))\n  newgeom3.color = color\n  return newgeom3\n}\n\nconst colorPath2 = (color, object) => {\n  const newpath2 = path2.clone(object)\n  newpath2.color = color\n  return newpath2\n}\n\nconst colorPoly3 = (color, object) => {\n  const newpoly = poly3.clone(object)\n  newpoly.color = color\n  return newpoly\n}\n\n/**\n * Assign the given color to the given objects.\n * Note: The color should only be assigned after performing all operations.\n * @param {Array} color - RGBA color values, where each value is between 0 and 1.0\n * @param {Object|Array} objects - the objects of which to color\n * @return {Object|Array} new geometry, or list of new geometries with an additional attribute 'color'\n * @alias module:modeling/colors.colorize\n *\n * @example\n * let redSphere = colorize([1,0,0], sphere()) // red\n * let greenCircle = colorize([0,1,0,0.8], circle()) // green transparent\n * let blueArc = colorize([0,0,1], arc()) // blue\n * let wildcylinder = colorize(colorNameToRgb('fuchsia'), cylinder()) // CSS color\n */\nconst colorize = (color, ...objects) => {\n  if (!Array.isArray(color)) throw new Error('color must be an array')\n  if (color.length < 3) throw new Error('color must contain R, G and B values')\n  if (color.length === 3) color = [color[0], color[1], color[2], 1.0] // add alpha\n\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  const results = objects.map((object) => {\n    if (geom2.isA(object)) return colorGeom2(color, object)\n    if (geom3.isA(object)) return colorGeom3(color, object)\n    if (path2.isA(object)) return colorPath2(color, object)\n    if (poly3.isA(object)) return colorPoly3(color, object)\n\n    object.color = color\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = colorize\n","/**\n * @alias module:modeling/colors.cssColors\n * @see CSS color table from http://www.w3.org/TR/css3-color/\n * @enum {Array}\n * @example\n * let newshape = colorize(cssColors.red, oldshape)\n */\nconst cssColors = {\n  // basic color keywords\n  black: [0 / 255, 0 / 255, 0 / 255],\n  silver: [192 / 255, 192 / 255, 192 / 255],\n  gray: [128 / 255, 128 / 255, 128 / 255],\n  white: [255 / 255, 255 / 255, 255 / 255],\n  maroon: [128 / 255, 0 / 255, 0 / 255],\n  red: [255 / 255, 0 / 255, 0 / 255],\n  purple: [128 / 255, 0 / 255, 128 / 255],\n  fuchsia: [255 / 255, 0 / 255, 255 / 255],\n  green: [0 / 255, 128 / 255, 0 / 255],\n  lime: [0 / 255, 255 / 255, 0 / 255],\n  olive: [128 / 255, 128 / 255, 0 / 255],\n  yellow: [255 / 255, 255 / 255, 0 / 255],\n  navy: [0 / 255, 0 / 255, 128 / 255],\n  blue: [0 / 255, 0 / 255, 255 / 255],\n  teal: [0 / 255, 128 / 255, 128 / 255],\n  aqua: [0 / 255, 255 / 255, 255 / 255],\n  // extended color keywords\n  aliceblue: [240 / 255, 248 / 255, 255 / 255],\n  antiquewhite: [250 / 255, 235 / 255, 215 / 255],\n  // 'aqua': [ 0 / 255, 255 / 255, 255 / 255 ],\n  aquamarine: [127 / 255, 255 / 255, 212 / 255],\n  azure: [240 / 255, 255 / 255, 255 / 255],\n  beige: [245 / 255, 245 / 255, 220 / 255],\n  bisque: [255 / 255, 228 / 255, 196 / 255],\n  // 'black': [ 0 / 255, 0 / 255, 0 / 255 ],\n  blanchedalmond: [255 / 255, 235 / 255, 205 / 255],\n  // 'blue': [ 0 / 255, 0 / 255, 255 / 255 ],\n  blueviolet: [138 / 255, 43 / 255, 226 / 255],\n  brown: [165 / 255, 42 / 255, 42 / 255],\n  burlywood: [222 / 255, 184 / 255, 135 / 255],\n  cadetblue: [95 / 255, 158 / 255, 160 / 255],\n  chartreuse: [127 / 255, 255 / 255, 0 / 255],\n  chocolate: [210 / 255, 105 / 255, 30 / 255],\n  coral: [255 / 255, 127 / 255, 80 / 255],\n  cornflowerblue: [100 / 255, 149 / 255, 237 / 255],\n  cornsilk: [255 / 255, 248 / 255, 220 / 255],\n  crimson: [220 / 255, 20 / 255, 60 / 255],\n  cyan: [0 / 255, 255 / 255, 255 / 255],\n  darkblue: [0 / 255, 0 / 255, 139 / 255],\n  darkcyan: [0 / 255, 139 / 255, 139 / 255],\n  darkgoldenrod: [184 / 255, 134 / 255, 11 / 255],\n  darkgray: [169 / 255, 169 / 255, 169 / 255],\n  darkgreen: [0 / 255, 100 / 255, 0 / 255],\n  darkgrey: [169 / 255, 169 / 255, 169 / 255],\n  darkkhaki: [189 / 255, 183 / 255, 107 / 255],\n  darkmagenta: [139 / 255, 0 / 255, 139 / 255],\n  darkolivegreen: [85 / 255, 107 / 255, 47 / 255],\n  darkorange: [255 / 255, 140 / 255, 0 / 255],\n  darkorchid: [153 / 255, 50 / 255, 204 / 255],\n  darkred: [139 / 255, 0 / 255, 0 / 255],\n  darksalmon: [233 / 255, 150 / 255, 122 / 255],\n  darkseagreen: [143 / 255, 188 / 255, 143 / 255],\n  darkslateblue: [72 / 255, 61 / 255, 139 / 255],\n  darkslategray: [47 / 255, 79 / 255, 79 / 255],\n  darkslategrey: [47 / 255, 79 / 255, 79 / 255],\n  darkturquoise: [0 / 255, 206 / 255, 209 / 255],\n  darkviolet: [148 / 255, 0 / 255, 211 / 255],\n  deeppink: [255 / 255, 20 / 255, 147 / 255],\n  deepskyblue: [0 / 255, 191 / 255, 255 / 255],\n  dimgray: [105 / 255, 105 / 255, 105 / 255],\n  dimgrey: [105 / 255, 105 / 255, 105 / 255],\n  dodgerblue: [30 / 255, 144 / 255, 255 / 255],\n  firebrick: [178 / 255, 34 / 255, 34 / 255],\n  floralwhite: [255 / 255, 250 / 255, 240 / 255],\n  forestgreen: [34 / 255, 139 / 255, 34 / 255],\n  // 'fuchsia': [ 255 / 255, 0 / 255, 255 / 255 ],\n  gainsboro: [220 / 255, 220 / 255, 220 / 255],\n  ghostwhite: [248 / 255, 248 / 255, 255 / 255],\n  gold: [255 / 255, 215 / 255, 0 / 255],\n  goldenrod: [218 / 255, 165 / 255, 32 / 255],\n  // 'gray': [ 128 / 255, 128 / 255, 128 / 255 ],\n  // 'green': [ 0 / 255, 128 / 255, 0 / 255 ],\n  greenyellow: [173 / 255, 255 / 255, 47 / 255],\n  grey: [128 / 255, 128 / 255, 128 / 255],\n  honeydew: [240 / 255, 255 / 255, 240 / 255],\n  hotpink: [255 / 255, 105 / 255, 180 / 255],\n  indianred: [205 / 255, 92 / 255, 92 / 255],\n  indigo: [75 / 255, 0 / 255, 130 / 255],\n  ivory: [255 / 255, 255 / 255, 240 / 255],\n  khaki: [240 / 255, 230 / 255, 140 / 255],\n  lavender: [230 / 255, 230 / 255, 250 / 255],\n  lavenderblush: [255 / 255, 240 / 255, 245 / 255],\n  lawngreen: [124 / 255, 252 / 255, 0 / 255],\n  lemonchiffon: [255 / 255, 250 / 255, 205 / 255],\n  lightblue: [173 / 255, 216 / 255, 230 / 255],\n  lightcoral: [240 / 255, 128 / 255, 128 / 255],\n  lightcyan: [224 / 255, 255 / 255, 255 / 255],\n  lightgoldenrodyellow: [250 / 255, 250 / 255, 210 / 255],\n  lightgray: [211 / 255, 211 / 255, 211 / 255],\n  lightgreen: [144 / 255, 238 / 255, 144 / 255],\n  lightgrey: [211 / 255, 211 / 255, 211 / 255],\n  lightpink: [255 / 255, 182 / 255, 193 / 255],\n  lightsalmon: [255 / 255, 160 / 255, 122 / 255],\n  lightseagreen: [32 / 255, 178 / 255, 170 / 255],\n  lightskyblue: [135 / 255, 206 / 255, 250 / 255],\n  lightslategray: [119 / 255, 136 / 255, 153 / 255],\n  lightslategrey: [119 / 255, 136 / 255, 153 / 255],\n  lightsteelblue: [176 / 255, 196 / 255, 222 / 255],\n  lightyellow: [255 / 255, 255 / 255, 224 / 255],\n  // 'lime': [ 0 / 255, 255 / 255, 0 / 255 ],\n  limegreen: [50 / 255, 205 / 255, 50 / 255],\n  linen: [250 / 255, 240 / 255, 230 / 255],\n  magenta: [255 / 255, 0 / 255, 255 / 255],\n  // 'maroon': [ 128 / 255, 0 / 255, 0 / 255 ],\n  mediumaquamarine: [102 / 255, 205 / 255, 170 / 255],\n  mediumblue: [0 / 255, 0 / 255, 205 / 255],\n  mediumorchid: [186 / 255, 85 / 255, 211 / 255],\n  mediumpurple: [147 / 255, 112 / 255, 219 / 255],\n  mediumseagreen: [60 / 255, 179 / 255, 113 / 255],\n  mediumslateblue: [123 / 255, 104 / 255, 238 / 255],\n  mediumspringgreen: [0 / 255, 250 / 255, 154 / 255],\n  mediumturquoise: [72 / 255, 209 / 255, 204 / 255],\n  mediumvioletred: [199 / 255, 21 / 255, 133 / 255],\n  midnightblue: [25 / 255, 25 / 255, 112 / 255],\n  mintcream: [245 / 255, 255 / 255, 250 / 255],\n  mistyrose: [255 / 255, 228 / 255, 225 / 255],\n  moccasin: [255 / 255, 228 / 255, 181 / 255],\n  navajowhite: [255 / 255, 222 / 255, 173 / 255],\n  // 'navy': [ 0 / 255, 0 / 255, 128 / 255 ],\n  oldlace: [253 / 255, 245 / 255, 230 / 255],\n  // 'olive': [ 128 / 255, 128 / 255, 0 / 255 ],\n  olivedrab: [107 / 255, 142 / 255, 35 / 255],\n  orange: [255 / 255, 165 / 255, 0 / 255],\n  orangered: [255 / 255, 69 / 255, 0 / 255],\n  orchid: [218 / 255, 112 / 255, 214 / 255],\n  palegoldenrod: [238 / 255, 232 / 255, 170 / 255],\n  palegreen: [152 / 255, 251 / 255, 152 / 255],\n  paleturquoise: [175 / 255, 238 / 255, 238 / 255],\n  palevioletred: [219 / 255, 112 / 255, 147 / 255],\n  papayawhip: [255 / 255, 239 / 255, 213 / 255],\n  peachpuff: [255 / 255, 218 / 255, 185 / 255],\n  peru: [205 / 255, 133 / 255, 63 / 255],\n  pink: [255 / 255, 192 / 255, 203 / 255],\n  plum: [221 / 255, 160 / 255, 221 / 255],\n  powderblue: [176 / 255, 224 / 255, 230 / 255],\n  // 'purple': [ 128 / 255, 0 / 255, 128 / 255 ],\n  // 'red': [ 255 / 255, 0 / 255, 0 / 255 ],\n  rosybrown: [188 / 255, 143 / 255, 143 / 255],\n  royalblue: [65 / 255, 105 / 255, 225 / 255],\n  saddlebrown: [139 / 255, 69 / 255, 19 / 255],\n  salmon: [250 / 255, 128 / 255, 114 / 255],\n  sandybrown: [244 / 255, 164 / 255, 96 / 255],\n  seagreen: [46 / 255, 139 / 255, 87 / 255],\n  seashell: [255 / 255, 245 / 255, 238 / 255],\n  sienna: [160 / 255, 82 / 255, 45 / 255],\n  // 'silver': [ 192 / 255, 192 / 255, 192 / 255 ],\n  skyblue: [135 / 255, 206 / 255, 235 / 255],\n  slateblue: [106 / 255, 90 / 255, 205 / 255],\n  slategray: [112 / 255, 128 / 255, 144 / 255],\n  slategrey: [112 / 255, 128 / 255, 144 / 255],\n  snow: [255 / 255, 250 / 255, 250 / 255],\n  springgreen: [0 / 255, 255 / 255, 127 / 255],\n  steelblue: [70 / 255, 130 / 255, 180 / 255],\n  tan: [210 / 255, 180 / 255, 140 / 255],\n  // 'teal': [ 0 / 255, 128 / 255, 128 / 255 ],\n  thistle: [216 / 255, 191 / 255, 216 / 255],\n  tomato: [255 / 255, 99 / 255, 71 / 255],\n  turquoise: [64 / 255, 224 / 255, 208 / 255],\n  violet: [238 / 255, 130 / 255, 238 / 255],\n  wheat: [245 / 255, 222 / 255, 179 / 255],\n  // 'white': [ 255 / 255, 255 / 255, 255 / 255 ],\n  whitesmoke: [245 / 255, 245 / 255, 245 / 255],\n  // 'yellow': [ 255 / 255, 255 / 255, 0 / 255 ],\n  yellowgreen: [154 / 255, 205 / 255, 50 / 255]\n}\n\nmodule.exports = cssColors\n","const cssColors = require('./cssColors')\n\n/**\n * Converts a CSS color name to RGB color.\n *\n * @param {String} s - the CSS color name\n * @return {Array} the RGB color, or undefined if not found\n * @alias module:modeling/colors.colorNameToRgb\n * @example\n * let mysphere = colorize(colorNameToRgb('lightblue'), sphere())\n */\nconst colorNameToRgb = (s) => cssColors[s.toLowerCase()]\n\nmodule.exports = colorNameToRgb\n","/**\n * Converts CSS color notations (string of hex values) to RGB values.\n *\n * @see https://www.w3.org/TR/css-color-3/\n * @param {String} notation - color notation\n * @return {Array} RGB color values\n * @alias module:modeling/colors.hexToRgb\n *\n * @example\n * let mysphere = colorize(hexToRgb('#000080'), sphere()) // navy blue\n */\nconst hexToRgb = (notation) => {\n  notation = notation.replace('#', '')\n  if (notation.length < 6) throw new Error('the given notation must contain 3 or more hex values')\n\n  const r = parseInt(notation.substring(0, 2), 16) / 255\n  const g = parseInt(notation.substring(2, 4), 16) / 255\n  const b = parseInt(notation.substring(4, 6), 16) / 255\n  if (notation.length >= 8) {\n    const a = parseInt(notation.substring(6, 8), 16) / 255\n    return [r, g, b, a]\n  }\n  return [r, g, b]\n}\n\nmodule.exports = hexToRgb\n","/**\n * Convert hue values to a color component (ie one of r, g, b)\n * @param  {Number} p\n * @param  {Number} q\n * @param  {Number} t\n * @alias module:modeling/colors.hueToColorComponent\n */\nconst hueToColorComponent = (p, q, t) => {\n  if (t < 0) t += 1\n  if (t > 1) t -= 1\n  if (t < 1 / 6) return p + (q - p) * 6 * t\n  if (t < 1 / 2) return q\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n  return p\n}\n\nmodule.exports = hueToColorComponent\n","const flatten = require('../utils/flatten')\n\nconst hueToColorComponent = require('./hueToColorComponent')\n\n/**\n * Converts HSL color values to RGB color values.\n *\n * @see http://en.wikipedia.org/wiki/HSL_color_space.\n * @param {...Number|Array} values - HSL or HSLA color values\n * @return {Array} RGB or RGBA color values\n * @alias module:modeling/colors.hslToRgb\n *\n * @example\n * let mysphere = colorize(hslToRgb([0.9166666666666666, 1, 0.5]), sphere())\n */\nconst hslToRgb = (...values) => {\n  values = flatten(values)\n  if (values.length < 3) throw new Error('values must contain H, S and L values')\n\n  const h = values[0]\n  const s = values[1]\n  const l = values[2]\n\n  let r = l // default is achromatic\n  let g = l\n  let b = l\n\n  if (s !== 0) {\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s\n    const p = 2 * l - q\n    r = hueToColorComponent(p, q, h + 1 / 3)\n    g = hueToColorComponent(p, q, h)\n    b = hueToColorComponent(p, q, h - 1 / 3)\n  }\n\n  if (values.length > 3) {\n    // add alpha value if provided\n    const a = values[3]\n    return [r, g, b, a]\n  }\n  return [r, g, b]\n}\n\nmodule.exports = hslToRgb\n","const flatten = require('../utils/flatten')\n\n/**\n * Converts HSV color values to RGB color values.\n *\n * @see http://en.wikipedia.org/wiki/HSV_color_space.\n * @param {...Number|Array} values - HSV or HSVA color values\n * @return {Array} RGB or RGBA color values\n * @alias module:modeling/colors.hsvToRgb\n *\n * @example\n * let mysphere = colorize(hsvToRgb([0.9166666666666666, 1, 1]), sphere())\n */\nconst hsvToRgb = (...values) => {\n  values = flatten(values)\n  if (values.length < 3) throw new Error('values must contain H, S and V values')\n\n  const h = values[0]\n  const s = values[1]\n  const v = values[2]\n\n  let r = 0\n  let g = 0\n  let b = 0\n\n  const i = Math.floor(h * 6)\n  const f = h * 6 - i\n  const p = v * (1 - s)\n  const q = v * (1 - f * s)\n  const t = v * (1 - (1 - f) * s)\n\n  switch (i % 6) {\n    case 0:\n      r = v\n      g = t\n      b = p\n      break\n    case 1:\n      r = q\n      g = v\n      b = p\n      break\n    case 2:\n      r = p\n      g = v\n      b = t\n      break\n    case 3:\n      r = p\n      g = q\n      b = v\n      break\n    case 4:\n      r = t\n      g = p\n      b = v\n      break\n    case 5:\n      r = v\n      g = p\n      b = q\n      break\n  }\n\n  if (values.length > 3) {\n    // add alpha value if provided\n    const a = values[3]\n    return [r, g, b, a]\n  }\n  return [r, g, b]\n}\n\nmodule.exports = hsvToRgb\n","const flatten = require('../utils/flatten')\n\n/**\n * Convert the given RGB color values to CSS color notation (string)\n * @see https://www.w3.org/TR/css-color-3/\n * @param {...Number|Array} values - RGB or RGBA color values\n * @return {String} CSS color notation\n * @alias module:modeling/colors.rgbToHex\n */\nconst rgbToHex = (...values) => {\n  values = flatten(values)\n  if (values.length < 3) throw new Error('values must contain R, G and B values')\n\n  const r = values[0] * 255\n  const g = values[1] * 255\n  const b = values[2] * 255\n\n  let s = `#${Number(0x1000000 + r * 0x10000 + g * 0x100 + b).toString(16).substring(1, 7)}`\n\n  if (values.length > 3) {\n    // convert alpha to opacity\n    s = s + Number(values[3] * 255).toString(16)\n  }\n  return s\n}\n\nmodule.exports = rgbToHex\n","const flatten = require('../utils/flatten')\n\n/**\n * Converts an RGB color value to HSL.\n *\n * @see http://en.wikipedia.org/wiki/HSL_color_space.\n * @see http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\n * @param {...Number|Array} values - RGB or RGBA color values\n * @return {Array} HSL or HSLA color values\n * @alias module:modeling/colors.rgbToHsl\n */\nconst rgbToHsl = (...values) => {\n  values = flatten(values)\n  if (values.length < 3) throw new Error('values must contain R, G and B values')\n\n  const r = values[0]\n  const g = values[1]\n  const b = values[2]\n\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n  let h\n  let s\n  const l = (max + min) / 2\n\n  if (max === min) {\n    h = s = 0 // achromatic\n  } else {\n    const d = max - min\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      case g:\n        h = (b - r) / d + 2\n        break\n      case b:\n        h = (r - g) / d + 4\n        break\n    }\n    h /= 6\n  }\n\n  if (values.length > 3) {\n    // add alpha value if provided\n    const a = values[3]\n    return [h, s, l, a]\n  }\n  return [h, s, l]\n}\n\nmodule.exports = rgbToHsl\n","const flatten = require('../utils/flatten')\n\n/**\n * Converts an RGB color value to HSV.\n *\n * @see http://en.wikipedia.org/wiki/HSV_color_space.\n * @param {...Number|Array} values - RGB or RGBA color values\n * @return {Array} HSV or HSVA color values\n * @alias module:modeling/colors.rgbToHsv\n */\nconst rgbToHsv = (...values) => {\n  values = flatten(values)\n  if (values.length < 3) throw new Error('values must contain R, G and B values')\n\n  const r = values[0]\n  const g = values[1]\n  const b = values[2]\n\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n  let h\n  const v = max\n\n  const d = max - min\n  const s = max === 0 ? 0 : d / max\n\n  if (max === min) {\n    h = 0 // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      case g:\n        h = (b - r) / d + 2\n        break\n      case b:\n        h = (r - g) / d + 4\n        break\n    }\n    h /= 6\n  }\n\n  if (values.length > 3) {\n    // add alpha if provided\n    const a = values[3]\n    return [h, s, v, a]\n  }\n  return [h, s, v]\n}\n\nmodule.exports = rgbToHsv\n","/**\n * All shapes (primitives or the results of operations) can be assigned a color (RGBA).\n * In all cases, the function returns the results, and never changes the original shapes.\n * @module modeling/colors\n * @example\n * const { colorize, hexToRgb } = require('@jscad/modeling').colors\n */\nmodule.exports = {\n  colorize: require('./colorize'),\n  colorNameToRgb: require('./colorNameToRgb'),\n  cssColors: require('./cssColors'),\n  hexToRgb: require('./hexToRgb'),\n  hslToRgb: require('./hslToRgb'),\n  hsvToRgb: require('./hsvToRgb'),\n  hueToColorComponent: require('./hueToColorComponent'),\n  rgbToHex: require('./rgbToHex'),\n  rgbToHsl: require('./rgbToHsl'),\n  rgbToHsv: require('./rgbToHsv')\n}\n","/**\n * Represents a bezier easing function.\n * @typedef {Object} bezier\n * @property {Array} points - The control points for the bezier curve. The first and last point will also be the start and end of the curve\n * @property {string} pointType - A reference to the type and dimensionality of the points that the curve was created from\n * @property {number} dimensions - The dimensionality of the bezier\n * @property {Array} permutations - A pre-calculation of the bezier algorithm's co-efficients\n * @property {Array} tangentPermutations - A pre-calculation of the bezier algorithm's tangent co-efficients\n *\n * @example\n * const b = bezier.create([0,10]) // a linear progression from 0 to 10\n * const b = bezier.create([0, 0, 10, 10]) // a symmetrical cubic easing curve that starts slowly and ends slowly from 0 to 10\n * const b = bezier.create([0,0,0], [0,5,10], [10,0,-5], [10,10,10]]) // a cubic 3 dimensional easing curve that can generate position arrays for modelling\n * Usage:\n * let position = bezier.valueAt(t,b) // where 0 < t < 1\n * let tangent = bezier.tangentAt(t,b) // where 0 < t < 1\n *\n */\n\n/**\n * Creates an object representing a bezier easing curve. Can have both an arbitrary number of control points, and an arbitrary number of dimensions.\n *\n * @example\n * const b = bezier.create([0,10]) // a linear progression from 0 to 10\n * const b = bezier.create([0, 0, 10, 10]) // a symmetrical cubic easing curve that starts slowly and ends slowly from 0 to 10\n * const b = bezier.create([0,0,0], [0,5,10], [10,0,-5], [10,10,10]]) // a cubic 3 dimensional easing curve that can generate position arrays for modelling\n *\n * @param {Array} points An array with at least 2 elements of either all numbers, or all arrays of numbers that are the same size.\n * @returns {bezier} a new bezier data object\n * @alias module:modeling/curves/bezier.create\n */\nconst create = (points) => {\n  if (!Array.isArray(points)) throw new Error('Bezier points must be a valid array/')\n  if (points.length < 2) throw new Error('Bezier points must contain at least 2 values.')\n  const pointType = getPointType(points)\n\n  return {\n    points: points,\n    pointType: pointType,\n    dimensions: pointType === 'float_single' ? 0 : points[0].length,\n    permutations: getPermutations(points.length - 1),\n    tangentPermutations: getPermutations(points.length - 2)\n  }\n}\n\nconst getPointType = function (points) {\n  let firstPointType = null\n  points.forEach((point) => {\n    let pType = ''\n    if (Number.isFinite(point)) {\n      pType = 'float_single'\n    } else if (Array.isArray(point)) {\n      point.forEach((val) => {\n        if (!Number.isFinite(val)) throw new Error('Bezier point values must all be numbers.')\n      })\n      pType = 'float_' + point.length\n    } else throw new Error('Bezier points must all be numbers or arrays of number.')\n    if (firstPointType == null) {\n      firstPointType = pType\n    } else {\n      if (firstPointType !== pType) {\n        throw new Error('Bezier points must be either all numbers or all arrays of numbers of the same size.')\n      }\n    }\n  })\n  return firstPointType\n}\n\nconst getPermutations = function (c) {\n  const permutations = []\n  for (let i = 0; i <= c; i++) {\n    permutations.push(factorial(c) / (factorial(i) * factorial(c - i)))\n  }\n  return permutations\n}\n\nconst factorial = function (b) {\n  let out = 1\n  for (let i = 2; i <= b; i++) {\n    out *= i\n  }\n  return out\n}\n\nmodule.exports = create\n","/**\n * Calculates the position at a specific point along a bezier easing curve.\n * For multidimensional curves, the tangent is the slope of each dimension at that point.\n * See the extrudeAlongPath.js example to see this in use.\n * Math and explanation comes from {@link https://www.freecodecamp.org/news/nerding-out-with-bezier-curves-6e3c0bc48e2f/}\n *\n * @example\n * const b = bezier.create([0,0,0], [0,5,10], [10,0,-5], [10,10,10]]) // a cubic 3 dimensional easing curve that can generate position arrays for modelling\n * let position = bezier.valueAt(t,b) // where 0 < t < 1\n *\n * @param {number} t The position that you want the bezier's tangent value at.\n * @param {Object} bezier A bezier curve created with bezier.create().\n * @returns {array | number} the tangent at the position t.\n * @alias module:modeling/curves/bezier.valueAt\n */\nconst valueAt = (t, bezier) => {\n  if (t < 0 || t > 1) {\n    throw new Error('Bezier valueAt() input must be between 0 and 1')\n  }\n  if (bezier.pointType === 'float_single') {\n    return bezierFunction(bezier, bezier.points, t)\n  } else {\n    const result = []\n    for (let i = 0; i < bezier.dimensions; i++) {\n      const singleDimensionPoints = []\n      for (let j = 0; j < bezier.points.length; j++) {\n        singleDimensionPoints.push(bezier.points[j][i])\n      }\n      result.push(bezierFunction(bezier, singleDimensionPoints, t))\n    }\n    return result\n  }\n}\n\nconst bezierFunction = function (bezier, p, t) {\n  const n = p.length - 1\n  let result = 0\n  for (let i = 0; i <= n; i++) {\n    result += bezier.permutations[i] * Math.pow(1 - t, n - i) * Math.pow(t, i) * p[i]\n  }\n  return result\n}\n\nmodule.exports = valueAt\n","/**\n * Calculates the tangent at a specific point along a bezier easing curve.\n * For multidimensional curves, the tangent is the slope of each dimension at that point.\n * See the extrudeAlongPath.js example to see this in use.\n *\n * @example\n * const b = bezier.create([0,0,0], [0,5,10], [10,0,-5], [10,10,10]]) // a cubic 3 dimensional easing curve that can generate position arrays for modelling\n * let tangent = bezier.tangentAt(t,b) // where 0 < t < 1\n *\n * @param {number} t The position that you want the bezier's tangent value at.\n * @param {Object} bezier An array with at least 2 elements of either all numbers, or all arrays of numbers that are the same size.\n * @returns {array | number} the tangent at the position.\n * @alias module:modeling/curves/bezier.tangentAt\n */\nconst tangentAt = (t, bezier) => {\n  if (t < 0 || t > 1) {\n    throw new Error('Bezier tangentAt() input must be between 0 and 1')\n  }\n  if (bezier.pointType === 'float_single') {\n    return bezierTangent(bezier, bezier.points, t)\n  } else {\n    const result = []\n    for (let i = 0; i < bezier.dimensions; i++) {\n      const singleDimensionPoints = []\n      for (let j = 0; j < bezier.points.length; j++) {\n        singleDimensionPoints.push(bezier.points[j][i])\n      }\n      result.push(bezierTangent(bezier, singleDimensionPoints, t))\n    }\n    return result\n  }\n}\n\nconst bezierTangent = function (bezier, p, t) {\n  // from https://pages.mtu.edu/~shene/COURSES/cs3621/NOTES/spline/Bezier/bezier-der.html\n  const n = p.length - 1\n  let result = 0\n  for (let i = 0; i < n; i++) {\n    const q = n * (p[i + 1] - p[i])\n    result += bezier.tangentPermutations[i] * Math.pow(1 - t, n - 1 - i) * Math.pow(t, i) * q\n  }\n  return result\n}\n\nmodule.exports = tangentAt\n","/**\n * Represents a bezier easing function.\n * @see {@link bezier} for data structure information.\n * @module modeling/curves/bezier\n */\nmodule.exports = {\n  create: require('./create'),\n  valueAt: require('./valueAt'),\n  tangentAt: require('./tangentAt')\n}\n","/**\n * Curves are n-dimensional mathematical constructs that define a path from point 0 to point 1\n * @module modeling/curves\n * @example\n * const { bezier } = require('@jscad/modeling').curves\n\n */\nmodule.exports = {\n  bezier: require('./bezier')\n}\n","/*\n * Calculate the area under the given points\n */\nconst area = (points) => {\n  let area = 0\n  for (let i = 0; i < points.length; i++) {\n    const j = (i + 1) % points.length\n    area += points[i][0] * points[j][1]\n    area -= points[j][0] * points[i][1]\n  }\n  return (area / 2.0)\n}\n\nmodule.exports = area\n","/**\n * Measure the area under the given polygon.\n *\n * @param {poly2} polygon - the polygon to measure\n * @return {Number} the area of the polygon\n * @alias module:modeling/geometries/poly2.measureArea\n */\nconst area = require('../../maths/utils/area')\n\nconst measureArea = (polygon) => area(polygon.vertices)\n\nmodule.exports = measureArea\n","/**\n * Represents a convex 2D polygon consisting of a list of ordered vertices.\n * @typedef {Object} poly2\n * @property {Array} vertices - list of ordered vertices (2D)\n */\n\n/**\n * Creates a new polygon with initial values.\n *\n * @param {Array} [vertices] - list of vertices (2D)\n * @returns {poly2} a new polygon\n * @alias module:modeling/geometries/poly2.create\n *\n * @example\n * let polygon = create()\n */\nconst create = (vertices) => {\n  if (vertices === undefined || vertices.length < 3) {\n    vertices = [] // empty contents\n  }\n  return { vertices: vertices }\n}\n\nmodule.exports = create\n","const create = require('./create')\n\n/**\n * Flip the give polygon, rotating the opposite direction.\n *\n * @param {poly2} polygon - the polygon to flip\n * @returns {poly2} a new polygon\n * @alias module:modeling/geometries/poly2.flip\n */\nconst flip = (polygon) => {\n  const vertices = polygon.vertices.slice().reverse()\n  return create(vertices)\n}\n\nmodule.exports = flip\n","const measureArea = require('./measureArea')\nconst flip = require('./flip')\n\n/**\n * Determine if the given points are inside the given polygon.\n *\n * @param {Array} points - a list of points, where each point is an array with X and Y values\n * @param {poly2} polygon - a 2D polygon\n * @return {Integer} 1 if all points are inside, 0 if some or none are inside\n * @alias module:modeling/geometries/poly2.arePointsInside\n */\nconst arePointsInside = (points, polygon) => {\n  if (points.length === 0) return 0 // nothing to check\n\n  const vertices = polygon.vertices\n  if (vertices.length < 3) return 0 // nothing can be inside an empty polygon\n\n  if (measureArea(polygon) < 0) {\n    polygon = flip(polygon) // CCW is required\n  }\n\n  const sum = points.reduce((acc, point) => acc + isPointInside(point, vertices), 0)\n  return sum === points.length ? 1 : 0\n}\n\n/*\n * Determine if the given point is inside the polygon.\n *\n * @see http://geomalgorithms.com/a03-_inclusion.html\n * @param {Array} point - an array with X and Y values\n * @param {Array} polygon - a list of points, where each point is an array with X and Y values\n * @return {Integer} 1 if the point is inside, 0 if outside\n */\nconst isPointInsideOld = (point, polygon) => {\n  let wn = 0\n  const n = polygon.length\n  const x = point[0]\n  const y = point[1]\n  for (let i = 0; i < polygon.length; i++) {\n    const p1 = polygon[i]\n    const p2 = polygon[(i + 1) % n]\n    if (x !== p1[0] && y !== p1[1] && x !== p2[0] && y !== p2[1]) { // no overlap of points\n      if (p1[1] <= y) {\n        if (p2[1] > y) { // upward crossing\n          if (isLeft(p1, p2, point) > 0) { // point left of edge\n            wn++\n          }\n        }\n      } else {\n        if (p2[1] <= y) { // downward crossing\n          if (isLeft(p1, p2, point) < 0) { // point right of edge\n            wn--\n          }\n        }\n      }\n    }\n  }\n  return wn === 0 ? 1 : 0\n}\n\n/*\n * Determine if the given point is inside the polygon.\n *\n * @see http://erich.realtimerendering.com/ptinpoly/ (Crossings Test)\n * @param {Array} point - an array with X and Y values\n * @param {Array} polygon - a list of points, where each point is an array with X and Y values\n * @return {Integer} 1 if the point is inside, 0 if outside\n */\nconst isPointInside = (point, polygon) => {\n  const numverts = polygon.length\n\n  const tx = point[0]\n  const ty = point[1]\n\n  let vtx0 = polygon[numverts - 1]\n  let vtx1 = polygon[0]\n\n  let yflag0 = (vtx0[1] > ty)\n\n  let insideFlag = 0\n\n  let i = 0\n  for (let j = (numverts + 1); --j;) {\n    /*\n     * check if Y endpoints straddle (are on opposite sides) of point's Y\n     * if so, +X ray could intersect this edge.\n     */\n    const yflag1 = (vtx1[1] > ty)\n    if (yflag0 !== yflag1) {\n      /*\n       * check if X endpoints are on same side of the point's X\n       * if so, it's easy to test if edge hits or misses.\n       */\n      const xflag0 = (vtx0[0] > tx)\n      const xflag1 = (vtx1[0] > tx)\n      if (xflag0 && xflag1) {\n        /* if edge's X values are both right of the point, then the point must be inside */\n        insideFlag = !insideFlag\n      } else {\n        /*\n         * if X endpoints straddle the point, then\n         * the compute intersection of polygon edge with +X ray\n         * if intersection >= point's X then the +X ray hits it.\n         */\n        if ((vtx1[0] - (vtx1[1] - ty) * (vtx0[0] - vtx1[0]) / (vtx0[1] - vtx1[1])) >= tx) {\n          insideFlag = !insideFlag\n        }\n      }\n    }\n    /* move to next pair of vertices, retaining info as possible */\n    yflag0 = yflag1\n    vtx0 = vtx1\n    vtx1 = polygon[++i]\n  }\n  return insideFlag\n}\n\n/*\n * > 0 : p2 is left of the line p0 -> p1\n * = 0 : p2 is on the line p0 -> p1\n * < 0 : p2 is right of the line p0 -> p1\n */\nconst isLeft = (p0, p1, p2) => (p1[0] - p0[0]) * (p2[1] - p0[1]) - (p2[0] - p0[0]) * (p1[1] - p0[1])\n\nmodule.exports = arePointsInside\n","/**\n * Represents a 2D polygon consisting of a list of ordered vertices.\n * @see {@link poly2} for data structure information.\n * @module modeling/geometries/poly2\n */\nmodule.exports = {\n  arePointsInside: require('./arePointsInside'),\n  create: require('./create'),\n  flip: require('./flip'),\n  measureArea: require('./measureArea')\n}\n","/**\n * Geometries are objects that represent the contents of primitives or the results of operations.\n * Note: Geometries are consider immutable, so never change the contents directly.\n * @module modeling/geometries\n * @example\n * const { geom2, geom3, path2, poly2, poly3 } = require('@jscad/modeling').geometries\n */\nmodule.exports = {\n  geom2: require('./geom2'),\n  geom3: require('./geom3'),\n  path2: require('./path2'),\n  poly2: require('./poly2'),\n  poly3: require('./poly3')\n}\n","/**\n * Represents a unbounded line in 2D space, positioned at a point of origin.\n * A line is parametrized by a normal vector (perpendicular to the line, rotated 90 degrees counter clockwise) and\n * distance from the origin.\n * Equation: A Point (P) is on Line (L) if dot(L.normal, P) == L.distance\n * The contents of the array are a normal [0,1] and a distance [2].\n * @typedef {Array} line2\n */\n\n/**\n * Create a unbounded 2D line, positioned at 0,0, and running along the X axis.\n *\n * @returns {line2} a new unbounded line\n * @alias module:modeling/maths/line2.create\n */\nconst create = () => [0, 1, 0] // normal and distance\n\nmodule.exports = create\n","const create = require('./create')\n\n/**\n * Create a clone of the given 2D line.\n *\n * @param {line2} [out] - receiving line\n * @param {line2} line - line to clone\n * @returns {line2} a new unbounded line\n * @alias module:modeling/maths/line2.clone\n */\nconst clone = (...params) => {\n  let out\n  let line\n  if (params.length === 1) {\n    out = create()\n    line = params[0]\n  } else {\n    out = params[0]\n    line = params[1]\n  }\n  out[0] = line[0]\n  out[1] = line[1]\n  out[2] = line[2]\n  return out\n}\n\nmodule.exports = clone\n","const vec2 = require('../vec2')\n\n/**\n * Return the direction of the given line.\n *\n * @param {line2} line - the 2D line for calculations\n * @return {vec2} a vector in the direction of the line\n * @alias module:modeling/maths/line2.direction\n */\nconst direction = (line) => {\n  const vector = vec2.normal(line)\n  vec2.negate(vector, vector)\n  return vector\n}\n\nmodule.exports = direction\n","const vec2 = require('../vec2')\n\n/**\n * Return the origin of the given line.\n *\n * @param {line2} line the 2D line of reference\n * @return {vec2} the origin of the line\n * @alias module:modeling/maths/line2.origin\n */\nconst origin = (line) => {\n  const point = vec2.scale(line[2], line)\n  return point\n}\n\nmodule.exports = origin\n","const vec2 = require('../vec2')\n\nconst direction = require('./direction')\nconst origin = require('./origin')\n\n/**\n * Determine the closest point on the given line to the given point.\n *\n * @param {vec2} point the point of reference\n * @param {line2} line the 2D line for calculations\n * @returns {vec2} closest point\n * @alias module:modeling/maths/line2.closestPoint\n */\nconst closestPoint = (point, line) => {\n  // linear function of AB\n  const a = origin(line)\n  const b = direction(line)\n  const m1 = (b[1] - a[1]) / (b[0] - a[0])\n  const t1 = a[1] - m1 * a[0]\n  // linear function of PC\n  const m2 = -1 / m1 // perpendicular\n  const t2 = point[1] - m2 * point[0]\n  // c.x * m1 + t1 === c.x * m2 + t2\n  const x = (t2 - t1) / (m1 - m2)\n  const y = m1 * x + t1\n\n  const closest = vec2.fromValues(x, y)\n  return closest\n}\n\nmodule.exports = closestPoint\n","const vec2 = require('../vec2')\n\n/**\n * Calculate the distance (positive) between the given point and line.\n *\n * @param {vec2} point the point of reference\n * @param {line2} line the 2D line of reference\n * @return {Number} distance between line and point\n * @alias module:modeling/maths/line2.distanceToPoint\n */\nconst distanceToPoint = (point, line) => {\n  let distance = vec2.dot(point, line)\n  distance = Math.abs(distance - line[2])\n  return distance\n}\n\nmodule.exports = distanceToPoint\n","/**\n * Compare the given lines for equality.\n *\n * @param {line2} a - the first line to compare\n * @param {line2} b - the second line to compare\n * @return {Boolean} true if lines are equal\n * @alias module:modeling/maths/line2.equals\n */\nconst equals = (line1, line2) => (line1[0] === line2[0]) && (line1[1] === line2[1] && (line1[2] === line2[2]))\n\nmodule.exports = equals\n","const create = require('./create')\n\n/**\n * Creates a new line initialized with the given values.\n *\n * @param {Number} x X coordinate of the unit normal\n * @param {Number} y Y coordinate of the unit normal\n * @param {Number} d distance of the line from [0,0]\n * @returns {line2} a new unbounded line\n * @alias module:modeling/maths/line2.fromValues\n */\nconst fromValues = (x, y, w) => {\n  const out = create()\n  out[0] = x\n  out[1] = y\n  out[2] = w\n  return out\n}\n\nmodule.exports = fromValues\n","const vec2 = require('../vec2')\n\nconst fromValues = require('./fromValues')\n\n/**\n * Create a new line that passes through the given points.\n *\n * @param {vec2} point1 start point of the 2D line\n * @param {vec2} point2 end point of the 2D line\n * @returns {line2} a new unbounded line\n * @alias module:modeling/maths/line2.fromPoints\n */\nconst fromPoints = (point1, point2) => {\n  const vector = vec2.subtract(point2, point1) // directional vector\n\n  vec2.normal(vector, vector)\n  vec2.normalize(vector, vector) // normalized\n\n  const distance = vec2.dot(point1, vector)\n\n  return fromValues(vector[0], vector[1], distance)\n}\n\nmodule.exports = fromPoints\n","\nconst clamp = (value, min, max) => Math.min(Math.max(value, min), max)\n\nmodule.exports = clamp\n","/**\n * Get the X coordinate of a point with a certain Y coordinate, interpolated between two points.\n * Interpolation is robust even if the points have the same Y coordinate\n * @return {Array} X and Y of interpolated point\n * @alias module:modeling/utils.interpolateBetween2DPointsForY\n */\nconst interpolateBetween2DPointsForY = (point1, point2, y) => {\n  let f1 = y - point1[1]\n  let f2 = point2[1] - point1[1]\n  if (f2 < 0) {\n    f1 = -f1\n    f2 = -f2\n  }\n  let t\n  if (f1 <= 0) {\n    t = 0.0\n  } else if (f1 >= f2) {\n    t = 1.0\n  } else if (f2 < 1e-10) { // FIXME Should this be EPS?\n    t = 0.5\n  } else {\n    t = f1 / f2\n  }\n  const result = point1[0] + t * (point2[0] - point1[0])\n  return result\n}\n\nmodule.exports = interpolateBetween2DPointsForY\n","/*\n * Calculate the intersect point of the two line segments (p1-p2 and p3-p4), end points included.\n * Note: If the line segments do NOT intersect then undefined is returned.\n * @see http://paulbourke.net/geometry/pointlineplane/\n * @param {vec2} p1 - first point of first line segment\n * @param {vec2} p2 - second point of first line segment\n * @param {vec2} p3 - first point of second line segment\n * @param {vec2} p4 - second point of second line segment\n * @returns {vec2} intersection point of the two line segments, or undefined\n */\nconst intersect = (p1, p2, p3, p4) => {\n  // Check if none of the lines are of length 0\n  if ((p1[0] === p2[0] && p1[1] === p2[1]) || (p3[0] === p4[0] && p3[1] === p4[1])) {\n    return undefined\n  }\n\n  const denominator = ((p4[1] - p3[1]) * (p2[0] - p1[0]) - (p4[0] - p3[0]) * (p2[1] - p1[1]))\n\n  // Lines are parallel\n  if (Math.abs(denominator) < Number.MIN_VALUE) {\n    return undefined\n  }\n\n  const ua = ((p4[0] - p3[0]) * (p1[1] - p3[1]) - (p4[1] - p3[1]) * (p1[0] - p3[0])) / denominator\n  const ub = ((p2[0] - p1[0]) * (p1[1] - p3[1]) - (p2[1] - p1[1]) * (p1[0] - p3[0])) / denominator\n\n  // is the intersection along the segments\n  if (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n    return undefined\n  }\n\n  // Return the x and y coordinates of the intersection\n  const x = p1[0] + ua * (p2[0] - p1[0])\n  const y = p1[1] + ua * (p2[1] - p1[1])\n\n  return [x, y]\n}\n\nmodule.exports = intersect\n","const solve2Linear = (a, b, c, d, u, v) => {\n  const det = a * d - b * c\n  const invdet = 1.0 / det\n  let x = u * d - b * v\n  let y = -u * c + a * v\n  x *= invdet\n  y *= invdet\n  return [x, y]\n}\n\nmodule.exports = solve2Linear\n","module.exports = {\n  area: require('./area'),\n  clamp: require('./clamp'),\n  interpolateBetween2DPointsForY: require('./interpolateBetween2DPointsForY'),\n  intersect: require('./intersect'),\n  solve2Linear: require('./solve2Linear')\n}\n","const vec2 = require('../vec2')\nconst { solve2Linear } = require('../utils')\n\n/**\n * Return the point of intersection between the given lines.\n *\n * The point will have Infinity values if the lines are paralell.\n * The point will have NaN values if the lines are the same.\n *\n * @param {line2} line1 a 2D line for reference\n * @param {line2} line2 a 2D line for reference\n * @return {vec2} the point of intersection\n * @alias module:modeling/maths/line2.intersectPointOfLines\n */\nconst intersectToLine = (line1, line2) => {\n  const point = solve2Linear(line1[0], line1[1], line2[0], line2[1], line1[2], line2[2])\n  return vec2.clone(point)\n}\n\nmodule.exports = intersectToLine\n","const vec2 = require('../vec2')\n\nconst clone = require('./clone')\nconst create = require('./create')\nconst fromValues = require('./fromValues')\n\n/**\n * Create a new line in the opposite direction as the given.\n *\n * @param {line2} [out] - receiving line\n * @param {line2} line the 2D line to reverse\n * @returns {line2} a new unbounded line\n * @alias module:modeling/maths/line2.reverse\n */\nconst reverse = (...params) => {\n  let out\n  let line\n  if (params.length === 1) {\n    out = create()\n    line = params[0]\n  } else {\n    out = params[0]\n    line = params[1]\n  }\n\n  const normal = vec2.negate(line)\n  const distance = -line[2]\n  return clone(out, fromValues(normal[0], normal[1], distance))\n}\n\nmodule.exports = reverse\n","/**\n * Return a string representing the given line.\n *\n * @param {line2} line the 2D line of reference\n * @returns {String} string representation\n * @alias module:modeling/maths/line2.toString\n */\nconst toString = (line) => `line2: (${line[0].toFixed(7)}, ${line[1].toFixed(7)}, ${line[2].toFixed(7)})`\n\nmodule.exports = toString\n","const vec2 = require('../vec2')\n\nconst fromPoints = require('./fromPoints')\nconst origin = require('./origin')\nconst direction = require('./direction')\nconst clone = require('./clone')\nconst create = require('./create')\n\n/**\n * Transforms the given 2D line using the given matrix.\n *\n * @param {line2} [out] - receiving line\n * @param {mat4} matrix matrix to transform with\n * @param {line2} line the 2D line to transform\n * @returns {line2} a new unbounded line\n * @alias module:modeling/maths/line2.transform\n */\nconst transform = (...params) => {\n  let out\n  let matrix\n  let line\n  if (params.length === 2) {\n    out = create()\n    matrix = params[0]\n    line = params[1]\n  } else {\n    out = params[0]\n    matrix = params[1]\n    line = params[2]\n  }\n\n  const org = origin(line)\n  const dir = direction(line)\n\n  vec2.transform(org, matrix, org)\n  vec2.transform(dir, matrix, dir)\n\n  return clone(out, fromPoints(org, dir))\n}\n\nmodule.exports = transform\n","const origin = require('./origin')\n\n/**\n * Determine the X coordinate of the given line at the Y coordinate.\n *\n * The X coordinate will be Infinity if the line is parallel to the X axis.\n *\n * @param {Number} y the Y coordinate on the line\n * @param {line2} line the 2D line of reference\n * @return {Number} the X coordinate on the line\n * @alias module:modeling/maths/line2.xAtY\n */\nconst xAtY = (y, line) => {\n  // px = (distance - normal.y * y) / normal.x\n  let x = (line[2] - (line[1] * y)) / line[0]\n  if (Number.isNaN(x)) {\n    const org = origin(line)\n    x = org[0]\n  }\n  return x\n}\n\nmodule.exports = xAtY\n","/**\n * Represents a unbounded line in 2D space, positioned at a point of origin.\n * @see {@link line2} for data structure information.\n * @module modeling/maths/line2\n */\nmodule.exports = {\n  clone: require('./clone'),\n  closestPoint: require('./closestPoint'),\n  create: require('./create'),\n  direction: require('./direction'),\n  distanceToPoint: require('./distanceToPoint'),\n  equals: require('./equals'),\n  fromPoints: require('./fromPoints'),\n  fromValues: require('./fromValues'),\n  intersectPointOfLines: require('./intersectPointOfLines'),\n  origin: require('./origin'),\n  reverse: require('./reverse'),\n  toString: require('./toString'),\n  transform: require('./transform'),\n  xAtY: require('./xAtY')\n}\n","const vec3 = require('../vec3')\n\n/**\n * Create a line in 3D space from the given point (origin) and direction.\n *\n * The point can be any random point on the line.\n * The direction must be a vector with positive or negative distance from the point.\n * See the logic of fromPoints() for appropriate values.\n *\n * @param {vec3} point start point of the line segment\n * @param {vec3} direction direction of the line segment\n * @returns {line3} a new unbounded line\n * @alias module:modeling/maths/line3.fromPointAndDirection\n */\nconst fromPointAndDirection = (point, direction) => {\n  const unit = vec3.unit(direction)\n  return [point, unit]\n}\n\nmodule.exports = fromPointAndDirection\n","const vec3 = require('../vec3')\n\nconst fromPointAndDirection = require('./fromPointAndDirection')\n\n/**\n * Represents a unbounded line in 3D space, positioned at a point of origin.\n * A line is parametrized by a point of origin and a directional vector.\n * The array contents are two 3D vectors; origin and directional vector.\n * @see https://en.wikipedia.org/wiki/Hesse_normal_form\n * @typedef {Array} line3\n */\n\n/**\n * Create an unbounded 3D line, positioned at 0,0,0 and lying on the X axis.\n *\n * @returns {line3} a new unbounded line\n * @alias module:modeling/maths/line3.create\n */\nconst create = () => {\n  const point = vec3.create() // 0, 0, 0\n  const direction = vec3.fromValues(0, 0, 1)\n  return fromPointAndDirection(point, direction)\n}\n\nmodule.exports = create\n","const vec3 = require('../vec3')\n\nconst create = require('./create')\n\n/**\n * Create a clone of the given 3D line.\n *\n * @param {line3} [out] - receiving line\n * @param {line3} line - line to clone\n * @returns {line3} a new unbounded line\n * @alias module:modeling/maths/line3.clone\n */\nconst clone = (...params) => {\n  let out\n  let line\n  if (params.length === 1) {\n    out = create()\n    line = params[0]\n  } else {\n    out = params[0]\n    line = params[1]\n  }\n  vec3.clone(out[0], line[0])\n  vec3.clone(out[1], line[1])\n  return out\n}\n\nmodule.exports = clone\n","const vec3 = require('../vec3')\n\n/**\n * Determine the closest point on the given line to the given point.\n *\n * @param {vec3} point - the point of reference\n * @param {line3} line - the line of reference\n * @returns {vec3} a point\n * @alias module:modeling/maths/line3.closestPoint\n */\nconst closestPoint = (point, line) => {\n  const lpoint = line[0]\n  const ldirection = line[1]\n\n  const a = vec3.dot(vec3.subtract(point, lpoint), ldirection)\n  const b = vec3.dot(ldirection, ldirection)\n  const t = a / b\n\n  const closestpoint = vec3.add(lpoint, vec3.scale(t, ldirection))\n  return closestpoint\n}\n\nmodule.exports = closestPoint\n","/**\n * Return the direction of the given line.\n *\n * @param {line3} line - the line for reference\n * @return {vec3} the relative vector in the direction of the line\n * @alias module:modeling/maths/line3.direction\n */\nconst direction = (line) => line[1]\n\nmodule.exports = direction\n","const vec3 = require('../vec3')\n\nconst closestPoint = require('./closestPoint')\n\n/**\n * Calculate the distance (positive) between the given point and line.\n *\n * @param {vec3} point the point of reference\n * @param {line3} line the line of reference\n * @return {Number} distance between line and point\n * @alias module:modeling/maths/line3.distanceToPoint\n */\nconst distanceToPoint = (point, line) => {\n  const closest = closestPoint(point, line)\n  const distancevector = vec3.subtract(point, closest)\n  const distance = vec3.length(distancevector)\n  return distance\n}\n\nmodule.exports = distanceToPoint\n","const vec3 = require('../vec3')\n\n/**\n * Compare the given 3D lines for equality.\n *\n * @param {line3} a - the first line to compare\n * @param {line3} b - the second line to compare\n * @return {Boolean} true if lines are equal\n * @alias module:modeling/maths/line3.equals\n */\nconst equals = (line1, line2) => {\n  // compare directions (unit vectors)\n  if (!vec3.equals(line1[1], line2[1])) return false\n\n  // compare points\n  if (!vec3.equals(line1[0], line2[0])) return false\n\n  // why would lines with the same slope (direction) and different points be equal?\n  // let distance = distanceToPoint(line1, line2[0])\n  // if (distance > EPS) return false\n\n  return true\n}\n\nmodule.exports = equals\n","const vec3 = require('../vec3')\nconst { solve2Linear } = require('../utils')\n\nconst { EPS } = require('../constants')\n\nconst fromPointAndDirection = require('./fromPointAndDirection')\n\n/**\n * Create a line in 3D space from the intersection of the given planes.\n *\n * @param {plane} a - the first plane of reference\n * @param {plane} b - the second plane of reference\n * @returns {line3} a new unbounded line\n * @alias module:modeling/maths/line3.fromPlanes\n */\nconst fromPlanes = (plane1, plane2) => {\n  let direction = vec3.cross(plane1, plane2)\n  let length = vec3.length(direction)\n  if (length < EPS) {\n    throw new Error('parallel planes do not intersect')\n  }\n  length = (1.0 / length)\n  direction = vec3.scale(length, direction)\n\n  const absx = Math.abs(direction[0])\n  const absy = Math.abs(direction[1])\n  const absz = Math.abs(direction[2])\n  let origin\n  let r\n  if ((absx >= absy) && (absx >= absz)) {\n    // find a point p for which x is zero\n    r = solve2Linear(plane1[1], plane1[2], plane2[1], plane2[2], plane1[3], plane2[3])\n    origin = vec3.fromValues(0, r[0], r[1])\n  } else if ((absy >= absx) && (absy >= absz)) {\n    // find a point p for which y is zero\n    r = solve2Linear(plane1[0], plane1[2], plane2[0], plane2[2], plane1[3], plane2[3])\n    origin = vec3.fromValues(r[0], 0, r[1])\n  } else {\n    // find a point p for which z is zero\n    r = solve2Linear(plane1[0], plane1[1], plane2[0], plane2[1], plane1[3], plane2[3])\n    origin = vec3.fromValues(r[0], r[1], 0)\n  }\n  return fromPointAndDirection(origin, direction)\n}\n\nmodule.exports = fromPlanes\n","const vec3 = require('../vec3')\n\nconst fromPointAndDirection = require('./fromPointAndDirection')\n\n/**\n * Creates a new 3D line that passes through the given points.\n *\n * @param {vec3} point1 - start point of the line segment\n * @param {vec3} point2 - end point of the line segment\n * @returns {line3} a new unbounded line\n * @alias module:modeling/maths/line3.fromPoints\n */\nconst fromPoints = (point1, point2) => {\n  const direction = vec3.subtract(point2, point1)\n  return fromPointAndDirection(point1, direction)\n}\n\nmodule.exports = fromPoints\n","const vec3 = require('../vec3')\n\n/**\n * Determine the closest point on the given plane to the given line.\n *\n * The point of intersection will be invalid if the line is parallel to the plane, e.g. NaN.\n *\n * @param {plane} plane - the plane of reference\n * @param {line3} line - the line of reference\n * @returns {vec3} a point on the line\n * @alias module:modeling/maths/line3.intersectPointOfLineAndPlane\n */\nconst intersectToPlane = (plane, line) => {\n  // plane: plane.normal * p = plane.w\n  const pnormal = plane\n  const pw = plane[3]\n\n  const lpoint = line[0]\n  const ldirection = line[1]\n\n  // point: p = line.point + labda * line.direction\n  const labda = (pw - vec3.dot(pnormal, lpoint)) / vec3.dot(pnormal, ldirection)\n\n  const point = vec3.add(lpoint, vec3.scale(labda, ldirection))\n  return point\n}\n\nmodule.exports = intersectToPlane\n","/**\n * Return the origin of the given line.\n *\n * @param {line3} line - the line of reference\n * @return {vec3} the origin of the line\n * @alias module:modeling/maths/line3.origin\n */\nconst origin = (line) => line[0]\n\nmodule.exports = origin\n","const vec3 = require('../vec3')\n\nconst clone = require('./clone')\nconst create = require('./create')\nconst fromPointAndDirection = require('./fromPointAndDirection')\n\n/**\n * Create a new line in the opposite direction as the given.\n *\n * @param {line3} [out] - receiving line\n * @param {line3} line - the line to reverse\n * @returns {line3} a new unbounded line\n * @alias module:modeling/maths/line3.reverse\n */\nconst reverse = (...params) => {\n  let out\n  let line\n  if (params.length === 1) {\n    out = create()\n    line = params[0]\n  } else {\n    out = params[0]\n    line = params[1]\n  }\n\n  const point = vec3.clone(line[0])\n  const direction = vec3.negate(line[1])\n  return clone(out, fromPointAndDirection(point, direction))\n}\n\nmodule.exports = reverse\n","/**\n * Return a string representing the given line.\n *\n * @param {line3} line - the line of reference\n * @returns {String} string representation\n * @alias module:modeling/maths/line3.toString\n */\nconst toString = (line) => {\n  const point = line[0]\n  const unit = line[1]\n  return `line3: point: (${point[0].toFixed(7)}, ${point[1].toFixed(7)}, ${point[2].toFixed(7)}) unit: (${unit[0].toFixed(7)}, ${unit[1].toFixed(7)}, ${unit[2].toFixed(7)})`\n}\n\nmodule.exports = toString\n","const vec3 = require('../vec3')\n\nconst clone = require('./clone')\nconst create = require('./create')\nconst fromPointAndDirection = require('./fromPointAndDirection')\n\n/**\n * Transforms the given 3D line using the given matrix.\n *\n * @param {mat4} matrix - matrix to transform with\n * @param {line3} line - the line to transform\n * @returns {line3} a new unbounded line\n * @alias module:modeling/maths/line3.transform\n */\nconst transform = (...params) => {\n  let out\n  let matrix\n  let line\n  if (params.length === 2) {\n    out = create()\n    matrix = params[0]\n    line = params[1]\n  } else {\n    out = params[0]\n    matrix = params[1]\n    line = params[2]\n  }\n\n  const point = line[0]\n  const direction = line[1]\n  const pointPlusDirection = vec3.add(point, direction)\n\n  const newpoint = vec3.transform(matrix, point)\n  const newPointPlusDirection = vec3.transform(matrix, pointPlusDirection)\n  const newdirection = vec3.subtract(newPointPlusDirection, newpoint)\n\n  return clone(out, fromPointAndDirection(newpoint, newdirection))\n}\n\nmodule.exports = transform\n","/**\n * Represents a unbounded line in 3D space, positioned at a point of origin.\n * @see {@link line3} for data structure information.\n * @module modeling/maths/line3\n */\nmodule.exports = {\n  clone: require('./clone'),\n  closestPoint: require('./closestPoint'),\n  create: require('./create'),\n  direction: require('./direction'),\n  distanceToPoint: require('./distanceToPoint'),\n  equals: require('./equals'),\n  fromPlanes: require('./fromPlanes'),\n  fromPointAndDirection: require('./fromPointAndDirection'),\n  fromPoints: require('./fromPoints'),\n  intersectPointOfLineAndPlane: require('./intersectPointOfLineAndPlane'),\n  origin: require('./origin'),\n  reverse: require('./reverse'),\n  toString: require('./toString'),\n  transform: require('./transform')\n}\n","/**\n * Maths are computational units for fundamental Euclidean geometry. All maths operate upon array data structures.\n * Note: Maths data structues are consider immutable, so never change the contents directly.\n * @see most computations are based upon glMatrix\n * @module modeling/maths\n * @example\n * const { constants, line2, mat4, vec2, vec3 } = require('@jscad/modeling').maths\n\n */\nmodule.exports = {\n  constants: require('./constants'),\n  line2: require('./line2'),\n  line3: require('./line3'),\n  mat4: require('./mat4'),\n  plane: require('./plane'),\n  utils: require('./utils'),\n  vec2: require('./vec2'),\n  vec3: require('./vec3'),\n  vec4: require('./vec4')\n}\n","const flatten = require('../utils/flatten')\n\nconst geom2 = require('../geometries/geom2')\nconst geom3 = require('../geometries/geom3')\nconst path2 = require('../geometries/path2')\nconst poly3 = require('../geometries/poly3')\n\n/*\n * Measure the area of the given geometry.\n * NOTE: paths are infinitely narrow and do not have an area\n *\n * @param {path2} geometry - geometry to measure\n * @returns {Number} area of the geometry\n */\nconst measureAreaOfPath2 = () => 0\n\n/*\n * Measure the area of the given geometry.\n * For a counter clockwise rotating geometry (about Z) the area is positive, otherwise negative.\n *\n * @see http://paulbourke.net/geometry/polygonmesh/\n * @param {geom2} geometry - 2D geometry to measure\n * @returns {Number} area of the geometry\n */\nconst measureAreaOfGeom2 = (geometry) => {\n  if (geometry.area) return geometry.area\n\n  const sides = geom2.toSides(geometry)\n  const area = sides.reduce((area, side) => area + (side[0][0] * side[1][1] - side[0][1] * side[1][0]), 0)\n  geometry.area = area * 0.5\n  return geometry.area\n}\n\n/*\n * Measure the area of the given geometry.\n *\n * @param {geom3} geometry - 3D geometry to measure\n * @returns {Number} area of the geometry\n */\nconst measureAreaOfGeom3 = (geometry) => {\n  if (geometry.area) return geometry.area\n\n  const polygons = geom3.toPolygons(geometry)\n  geometry.area = polygons.reduce((area, polygon) => area + poly3.measureArea(polygon), 0)\n  return geometry.area\n}\n\n/**\n * Measure the area of the given geometries.\n * @param {...Objects} geometries - the geometries to measure\n * @return {Number|Array} the area for each geometry\n * @alias module:modeling/measurements.measureArea\n *\n * @example\n * let area = measureArea(sphere())\n */\nconst measureArea = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n\n  const results = geometries.map((geometry) => {\n    if (path2.isA(geometry)) return measureAreaOfPath2(geometry)\n    if (geom2.isA(geometry)) return measureAreaOfGeom2(geometry)\n    if (geom3.isA(geometry)) return measureAreaOfGeom3(geometry)\n    return 0\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = measureArea\n","const flatten = require('../utils/flatten')\n\nconst measureArea = require('./measureArea')\n\n/**\n * Measure the total (aggregate) area for the given geometries.\n * Note: This measurement will not account for overlapping geometry\n * @param {...Object} geometries - the geometries to measure.\n * @return {Number} the total surface area for the group of geometry.\n * @alias module:modeling/measurements.measureAggregateArea\n *\n * @example\n * let totalArea = measureAggregateArea(sphere(),cube())\n */\nconst measureAggregateArea = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('measureAggregateArea: no geometries supplied')\n  const areas = measureArea(geometries)\n  if (geometries.length === 1) {\n    return areas\n  }\n  const result = 0\n  return areas.reduce((result, area) => result + area, result)\n}\n\nmodule.exports = measureAggregateArea\n","const flatten = require('../utils/flatten')\n\nconst vec2 = require('../maths/vec2')\nconst vec3 = require('../maths/vec3')\n\nconst geom2 = require('../geometries/geom2')\nconst geom3 = require('../geometries/geom3')\nconst path2 = require('../geometries/path2')\nconst poly3 = require('../geometries/poly3')\n\n/*\n * Measure the min and max bounds of the given (path2) geometry.\n * @return {Array[]} the min and max bounds for the geometry\n */\nconst measureBoundingBoxOfPath2 = (geometry) => {\n  if (geometry.boundingBox) return geometry.boundingBox\n\n  const points = path2.toPoints(geometry)\n\n  let minpoint\n  if (points.length === 0) {\n    minpoint = vec2.create()\n  } else {\n    minpoint = vec2.clone(points[0])\n  }\n  let maxpoint = vec2.clone(minpoint)\n\n  points.forEach((point) => {\n    vec2.min(minpoint, minpoint, point)\n    vec2.max(maxpoint, maxpoint, point)\n  })\n  minpoint = [minpoint[0], minpoint[1], 0]\n  maxpoint = [maxpoint[0], maxpoint[1], 0]\n\n  geometry.boundingBox = [minpoint, maxpoint]\n  return geometry.boundingBox\n}\n\n/*\n * Measure the min and max bounds of the given (geom2) geometry.\n * @return {Array[]} the min and max bounds for the geometry\n */\nconst measureBoundingBoxOfGeom2 = (geometry) => {\n  if (geometry.boundingBox) return geometry.boundingBox\n\n  const points = geom2.toPoints(geometry)\n\n  let minpoint\n  if (points.length === 0) {\n    minpoint = vec2.create()\n  } else {\n    minpoint = vec2.clone(points[0])\n  }\n  let maxpoint = vec2.clone(minpoint)\n\n  points.forEach((point) => {\n    vec2.min(minpoint, minpoint, point)\n    vec2.max(maxpoint, maxpoint, point)\n  })\n\n  minpoint = [minpoint[0], minpoint[1], 0]\n  maxpoint = [maxpoint[0], maxpoint[1], 0]\n\n  geometry.boundingBox = [minpoint, maxpoint]\n  return geometry.boundingBox\n}\n\n/*\n * Measure the min and max bounds of the given (geom3) geometry.\n * @return {Array[]} the min and max bounds for the geometry\n */\nconst measureBoundingBoxOfGeom3 = (geometry) => {\n  if (geometry.boundingBox) return geometry.boundingBox\n\n  const polygons = geom3.toPolygons(geometry)\n\n  let minpoint = vec3.create()\n  if (polygons.length > 0) {\n    const points = poly3.toPoints(polygons[0])\n    vec3.clone(minpoint, points[0])\n  }\n  let maxpoint = vec3.clone(minpoint)\n\n  polygons.forEach((polygon) => {\n    poly3.toPoints(polygon).forEach((point) => {\n      vec3.min(minpoint, minpoint, point)\n      vec3.max(maxpoint, maxpoint, point)\n    })\n  })\n\n  minpoint = [minpoint[0], minpoint[1], minpoint[2]]\n  maxpoint = [maxpoint[0], maxpoint[1], maxpoint[2]]\n\n  geometry.boundingBox = [minpoint, maxpoint]\n  return geometry.boundingBox\n}\n\n/**\n * Measure the min and max bounds of the given geometries.\n * @param {...Object} geometries - the geometries to measure\n * @return {Array} the min and max bounds for each geometry, i.e. [[X,Y,Z],[X,Y,Z]]\n * @alias module:modeling/measurements.measureBoundingBox\n *\n * @example\n * let bounds = measureBoundingBox(sphere())\n */\nconst measureBoundingBox = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n\n  const results = geometries.map((geometry) => {\n    if (path2.isA(geometry)) return measureBoundingBoxOfPath2(geometry)\n    if (geom2.isA(geometry)) return measureBoundingBoxOfGeom2(geometry)\n    if (geom3.isA(geometry)) return measureBoundingBoxOfGeom3(geometry)\n    return [[0, 0, 0], [0, 0, 0]]\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = measureBoundingBox\n","const flatten = require('../utils/flatten')\nconst vec3min = require('../maths/vec3/min')\nconst vec3max = require('../maths/vec3/max')\n\nconst measureBoundingBox = require('./measureBoundingBox')\n\n/**\n * Measure the aggregated minimum and maximum bounds for the given geometries.\n * @param {...Object} geometries - the geometries to measure\n * @return {Array} the min and max bounds for the group of geometry, i.e. [[x,y,z],[X,Y,Z]]\n * @alias module:modeling/measurements.measureAggregateBoundingBox\n *\n * @example\n * let bounds = measureAggregateBoundingBox(sphere(),cube())\n */\nconst measureAggregateBoundingBox = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('measureAggregateBoundingBox: no geometries supplied')\n  const bounds = measureBoundingBox(geometries)\n  if (geometries.length === 1) {\n    return bounds\n  }\n  const result = [[Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE], [-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE]]\n  return bounds.reduce((result, item) => {\n    result = [vec3min(result[0], item[0]), vec3max(result[1], item[1])]\n    return result\n  }, result)\n}\n\nmodule.exports = measureAggregateBoundingBox\n","const { EPS } = require('../maths/constants')\n\nconst calculateEpsilonFromBounds = (bounds, dimensions) => {\n  let total = 0\n  for (let i = 0; i < dimensions; i++) {\n    total += bounds[1][i] - bounds[0][i]\n  }\n  return EPS * total / dimensions\n}\n\nmodule.exports = calculateEpsilonFromBounds\n","const flatten = require('../utils/flatten')\nconst measureAggregateBoundingBox = require('./measureAggregateBoundingBox')\nconst calculateEpsilonFromBounds = require('./calculateEpsilonFromBounds')\nconst { geom2, geom3, path2 } = require('../geometries')\n\n/**\n * Measure the aggregated Epsilon for the given geometries.\n * @param {...Object} geometries - the geometries to measure\n * @return {Number} the aggregated Epsilon for the whole group of geometries\n * @alias module:modeling/measurements.measureAggregateEpsilon\n *\n * @example\n * let groupEpsilon = measureAggregateEpsilon(sphere(),cube())\n */\nconst measureAggregateEpsilon = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('measureAggregateEpsilon: no geometries supplied')\n  const bounds = measureAggregateBoundingBox(geometries)\n\n  let dimensions = 0\n  dimensions = geometries.reduce((dimensions, geometry) => {\n    if (path2.isA(geometry) || geom2.isA(geometry)) return Math.max(dimensions, 2)\n    if (geom3.isA(geometry)) return Math.max(dimensions, 3)\n    return 0\n  }, dimensions)\n  return calculateEpsilonFromBounds(bounds, dimensions)\n}\n\nmodule.exports = measureAggregateEpsilon\n","const flatten = require('../utils/flatten')\n\nconst geom2 = require('../geometries/geom2')\nconst geom3 = require('../geometries/geom3')\nconst path2 = require('../geometries/path2')\nconst poly3 = require('../geometries/poly3')\n\n/*\n * Measure the volume of the given geometry.\n * NOTE: paths are infinitely narrow and do not have an volume\n *\n * @param {Path2} geometry - geometry to measure\n * @returns {Number} volume of the geometry\n */\nconst measureVolumeOfPath2 = () => 0\n\n/*\n * Measure the volume of the given geometry.\n * NOTE: 2D geometry are infinitely thin and do not have an volume\n *\n * @param {Geom2} geometry - 2D geometry to measure\n * @returns {Number} volume of the geometry\n */\nconst measureVolumeOfGeom2 = () => 0\n\n/*\n * Measure the volume of the given geometry.\n *\n * @param {Geom3} geometry - 3D geometry to measure\n * @returns {Number} volume of the geometry\n */\nconst measureVolumeOfGeom3 = (geometry) => {\n  if (geometry.volume) return geometry.volume\n\n  const polygons = geom3.toPolygons(geometry)\n  geometry.volume = polygons.reduce((volume, polygon) => volume + poly3.measureSignedVolume(polygon), 0)\n  return geometry.volume\n}\n\n/**\n * Measure the volume of the given geometries.\n * @param {...Object} geometries - the geometries to measure\n * @return {Number|Array} the volume for each geometry\n * @alias module:modeling/measurements.measureVolume\n *\n * @example\n * let volume = measureVolume(sphere())\n */\nconst measureVolume = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n\n  const results = geometries.map((geometry) => {\n    if (path2.isA(geometry)) return measureVolumeOfPath2(geometry)\n    if (geom2.isA(geometry)) return measureVolumeOfGeom2(geometry)\n    if (geom3.isA(geometry)) return measureVolumeOfGeom3(geometry)\n    return 0\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = measureVolume\n","const flatten = require('../utils/flatten')\n\nconst measureVolume = require('./measureVolume')\n\n/**\n * Measure the total (aggregate) volume for the given geometries.\n * Note: This measurement will not account for overlapping geometry\n * @param {...Object} geometries - the geometries to measure.\n * @return {Number} the volume for the group of geometry.\n * @alias module:modeling/measurements.measureAggregateVolume\n *\n * @example\n * let totalVolume = measureAggregateVolume(sphere(),cube())\n */\nconst measureAggregateVolume = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('measureAggregateVolume: no geometries supplied')\n  const volumes = measureVolume(geometries)\n  if (geometries.length === 1) {\n    return volumes\n  }\n  const result = 0\n  return volumes.reduce((result, volume) => result + volume, result)\n}\n\nmodule.exports = measureAggregateVolume\n","const flatten = require('../utils/flatten')\nconst calculateEpsilonFromBounds = require('./calculateEpsilonFromBounds')\nconst { geom2, geom3, path2 } = require('../geometries')\nconst measureBoundingBox = require('./measureBoundingBox')\n\n/*\n * Measure the epsilon of the given (path2) geometry.\n * @return {Number} the epsilon (precision) of the geometry\n */\nconst measureEpsilonOfPath2 = (geometry) => {\n  if (geometry.epsilon) return geometry.epsilon\n\n  geometry.epsilon = calculateEpsilonFromBounds(measureBoundingBox(geometry), 2)\n  return geometry.epsilon\n}\n\n/*\n * Measure the epsilon of the given (geom2) geometry.\n * @return {Number} the epsilon (precision) of the geometry\n */\nconst measureEpsilonOfGeom2 = (geometry) => {\n  if (geometry.epsilon) return geometry.epsilon\n\n  geometry.epsilon = calculateEpsilonFromBounds(measureBoundingBox(geometry), 2)\n  return geometry.epsilon\n}\n\n/*\n * Measure the epsilon of the given (geom3) geometry.\n * @return {Float} the epsilon (precision) of the geometry\n */\nconst measureEpsilonOfGeom3 = (geometry) => {\n  if (geometry.epsilon) return geometry.epsilon\n\n  geometry.epsilon = calculateEpsilonFromBounds(measureBoundingBox(geometry), 3)\n  return geometry.epsilon\n}\n\n/**\n * Measure the epsilon of the given geometries.\n * Epsilon values are used in various functions to determine minimum distances between points, planes, etc.\n * @param {...Object} geometries - the geometries to measure\n * @return {Number|Array} the epsilon for each geometry\n * @alias module:modeling/measurements.measureEpsilon\n *\n * @example\n * let epsilon = measureEpsilon(sphere())\n */\nconst measureEpsilon = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n\n  const results = geometries.map((geometry) => {\n    if (path2.isA(geometry)) return measureEpsilonOfPath2(geometry)\n    if (geom2.isA(geometry)) return measureEpsilonOfGeom2(geometry)\n    if (geom3.isA(geometry)) return measureEpsilonOfGeom3(geometry)\n    return 0\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = measureEpsilon\n","/**\n * All shapes (primitives or the results of operations) can be measured, e.g. calculate volume, etc.\n * In all cases, the function returns the results, and never changes the original shapes.\n * @module modeling/measurements\n * @example\n * const { measureArea, measureBoundingBox, measureVolume } = require('@jscad/modeling').measurements\n */\nmodule.exports = {\n  measureAggregateArea: require('./measureAggregateArea'),\n  measureAggregateBoundingBox: require('./measureAggregateBoundingBox'),\n  measureAggregateEpsilon: require('./measureAggregateEpsilon'),\n  measureAggregateVolume: require('./measureAggregateVolume'),\n  measureArea: require('./measureArea'),\n  measureBoundingBox: require('./measureBoundingBox'),\n  measureEpsilon: require('./measureEpsilon'),\n  measureVolume: require('./measureVolume')\n}\n","// verify that the array has the given dimension, and contains Number values\nconst isNumberArray = (array, dimension) => {\n  if (Array.isArray(array) && array.length >= dimension) {\n    return array.every((n) => Number.isFinite(n))\n  }\n  return false\n}\n\n// verify that the value is a Number greater than the constant\nconst isGT = (value, constant) => (Number.isFinite(value) && value > constant)\n\n// verify that the value is a Number greater than or equal to the constant\nconst isGTE = (value, constant) => (Number.isFinite(value) && value >= constant)\n\nmodule.exports = {\n  isNumberArray,\n  isGT,\n  isGTE\n}\n","const { EPS } = require('../maths/constants')\n\nconst vec2 = require('../maths/vec2')\n\nconst path2 = require('../geometries/path2')\n\nconst { isGT, isGTE, isNumberArray } = require('./commonChecks')\n\n/**\n * Construct an arc in two dimensional space where all points are at the same distance from the center.\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0]] - center of arc\n * @param {Number} [options.radius=1] - radius of arc\n * @param {Number} [options.startAngle=0] - starting angle of the arc, in radians\n * @param {Number} [options.endAngle=Math.PI*2] - ending angle of the arc, in radians\n * @param {Number} [options.segments=32] - number of segments to create per full rotation\n * @param {Boolean} [options.makeTangent=false] - adds line segments at both ends of the arc to ensure that the gradients at the edges are tangent\n * @returns {path2} new 2D path\n * @alias module:modeling/primitives.arc\n */\nconst arc = (options) => {\n  const defaults = {\n    center: [0, 0],\n    radius: 1,\n    startAngle: 0,\n    endAngle: (Math.PI * 2),\n    makeTangent: false,\n    segments: 32\n  }\n  let { center, radius, startAngle, endAngle, makeTangent, segments } = Object.assign({}, defaults, options)\n\n  if (!isNumberArray(center, 2)) throw new Error('center must be an array of X and Y values')\n  if (!isGT(radius, 0)) throw new Error('radius must be greater than zero')\n  if (!isGTE(startAngle, 0)) throw new Error('startAngle must be positive')\n  if (!isGTE(endAngle, 0)) throw new Error('endAngle must be positive')\n  if (!isGTE(segments, 4)) throw new Error('segments must be four or more')\n\n  startAngle = startAngle % (Math.PI * 2)\n  endAngle = endAngle % (Math.PI * 2)\n\n  let rotation = (Math.PI * 2)\n  if (startAngle < endAngle) {\n    rotation = endAngle - startAngle\n  }\n  if (startAngle > endAngle) {\n    rotation = endAngle + ((Math.PI * 2) - startAngle)\n  }\n\n  const minangle = Math.acos(((radius * radius) + (radius * radius) - (EPS * EPS)) / (2 * radius * radius))\n\n  const centerv = vec2.fromArray(center)\n  let point\n  const pointArray = []\n  if (rotation < minangle) {\n    // there is no rotation, just a single point\n    point = vec2.scale(radius, vec2.fromAngleRadians(startAngle))\n    vec2.add(point, point, centerv)\n    pointArray.push(point)\n  } else {\n    // note: add one additional step to acheive full rotation\n    const numsteps = Math.max(1, Math.floor(segments * (rotation / (Math.PI * 2)))) + 1\n    let edgestepsize = numsteps * 0.5 / rotation // step size for half a degree\n    if (edgestepsize > 0.25) edgestepsize = 0.25\n\n    const totalsteps = makeTangent ? (numsteps + 2) : numsteps\n    for (let i = 0; i <= totalsteps; i++) {\n      let step = i\n      if (makeTangent) {\n        step = (i - 1) * (numsteps - 2 * edgestepsize) / numsteps + edgestepsize\n        if (step < 0) step = 0\n        if (step > numsteps) step = numsteps\n      }\n      const angle = startAngle + (step * (rotation / numsteps))\n      point = vec2.scale(radius, vec2.fromAngleRadians(angle))\n      vec2.add(point, point, centerv)\n      pointArray.push(point)\n    }\n  }\n  return path2.fromPoints({ close: false }, pointArray)\n}\n\nmodule.exports = arc\n","const { EPS } = require('../maths/constants')\n\nconst vec2 = require('../maths/vec2')\n\nconst geom2 = require('../geometries/geom2')\n\nconst { isGTE, isNumberArray } = require('./commonChecks')\n\n/**\n * Construct an axis-aligned ellispe in two dimensional space.\n * @see https://en.wikipedia.org/wiki/Ellipse\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0]] - center of ellipse\n * @param {Array} [options.radius=[1,1]] - radius of ellipse, along X and Y\n * @param {Number} [options.startAngle=0] - start angle of ellipse, in radians\n * @param {Number} [options.endAngle=(Math.PI * 2)] - end angle of ellipse, in radians\n * @param {Number} [options.segments=32] - number of segments to create per full rotation\n * @returns {geom2} new 2D geometry\n * @alias module:modeling/primitives.ellipse\n * @example\n * let myshape = ellipse({radius: [5,10]})\n */\nconst ellipse = (options) => {\n  const defaults = {\n    center: [0, 0],\n    radius: [1, 1],\n    startAngle: 0,\n    endAngle: (Math.PI * 2),\n    segments: 32\n  }\n  let { center, radius, startAngle, endAngle, segments } = Object.assign({}, defaults, options)\n\n  if (!isNumberArray(center, 2)) throw new Error('center must be an array of X and Y values')\n  if (!isNumberArray(radius, 2)) throw new Error('radius must be an array of X and Y values')\n  if (!radius.every((n) => n > 0)) throw new Error('radius values must be greater than zero')\n  if (!isGTE(startAngle, 0)) throw new Error('startAngle must be positive')\n  if (!isGTE(endAngle, 0)) throw new Error('endAngle must be positive')\n  if (!isGTE(segments, 3)) throw new Error('segments must be three or more')\n\n  startAngle = startAngle % (Math.PI * 2)\n  endAngle = endAngle % (Math.PI * 2)\n\n  let rotation = (Math.PI * 2)\n  if (startAngle < endAngle) {\n    rotation = endAngle - startAngle\n  }\n  if (startAngle > endAngle) {\n    rotation = endAngle + ((Math.PI * 2) - startAngle)\n  }\n\n  const minradius = Math.min(radius[0], radius[1])\n  const minangle = Math.acos(((minradius * minradius) + (minradius * minradius) - (EPS * EPS)) /\n                            (2 * minradius * minradius))\n  if (rotation < minangle) throw new Error('startAngle and endAngle do not define a significant rotation')\n\n  segments = Math.floor(segments * (rotation / (Math.PI * 2)))\n\n  const centerv = vec2.fromArray(center)\n  const step = rotation / segments // radians per segment\n\n  const points = []\n  segments = (rotation < Math.PI * 2) ? segments + 1 : segments\n  for (let i = 0; i < segments; i++) {\n    const angle = (step * i) + startAngle\n    const point = vec2.fromValues(radius[0] * Math.cos(angle), radius[1] * Math.sin(angle))\n    vec2.add(point, centerv, point)\n    points.push(point)\n  }\n  if (rotation < Math.PI * 2) points.push(centerv)\n  return geom2.fromPoints(points)\n}\n\nmodule.exports = ellipse\n","const ellipse = require('./ellipse')\n\nconst { isGT } = require('./commonChecks')\n\n/**\n * Construct a circle in two dimensional space where all points are at the same distance from the center.\n * @see [ellipse]{@link module:modeling/primitives.ellipse} for more options\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0]] - center of circle\n * @param {Number} [options.radius=1] - radius of circle\n * @param {Number} [options.startAngle=0] - start angle of circle, in radians\n * @param {Number} [options.endAngle=(Math.PI * 2)] - end angle of circle, in radians\n * @param {Number} [options.segments=32] - number of segments to create per full rotation\n * @returns {geom2} new 2D geometry\n * @alias module:modeling/primitives.circle\n * @example\n * let myshape = circle({radius: 10})\n */\nconst circle = (options) => {\n  const defaults = {\n    center: [0, 0],\n    radius: 1,\n    startAngle: 0,\n    endAngle: (Math.PI * 2),\n    segments: 32\n  }\n  let { center, radius, startAngle, endAngle, segments } = Object.assign({}, defaults, options)\n\n  if (!isGT(radius, 0)) throw new Error('radius must be greater than zero')\n\n  radius = [radius, radius]\n\n  return ellipse({ center, radius, startAngle, endAngle, segments })\n}\n\nmodule.exports = circle\n","const geom3 = require('../geometries/geom3')\nconst poly3 = require('../geometries/poly3')\n\nconst { isNumberArray } = require('./commonChecks')\n\n/**\n * Construct an axis-aligned solid cuboid in three dimensional space.\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0,0]] - center of cuboid\n * @param {Array} [options.size=[2,2,2]] - dimensions of cuboid; width, depth, height\n * @returns {geom3} new 3D geometry\n * @alias module:modeling/primitives.cuboid\n *\n * @example\n * let myshape = cuboid(size: [5, 10, 5]})\n */\nconst cuboid = (options) => {\n  const defaults = {\n    center: [0, 0, 0],\n    size: [2, 2, 2]\n  }\n  const { center, size } = Object.assign({}, defaults, options)\n\n  if (!isNumberArray(center, 3)) throw new Error('center must be an array of X, Y and Z values')\n  if (!isNumberArray(size, 3)) throw new Error('size must be an array of width, depth and height values')\n  if (!size.every((n) => n > 0)) throw new Error('size values must be greater than zero')\n\n  const result = geom3.create(\n    // adjust a basic shape to size\n    [\n      [[0, 4, 6, 2], [-1, 0, 0]],\n      [[1, 3, 7, 5], [+1, 0, 0]],\n      [[0, 1, 5, 4], [0, -1, 0]],\n      [[2, 6, 7, 3], [0, +1, 0]],\n      [[0, 2, 3, 1], [0, 0, -1]],\n      [[4, 5, 7, 6], [0, 0, +1]]\n    ].map((info) => {\n      const points = info[0].map((i) => {\n        const pos = [\n          center[0] + (size[0] / 2) * (2 * !!(i & 1) - 1),\n          center[1] + (size[1] / 2) * (2 * !!(i & 2) - 1),\n          center[2] + (size[2] / 2) * (2 * !!(i & 4) - 1)\n        ]\n        return pos\n      })\n      return poly3.fromPoints(points)\n    })\n  )\n  return result\n}\n\nmodule.exports = cuboid\n","const cuboid = require('./cuboid')\n\nconst { isGT } = require('./commonChecks')\n\n/**\n * Construct an axis-aligned solid cube in three dimensional space with six square faces.\n * @see [cuboid]{@link module:modeling/primitives.cuboid} for more options\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0,0]] - center of cube\n * @param {Number} [options.size=2] - dimension of cube\n * @returns {geom3} new 3D geometry\n * @alias module:modeling/primitives.cube\n * @example\n * let myshape = cube({size: 10})\n */\nconst cube = (options) => {\n  const defaults = {\n    center: [0, 0, 0],\n    size: 2\n  }\n  let { center, size } = Object.assign({}, defaults, options)\n\n  if (!isGT(size, 0)) throw new Error('size must be greater than zero')\n\n  size = [size, size, size]\n\n  return cuboid({ center, size })\n}\n\nmodule.exports = cube\n","const { EPS } = require('../maths/constants')\n\nconst vec3 = require('../maths/vec3')\n\nconst geom3 = require('../geometries/geom3')\nconst poly3 = require('../geometries/poly3')\n\nconst { isGT, isGTE, isNumberArray } = require('./commonChecks')\n\n/**\n * Construct a Z axis-aligned elliptic cylinder in three dimensional space.\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0,0]] - center of cylinder\n * @param {Number} [options.height=2] - height of cylinder\n * @param {Array} [options.startRadius=[1,1]] - radius of rounded start, must be two dimensional array\n * @param {Number} [options.startAngle=0] - start angle of cylinder, in radians\n * @param {Array} [options.endRadius=[1,1]] - radius of rounded end, must be two dimensional array\n * @param {Number} [options.endAngle=(Math.PI * 2)] - end angle of cylinder, in radians\n * @param {Number} [options.segments=32] - number of segments to create per full rotation\n * @returns {geom3} new geometry\n * @alias module:modeling/primitives.cylinderElliptic\n *\n * @example\n * let myshape = cylinderElliptic({height: 2, startRadius: [10,5], endRadius: [8,3]})\n */\nconst cylinderElliptic = (options) => {\n  const defaults = {\n    center: [0, 0, 0],\n    height: 2,\n    startRadius: [1, 1],\n    startAngle: 0,\n    endRadius: [1, 1],\n    endAngle: (Math.PI * 2),\n    segments: 32\n  }\n  let { center, height, startRadius, startAngle, endRadius, endAngle, segments } = Object.assign({}, defaults, options)\n\n  if (!isNumberArray(center, 3)) throw new Error('center must be an array of X, Y and Z values')\n  if (!isGT(height, 0)) throw new Error('height must be greater then zero')\n  if (!isNumberArray(startRadius, 2)) throw new Error('startRadius must be an array of X and Y values')\n  if (!startRadius.every((n) => n > 0)) throw new Error('startRadius values must be greater than zero')\n  if (!isNumberArray(endRadius, 2)) throw new Error('endRadius must be an array of X and Y values')\n  if (!endRadius.every((n) => n > 0)) throw new Error('endRadius values must be greater than zero')\n  if (!isGTE(startAngle, 0)) throw new Error('startAngle must be positive')\n  if (!isGTE(endAngle, 0)) throw new Error('endAngle must be positive')\n  if (!isGTE(segments, 4)) throw new Error('segments must be four or more')\n\n  startAngle = startAngle % (Math.PI * 2)\n  endAngle = endAngle % (Math.PI * 2)\n\n  let rotation = (Math.PI * 2)\n  if (startAngle < endAngle) {\n    rotation = endAngle - startAngle\n  }\n  if (startAngle > endAngle) {\n    rotation = endAngle + ((Math.PI * 2) - startAngle)\n  }\n\n  const minradius = Math.min(startRadius[0], startRadius[1], endRadius[0], endRadius[1])\n  const minangle = Math.acos(((minradius * minradius) + (minradius * minradius) - (EPS * EPS)) /\n                            (2 * minradius * minradius))\n  if (rotation < minangle) throw new Error('startAngle and endAngle do not define a significant rotation')\n\n  const slices = Math.floor(segments * (rotation / (Math.PI * 2)))\n\n  const start = vec3.fromValues(0, 0, -(height / 2))\n  const end = vec3.fromValues(0, 0, height / 2)\n  const ray = vec3.subtract(end, start)\n\n  const axisZ = vec3.unit(ray)\n  const axisX = vec3.unit(vec3.orthogonal(axisZ))\n  const axisY = vec3.unit(vec3.cross(axisZ, axisX))\n\n  const point = (stack, slice, radius) => {\n    const angle = slice * rotation + startAngle\n    const out = vec3.add(vec3.scale(radius[0] * Math.cos(angle), axisX), vec3.scale(radius[1] * Math.sin(angle), axisY))\n    const pos = vec3.add(vec3.add(vec3.scale(stack, ray), start), out)\n    return pos\n  }\n\n  // adjust the points to center\n  const fromPoints = (...points) => {\n    const newpoints = points.map((point) => vec3.add(point, center))\n    return poly3.fromPoints(newpoints)\n  }\n\n  const polygons = []\n  for (let i = 0; i < slices; i++) {\n    const t0 = i / slices\n    const t1 = (i + 1) / slices\n\n    if (endRadius[0] === startRadius[0] && endRadius[1] === startRadius[1]) {\n      polygons.push(fromPoints(start, point(0, t1, endRadius), point(0, t0, endRadius)))\n      polygons.push(fromPoints(point(0, t1, endRadius), point(1, t1, endRadius), point(1, t0, endRadius), point(0, t0, endRadius)))\n      polygons.push(fromPoints(end, point(1, t0, endRadius), point(1, t1, endRadius)))\n    } else {\n      if (startRadius[0] > 0) {\n        polygons.push(fromPoints(start, point(0, t1, startRadius), point(0, t0, startRadius)))\n        polygons.push(fromPoints(point(0, t0, startRadius), point(0, t1, startRadius), point(1, t0, endRadius)))\n      }\n      if (endRadius[0] > 0) {\n        polygons.push(fromPoints(end, point(1, t0, endRadius), point(1, t1, endRadius)))\n        polygons.push(fromPoints(point(1, t0, endRadius), point(0, t1, startRadius), point(1, t1, endRadius)))\n      }\n    }\n  }\n  if (rotation < (Math.PI * 2)) {\n    polygons.push(fromPoints(start, point(0, 0, startRadius), end))\n    polygons.push(fromPoints(point(0, 0, startRadius), point(1, 0, endRadius), end))\n    polygons.push(fromPoints(start, end, point(0, 1, startRadius)))\n    polygons.push(fromPoints(point(0, 1, startRadius), end, point(1, 1, endRadius)))\n  }\n  const result = geom3.create(polygons)\n  return result\n}\n\nmodule.exports = cylinderElliptic\n","const cylinderElliptic = require('./cylinderElliptic')\n\nconst { isGT } = require('./commonChecks')\n\n/**\n * Construct a Z axis-aligned cylinder in three dimensional space.\n * @see [cylinderElliptic]{@link module:modeling/primitives.cylinderElliptic} for more options\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0,0]] - center of cylinder\n * @param {Number} [options.height=2] - height of cylinder\n * @param {Number} [options.radius=1] - radius of cylinder (at both start and end)\n * @param {Number} [options.segments=32] - number of segments to create per full rotation\n * @returns {geom3} new geometry\n * @alias module:modeling/primitives.cylinder\n *\n * @example\n * let myshape = cylinder({height: 2, radius: 10})\n */\nconst cylinder = (options) => {\n  const defaults = {\n    center: [0, 0, 0],\n    height: 2,\n    radius: 1,\n    segments: 32\n  }\n  const { center, height, radius, segments } = Object.assign({}, defaults, options)\n\n  if (!isGT(radius, 0)) throw new Error('radius must be greater than zero')\n\n  const newoptions = {\n    center,\n    height,\n    startRadius: [radius, radius],\n    endRadius: [radius, radius],\n    segments\n  }\n\n  return cylinderElliptic(newoptions)\n}\n\nmodule.exports = cylinder\n","const vec3 = require('../maths/vec3')\n\nconst geom3 = require('../geometries/geom3')\nconst poly3 = require('../geometries/poly3')\n\nconst { isGTE, isNumberArray } = require('./commonChecks')\n\n/**\n * Construct an axis-aligned ellipsoid in three dimensional space.\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0,0]] - center of ellipsoid\n * @param {Array} [options.radius=[1,1,1]] - radius of ellipsoid, along X, Y and Z\n * @param {Number} [options.segments=32] - number of segements to create per full rotation\n * @param {Array} [options.axes] -  an array with three vectors for the x, y and z base vectors\n * @returns {geom3} new 3D geometry\n * @alias module:modeling/primitives.ellipsoid\n *\n * @example\n * let myshape = ellipsoid({radius: [5, 10, 20]})\n*/\nconst ellipsoid = (options) => {\n  const defaults = {\n    center: [0, 0, 0],\n    radius: [1, 1, 1],\n    segments: 32,\n    axes: [[1, 0, 0], [0, -1, 0], [0, 0, 1]]\n  }\n  const { center, radius, segments, axes } = Object.assign({}, defaults, options)\n\n  if (!isNumberArray(center, 3)) throw new Error('center must be an array of X, Y and Z values')\n  if (!isNumberArray(radius, 3)) throw new Error('radius must be an array of X, Y and Z values')\n  if (!radius.every((n) => n > 0)) throw new Error('radius values must be greater than zero')\n  if (!isGTE(segments, 4)) throw new Error('segments must be four or more')\n\n  const xvector = vec3.scale(radius[0], vec3.unit(axes[0]))\n  const yvector = vec3.scale(radius[1], vec3.unit(axes[1]))\n  const zvector = vec3.scale(radius[2], vec3.unit(axes[2]))\n\n  const qsegments = Math.round(segments / 4)\n  let prevcylinderpoint\n  const polygons = []\n  for (let slice1 = 0; slice1 <= segments; slice1++) {\n    const angle = Math.PI * 2.0 * slice1 / segments\n    const cylinderpoint = vec3.add(vec3.scale(Math.cos(angle), xvector), vec3.scale(Math.sin(angle), yvector))\n    if (slice1 > 0) {\n      let prevcospitch, prevsinpitch\n      for (let slice2 = 0; slice2 <= qsegments; slice2++) {\n        const pitch = 0.5 * Math.PI * slice2 / qsegments\n        const cospitch = Math.cos(pitch)\n        const sinpitch = Math.sin(pitch)\n        if (slice2 > 0) {\n          let points = []\n          let point\n          point = vec3.subtract(vec3.scale(prevcospitch, prevcylinderpoint), vec3.scale(prevsinpitch, zvector))\n          points.push(vec3.add(center, point))\n          point = vec3.subtract(vec3.scale(prevcospitch, cylinderpoint), vec3.scale(prevsinpitch, zvector))\n          points.push(vec3.add(center, point))\n          if (slice2 < qsegments) {\n            point = vec3.subtract(vec3.scale(cospitch, cylinderpoint), vec3.scale(sinpitch, zvector))\n            points.push(vec3.add(center, point))\n          }\n          point = vec3.subtract(vec3.scale(cospitch, prevcylinderpoint), vec3.scale(sinpitch, zvector))\n          points.push(vec3.add(center, point))\n\n          polygons.push(poly3.fromPoints(points))\n\n          points = []\n          point = vec3.add(vec3.scale(prevcospitch, prevcylinderpoint), vec3.scale(prevsinpitch, zvector))\n          points.push(vec3.add(center, point))\n          point = vec3.add(vec3.scale(prevcospitch, cylinderpoint), vec3.scale(prevsinpitch, zvector))\n          points.push(vec3.add(center, point))\n          if (slice2 < qsegments) {\n            point = vec3.add(vec3.scale(cospitch, cylinderpoint), vec3.scale(sinpitch, zvector))\n            points.push(vec3.add(center, point))\n          }\n          point = vec3.add(vec3.scale(cospitch, prevcylinderpoint), vec3.scale(sinpitch, zvector))\n          points.push(vec3.add(center, point))\n          points.reverse()\n\n          polygons.push(poly3.fromPoints(points))\n        }\n        prevcospitch = cospitch\n        prevsinpitch = sinpitch\n      }\n    }\n    prevcylinderpoint = cylinderpoint\n  }\n  return geom3.create(polygons)\n}\n\nmodule.exports = ellipsoid\n","const geom3 = require('../geometries/geom3')\nconst poly3 = require('../geometries/poly3')\n\nconst { isNumberArray } = require('./commonChecks')\n\n/**\n * Construct a polyhedron in three dimensional space from the given set of 3D points and faces.\n * The faces can define outward or inward facing polygons (orientation).\n * However, each face must define a counter clockwise rotation of points which follows the right hand rule.\n * @param {Object} options - options for construction\n * @param {Array} options.points - list of points in 3D space\n * @param {Array} options.faces - list of faces, where each face is a set of indexes into the points\n * @param {Array} [options.colors=undefined] - list of RGBA colors to apply to each face\n * @param {Array} [options.orientation='outward'] - orientation of faces\n * @returns {geom3} new 3D geometry\n * @alias module:modeling/primitives.polyhedron\n *\n * @example\n * let mypoints = [ [10, 10, 0], [10, -10, 0], [-10, -10, 0], [-10, 10, 0], [0, 0, 10] ]\n * let myfaces = [ [0, 1, 4], [1, 2, 4], [2, 3, 4], [3, 0, 4], [1, 0, 3], [2, 1, 3] ]\n * let myshape = polyhedron({points: mypoint, faces: myfaces, orientation: 'inward'})\n */\nconst polyhedron = (options) => {\n  const defaults = {\n    points: [],\n    faces: [],\n    colors: undefined,\n    orientation: 'outward'\n  }\n  const { points, faces, colors, orientation } = Object.assign({}, defaults, options)\n\n  if (!(Array.isArray(points) && Array.isArray(faces))) {\n    throw new Error('points and faces must be arrays')\n  }\n  if (points.length < 3) {\n    throw new Error('three or more points are required')\n  }\n  if (faces.length < 1) {\n    throw new Error('one or more faces are required')\n  }\n  if (colors) {\n    if (!Array.isArray(colors)) {\n      throw new Error('colors must be an array')\n    }\n    if (colors.length !== faces.length) {\n      throw new Error('faces and colors must have the same length')\n    }\n  }\n  points.forEach((point, i) => {\n    if (!isNumberArray(point, 3)) throw new Error(`point ${i} must be an array of X, Y, Z values`)\n  })\n  faces.forEach((face, i) => {\n    if (face.length < 3) throw new Error(`face ${i} must contain 3 or more indexes`)\n    if (!isNumberArray(face, face.length)) throw new Error(`face ${i} must be an array of numbers`)\n  })\n\n  // invert the faces if orientation is inwards, as all internals expect outwarding facing polygons\n  if (orientation !== 'outward') {\n    faces.forEach((face) => face.reverse())\n  }\n\n  const polygons = faces.map((face, findex) => {\n    const polygon = poly3.fromPoints(face.map((pindex) => points[pindex]))\n    if (colors && colors[findex]) polygon.color = colors[findex]\n    return polygon\n  })\n\n  return geom3.create(polygons)\n}\n\nmodule.exports = polyhedron\n","const mat4 = require('../maths/mat4')\n\nconst geom3 = require('../geometries/geom3')\n\nconst polyhedron = require('./polyhedron')\n\nconst { isGT, isGTE } = require('./commonChecks')\n\n/**\n * Construct a geodesic sphere based on icosahedron symmetry.\n * @param {Object} [options] - options for construction\n * @param {Number} [options.radius=1] - target radius of sphere\n * @param {Number} [options.frequency=6] - subdivision frequency per face, multiples of 6\n * @returns {geom3} new 3D geometry\n * @alias module:modeling/primitives.geodesicSphere\n *\n * @example\n * let myshape = geodesicSphere({radius: 15, frequency: 18})\n */\nconst geodesicSphere = (options) => {\n  const defaults = {\n    radius: 1,\n    frequency: 6\n  }\n  let { radius, frequency } = Object.assign({}, defaults, options)\n\n  if (!isGT(radius, 0)) throw new Error('radius must be greater than zero')\n  if (!isGTE(frequency, 6)) throw new Error('frequency must be six or more')\n\n  // adjust the frequency to base 6\n  frequency = Math.floor(frequency / 6)\n\n  const ci = [ // hard-coded data of icosahedron (20 faces, all triangles)\n    [0.850651, 0.000000, -0.525731],\n    [0.850651, -0.000000, 0.525731],\n    [-0.850651, -0.000000, 0.525731],\n    [-0.850651, 0.000000, -0.525731],\n    [0.000000, -0.525731, 0.850651],\n    [0.000000, 0.525731, 0.850651],\n    [0.000000, 0.525731, -0.850651],\n    [0.000000, -0.525731, -0.850651],\n    [-0.525731, -0.850651, -0.000000],\n    [0.525731, -0.850651, -0.000000],\n    [0.525731, 0.850651, 0.000000],\n    [-0.525731, 0.850651, 0.000000]]\n\n  const ti = [[0, 9, 1], [1, 10, 0], [6, 7, 0], [10, 6, 0], [7, 9, 0], [5, 1, 4], [4, 1, 9], [5, 10, 1], [2, 8, 3], [3, 11, 2], [2, 5, 4],\n    [4, 8, 2], [2, 11, 5], [3, 7, 6], [6, 11, 3], [8, 7, 3], [9, 8, 4], [11, 10, 5], [10, 11, 6], [8, 9, 7]]\n\n  const geodesicSubDivide = (p, frequency, offset) => {\n    const p1 = p[0]\n    const p2 = p[1]\n    const p3 = p[2]\n    let n = offset\n    const c = []\n    const f = []\n\n    //           p3\n    //           /\\\n    //          /__\\     frequency = 3\n    //      i  /\\  /\\\n    //        /__\\/__\\       total triangles = 9 (frequency*frequency)\n    //       /\\  /\\  /\\\n    //     0/__\\/__\\/__\\\n    //    p1 0   j      p2\n\n    for (let i = 0; i < frequency; i++) {\n      for (let j = 0; j < frequency - i; j++) {\n        const t0 = i / frequency\n        const t1 = (i + 1) / frequency\n        const s0 = j / (frequency - i)\n        const s1 = (j + 1) / (frequency - i)\n        const s2 = frequency - i - 1 ? j / (frequency - i - 1) : 1\n        const q = []\n\n        q[0] = mix3(mix3(p1, p2, s0), p3, t0)\n        q[1] = mix3(mix3(p1, p2, s1), p3, t0)\n        q[2] = mix3(mix3(p1, p2, s2), p3, t1)\n\n        // -- normalize\n        for (let k = 0; k < 3; k++) {\n          const r = Math.sqrt(q[k][0] * q[k][0] + q[k][1] * q[k][1] + q[k][2] * q[k][2])\n          for (let l = 0; l < 3; l++) {\n            q[k][l] /= r\n          }\n        }\n        c.push(q[0], q[1], q[2])\n        f.push([n, n + 1, n + 2]); n += 3\n\n        if (j < frequency - i - 1) {\n          const s3 = frequency - i - 1 ? (j + 1) / (frequency - i - 1) : 1\n          q[0] = mix3(mix3(p1, p2, s1), p3, t0)\n          q[1] = mix3(mix3(p1, p2, s3), p3, t1)\n          q[2] = mix3(mix3(p1, p2, s2), p3, t1)\n\n          // -- normalize\n          for (let k = 0; k < 3; k++) {\n            const r = Math.sqrt(q[k][0] * q[k][0] + q[k][1] * q[k][1] + q[k][2] * q[k][2])\n            for (let l = 0; l < 3; l++) {\n              q[k][l] /= r\n            }\n          }\n          c.push(q[0], q[1], q[2])\n          f.push([n, n + 1, n + 2]); n += 3\n        }\n      }\n    }\n    return { points: c, triangles: f, offset: n }\n  }\n\n  const mix3 = (a, b, f) => {\n    const _f = 1 - f\n    const c = []\n    for (let i = 0; i < 3; i++) {\n      c[i] = a[i] * _f + b[i] * f\n    }\n    return c\n  }\n\n  let points = []\n  let faces = []\n  let offset = 0\n\n  for (let i = 0; i < ti.length; i++) {\n    const g = geodesicSubDivide([ci[ti[i][0]], ci[ti[i][1]], ci[ti[i][2]]], frequency, offset)\n    points = points.concat(g.points)\n    faces = faces.concat(g.triangles)\n    offset = g.offset\n  }\n\n  let geometry = polyhedron({ points: points, faces: faces, orientation: 'inward' })\n  if (radius !== 1) geometry = geom3.transform(mat4.fromScaling([radius, radius, radius]), geometry)\n  return geometry\n}\n\nmodule.exports = geodesicSphere\n","const path2 = require('../geometries/path2')\n\n/**\n * Construct a new line in two dimensional space from the given points.\n * The points must be provided as an array, where each element is a 2D point.\n * @param {Array} points - array of points from which to create the path\n * @returns {path2} new 2D path\n * @alias module:modeling/primitives.line\n *\n * @example\n * let myshape = line([[10, 10], [-10, 10]])\n */\nconst line = (points) => {\n  if (!Array.isArray(points)) throw new Error('points must be an array')\n\n  return path2.fromPoints({}, points)\n}\n\nmodule.exports = line\n","const geom2 = require('../geometries/geom2')\n\n/**\n * Construct a polygon in two dimensional space from a list of points, or a list of points and paths.\n * NOTE: The ordering of points is VERY IMPORTANT.\n * @param {Object} options - options for construction\n * @param {Array} options.points - points of the polygon : either flat or nested array of 2D points\n * @param {Array} [options.paths] - paths of the polygon : either flat or nested array of point indexes\n * @returns {geom2} new 2D geometry\n * @alias module:modeling/primitives.polygon\n *\n * @example\n * let roof = [[10,11], [0,11], [5,20]]\n * let wall = [[0,0], [10,0], [10,10], [0,10]]\n *\n * let poly = polygon({ points: roof })\n * or\n * let poly = polygon({ points: [roof, wall] })\n * or\n * let poly = polygon({ points: roof, paths: [0, 1, 2] })\n * or\n * let poly = polygon({ points: [roof, wall], paths: [[0, 1, 2], [3, 4, 5, 6]] })\n */\nconst polygon = (options) => {\n  const defaults = {\n    points: [],\n    paths: []\n  }\n  const { points, paths } = Object.assign({}, defaults, options)\n\n  if (!(Array.isArray(points) && Array.isArray(paths))) throw new Error('points and paths must be arrays')\n\n  let listofpolys = points\n  if (Array.isArray(points[0])) {\n    if (!Array.isArray(points[0][0])) {\n      // points is an array of something... convert to list\n      listofpolys = [points]\n    }\n  }\n\n  listofpolys.forEach((list, i) => {\n    if (!Array.isArray(list)) throw new Error('list of points ' + i + ' must be an array')\n    if (list.length < 3) throw new Error('list of points ' + i + ' must contain three or more points')\n    list.forEach((point, j) => {\n      if (!Array.isArray(point)) throw new Error('list of points ' + i + ', point ' + j + ' must be an array')\n      if (point.length < 2) throw new Error('list of points ' + i + ', point ' + j + ' must contain by X and Y values')\n    })\n  })\n\n  let listofpaths = paths\n  if (paths.length === 0) {\n    // create a list of paths based on the points\n    let count = 0\n    listofpaths = listofpolys.map((list) => list.map((point) => count++))\n  }\n\n  // flatten the listofpoints for indexed access\n  const allpoints = []\n  listofpolys.forEach((list) => list.forEach((point) => allpoints.push(point)))\n\n  let sides = []\n  listofpaths.forEach((path) => {\n    const setofpoints = path.map((index) => allpoints[index])\n    const geometry = geom2.fromPoints(setofpoints)\n    sides = sides.concat(geom2.toSides(geometry))\n  })\n  return geom2.create(sides)\n}\n\nmodule.exports = polygon\n","const vec2 = require('../maths/vec2')\n\nconst geom2 = require('../geometries/geom2')\n\nconst { isNumberArray } = require('./commonChecks')\n\n/**\n * Construct an axis-aligned rectangle in two dimensional space with four sides at right angles.\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0]] - center of rectangle\n * @param {Array} [options.size=[2,2]] - dimension of rectangle, width and length\n * @returns {geom2} new 2D geometry\n * @alias module:modeling/primitives.rectangle\n *\n * @example\n * let myshape = rectangle({size: [10, 20]})\n */\nconst rectangle = (options) => {\n  const defaults = {\n    center: [0, 0],\n    size: [2, 2]\n  }\n  const { center, size } = Object.assign({}, defaults, options)\n\n  if (!isNumberArray(center, 2)) throw new Error('center must be an array of X and Y values')\n  if (!isNumberArray(size, 2)) throw new Error('size must be an array of X and Y values')\n  if (!size.every((n) => n > 0)) throw new Error('size values must be greater than zero')\n\n  const point = [size[0] / 2, size[1] / 2]\n  const pswap = [point[0], -point[1]]\n\n  const points = [\n    vec2.subtract(center, point),\n    vec2.add(center, pswap),\n    vec2.add(center, point),\n    vec2.subtract(center, pswap)\n  ]\n  return geom2.fromPoints(points)\n}\n\nmodule.exports = rectangle\n","const { EPS } = require('../maths/constants')\n\nconst vec2 = require('../maths/vec2')\nconst vec3 = require('../maths/vec3')\n\nconst geom3 = require('../geometries/geom3')\nconst poly3 = require('../geometries/poly3')\n\nconst { isGT, isGTE, isNumberArray } = require('./commonChecks')\n\nconst createCorners = (center, size, radius, segments, slice, positive) => {\n  const pitch = (Math.PI / 2) * slice / segments\n  const cospitch = Math.cos(pitch)\n  const sinpitch = Math.sin(pitch)\n\n  const layersegments = segments - slice\n  let layerradius = radius * cospitch\n  let layeroffset = size[2] - (radius - (radius * sinpitch))\n  if (!positive) layeroffset = (radius - (radius * sinpitch)) - size[2]\n\n  layerradius = layerradius > EPS ? layerradius : 0\n\n  const corner0 = vec3.add(center, [size[0] - radius, size[1] - radius, layeroffset])\n  const corner1 = vec3.add(center, [radius - size[0], size[1] - radius, layeroffset])\n  const corner2 = vec3.add(center, [radius - size[0], radius - size[1], layeroffset])\n  const corner3 = vec3.add(center, [size[0] - radius, radius - size[1], layeroffset])\n  const corner0Points = []\n  const corner1Points = []\n  const corner2Points = []\n  const corner3Points = []\n  for (let i = 0; i <= layersegments; i++) {\n    const radians = layersegments > 0 ? Math.PI / 2 * i / layersegments : 0\n    const point2d = vec2.fromAngleRadians(radians)\n    const point3d = vec3.fromVec2(vec2.scale(layerradius, point2d))\n    corner0Points.push(vec3.add(corner0, point3d))\n    vec3.rotateZ(point3d, Math.PI / 2, [0, 0, 0], point3d)\n    corner1Points.push(vec3.add(corner1, point3d))\n    vec3.rotateZ(point3d, Math.PI / 2, [0, 0, 0], point3d)\n    corner2Points.push(vec3.add(corner2, point3d))\n    vec3.rotateZ(point3d, Math.PI / 2, [0, 0, 0], point3d)\n    corner3Points.push(vec3.add(corner3, point3d))\n  }\n  if (!positive) {\n    corner0Points.reverse()\n    corner1Points.reverse()\n    corner2Points.reverse()\n    corner3Points.reverse()\n    return [corner3Points, corner2Points, corner1Points, corner0Points]\n  }\n  return [corner0Points, corner1Points, corner2Points, corner3Points]\n}\n\nconst stitchCorners = (previousCorners, currentCorners) => {\n  const polygons = []\n  for (let i = 0; i < previousCorners.length; i++) {\n    const previous = previousCorners[i]\n    const current = currentCorners[i]\n    for (let j = 0; j < (previous.length - 1); j++) {\n      polygons.push(poly3.fromPoints([previous[j], previous[j + 1], current[j]]))\n\n      if (j < (current.length - 1)) {\n        polygons.push(poly3.fromPoints([current[j], previous[j + 1], current[j + 1]]))\n      }\n    }\n  }\n  return polygons\n}\n\nconst stitchWalls = (previousCorners, currentCorners) => {\n  const polygons = []\n  for (let i = 0; i < previousCorners.length; i++) {\n    let previous = previousCorners[i]\n    let current = currentCorners[i]\n    const p0 = previous[previous.length - 1]\n    const c0 = current[current.length - 1]\n\n    const j = (i + 1) % previousCorners.length\n    previous = previousCorners[j]\n    current = currentCorners[j]\n    const p1 = previous[0]\n    const c1 = current[0]\n\n    polygons.push(poly3.fromPoints([p0, p1, c1, c0]))\n  }\n  return polygons\n}\n\nconst stitchSides = (bottomCorners, topCorners) => {\n  // make a copy and reverse the bottom corners\n  bottomCorners = [bottomCorners[3], bottomCorners[2], bottomCorners[1], bottomCorners[0]]\n  bottomCorners = bottomCorners.map((corner) => corner.slice().reverse())\n\n  const bottomPoints = []\n  bottomCorners.forEach((corner) => {\n    corner.forEach((point) => bottomPoints.push(point))\n  })\n\n  const topPoints = []\n  topCorners.forEach((corner) => {\n    corner.forEach((point) => topPoints.push(point))\n  })\n\n  const polygons = []\n  for (let i = 0; i < topPoints.length; i++) {\n    const j = (i + 1) % topPoints.length\n    polygons.push(poly3.fromPoints([bottomPoints[i], bottomPoints[j], topPoints[j], topPoints[i]]))\n  }\n  return polygons\n}\n\n/**\n * Construct an axis-aligned solid cuboid in three dimensional space with rounded corners.\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0,0]] - center of rounded cube\n * @param {Array} [options.size=[2,2,2]] - dimension of rounded cube; width, depth, height\n * @param {Number} [options.roundRadius=0.2] - radius of rounded edges\n * @param {Number} [options.segments=32] - number of segments to create per full rotation\n * @returns {geom3} new 3D geometry\n * @alias module:modeling/primitives.roundedCuboid\n *\n * @example\n * let mycube = roundedCuboid({size: [10, 20, 10], roundRadius: 2, segments: 16})\n */\nconst roundedCuboid = (options) => {\n  const defaults = {\n    center: [0, 0, 0],\n    size: [2, 2, 2],\n    roundRadius: 0.2,\n    segments: 32\n  }\n  let { center, size, roundRadius, segments } = Object.assign({}, defaults, options)\n\n  if (!isNumberArray(center, 3)) throw new Error('center must be an array of X, Y and Z values')\n  if (!isNumberArray(size, 3)) throw new Error('size must be an array of X, Y and Z values')\n  if (!size.every((n) => n > 0)) throw new Error('size values must be greater than zero')\n  if (!isGT(roundRadius, 0)) throw new Error('roundRadius must be greater than zero')\n  if (!isGTE(segments, 4)) throw new Error('segments must be four or more')\n\n  size = size.map((v) => v / 2) // convert to radius\n\n  if (roundRadius > (size[0] - EPS) ||\n      roundRadius > (size[1] - EPS) ||\n      roundRadius > (size[2] - EPS)) throw new Error('roundRadius must be smaller then the radius of all dimensions')\n\n  segments = Math.floor(segments / 4)\n\n  let prevCornersPos = null\n  let prevCornersNeg = null\n  let polygons = []\n  for (let slice = 0; slice <= segments; slice++) {\n    const cornersPos = createCorners(center, size, roundRadius, segments, slice, true)\n    const cornersNeg = createCorners(center, size, roundRadius, segments, slice, false)\n\n    if (slice === 0) {\n      polygons = polygons.concat(stitchSides(cornersNeg, cornersPos))\n    }\n\n    if (prevCornersPos) {\n      polygons = polygons.concat(stitchCorners(prevCornersPos, cornersPos),\n        stitchWalls(prevCornersPos, cornersPos))\n    }\n    if (prevCornersNeg) {\n      polygons = polygons.concat(stitchCorners(prevCornersNeg, cornersNeg),\n        stitchWalls(prevCornersNeg, cornersNeg))\n    }\n\n    if (slice === segments) {\n      // add the top\n      let points = cornersPos.map((corner) => corner[0])\n      polygons.push(poly3.fromPoints(points))\n      // add the bottom\n      points = cornersNeg.map((corner) => corner[0])\n      polygons.push(poly3.fromPoints(points))\n    }\n\n    prevCornersPos = cornersPos\n    prevCornersNeg = cornersNeg\n  }\n\n  return geom3.create(polygons)\n}\n\nmodule.exports = roundedCuboid\n","const { EPS } = require('../maths/constants')\n\nconst vec3 = require('../maths/vec3')\n\nconst geom3 = require('../geometries/geom3')\nconst poly3 = require('../geometries/poly3')\n\nconst { isGT, isGTE, isNumberArray } = require('./commonChecks')\n\n/**\n * Construct a Z axis-aligned solid cylinder in three dimensional space with rounded ends.\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0,0]] - center of cylinder\n * @param {Array} [options.height=2] - height of cylinder\n * @param {Number} [options.radius=1] - radius of cylinder\n * @param {Number} [options.roundRadius=0.2] - radius of rounded edges\n * @param {Number} [options.segments=32] - number of segments to create per full rotation\n * @returns {geom3} new 3D geometry\n * @alias module:modeling/primitives.roundedCylinder\n *\n * @example\n * let myshape = roundedCylinder({ height: 10, radius: 2, roundRadius: 0.5 })\n */\nconst roundedCylinder = (options) => {\n  const defaults = {\n    center: [0, 0, 0],\n    height: 2,\n    radius: 1,\n    roundRadius: 0.2,\n    segments: 32\n  }\n  const { center, height, radius, roundRadius, segments } = Object.assign({}, defaults, options)\n\n  if (!isNumberArray(center, 3)) throw new Error('center must be an array of X, Y and Z values')\n  if (!isGT(height, 0)) throw new Error('height must be greater then zero')\n  if (!isGT(radius, 0)) throw new Error('radius must be greater then zero')\n  if (!isGT(roundRadius, 0)) throw new Error('roundRadius must be greater then zero')\n  if (roundRadius > (radius - EPS)) throw new Error('roundRadius must be smaller then the radius')\n  if (!isGTE(segments, 4)) throw new Error('segments must be four or more')\n\n  const start = [0, 0, -(height / 2)]\n  const end = [0, 0, height / 2]\n  const direction = vec3.subtract(end, start)\n  const length = vec3.length(direction)\n\n  if ((2 * roundRadius) > (length - EPS)) throw new Error('height must be larger than twice roundRadius')\n\n  let defaultnormal\n  if (Math.abs(direction[0]) > Math.abs(direction[1])) {\n    defaultnormal = vec3.fromValues(0, 1, 0)\n  } else {\n    defaultnormal = vec3.fromValues(1, 0, 0)\n  }\n\n  const zvector = vec3.scale(roundRadius, vec3.unit(direction))\n  const xvector = vec3.scale(radius, vec3.unit(vec3.cross(zvector, defaultnormal)))\n  const yvector = vec3.scale(radius, vec3.unit(vec3.cross(xvector, zvector)))\n\n  vec3.add(start, start, zvector)\n  vec3.subtract(end, end, zvector)\n\n  const qsegments = Math.floor(0.25 * segments)\n\n  // adjust the points to center\n  const fromPoints = (points) => {\n    const newpoints = points.map((point) => vec3.add(point, center))\n    return poly3.fromPoints(newpoints)\n  }\n\n  const polygons = []\n  let prevcylinderpoint\n  for (let slice1 = 0; slice1 <= segments; slice1++) {\n    const angle = Math.PI * 2.0 * slice1 / segments\n    const cylinderpoint = vec3.add(vec3.scale(Math.cos(angle), xvector), vec3.scale(Math.sin(angle), yvector))\n    if (slice1 > 0) {\n      // cylinder wall\n      let points = []\n      points.push(vec3.add(start, cylinderpoint))\n      points.push(vec3.add(start, prevcylinderpoint))\n      points.push(vec3.add(end, prevcylinderpoint))\n      points.push(vec3.add(end, cylinderpoint))\n      polygons.push(fromPoints(points))\n\n      let prevcospitch, prevsinpitch\n      for (let slice2 = 0; slice2 <= qsegments; slice2++) {\n        const pitch = 0.5 * Math.PI * slice2 / qsegments\n        const cospitch = Math.cos(pitch)\n        const sinpitch = Math.sin(pitch)\n        if (slice2 > 0) {\n          // cylinder rounding, start\n          points = []\n          let point\n          point = vec3.add(start, vec3.subtract(vec3.scale(prevcospitch, prevcylinderpoint), vec3.scale(prevsinpitch, zvector)))\n          points.push(point)\n          point = vec3.add(start, vec3.subtract(vec3.scale(prevcospitch, cylinderpoint), vec3.scale(prevsinpitch, zvector)))\n          points.push(point)\n          if (slice2 < qsegments) {\n            point = vec3.add(start, vec3.subtract(vec3.scale(cospitch, cylinderpoint), vec3.scale(sinpitch, zvector)))\n            points.push(point)\n          }\n          point = vec3.add(start, vec3.subtract(vec3.scale(cospitch, prevcylinderpoint), vec3.scale(sinpitch, zvector)))\n          points.push(point)\n\n          polygons.push(fromPoints(points))\n\n          // cylinder rounding, end\n          points = []\n          point = vec3.add(end, vec3.add(vec3.scale(prevcospitch, prevcylinderpoint), vec3.scale(prevsinpitch, zvector)))\n          points.push(point)\n          point = vec3.add(end, vec3.add(vec3.scale(prevcospitch, cylinderpoint), vec3.scale(prevsinpitch, zvector)))\n          points.push(point)\n          if (slice2 < qsegments) {\n            point = vec3.add(end, vec3.add(vec3.scale(cospitch, cylinderpoint), vec3.scale(sinpitch, zvector)))\n            points.push(point)\n          }\n          point = vec3.add(end, vec3.add(vec3.scale(cospitch, prevcylinderpoint), vec3.scale(sinpitch, zvector)))\n          points.push(point)\n          points.reverse()\n\n          polygons.push(fromPoints(points))\n        }\n        prevcospitch = cospitch\n        prevsinpitch = sinpitch\n      }\n    }\n    prevcylinderpoint = cylinderpoint\n  }\n  const result = geom3.create(polygons)\n  return result\n}\n\nmodule.exports = roundedCylinder\n","const { EPS } = require('../maths/constants')\n\nconst vec2 = require('../maths/vec2')\n\nconst geom2 = require('../geometries/geom2')\n\nconst { isGT, isGTE, isNumberArray } = require('./commonChecks')\n\n/**\n * Construct an axis-aligned rectangle in two dimensional space with rounded corners.\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0]] - center of rounded rectangle\n * @param {Array} [options.size=[2,2]] - dimension of rounded rectangle; width and length\n * @param {Number} [options.roundRadius=0.2] - round radius of corners\n * @param {Number} [options.segments=32] - number of segments to create per full rotation\n * @returns {geom2} new 2D geometry\n * @alias module:modeling/primitives.roundedRectangle\n *\n * @example\n * let myshape = roundedRectangle({size: [10, 20], roundRadius: 2})\n */\nconst roundedRectangle = (options) => {\n  const defaults = {\n    center: [0, 0],\n    size: [2, 2],\n    roundRadius: 0.2,\n    segments: 32\n  }\n  let { center, size, roundRadius, segments } = Object.assign({}, defaults, options)\n\n  if (!isNumberArray(center, 2)) throw new Error('center must be an array of X and Y values')\n  if (!isNumberArray(size, 2)) throw new Error('size must be an array of X and Y values')\n  if (!size.every((n) => n > 0)) throw new Error('size values must be greater than zero')\n  if (!isGT(roundRadius, 0)) throw new Error('roundRadius must be greater than zero')\n  if (!isGTE(segments, 4)) throw new Error('segments must be four or more')\n\n  size = size.map((v) => v / 2) // convert to radius\n\n  if (roundRadius > (size[0] - EPS) ||\n      roundRadius > (size[1] - EPS)) throw new Error('roundRadius must be smaller then the radius of all dimensions')\n\n  const cornersegments = Math.floor(segments / 4)\n\n  // create sets of points that define the corners\n  const corner0 = vec2.add(center, [size[0] - roundRadius, size[1] - roundRadius])\n  const corner1 = vec2.add(center, [roundRadius - size[0], size[1] - roundRadius])\n  const corner2 = vec2.add(center, [roundRadius - size[0], roundRadius - size[1]])\n  const corner3 = vec2.add(center, [size[0] - roundRadius, roundRadius - size[1]])\n  const corner0Points = []\n  const corner1Points = []\n  const corner2Points = []\n  const corner3Points = []\n  for (let i = 0; i <= cornersegments; i++) {\n    const radians = Math.PI / 2 * i / cornersegments\n    const point = vec2.fromAngleRadians(radians)\n    vec2.scale(point, roundRadius, point)\n    corner0Points.push(vec2.add(corner0, point))\n    vec2.rotate(point, Math.PI / 2, point)\n    corner1Points.push(vec2.add(corner1, point))\n    vec2.rotate(point, Math.PI / 2, point)\n    corner2Points.push(vec2.add(corner2, point))\n    vec2.rotate(point, Math.PI / 2, point)\n    corner3Points.push(vec2.add(corner3, point))\n  }\n\n  return geom2.fromPoints(corner0Points.concat(corner1Points, corner2Points, corner3Points))\n}\n\nmodule.exports = roundedRectangle\n","const ellipsoid = require('./ellipsoid')\n\nconst { isGT } = require('./commonChecks')\n\n/**\n * Construct a sphere in three dimensional space where all points are at the same distance from the center.\n * @see [ellipsoid]{@link module:modeling/primitives.ellipsoid} for more options\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0,0]] - center of sphere\n * @param {Number} [options.radius=1] - radius of sphere\n * @param {Number} [options.segments=32] - number of segments to create per full rotation\n * @param {Array} [options.axes] -  an array with three vectors for the x, y and z base vectors\n * @returns {geom3} new 3D geometry\n * @alias module:modeling/primitives.sphere\n *\n * @example\n * let myshape = sphere({radius: 5})\n */\nconst sphere = (options) => {\n  const defaults = {\n    center: [0, 0, 0],\n    radius: 1,\n    segments: 32,\n    axes: [[1, 0, 0], [0, -1, 0], [0, 0, 1]]\n  }\n  let { center, radius, segments, axes } = Object.assign({}, defaults, options)\n\n  if (!isGT(radius, 0)) throw new Error('radius must be greater than zero')\n\n  radius = [radius, radius, radius]\n\n  return ellipsoid({ center, radius, segments, axes })\n}\n\nmodule.exports = sphere\n","const rectangle = require('./rectangle')\n\nconst { isGT } = require('./commonChecks')\n\n/**\n * Construct an axis-aligned square in two dimensional space with four equal sides at right angles.\n * @see [rectangle]{@link module:modeling/primitives.rectangle} for more options\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0]] - center of square\n * @param {Number} [options.size=2] - dimension of square\n * @returns {geom2} new 2D geometry\n * @alias module:modeling/primitives.square\n *\n * @example\n * let myshape = square({size: 10})\n */\nconst square = (options) => {\n  const defaults = {\n    center: [0, 0],\n    size: 2\n  }\n  let { center, size } = Object.assign({}, defaults, options)\n\n  if (!isGT(size, 0)) throw new Error('size must be greater than zero')\n\n  size = [size, size]\n\n  return rectangle({ center, size })\n}\n\nmodule.exports = square\n","const vec2 = require('../maths/vec2')\n\nconst geom2 = require('../geometries/geom2')\n\nconst { isGT, isGTE, isNumberArray } = require('./commonChecks')\n\n// @see http://www.jdawiseman.com/papers/easymath/surds_star_inner_radius.html\nconst getRadiusRatio = (vertices, density) => {\n  if (vertices > 0 && density > 1 && density < vertices / 2) {\n    return Math.cos(Math.PI * density / vertices) / Math.cos(Math.PI * (density - 1) / vertices)\n  }\n  return 0\n}\n\nconst getPoints = (vertices, radius, startAngle, center) => {\n  const a = (Math.PI * 2) / vertices\n\n  const points = []\n  for (let i = 0; i < vertices; i++) {\n    const point = vec2.fromAngleRadians(a * i + startAngle)\n    vec2.scale(point, radius, point)\n    vec2.add(point, center, point)\n    points.push(point)\n  }\n  return points\n}\n\n/**\n * Construct a star in two dimensional space.\n * @see https://en.wikipedia.org/wiki/Star_polygon\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0]] - center of star\n * @param {Number} [options.vertices=5] - number of vertices (P) on the star\n * @param {Number} [options.density=2] - density (Q) of star\n * @param {Number} [options.outerRadius=1] - outer radius of vertices\n * @param {Number} [options.innerRadius=0] - inner radius of vertices, or zero to calculate\n * @param {Number} [options.startAngle=0] - starting angle for first vertice, in radians\n * @returns {geom2} new 2D geometry\n * @alias module:modeling/primitives.star\n *\n * @example\n * let star1 = star({vertices: 8, outerRadius: 10}) // star with 8/2 density\n * let star2 = star({vertices: 12, outerRadius: 40, innerRadius: 20}) // star with given radius\n */\nconst star = (options) => {\n  const defaults = {\n    center: [0, 0],\n    vertices: 5,\n    outerRadius: 1,\n    innerRadius: 0,\n    density: 2,\n    startAngle: 0\n  }\n  let { center, vertices, outerRadius, innerRadius, density, startAngle } = Object.assign({}, defaults, options)\n\n  if (!isNumberArray(center, 2)) throw new Error('center must be an array of X and Y values')\n  if (!isGTE(vertices, 2)) throw new Error('vertices must be two or more')\n  if (!isGT(outerRadius, 0)) throw new Error('outerRadius must be greater than zero')\n  if (!isGTE(innerRadius, 0)) throw new Error('innerRadius must be greater than zero')\n  if (!isGTE(startAngle, 0)) throw new Error('startAngle must be greater than zero')\n\n  // force integers\n  vertices = Math.floor(vertices)\n  density = Math.floor(density)\n\n  startAngle = startAngle % (Math.PI * 2)\n\n  if (innerRadius === 0) {\n    if (!isGTE(density, 2)) throw new Error('density must be two or more')\n    innerRadius = outerRadius * getRadiusRatio(vertices, density)\n  }\n\n  const centerv = vec2.fromArray(center)\n\n  const outerPoints = getPoints(vertices, outerRadius, startAngle, centerv)\n  const innerPoints = getPoints(vertices, innerRadius, startAngle + Math.PI / vertices, centerv)\n\n  const allPoints = []\n  for (let i = 0; i < vertices; i++) {\n    allPoints.push(outerPoints[i])\n    allPoints.push(innerPoints[i])\n  }\n\n  return geom2.fromPoints(allPoints)\n}\n\nmodule.exports = star\n","const flatten = require('../../utils/flatten')\n\nconst mat4 = require('../../maths/mat4')\nconst plane = require('../../maths/plane')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\n/**\n * Mirror the given geometries using the given options.\n * @param {Object} options - options for mirror\n * @param {Array} [options.origin=[0,0,0]] - the origin of the plane\n * @param {Array} [options.normal=[0,0,1]] - the normal vector of the plane\n * @param {...Object} geometries - the geometries to mirror\n * @return {Object|Array} the mirrored geometry, or a list of mirrored geometry\n * @alias module:modeling/transforms.mirror\n *\n * @example\n * let myshape = mirror({normal: [0,0,10]}, cube({center: [0,0,15], radius: [20, 25, 5]}))\n */\nconst mirror = (options, ...objects) => {\n  const defaults = {\n    origin: [0, 0, 0],\n    normal: [0, 0, 1] // Z axis\n  }\n  const { origin, normal } = Object.assign({}, defaults, options)\n\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  const planeOfMirror = plane.fromNormalAndPoint(normal, origin)\n  // verify the plane, i.e. check that the given normal was valid\n  if (Number.isNaN(planeOfMirror[0])) {\n    throw new Error('the given origin and normal do not define a proper plane')\n  }\n\n  const matrix = mat4.mirrorByPlane(planeOfMirror)\n\n  const results = objects.map((object) => {\n    if (path2.isA(object)) return path2.transform(matrix, object)\n    if (geom2.isA(object)) return geom2.transform(matrix, object)\n    if (geom3.isA(object)) return geom3.transform(matrix, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\n/**\n * Mirror the given geometries about the X axis.\n * @param {...Object} geometries - the geometries to mirror\n * @return {Object|Array} the mirrored geometry, or a list of mirrored geometry\n * @alias module:modeling/transforms.mirrorX\n */\nconst mirrorX = (...objects) => mirror({ normal: [1, 0, 0] }, objects)\n\n/**\n * Mirror the given geometries about the Y axis.\n * @param {...Object} geometries - the geometries to mirror\n * @return {Object|Array} the mirrored geometry, or a list of mirrored geometry\n * @alias module:modeling/transforms.mirrorY\n */\nconst mirrorY = (...objects) => mirror({ normal: [0, 1, 0] }, objects)\n\n/**\n * Mirror the given object(s) about the Z axis.\n * @param {...Object} objects - the geometries to mirror\n * @return {Object|Array} the mirrored geometry, or a list of mirrored geometry\n * @alias module:modeling/transforms.mirrorZ\n */\nconst mirrorZ = (...objects) => mirror({ normal: [0, 0, 1] }, objects)\n\nmodule.exports = {\n  mirror,\n  mirrorX,\n  mirrorY,\n  mirrorZ\n}\n","const plane = require('../../../maths/plane')\nconst vec3 = require('../../../maths/vec3')\n\n/**\n * Calculate the plane of the given slice.\n * NOTE: The slice (and all points) are assumed to be planar from the beginning.\n * @param {slice} slice - the slice\n * @returns {plane} the plane of the slice\n * @alias module:modeling/extrusions/slice.calculatePlane\n *\n * @example\n * let myplane = calculatePlane(slice)\n */\nconst calculatePlane = (slice) => {\n  const edges = slice.edges\n  if (edges.length < 3) throw new Error('slices must have 3 or more edges to calculate a plane')\n\n  // find the midpoint of the slice, which will lie on the plane by definition\n  const midpoint = edges.reduce((point, edge) => vec3.add(point, edge[0]), vec3.create())\n  vec3.scale(midpoint, 1 / edges.length, midpoint)\n\n  // find the farthest edge from the midpoint, which will be on an outside edge\n  let farthestEdge\n  let distance = 0\n  edges.forEach((edge) => {\n    const d = vec3.squaredDistance(midpoint, edge[0])\n    if (d > distance) {\n      farthestEdge = edge\n      distance = d\n    }\n  })\n  // find the before edge\n  let beforeEdge = edges.find((edge) => vec3.equals(edge[1], farthestEdge[0]))\n\n  return plane.fromPoints(beforeEdge[0], farthestEdge[0], farthestEdge[1])\n}\n\nmodule.exports = calculatePlane\n","/**\n * Represents a 3D geometry consisting of a list of edges.\n * @typedef {Object} slice\n * @property {Array} edges - list of edges, each edge containing two points (3D)\n */\n\n/**\n * Creates a new empty slice.\n *\n * @returns {slice} a new slice\n * @alias module:modeling/extrusions/slice.create\n */\nconst create = (edges) => {\n  if (!edges) {\n    edges = []\n  }\n  return { edges }\n}\n\nmodule.exports = create\n","const create = require('./create')\n\nconst vec3 = require('../../../maths/vec3')\n\n/**\n * Create a deep clone of the given slice.\n *\n * @param {slice} [out] - receiving slice\n * @param {slice} slice - slice to clone\n * @returns {slice} a new slice\n * @alias module:modeling/extrusions/slice.clone\n */\nconst clone = (...params) => {\n  let out\n  let slice\n  if (params.length === 1) {\n    out = create()\n    slice = params[0]\n  } else {\n    out = params[0]\n    slice = params[1]\n  }\n  // deep clone of edges\n  out.edges = slice.edges.map((edge) => [vec3.clone(edge[0]), vec3.clone(edge[1])])\n  return out\n}\n\nmodule.exports = clone\n","const vec3 = require('../../../maths/vec3')\n\n/**\n * Determine if the given slices have the same edges.\n * @param {slice} a - the first slice to compare\n * @param {slice} b - the second slice to compare\n * @returns {Boolean} true if the slices are equal\n * @alias module:modeling/extrusions/slice.equals\n */\nconst equals = (a, b) => {\n  const aedges = a.edges\n  const bedges = b.edges\n\n  if (aedges.length !== bedges.length) {\n    return false\n  }\n\n  const isEqual = aedges.reduce((acc, aedge, i) => {\n    const bedge = bedges[i]\n    const d = vec3.squaredDistance(aedge[0], bedge[0])\n    return acc && (d < Number.EPSILON)\n  }, true)\n\n  return isEqual\n}\n\nmodule.exports = equals\n","const vec3 = require('../../../maths/vec3')\n\nconst create = require('./create')\n\n/**\n * Create a slice from the given points.\n *\n * @param {Array} points - list of points, where each point is either 2D or 3D\n * @returns {slice} a new slice\n * @alias module:modeling/extrusions/slice.fromPoints\n *\n * @example\n * const points = [\n *   [0,  0],\n *   [0, 10],\n *   [0, 10]\n * ]\n * const slice = fromPoints(points)\n */\nconst fromPoints = (points) => {\n  if (!Array.isArray(points)) throw new Error('the given points must be an array')\n  if (points.length < 3) throw new Error('the given points must contain THREE or more points')\n\n  // create a list of edges from the points\n  const edges = []\n  let prevpoint = points[points.length - 1]\n  points.forEach((point) => {\n    if (point.length === 2) edges.push([vec3.fromVec2(prevpoint), vec3.fromVec2(point)])\n    if (point.length === 3) edges.push([prevpoint, point])\n    prevpoint = point\n  })\n  return create(edges)\n}\n\nmodule.exports = fromPoints\n","const vec3 = require('../../../maths/vec3')\n\nconst create = require('./create')\n\n/**\n * Create a slice from the given sides (see geom2).\n *\n * @param {Array} sides - list of sides from geom2\n * @returns {slice} a new slice\n * @alias module:modeling/extrusions/slice.fromSides\n *\n * @example\n * const myshape = circle({radius: 10})\n * const slice = fromSides(geom2.toSides(myshape))\n */\nconst fromSides = (sides) => {\n  if (!Array.isArray(sides)) throw new Error('the given sides must be an array')\n\n  // create a list of edges from the sides\n  const edges = []\n  sides.forEach((side) => {\n    edges.push([vec3.fromVec2(side[0]), vec3.fromVec2(side[1])])\n  })\n  return create(edges)\n}\n\nmodule.exports = fromSides\n","/**\n * Determin if the given object is a slice.\n * @param {slice} object - the object to interogate\n * @returns {Boolean} true if the object matches a slice\n * @alias module:modeling/extrusions/slice.isA\n */\nconst isA = (object) => {\n  if (object && typeof object === 'object') {\n    if ('edges' in object) {\n      if (Array.isArray(object.edges)) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nmodule.exports = isA\n","const create = require('./create')\n\n/**\n * Reverse the edges of the given slice.\n *\n * @param {slice} [out] - receiving slice\n * @param {slice} slice - slice to reverse\n * @returns {slice} reverse of the slice\n * @alias module:modeling/extrusions/slice.reverse\n */\nconst reverse = (...params) => {\n  let out\n  let slice\n  if (params.length === 1) {\n    out = create()\n    slice = params[0]\n  } else {\n    out = params[0]\n    slice = params[1]\n  }\n  // reverse the edges\n  out.edges = slice.edges.map((edge) => [edge[1], edge[0]])\n  return out\n}\n\nmodule.exports = reverse\n","/**\n * Produces an array of edges from the given slice.\n * The returned array should not be modified as the data is shared with the slice.\n * @param {slice} slice - the slice\n * @returns {Array} an array of edges, each edge contains an array of two points (3D)\n * @alias module:modeling/extrusions/slice.toEdges\n *\n * @example\n * let sharededges = toEdges(slice)\n */\nconst toEdges = (slice) => slice.edges\n\nmodule.exports = toEdges\n","const { EPS } = require('../../maths/constants')\n\nconst measureBoundingBox = require('../../measurements/measureBoundingBox')\n\n/*\n * Determine if the given geometries overlap by comparing min and max bounds.\n * NOTE: This is used in union for performace gains.\n * @param {geom3} geometry1 - geometry for comparision\n * @param {geom3} geometry2 - geometry for comparision\n * @returns {boolean} true if the geometries overlap\n */\nconst mayOverlap = (geometry1, geometry2) => {\n  // FIXME accessing the data structure of the geometry should not be allowed\n  if ((geometry1.polygons.length === 0) || (geometry2.polygons.length === 0)) {\n    return false\n  }\n\n  const bounds1 = measureBoundingBox(geometry1)\n  const min1 = bounds1[0]\n  const max1 = bounds1[1]\n\n  const bounds2 = measureBoundingBox(geometry2)\n  const min2 = bounds2[0]\n  const max2 = bounds2[1]\n\n  if ((min2[0] - max1[0]) > EPS) return false\n  if ((min1[0] - max2[0]) > EPS) return false\n  if ((min2[1] - max1[1]) > EPS) return false\n  if ((min1[1] - max2[1]) > EPS) return false\n  if ((min2[2] - max1[2]) > EPS) return false\n  if ((min1[2] - max2[2]) > EPS) return false\n  return true\n}\n\nmodule.exports = mayOverlap\n","const plane = require('../../../maths/plane')\nconst poly3 = require('../../../geometries/poly3')\n\n// # class Node\n// Holds a node in a BSP tree.\n// A BSP tree is built from a collection of polygons by picking a polygon to split along.\n// Polygons are not stored directly in the tree, but in PolygonTreeNodes, stored in this.polygontreenodes.\n// Those PolygonTreeNodes are children of the owning Tree.polygonTree.\n// This is not a leafy BSP tree since there is no distinction between internal and leaf nodes.\nclass Node {\n  constructor (parent) {\n    this.plane = null\n    this.front = null\n    this.back = null\n    this.polygontreenodes = []\n    this.parent = parent\n  }\n\n  // Convert solid space to empty space and empty space to solid space.\n  invert () {\n    const queue = [this]\n    let node\n    for (let i = 0; i < queue.length; i++) {\n      node = queue[i]\n      if (node.plane) node.plane = plane.flip(node.plane)\n      if (node.front) queue.push(node.front)\n      if (node.back) queue.push(node.back)\n      const temp = node.front\n      node.front = node.back\n      node.back = temp\n    }\n  }\n\n  // clip polygontreenodes to our plane\n  // calls remove() for all clipped PolygonTreeNodes\n  clipPolygons (polygontreenodes, alsoRemovecoplanarFront) {\n    let current = { node: this, polygontreenodes: polygontreenodes }\n    let node\n    const stack = []\n\n    do {\n      node = current.node\n      polygontreenodes = current.polygontreenodes\n\n      // begin \"function\"\n      if (node.plane) {\n        const backnodes = []\n        const frontnodes = []\n        const coplanarfrontnodes = alsoRemovecoplanarFront ? backnodes : frontnodes\n        const plane = node.plane\n        const numpolygontreenodes = polygontreenodes.length\n        for (let i = 0; i < numpolygontreenodes; i++) {\n          const node1 = polygontreenodes[i]\n          if (!node1.isRemoved()) {\n            node1.splitByPlane(plane, coplanarfrontnodes, backnodes, frontnodes, backnodes)\n          }\n        }\n\n        if (node.front && (frontnodes.length > 0)) {\n          stack.push({ node: node.front, polygontreenodes: frontnodes })\n        }\n        const numbacknodes = backnodes.length\n        if (node.back && (numbacknodes > 0)) {\n          stack.push({ node: node.back, polygontreenodes: backnodes })\n        } else {\n          // there's nothing behind this plane. Delete the nodes behind this plane:\n          for (let i = 0; i < numbacknodes; i++) {\n            backnodes[i].remove()\n          }\n        }\n      }\n      current = stack.pop()\n    } while (current !== undefined)\n  }\n\n  // Remove all polygons in this BSP tree that are inside the other BSP tree\n  // `tree`.\n  clipTo (tree, alsoRemovecoplanarFront) {\n    let node = this\n    const stack = []\n    do {\n      if (node.polygontreenodes.length > 0) {\n        tree.rootnode.clipPolygons(node.polygontreenodes, alsoRemovecoplanarFront)\n      }\n      if (node.front) stack.push(node.front)\n      if (node.back) stack.push(node.back)\n      node = stack.pop()\n    } while (node !== undefined)\n  }\n\n  addPolygonTreeNodes (newpolygontreenodes) {\n    let current = { node: this, polygontreenodes: newpolygontreenodes }\n    const stack = []\n    do {\n      const node = current.node\n      const polygontreenodes = current.polygontreenodes\n\n      if (polygontreenodes.length === 0) {\n        current = stack.pop()\n        continue\n      }\n      if (!node.plane) {\n        let index = 0 // default\n        index = Math.floor(polygontreenodes.length / 2)\n        // index = polygontreenodes.length >> 1\n        // index = Math.floor(Math.random()*polygontreenodes.length)\n        const bestpoly = polygontreenodes[index].getPolygon()\n        node.plane = poly3.plane(bestpoly)\n      }\n      const frontnodes = []\n      const backnodes = []\n\n      for (let i = 0, n = polygontreenodes.length; i < n; ++i) {\n        polygontreenodes[i].splitByPlane(node.plane, node.polygontreenodes, backnodes, frontnodes, backnodes)\n      }\n\n      if (frontnodes.length > 0) {\n        if (!node.front) node.front = new Node(node)\n        stack.push({ node: node.front, polygontreenodes: frontnodes })\n      }\n      if (backnodes.length > 0) {\n        if (!node.back) node.back = new Node(node)\n        stack.push({ node: node.back, polygontreenodes: backnodes })\n      }\n\n      current = stack.pop()\n    } while (current !== undefined)\n  }\n\n  // TODO is this still used?\n  getParentPlaneNormals (normals, maxdepth) {\n    if (maxdepth > 0) {\n      if (this.parent) {\n        normals.push(this.parent.plane.normal)\n        this.parent.getParentPlaneNormals(normals, maxdepth - 1)\n      }\n    }\n  }\n}\n\nmodule.exports = Node\n","const vec3 = require('../../../maths/vec3')\n\nconst splitLineSegmentByPlane = (plane, p1, p2) => {\n  const direction = vec3.subtract(p2, p1)\n  let lambda = (plane[3] - vec3.dot(plane, p1)) / vec3.dot(plane, direction)\n  if (Number.isNaN(lambda)) lambda = 0\n  if (lambda > 1) lambda = 1\n  if (lambda < 0) lambda = 0\n\n  vec3.scale(direction, lambda, direction)\n  vec3.add(direction, p1, direction)\n  return direction\n}\n\nmodule.exports = splitLineSegmentByPlane\n","const { EPS } = require('../../../maths/constants')\n\nconst plane = require('../../../maths/plane')\nconst vec3 = require('../../../maths/vec3')\n\nconst poly3 = require('../../../geometries/poly3')\n\nconst splitLineSegmentByPlane = require('./splitLineSegmentByPlane')\n\n// Returns object:\n// .type:\n//   0: coplanar-front\n//   1: coplanar-back\n//   2: front\n//   3: back\n//   4: spanning\n// In case the polygon is spanning, returns:\n// .front: a Polygon3 of the front part\n// .back: a Polygon3 of the back part\nconst splitPolygonByPlane = (splane, polygon) => {\n  const result = {\n    type: null,\n    front: null,\n    back: null\n  }\n  // cache in local lets (speedup):\n  const vertices = polygon.vertices\n  const numvertices = vertices.length\n  const pplane = poly3.plane(polygon)\n  if (plane.equals(pplane, splane)) {\n    result.type = 0\n  } else {\n    let hasfront = false\n    let hasback = false\n    const vertexIsBack = []\n    const MINEPS = -EPS\n    for (let i = 0; i < numvertices; i++) {\n      const t = vec3.dot(splane, vertices[i]) - splane[3]\n      const isback = (t < 0)\n      vertexIsBack.push(isback)\n      if (t > EPS) hasfront = true\n      if (t < MINEPS) hasback = true\n    }\n    if ((!hasfront) && (!hasback)) {\n      // all points coplanar\n      const t = vec3.dot(splane, pplane)\n      result.type = (t >= 0) ? 0 : 1\n    } else if (!hasback) {\n      result.type = 2\n    } else if (!hasfront) {\n      result.type = 3\n    } else {\n      // spanning\n      result.type = 4\n      const frontvertices = []\n      const backvertices = []\n      let isback = vertexIsBack[0]\n      for (let vertexindex = 0; vertexindex < numvertices; vertexindex++) {\n        const vertex = vertices[vertexindex]\n        let nextvertexindex = vertexindex + 1\n        if (nextvertexindex >= numvertices) nextvertexindex = 0\n        const nextisback = vertexIsBack[nextvertexindex]\n        if (isback === nextisback) {\n          // line segment is on one side of the plane:\n          if (isback) {\n            backvertices.push(vertex)\n          } else {\n            frontvertices.push(vertex)\n          }\n        } else {\n          // line segment intersects plane:\n          const point = vertex\n          const nextpoint = vertices[nextvertexindex]\n          const intersectionpoint = splitLineSegmentByPlane(splane, point, nextpoint)\n          if (isback) {\n            backvertices.push(vertex)\n            backvertices.push(intersectionpoint)\n            frontvertices.push(intersectionpoint)\n          } else {\n            frontvertices.push(vertex)\n            frontvertices.push(intersectionpoint)\n            backvertices.push(intersectionpoint)\n          }\n        }\n        isback = nextisback\n      } // for vertexindex\n      // remove duplicate vertices:\n      const EPS_SQUARED = EPS * EPS\n      if (backvertices.length >= 3) {\n        let prevvertex = backvertices[backvertices.length - 1]\n        for (let vertexindex = 0; vertexindex < backvertices.length; vertexindex++) {\n          const vertex = backvertices[vertexindex]\n          if (vec3.squaredDistance(vertex, prevvertex) < EPS_SQUARED) {\n            backvertices.splice(vertexindex, 1)\n            vertexindex--\n          }\n          prevvertex = vertex\n        }\n      }\n      if (frontvertices.length >= 3) {\n        let prevvertex = frontvertices[frontvertices.length - 1]\n        for (let vertexindex = 0; vertexindex < frontvertices.length; vertexindex++) {\n          const vertex = frontvertices[vertexindex]\n          if (vec3.squaredDistance(vertex, prevvertex) < EPS_SQUARED) {\n            frontvertices.splice(vertexindex, 1)\n            vertexindex--\n          }\n          prevvertex = vertex\n        }\n      }\n      if (frontvertices.length >= 3) {\n        result.front = poly3.fromPointsAndPlane(frontvertices, pplane)\n      }\n      if (backvertices.length >= 3) {\n        result.back = poly3.fromPointsAndPlane(backvertices, pplane)\n      }\n    }\n  }\n  return result\n}\n\nmodule.exports = splitPolygonByPlane\n","const { EPS } = require('../../../maths/constants')\n\nconst vec3 = require('../../../maths/vec3')\n\nconst poly3 = require('../../../geometries/poly3')\n\nconst splitPolygonByPlane = require('./splitPolygonByPlane')\n\n// # class PolygonTreeNode\n// This class manages hierarchical splits of polygons.\n// At the top is a root node which does not hold a polygon, only child PolygonTreeNodes.\n// Below that are zero or more 'top' nodes; each holds a polygon.\n// The polygons can be in different planes.\n// splitByPlane() splits a node by a plane. If the plane intersects the polygon, two new child nodes\n// are created holding the splitted polygon.\n// getPolygons() retrieves the polygons from the tree. If for PolygonTreeNode the polygon is split but\n// the two split parts (child nodes) are still intact, then the unsplit polygon is returned.\n// This ensures that we can safely split a polygon into many fragments. If the fragments are untouched,\n// getPolygons() will return the original unsplit polygon instead of the fragments.\n// remove() removes a polygon from the tree. Once a polygon is removed, the parent polygons are invalidated\n// since they are no longer intact.\nclass PolygonTreeNode {\n\n  // constructor creates the root node\n  constructor () {\n    this.parent = null\n    this.children = []\n    this.polygon = null\n    this.removed = false\n  }\n\n  // fill the tree with polygons. Should be called on the root node only; child nodes must\n  // always be a derivate (split) of the parent node.\n  addPolygons (polygons) {\n    // new polygons can only be added to root node; children can only be splitted polygons\n    if (!this.isRootNode()) {\n      throw new Error('Assertion failed')\n    }\n    const _this = this\n    polygons.forEach((polygon) => {\n      _this.addChild(polygon)\n    })\n  }\n\n  // remove a node\n  // - the siblings become toplevel nodes\n  // - the parent is removed recursively\n  remove () {\n    if (!this.removed) {\n      this.removed = true\n\n      // remove ourselves from the parent's children list:\n      const parentschildren = this.parent.children\n      const i = parentschildren.indexOf(this)\n      if (i < 0) throw new Error('Assertion failed')\n      parentschildren.splice(i, 1)\n\n      // invalidate the parent's polygon, and of all parents above it:\n      this.parent.recursivelyInvalidatePolygon()\n    }\n  }\n\n  isRemoved () {\n    return this.removed\n  }\n\n  isRootNode () {\n    return !this.parent\n  }\n\n  // invert all polygons in the tree. Call on the root node\n  invert () {\n    if (!this.isRootNode()) throw new Error('Assertion failed') // can only call this on the root node\n    this.invertSub()\n  }\n\n  getPolygon () {\n    if (!this.polygon) throw new Error('Assertion failed') // doesn't have a polygon, which means that it has been broken down\n    return this.polygon\n  }\n\n  getPolygons (result) {\n    let children = [this]\n    const queue = [children]\n    let i, j, l, node\n    for (i = 0; i < queue.length; ++i) { // queue size can change in loop, don't cache length\n      children = queue[i]\n      for (j = 0, l = children.length; j < l; j++) { // ok to cache length\n        node = children[j]\n        if (node.polygon) {\n          // the polygon hasn't been broken yet. We can ignore the children and return our polygon:\n          result.push(node.polygon)\n        } else {\n          // our polygon has been split up and broken, so gather all subpolygons from the children\n          if (node.children.length > 0) queue.push(node.children)\n        }\n      }\n    }\n  }\n\n  // split the node by a plane; add the resulting nodes to the frontnodes and backnodes array\n  // If the plane doesn't intersect the polygon, the 'this' object is added to one of the arrays\n  // If the plane does intersect the polygon, two new child nodes are created for the front and back fragments,\n  //  and added to both arrays.\n  splitByPlane (plane, coplanarfrontnodes, coplanarbacknodes, frontnodes, backnodes) {\n    if (this.children.length) {\n      const queue = [this.children]\n      let i\n      let j\n      let l\n      let node\n      let nodes\n      for (i = 0; i < queue.length; i++) { // queue.length can increase, do not cache\n        nodes = queue[i]\n        for (j = 0, l = nodes.length; j < l; j++) { // ok to cache length\n          node = nodes[j]\n          if (node.children.length > 0) {\n            queue.push(node.children)\n          } else {\n            // no children. Split the polygon:\n            node._splitByPlane(plane, coplanarfrontnodes, coplanarbacknodes, frontnodes, backnodes)\n          }\n        }\n      }\n    } else {\n      this._splitByPlane(plane, coplanarfrontnodes, coplanarbacknodes, frontnodes, backnodes)\n    }\n  }\n\n  // only to be called for nodes with no children\n  _splitByPlane (splane, coplanarfrontnodes, coplanarbacknodes, frontnodes, backnodes) {\n    const polygon = this.polygon\n    if (polygon) {\n      const bound = poly3.measureBoundingSphere(polygon)\n      const sphereradius = bound[1] + EPS // ensure radius is LARGER then polygon\n      const spherecenter = bound[0]\n      const d = vec3.dot(splane, spherecenter) - splane[3]\n      if (d > sphereradius) {\n        frontnodes.push(this)\n      } else if (d < -sphereradius) {\n        backnodes.push(this)\n      } else {\n        const splitresult = splitPolygonByPlane(splane, polygon)\n        switch (splitresult.type) {\n          case 0:\n            // coplanar front:\n            coplanarfrontnodes.push(this)\n            break\n\n          case 1:\n            // coplanar back:\n            coplanarbacknodes.push(this)\n            break\n\n          case 2:\n            // front:\n            frontnodes.push(this)\n            break\n\n          case 3:\n            // back:\n            backnodes.push(this)\n            break\n\n          case 4:\n            // spanning:\n            if (splitresult.front) {\n              const frontnode = this.addChild(splitresult.front)\n              frontnodes.push(frontnode)\n            }\n            if (splitresult.back) {\n              const backnode = this.addChild(splitresult.back)\n              backnodes.push(backnode)\n            }\n            break\n        }\n      }\n    }\n  }\n\n  // PRIVATE methods from here:\n  // add child to a node\n  // this should be called whenever the polygon is split\n  // a child should be created for every fragment of the split polygon\n  // returns the newly created child\n  addChild (polygon) {\n    const newchild = new PolygonTreeNode()\n    newchild.parent = this\n    newchild.polygon = polygon\n    this.children.push(newchild)\n    return newchild\n  }\n\n  invertSub () {\n    let children = [this]\n    const queue = [children]\n    let i, j, l, node\n    for (i = 0; i < queue.length; i++) {\n      children = queue[i]\n      for (j = 0, l = children.length; j < l; j++) {\n        node = children[j]\n        if (node.polygon) {\n          node.polygon = poly3.invert(node.polygon)\n        }\n        if (node.children.length > 0) queue.push(node.children)\n      }\n    }\n  }\n\n  recursivelyInvalidatePolygon () {\n    let node = this\n    while (node.polygon) {\n      node.polygon = null\n      if (node.parent) {\n        node = node.parent\n      }\n    }\n  }\n\n  clear () {\n    let children = [this]\n    const queue = [children]\n    for (let i = 0; i < queue.length; ++i) { // queue size can change in loop, don't cache length\n      children = queue[i]\n      const l = children.length\n      for (let j = 0; j < l; j++) {\n        const node = children[j]\n        if (node.polygon) {\n          node.polygon = null\n        }\n        if (node.parent) {\n          node.parent = null\n        }\n        if (node.children.length > 0) queue.push(node.children)\n        node.children = []\n      }\n    }\n  }\n\n  toString () {\n    let result = ''\n    let children = [this]\n    const queue = [children]\n    let i, j, l, node\n    for (i = 0; i < queue.length; ++i) { // queue size can change in loop, don't cache length\n      children = queue[i]\n      const prefix = ' '.repeat(i)\n      for (j = 0, l = children.length; j < l; j++) { // ok to cache length\n        node = children[j]\n        result += `${prefix}PolygonTreeNode (${node.isRootNode()}): ${node.children.length}`\n        if (node.polygon) {\n          result += `\\n ${prefix}poly3\\n`\n        } else {\n          result += '\\n'\n        }\n        if (node.children.length > 0) queue.push(node.children)\n      }\n    }\n    return result\n  }\n}\n\nmodule.exports = PolygonTreeNode\n","const Node = require('./Node')\nconst PolygonTreeNode = require('./PolygonTreeNode')\n\n// # class Tree\n// This is the root of a BSP tree.\n// This separate class for the root of the tree in order to hold the PolygonTreeNode root.\n// The actual tree is kept in this.rootnode\nclass Tree {\n  constructor (polygons) {\n    this.polygonTree = new PolygonTreeNode()\n    this.rootnode = new Node(null)\n    if (polygons) this.addPolygons(polygons)\n  }\n\n  invert () {\n    this.polygonTree.invert()\n    this.rootnode.invert()\n  }\n\n  // Remove all polygons in this BSP tree that are inside the other BSP tree\n  // `tree`.\n  clipTo (tree, alsoRemovecoplanarFront) {\n    alsoRemovecoplanarFront = !!alsoRemovecoplanarFront\n    this.rootnode.clipTo(tree, alsoRemovecoplanarFront)\n  }\n\n  allPolygons () {\n    const result = []\n    this.polygonTree.getPolygons(result)\n    return result\n  }\n\n  addPolygons (polygons) {\n    const polygontreenodes = new Array(polygons.length)\n    for (let i = 0; i < polygons.length; i++) {\n      polygontreenodes[i] = this.polygonTree.addChild(polygons[i])\n    }\n    this.rootnode.addPolygonTreeNodes(polygontreenodes)\n  }\n\n  clear () {\n    this.polygonTree.clear()\n  }\n\n  toString () {\n    const result = 'Tree: ' + this.polygonTree.toString('')\n    return result\n  }\n}\n\nmodule.exports = Tree\n","module.exports = {\n  Tree: require('./Tree')\n}\n","const geom3 = require('../../geometries/geom3')\n\nconst mayOverlap = require('./mayOverlap')\nconst { Tree } = require('./trees')\n\n/*\n * Return a new 3D geometry representing the space in both the first geometry and\n * the second geometry. None of the given geometries are modified.\n * @param {geom3} geometry1 - a geometry\n * @param {geom3} geometry2 - a geometry\n * @returns {geom3} new 3D geometry\n */\nconst intersectGeom3Sub = (geometry1, geometry2) => {\n  if (!mayOverlap(geometry1, geometry2)) {\n    return geom3.create() // empty geometry\n  }\n\n  const a = new Tree(geom3.toPolygons(geometry1))\n  const b = new Tree(geom3.toPolygons(geometry2))\n\n  a.invert()\n  b.clipTo(a)\n  b.invert()\n  a.clipTo(b)\n  b.clipTo(a)\n  a.addPolygons(b.allPolygons())\n  a.invert()\n\n  const newpolygons = a.allPolygons()\n  return geom3.create(newpolygons)\n}\n\nmodule.exports = intersectGeom3Sub\n","const vec3 = require('../../../maths/vec3')\n\nconst geom3 = require('../../../geometries/geom3')\nconst poly3 = require('../../../geometries/poly3')\n\nconst intersectGeom3Sub = require('../../booleans/intersectGeom3Sub')\n\nconst calculatePlane = require('./calculatePlane')\n\nconst toPolygon3D = (vector, edge) => {\n  const points = [\n    vec3.subtract(edge[0], vector),\n    vec3.subtract(edge[1], vector),\n    vec3.add(edge[1], vector),\n    vec3.add(edge[0], vector)\n  ]\n  return poly3.fromPoints(points)\n}\n\n/**\n * Return a list of polygons which are enclosed by the slice.\n * @param {slice} slice - the slice\n * @return {Array} a list of polygons (3D)\n * @alias module:modeling/extrusions/slice.toPolygons\n */\nconst toPolygons = (slice) => {\n  const splane = calculatePlane(slice)\n\n  // find the midpoint of the slice, which will lie on the plane by definition\n  const edges = slice.edges\n  const midpoint = edges.reduce((point, edge) => vec3.add(point, edge[0]), vec3.create())\n  vec3.scale(midpoint, 1 / edges.length, midpoint)\n\n  // find the farthest edge from the midpoint, which will be on an outside edge\n  let farthestEdge = [[NaN, NaN, NaN], [NaN, NaN, NaN]]\n  let distance = 0\n  edges.forEach((edge) => {\n    const d = vec3.squaredDistance(midpoint, edge[0])\n    if (d > distance) {\n      farthestEdge = edge\n      distance = d\n    }\n  })\n\n  // create one LARGE polygon to encompass the side, i.e. base\n  const direction = vec3.subtract(farthestEdge[0], midpoint)\n  const perpendicular = vec3.cross(splane, direction)\n\n  const p1 = vec3.add(midpoint, direction)\n  vec3.add(p1, p1, direction)\n  const p2 = vec3.add(midpoint, perpendicular)\n  vec3.add(p2, p2, perpendicular)\n  const p3 = vec3.subtract(midpoint, direction)\n  vec3.subtract(p3, p3, direction)\n  const p4 = vec3.subtract(midpoint, perpendicular)\n  vec3.subtract(p4, p4, perpendicular)\n  const poly1 = poly3.fromPoints([p1, p2, p3, p4])\n  const base = geom3.create([poly1])\n\n  const wallPolygons = edges.map((edge) => toPolygon3D(splane, edge))\n  const walls = geom3.create(wallPolygons)\n\n  // make an insection of the base and the walls, creating... a set of polygons!\n  const geometry3 = intersectGeom3Sub(base, walls)\n\n  // return only those polygons from the base\n  let polygons = geom3.toPolygons(geometry3)\n  polygons = polygons.filter((polygon) => {\n    const a = vec3.angle(splane, poly3.plane(polygon))\n    // walls should be PI / 2 radians rotated from the base\n    return Math.abs(a) < (Math.PI / 90)\n  })\n  return polygons\n}\n\nmodule.exports = toPolygons\n","const vec3 = require('../../../maths/vec3')\n\nconst edgesToString = (edges) =>\n  edges.reduce((result, edge) => (\n    result += `[${vec3.toString(edge[0])}, ${vec3.toString(edge[1])}], `\n  ), '')\n\n/**\n * @param {slice} slice - the slice\n * @return {String} the string representation\n * @alias module:modeling/extrusions/slice.toString\n */\nconst toString = (slice) => `[${edgesToString(slice.edges)}]`\n\nmodule.exports = toString\n","const vec3 = require('../../../maths/vec3')\n\nconst create = require('./create')\n\n/**\n * Transform the given slice using the given matrix.\n * @param {mat4} matrix - transform matrix\n * @param {slice} slice - slice to transform\n * @returns {slice} the transformed slice\n * @alias module:modeling/extrusions/slice.transform\n *\n * @example\n * let matrix = mat4.fromTranslation([1, 2, 3])\n * let newslice = transform(matrix, oldslice)\n */\nconst transform = (matrix, slice) => {\n  const edges = slice.edges.map((edge) => [vec3.transform(matrix, edge[0]), vec3.transform(matrix, edge[1])])\n  return create(edges)\n}\n\nmodule.exports = transform\n","/**\n * @module modeling/extrusions/slice\n */\nmodule.exports = {\n  calculatePlane: require('./calculatePlane'),\n  clone: require('./clone'),\n  create: require('./create'),\n  equals: require('./equals'),\n  fromPoints: require('./fromPoints'),\n  fromSides: require('./fromSides'),\n  isA: require('./isA'),\n  reverse: require('./reverse'),\n  toEdges: require('./toEdges'),\n  toPolygons: require('./toPolygons'),\n  toString: require('./toString'),\n  transform: require('./transform')\n}\n","const { EPS } = require('../../maths/constants')\nconst vec3 = require('../../maths/vec3')\n\nconst poly3 = require('../../geometries/poly3')\n\nconst slice = require('./slice')\n\n// https://en.wikipedia.org/wiki/Greatest_common_divisor#Using_Euclid's_algorithm\nconst gcd = (a, b) => {\n  if (a === b) { return a }\n  if (a < b) { return gcd(b, a) }\n  if (b === 1) { return 1 }\n  if (b === 0) { return a }\n  return gcd(b, a % b)\n}\n\nconst lcm = (a, b) => (a * b) / gcd(a, b)\n\n// Return a set of edges that encloses the same area by splitting\n// the given edges to have newlength total edges.\nconst repartitionEdges = (newlength, edges) => {\n  // NOTE: This implementation splits each edge evenly.\n  const multiple = newlength / edges.length\n  if (multiple === 1) {\n    return edges\n  }\n\n  const divisor = vec3.fromValues(multiple, multiple, multiple)\n\n  const newEdges = []\n  edges.forEach((edge) => {\n    const increment = vec3.divide(vec3.subtract(edge[1], edge[0]), divisor)\n\n    // repartition the edge\n    let prev = edge[0]\n    for (let i = 1; i <= multiple; ++i) {\n      const next = vec3.add(prev, increment)\n      newEdges.push([prev, next])\n      prev = next\n    }\n  })\n  return newEdges\n}\n\nconst EPSAREA = (EPS * EPS / 2) * Math.sin(Math.PI / 3)\n\n/*\n * Extrude (build) walls between the given slices.\n * Each wall consists of two triangles, which may be invalid if slices are overlapping.\n */\nconst extrudeWalls = (slice0, slice1) => {\n  let edges0 = slice.toEdges(slice0)\n  let edges1 = slice.toEdges(slice1)\n\n  if (edges0.length !== edges1.length) {\n    // different shapes, so adjust one or both to the same number of edges\n    const newlength = lcm(edges0.length, edges1.length)\n    if (newlength !== edges0.length) edges0 = repartitionEdges(newlength, edges0)\n    if (newlength !== edges1.length) edges1 = repartitionEdges(newlength, edges1)\n  }\n\n  const walls = []\n  edges0.forEach((edge0, i) => {\n    const edge1 = edges1[i]\n\n    const poly0 = poly3.fromPoints([edge0[0], edge0[1], edge1[1]])\n    const poly0area = poly3.measureArea(poly0)\n    if (Number.isFinite(poly0area) && poly0area > EPSAREA) walls.push(poly0)\n\n    const poly1 = poly3.fromPoints([edge0[0], edge1[1], edge1[0]])\n    const poly1area = poly3.measureArea(poly1)\n    if (Number.isFinite(poly1area) && poly1area > EPSAREA) walls.push(poly1)\n  })\n  return walls\n}\n\nmodule.exports = extrudeWalls\n","const mat4 = require('../../maths/mat4')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst poly3 = require('../../geometries/poly3')\n\nconst slice = require('./slice')\n\nconst extrudeWalls = require('./extrudeWalls')\n\nconst defaultCallback = (progress, index, base) => {\n  let baseSlice = null\n  if (geom2.isA(base)) baseSlice = slice.fromSides(geom2.toSides(base))\n  if (poly3.isA(base)) baseSlice = slice.fromPoints(poly3.toPoints(base))\n\n  return progress === 0 || progress === 1 ? slice.transform(mat4.fromTranslation([0, 0, progress]), baseSlice) : null\n}\n\n/**\n * Extrude a solid from the slices as returned by the callback function.\n * @see slice\n *\n * @param {Object} options - options for extrude\n * @param {Integer} [options.numberOfSlices=2] the number of slices to be generated by the callback\n * @param {Boolean} [options.capStart=true] the solid should have a cap at the start\n * @param {Boolean} [options.capEnd=true] the solid should have a cap at the end\n * @param {Boolean} [options.close=false] the solid should have a closing section between start and end\n * @param {Function} [options.callback] the callback function that generates each slice\n * @param {Object} base - the base object which is used to create slices (see the example for callback information)\n * @return {geom3} the extruded shape\n * @alias module:modeling/extrusions.extrudeFromSlices\n *\n * @example\n * // Parameters:\n * //   progress : the percent complete [0..1]\n * //   index : the index of the current slice [0..numberOfSlices - 1]\n * //   base : the base object as given\n * // Return Value:\n * //   slice or null (to skip)\n * const callback = (progress, index, base) => {\n *   ...\n *   return slice\n * }\n */\nconst extrudeFromSlices = (options, base) => {\n  const defaults = {\n    numberOfSlices: 2,\n    capStart: true,\n    capEnd: true,\n    close: false,\n    callback: defaultCallback\n  }\n  const { numberOfSlices, capStart, capEnd, close, callback: generate } = Object.assign({ }, defaults, options)\n\n  if (numberOfSlices < 2) throw new Error('numberOfSlices must be 2 or more')\n\n  const sMax = numberOfSlices - 1\n\n  let startSlice = null\n  let endSlice = null\n  let prevSlice = null\n  let polygons = []\n  for (let s = 0; s < numberOfSlices; s++) {\n    // invoke the callback function to get the next slice\n    // NOTE: callback can return null to skip the slice\n    const currentSlice = generate(s / sMax, s, base)\n\n    if (currentSlice) {\n      if (!slice.isA(currentSlice)) throw new Error('the callback function must return slice objects')\n\n      const edges = slice.toEdges(currentSlice)\n      if (edges.length === 0) throw new Error('the callback function must return slices with one or more edges')\n\n      if (prevSlice) {\n        polygons = polygons.concat(extrudeWalls(prevSlice, currentSlice))\n      }\n\n      // save start and end slices for caps if necessary\n      if (s === 0) startSlice = currentSlice\n      if (s === (numberOfSlices - 1)) endSlice = currentSlice\n\n      prevSlice = currentSlice\n    }\n  }\n\n  if (capEnd) {\n    // create a cap at the end\n    const endPolygons = slice.toPolygons(endSlice)\n    polygons = polygons.concat(endPolygons)\n  }\n  if (capStart) {\n    // create a cap at the start\n    slice.reverse(startSlice, startSlice)\n    const startPolygons = slice.toPolygons(startSlice)\n    polygons = polygons.concat(startPolygons)\n  }\n  if (!capStart && !capEnd) {\n    // create walls between end and start slices\n    if (close && !slice.equals(endSlice, startSlice)) {\n      polygons = polygons.concat(extrudeWalls(endSlice, startSlice))\n    }\n  }\n  return geom3.create(polygons)\n}\n\nmodule.exports = extrudeFromSlices\n","const mat4 = require('../../maths/mat4')\n\nconst { mirrorX } = require('../transforms/mirror')\n\nconst geom2 = require('../../geometries/geom2')\n\nconst slice = require('./slice')\n\nconst extrudeFromSlices = require('./extrudeFromSlices')\n\n/**\n * Rotate extrude the given geometry using the given options.\n *\n * @param {Object} options - options for extrusion\n * @param {Number} [options.angle=PI*2] - angle of the extrusion (RADIANS)\n * @param {Number} [options.startAngle=0] - start angle of the extrusion (RADIANS)\n * @param {String} [options.overflow='cap'] - what to do with points outside of bounds (+ / - x) :\n * defaults to capping those points to 0 (only supported behaviour for now)\n * @param {Number} [options.segments=12] - number of segments of the extrusion\n * @param {geom2} geometry - the geometry to extrude\n * @returns {geom3} the extruded geometry\n * @alias module:modeling/extrusions.extrudeRotate\n */\nconst extrudeRotate = (options, geometry) => {\n  const defaults = {\n    segments: 12,\n    startAngle: 0,\n    angle: (Math.PI * 2),\n    overflow: 'cap'\n  }\n  let { segments, startAngle, angle, overflow } = Object.assign({}, defaults, options)\n\n  if (segments < 3) throw new Error('segments must be greater then 3')\n\n  startAngle = Math.abs(startAngle) > (Math.PI * 2) ? startAngle % (Math.PI * 2) : startAngle\n  angle = Math.abs(angle) > (Math.PI * 2) ? angle % (Math.PI * 2) : angle\n\n  let endAngle = startAngle + angle\n  endAngle = Math.abs(endAngle) > (Math.PI * 2) ? endAngle % (Math.PI * 2) : endAngle\n\n  if (endAngle < startAngle) {\n    const x = startAngle\n    startAngle = endAngle\n    endAngle = x\n  }\n  let totalRotation = endAngle - startAngle\n  if (totalRotation <= 0.0) totalRotation = (Math.PI * 2)\n\n  if (Math.abs(totalRotation) < (Math.PI * 2)) {\n    // adjust the segments to achieve the total rotation requested\n    const anglePerSegment = (Math.PI * 2) / segments\n    segments = Math.floor(Math.abs(totalRotation) / anglePerSegment)\n    if (Math.abs(totalRotation) > (segments * anglePerSegment)) segments++\n  }\n\n  // console.log('startAngle: '+startAngle)\n  // console.log('endAngle: '+endAngle)\n  // console.log(totalRotation)\n  // console.log(segments)\n\n  // convert geometry to an array of sides, easier to deal with\n  let shapeSides = geom2.toSides(geometry)\n  if (shapeSides.length === 0) throw new Error('the given geometry cannot be empty')\n\n  // determine if the rotate extrude can be computed in the first place\n  // ie all the points have to be either x > 0 or x < 0\n\n  // generic solution to always have a valid solid, even if points go beyond x/ -x\n  // 1. split points up between all those on the 'left' side of the axis (x<0) & those on the 'righ' (x>0)\n  // 2. for each set of points do the extrusion operation IN OPOSITE DIRECTIONS\n  // 3. union the two resulting solids\n\n  // 1. alt : OR : just cap of points at the axis ?\n\n  const pointsWithNegativeX = shapeSides.filter((s) => (s[0][0] < 0))\n  const pointsWithPositiveX = shapeSides.filter((s) => (s[0][0] >= 0))\n  const arePointsWithNegAndPosX = pointsWithNegativeX.length > 0 && pointsWithPositiveX.length > 0\n\n  // FIXME actually there are cases where setting X=0 will change the basic shape\n  // - Alternative #1 : don't allow shapes with both negative and positive X values\n  // - Alternative #2 : remove one half of the shape (costly)\n  if (arePointsWithNegAndPosX && overflow === 'cap') {\n    if (pointsWithNegativeX.length > pointsWithPositiveX.length) {\n      shapeSides = shapeSides.map((side) => {\n        let point0 = side[0]\n        let point1 = side[1]\n        point0 = [Math.min(point0[0], 0), point0[1]]\n        point1 = [Math.min(point1[0], 0), point1[1]]\n        return [point0, point1]\n      })\n      // recreate the geometry from the (-) capped points\n      geometry = geom2.reverse(geom2.create(shapeSides))\n      geometry = mirrorX(geometry)\n    } else if (pointsWithPositiveX.length >= pointsWithNegativeX.length) {\n      shapeSides = shapeSides.map((side) => {\n        let point0 = side[0]\n        let point1 = side[1]\n        point0 = [Math.max(point0[0], 0), point0[1]]\n        point1 = [Math.max(point1[0], 0), point1[1]]\n        return [point0, point1]\n      })\n      // recreate the geometry from the (+) capped points\n      geometry = geom2.create(shapeSides)\n    }\n  }\n\n  const rotationPerSlice = totalRotation / segments\n  const isCapped = Math.abs(totalRotation) < (Math.PI * 2)\n  const baseSlice = slice.fromSides(geom2.toSides(geometry))\n  slice.reverse(baseSlice, baseSlice)\n\n  const createSlice = (progress, index, base) => {\n    const Zrotation = rotationPerSlice * index + startAngle\n    const matrix = mat4.multiply(mat4.fromZRotation(Zrotation), mat4.fromXRotation(Math.PI / 2))\n\n    return slice.transform(matrix, base)\n  }\n\n  options = {\n    numberOfSlices: segments + 1,\n    capStart: isCapped,\n    capEnd: isCapped,\n    close: !isCapped,\n    callback: createSlice\n  }\n  return extrudeFromSlices(options, baseSlice)\n}\n\nmodule.exports = extrudeRotate\n","const flatten = require('../../utils/flatten')\n\nconst mat4 = require('../../maths/mat4')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\n/**\n * Rotate the given geometries using the given options.\n * @param {Array} angles - angle (RADIANS) of rotations about X, Y, and Z axis\n * @param {...Object} geometries - the geometries to rotate\n * @return {Object|Array} the rotated geometry, or a list of rotated geometries\n * @alias module:modeling/transforms.rotate\n *\n * @example\n * const newsphere = rotate([Math.PI / 4, 0, 0], sphere())\n */\nconst rotate = (angles, ...objects) => {\n  if (!Array.isArray(angles)) throw new Error('angles must be an array')\n\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  // adjust the angles if necessary\n  angles = angles.slice() // don't modify the original\n  while (angles.length < 3) angles.push(0)\n\n  const yaw = angles[2]\n  const pitch = angles[1]\n  const roll = angles[0]\n\n  const matrix = mat4.fromTaitBryanRotation(yaw, pitch, roll)\n\n  const results = objects.map((object) => {\n    if (path2.isA(object)) return path2.transform(matrix, object)\n    if (geom2.isA(object)) return geom2.transform(matrix, object)\n    if (geom3.isA(object)) return geom3.transform(matrix, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\n/**\n * Rotate the given object(s) about the X axis, using the given options.\n * @param {Number} angle - angle (RADIANS) of rotations about X\n * @param {...Object} geometries - the geometries to rotate\n * @return {Object|Array} the rotated geometry, or a list of rotated geometries\n * @alias module:modeling/transforms.rotateX\n */\nconst rotateX = (angle, ...objects) => rotate([angle, 0, 0], objects)\n\n/**\n * Rotate the given object(s) about the Y axis, using the given options.\n * @param {Number} angle - angle (RADIANS) of rotations about Y\n * @param {...Object} geometries - the geometries to rotate\n * @return {Object|Array} the rotated geometry, or a list of rotated geometries\n * @alias module:modeling/transforms.rotateY\n */\nconst rotateY = (angle, ...objects) => rotate([0, angle, 0], objects)\n\n/**\n * Rotate the given object(s) about the Z axis, using the given options.\n * @param {Number} angle - angle (RADIANS) of rotations about Z\n * @param {...Object} geometries - the geometries to rotate\n * @return {Object|Array} the rotated geometry, or a list of rotated geometries\n * @alias module:modeling/transforms.rotateZ\n */\nconst rotateZ = (angle, ...objects) => rotate([0, 0, angle], objects)\n\nmodule.exports = {\n  rotate,\n  rotateX,\n  rotateY,\n  rotateZ\n}\n","const flatten = require('../../utils/flatten')\n\nconst mat4 = require('../../maths/mat4')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\n/**\n * Translate the given geometries using the given options.\n * @param {Array} offset - offset (vector) of which to translate the geometries\n * @param {...Object} geometries - the geometries to translate\n * @return {Object|Array} the translated geometry, or a list of translated geometries\n * @alias module:modeling/transforms.translate\n *\n * @example\n * const newsphere = translate([5, 0, 10], sphere())\n */\nconst translate = (offset, ...objects) => {\n  if (!Array.isArray(offset)) throw new Error('offset must be an array')\n\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  // adjust the offset if necessary\n  offset = offset.slice() // don't modify the original\n  while (offset.length < 3) offset.push(0)\n\n  const matrix = mat4.fromTranslation(offset)\n\n  const results = objects.map((object) => {\n    if (path2.isA(object)) return path2.transform(matrix, object)\n    if (geom2.isA(object)) return geom2.transform(matrix, object)\n    if (geom3.isA(object)) return geom3.transform(matrix, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\n/**\n * Translate the given geometries along the X axis using the given options.\n * @param {Number} offset - X offset of which to translate the geometries\n * @param {...Object} geometries - the geometries to translate\n * @return {Object|Array} the translated geometry, or a list of translated geometries\n * @alias module:modeling/transforms.translateX\n */\nconst translateX = (offset, ...objects) => translate([offset, 0, 0], objects)\n\n/**\n * Translate the given geometries along the Y axis using the given options.\n * @param {Number} offset - Y offset of which to translate the geometries\n * @param {...Object} geometries - the geometries to translate\n * @return {Object|Array} the translated geometry, or a list of translated geometries\n * @alias module:modeling/transforms.translateY\n */\nconst translateY = (offset, ...objects) => translate([0, offset, 0], objects)\n\n/**\n * Translate the given geometries along the Z axis using the given options.\n * @param {Number} offset - Z offset of which to translate the geometries\n * @param {...Object} geometries - the geometries to translate\n * @return {Object|Array} the translated geometry, or a list of translated geometries\n * @alias module:modeling/transforms.translateZ\n */\nconst translateZ = (offset, ...objects) => translate([0, 0, offset], objects)\n\nmodule.exports = {\n  translate,\n  translateX,\n  translateY,\n  translateZ\n}\n","const extrudeRotate = require('../operations/extrusions/extrudeRotate')\nconst { rotate } = require('../operations/transforms/rotate')\nconst { translate } = require('../operations/transforms/translate')\n\nconst circle = require('./circle')\n\nconst { isGT, isGTE } = require('./commonChecks')\n\n/**\n * Construct a torus by revolving a small circle (inner) about the circumference of a large (outer) circle.\n * @param {Object} [options] - options for construction\n * @param {Number} [options.innerRadius=1] - radius of small (inner) circle\n * @param {Number} [options.outerRadius=4] - radius of large (outer) circle\n * @param {Integer} [options.innerSegments=32] - number of segments to create per rotation\n * @param {Integer} [options.outerSegments=32] - number of segments to create per rotation\n * @param {Integer} [options.innerRotation=0] - rotation of small (inner) circle in radians\n * @param {Number} [options.outerRotation=(PI * 2)] - rotation (outer) of the torus (RADIANS)\n * @param {Number} [options.startAngle=0] - start angle of the torus (RADIANS)\n * @returns {geom3} new 3D geometry\n * @alias module:modeling/primitives.torus\n *\n * @example\n * let myshape = torus({ innerRadius: 10, outerRadius: 100 })\n */\nconst torus = (options) => {\n  const defaults = {\n    innerRadius: 1,\n    innerSegments: 32,\n    outerRadius: 4,\n    outerSegments: 32,\n    innerRotation: 0,\n    startAngle: 0,\n    outerRotation: Math.PI * 2\n  }\n  const { innerRadius, innerSegments, outerRadius, outerSegments, innerRotation, startAngle, outerRotation } = Object.assign({}, defaults, options)\n\n  if (!isGT(innerRadius, 0)) throw new Error('innerRadius must be greater than zero')\n  if (!isGTE(innerSegments, 3)) throw new Error('innerSegments must be three or more')\n  if (!isGT(outerRadius, 0)) throw new Error('outerRadius must be greater than zero')\n  if (!isGTE(outerSegments, 3)) throw new Error('outerSegments must be three or more')\n  if (!isGTE(startAngle, 0)) throw new Error('startAngle must be positive')\n  if (!isGT(outerRotation, 0)) throw new Error('outerRotation must be greater than zero')\n\n  if (innerRadius >= outerRadius) throw new Error('inner circle is two large to rotate about the outer circle')\n\n  let innerCircle = circle({ radius: innerRadius, segments: innerSegments })\n\n  if (innerRotation !== 0) {\n    innerCircle = rotate([0, 0, innerRotation], innerCircle)\n  }\n\n  innerCircle = translate([outerRadius, 0], innerCircle)\n\n  const extrudeOptions = {\n    startAngle: startAngle,\n    angle: outerRotation,\n    segments: outerSegments\n  }\n  return extrudeRotate(extrudeOptions, innerCircle)\n}\n\nmodule.exports = torus\n","/**\n * Primitives provide the building blocks for complex parts.\n * Each primitive is a geometrical object that can be described mathematically, and therefore precise.\n * Primitives can be logically combined, transformed, extruded, etc.\n * @module modeling/primitives\n * @example\n * const { cube, ellipse, star } = require('@jscad/modeling').primitives\n */\nmodule.exports = {\n  arc: require('./arc'),\n  circle: require('./circle'),\n  cube: require('./cube'),\n  cuboid: require('./cuboid'),\n  cylinder: require('./cylinder'),\n  cylinderElliptic: require('./cylinderElliptic'),\n  ellipse: require('./ellipse'),\n  ellipsoid: require('./ellipsoid'),\n  geodesicSphere: require('./geodesicSphere'),\n  line: require('./line'),\n  polygon: require('./polygon'),\n  polyhedron: require('./polyhedron'),\n  rectangle: require('./rectangle'),\n  roundedCuboid: require('./roundedCuboid'),\n  roundedCylinder: require('./roundedCylinder'),\n  roundedRectangle: require('./roundedRectangle'),\n  sphere: require('./sphere'),\n  square: require('./square'),\n  star: require('./star'),\n  torus: require('./torus')\n}\n","// -- data source from from http://paulbourke.net/dataformats/hershey/\n// -- reduced to save some bytes...\n// { [ascii code]: [width, x, y, ...] } - undefined value as path separator\nmodule.exports = {\n  height: 14,\n  32: [16],\n  33: [10, 5, 21, 5, 7, undefined, 5, 2, 4, 1, 5, 0, 6, 1, 5, 2],\n  34: [16, 4, 21, 4, 14, undefined, 12, 21, 12, 14],\n  35: [21, 11, 25, 4, -7, undefined, 17, 25, 10, -7, undefined, 4, 12, 18, 12, undefined, 3, 6, 17, 6],\n  36: [20, 8, 25, 8, -4, undefined, 12, 25, 12, -4, undefined, 17, 18, 15, 20, 12, 21, 8, 21, 5, 20, 3, 18, 3, 16, 4, 14, 5, 13, 7, 12, 13, 10, 15, 9, 16, 8, 17, 6, 17, 3, 15, 1, 12, 0, 8, 0, 5, 1, 3, 3],\n  37: [24, 21, 21, 3, 0, undefined, 8, 21, 10, 19, 10, 17, 9, 15, 7, 14, 5, 14, 3, 16, 3, 18, 4, 20, 6, 21, 8, 21, 10, 20, 13, 19, 16, 19, 19, 20, 21, 21, undefined, 17, 7, 15, 6, 14, 4, 14, 2, 16, 0, 18, 0, 20, 1, 21, 3, 21, 5, 19, 7, 17, 7],\n  38: [26, 23, 12, 23, 13, 22, 14, 21, 14, 20, 13, 19, 11, 17, 6, 15, 3, 13, 1, 11, 0, 7, 0, 5, 1, 4, 2, 3, 4, 3, 6, 4, 8, 5, 9, 12, 13, 13, 14, 14, 16, 14, 18, 13, 20, 11, 21, 9, 20, 8, 18, 8, 16, 9, 13, 11, 10, 16, 3, 18, 1, 20, 0, 22, 0, 23, 1, 23, 2],\n  39: [10, 5, 19, 4, 20, 5, 21, 6, 20, 6, 18, 5, 16, 4, 15],\n  40: [14, 11, 25, 9, 23, 7, 20, 5, 16, 4, 11, 4, 7, 5, 2, 7, -2, 9, -5, 11, -7],\n  41: [14, 3, 25, 5, 23, 7, 20, 9, 16, 10, 11, 10, 7, 9, 2, 7, -2, 5, -5, 3, -7],\n  42: [16, 8, 21, 8, 9, undefined, 3, 18, 13, 12, undefined, 13, 18, 3, 12],\n  43: [26, 13, 18, 13, 0, undefined, 4, 9, 22, 9],\n  44: [10, 6, 1, 5, 0, 4, 1, 5, 2, 6, 1, 6, -1, 5, -3, 4, -4],\n  45: [26, 4, 9, 22, 9],\n  46: [10, 5, 2, 4, 1, 5, 0, 6, 1, 5, 2],\n  47: [22, 20, 25, 2, -7],\n  48: [20, 9, 21, 6, 20, 4, 17, 3, 12, 3, 9, 4, 4, 6, 1, 9, 0, 11, 0, 14, 1, 16, 4, 17, 9, 17, 12, 16, 17, 14, 20, 11, 21, 9, 21],\n  49: [20, 6, 17, 8, 18, 11, 21, 11, 0],\n  50: [20, 4, 16, 4, 17, 5, 19, 6, 20, 8, 21, 12, 21, 14, 20, 15, 19, 16, 17, 16, 15, 15, 13, 13, 10, 3, 0, 17, 0],\n  51: [20, 5, 21, 16, 21, 10, 13, 13, 13, 15, 12, 16, 11, 17, 8, 17, 6, 16, 3, 14, 1, 11, 0, 8, 0, 5, 1, 4, 2, 3, 4],\n  52: [20, 13, 21, 3, 7, 18, 7, undefined, 13, 21, 13, 0],\n  53: [20, 15, 21, 5, 21, 4, 12, 5, 13, 8, 14, 11, 14, 14, 13, 16, 11, 17, 8, 17, 6, 16, 3, 14, 1, 11, 0, 8, 0, 5, 1, 4, 2, 3, 4],\n  54: [20, 16, 18, 15, 20, 12, 21, 10, 21, 7, 20, 5, 17, 4, 12, 4, 7, 5, 3, 7, 1, 10, 0, 11, 0, 14, 1, 16, 3, 17, 6, 17, 7, 16, 10, 14, 12, 11, 13, 10, 13, 7, 12, 5, 10, 4, 7],\n  55: [20, 17, 21, 7, 0, undefined, 3, 21, 17, 21],\n  56: [20, 8, 21, 5, 20, 4, 18, 4, 16, 5, 14, 7, 13, 11, 12, 14, 11, 16, 9, 17, 7, 17, 4, 16, 2, 15, 1, 12, 0, 8, 0, 5, 1, 4, 2, 3, 4, 3, 7, 4, 9, 6, 11, 9, 12, 13, 13, 15, 14, 16, 16, 16, 18, 15, 20, 12, 21, 8, 21],\n  57: [20, 16, 14, 15, 11, 13, 9, 10, 8, 9, 8, 6, 9, 4, 11, 3, 14, 3, 15, 4, 18, 6, 20, 9, 21, 10, 21, 13, 20, 15, 18, 16, 14, 16, 9, 15, 4, 13, 1, 10, 0, 8, 0, 5, 1, 4, 3],\n  58: [10, 5, 14, 4, 13, 5, 12, 6, 13, 5, 14, undefined, 5, 2, 4, 1, 5, 0, 6, 1, 5, 2],\n  59: [10, 5, 14, 4, 13, 5, 12, 6, 13, 5, 14, undefined, 6, 1, 5, 0, 4, 1, 5, 2, 6, 1, 6, -1, 5, -3, 4, -4],\n  60: [24, 20, 18, 4, 9, 20, 0],\n  61: [26, 4, 12, 22, 12, undefined, 4, 6, 22, 6],\n  62: [24, 4, 18, 20, 9, 4, 0],\n  63: [18, 3, 16, 3, 17, 4, 19, 5, 20, 7, 21, 11, 21, 13, 20, 14, 19, 15, 17, 15, 15, 14, 13, 13, 12, 9, 10, 9, 7, undefined, 9, 2, 8, 1, 9, 0, 10, 1, 9, 2],\n  64: [27, 18, 13, 17, 15, 15, 16, 12, 16, 10, 15, 9, 14, 8, 11, 8, 8, 9, 6, 11, 5, 14, 5, 16, 6, 17, 8, undefined, 12, 16, 10, 14, 9, 11, 9, 8, 10, 6, 11, 5, undefined, 18, 16, 17, 8, 17, 6, 19, 5, 21, 5, 23, 7, 24, 10, 24, 12, 23, 15, 22, 17, 20, 19, 18, 20, 15, 21, 12, 21, 9, 20, 7, 19, 5, 17, 4, 15, 3, 12, 3, 9, 4, 6, 5, 4, 7, 2, 9, 1, 12, 0, 15, 0, 18, 1, 20, 2, 21, 3, undefined, 19, 16, 18, 8, 18, 6, 19, 5],\n  65: [18, 9, 21, 1, 0, undefined, 9, 21, 17, 0, undefined, 4, 7, 14, 7],\n  66: [21, 4, 21, 4, 0, undefined, 4, 21, 13, 21, 16, 20, 17, 19, 18, 17, 18, 15, 17, 13, 16, 12, 13, 11, undefined, 4, 11, 13, 11, 16, 10, 17, 9, 18, 7, 18, 4, 17, 2, 16, 1, 13, 0, 4, 0],\n  67: [21, 18, 16, 17, 18, 15, 20, 13, 21, 9, 21, 7, 20, 5, 18, 4, 16, 3, 13, 3, 8, 4, 5, 5, 3, 7, 1, 9, 0, 13, 0, 15, 1, 17, 3, 18, 5],\n  68: [21, 4, 21, 4, 0, undefined, 4, 21, 11, 21, 14, 20, 16, 18, 17, 16, 18, 13, 18, 8, 17, 5, 16, 3, 14, 1, 11, 0, 4, 0],\n  69: [19, 4, 21, 4, 0, undefined, 4, 21, 17, 21, undefined, 4, 11, 12, 11, undefined, 4, 0, 17, 0],\n  70: [18, 4, 21, 4, 0, undefined, 4, 21, 17, 21, undefined, 4, 11, 12, 11],\n  71: [21, 18, 16, 17, 18, 15, 20, 13, 21, 9, 21, 7, 20, 5, 18, 4, 16, 3, 13, 3, 8, 4, 5, 5, 3, 7, 1, 9, 0, 13, 0, 15, 1, 17, 3, 18, 5, 18, 8, undefined, 13, 8, 18, 8],\n  72: [22, 4, 21, 4, 0, undefined, 18, 21, 18, 0, undefined, 4, 11, 18, 11],\n  73: [8, 4, 21, 4, 0],\n  74: [16, 12, 21, 12, 5, 11, 2, 10, 1, 8, 0, 6, 0, 4, 1, 3, 2, 2, 5, 2, 7],\n  75: [21, 4, 21, 4, 0, undefined, 18, 21, 4, 7, undefined, 9, 12, 18, 0],\n  76: [17, 4, 21, 4, 0, undefined, 4, 0, 16, 0],\n  77: [24, 4, 21, 4, 0, undefined, 4, 21, 12, 0, undefined, 20, 21, 12, 0, undefined, 20, 21, 20, 0],\n  78: [22, 4, 21, 4, 0, undefined, 4, 21, 18, 0, undefined, 18, 21, 18, 0],\n  79: [22, 9, 21, 7, 20, 5, 18, 4, 16, 3, 13, 3, 8, 4, 5, 5, 3, 7, 1, 9, 0, 13, 0, 15, 1, 17, 3, 18, 5, 19, 8, 19, 13, 18, 16, 17, 18, 15, 20, 13, 21, 9, 21],\n  80: [21, 4, 21, 4, 0, undefined, 4, 21, 13, 21, 16, 20, 17, 19, 18, 17, 18, 14, 17, 12, 16, 11, 13, 10, 4, 10],\n  81: [22, 9, 21, 7, 20, 5, 18, 4, 16, 3, 13, 3, 8, 4, 5, 5, 3, 7, 1, 9, 0, 13, 0, 15, 1, 17, 3, 18, 5, 19, 8, 19, 13, 18, 16, 17, 18, 15, 20, 13, 21, 9, 21, undefined, 12, 4, 18, -2],\n  82: [21, 4, 21, 4, 0, undefined, 4, 21, 13, 21, 16, 20, 17, 19, 18, 17, 18, 15, 17, 13, 16, 12, 13, 11, 4, 11, undefined, 11, 11, 18, 0],\n  83: [20, 17, 18, 15, 20, 12, 21, 8, 21, 5, 20, 3, 18, 3, 16, 4, 14, 5, 13, 7, 12, 13, 10, 15, 9, 16, 8, 17, 6, 17, 3, 15, 1, 12, 0, 8, 0, 5, 1, 3, 3],\n  84: [16, 8, 21, 8, 0, undefined, 1, 21, 15, 21],\n  85: [22, 4, 21, 4, 6, 5, 3, 7, 1, 10, 0, 12, 0, 15, 1, 17, 3, 18, 6, 18, 21],\n  86: [18, 1, 21, 9, 0, undefined, 17, 21, 9, 0],\n  87: [24, 2, 21, 7, 0, undefined, 12, 21, 7, 0, undefined, 12, 21, 17, 0, undefined, 22, 21, 17, 0],\n  88: [20, 3, 21, 17, 0, undefined, 17, 21, 3, 0],\n  89: [18, 1, 21, 9, 11, 9, 0, undefined, 17, 21, 9, 11],\n  90: [20, 17, 21, 3, 0, undefined, 3, 21, 17, 21, undefined, 3, 0, 17, 0],\n  91: [14, 4, 25, 4, -7, undefined, 5, 25, 5, -7, undefined, 4, 25, 11, 25, undefined, 4, -7, 11, -7],\n  92: [14, 0, 21, 14, -3],\n  93: [14, 9, 25, 9, -7, undefined, 10, 25, 10, -7, undefined, 3, 25, 10, 25, undefined, 3, -7, 10, -7],\n  94: [16, 6, 15, 8, 18, 10, 15, undefined, 3, 12, 8, 17, 13, 12, undefined, 8, 17, 8, 0],\n  95: [16, 0, -2, 16, -2],\n  96: [10, 6, 21, 5, 20, 4, 18, 4, 16, 5, 15, 6, 16, 5, 17],\n  97: [19, 15, 14, 15, 0, undefined, 15, 11, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3],\n  98: [19, 4, 21, 4, 0, undefined, 4, 11, 6, 13, 8, 14, 11, 14, 13, 13, 15, 11, 16, 8, 16, 6, 15, 3, 13, 1, 11, 0, 8, 0, 6, 1, 4, 3],\n  99: [18, 15, 11, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3],\n  100: [19, 15, 21, 15, 0, undefined, 15, 11, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3],\n  101: [18, 3, 8, 15, 8, 15, 10, 14, 12, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3],\n  102: [12, 10, 21, 8, 21, 6, 20, 5, 17, 5, 0, undefined, 2, 14, 9, 14],\n  103: [19, 15, 14, 15, -2, 14, -5, 13, -6, 11, -7, 8, -7, 6, -6, undefined, 15, 11, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3],\n  104: [19, 4, 21, 4, 0, undefined, 4, 10, 7, 13, 9, 14, 12, 14, 14, 13, 15, 10, 15, 0],\n  105: [8, 3, 21, 4, 20, 5, 21, 4, 22, 3, 21, undefined, 4, 14, 4, 0],\n  106: [10, 5, 21, 6, 20, 7, 21, 6, 22, 5, 21, undefined, 6, 14, 6, -3, 5, -6, 3, -7, 1, -7],\n  107: [17, 4, 21, 4, 0, undefined, 14, 14, 4, 4, undefined, 8, 8, 15, 0],\n  108: [8, 4, 21, 4, 0],\n  109: [30, 4, 14, 4, 0, undefined, 4, 10, 7, 13, 9, 14, 12, 14, 14, 13, 15, 10, 15, 0, undefined, 15, 10, 18, 13, 20, 14, 23, 14, 25, 13, 26, 10, 26, 0],\n  110: [19, 4, 14, 4, 0, undefined, 4, 10, 7, 13, 9, 14, 12, 14, 14, 13, 15, 10, 15, 0],\n  111: [19, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3, 16, 6, 16, 8, 15, 11, 13, 13, 11, 14, 8, 14],\n  112: [19, 4, 14, 4, -7, undefined, 4, 11, 6, 13, 8, 14, 11, 14, 13, 13, 15, 11, 16, 8, 16, 6, 15, 3, 13, 1, 11, 0, 8, 0, 6, 1, 4, 3],\n  113: [19, 15, 14, 15, -7, undefined, 15, 11, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3],\n  114: [13, 4, 14, 4, 0, undefined, 4, 8, 5, 11, 7, 13, 9, 14, 12, 14],\n  115: [17, 14, 11, 13, 13, 10, 14, 7, 14, 4, 13, 3, 11, 4, 9, 6, 8, 11, 7, 13, 6, 14, 4, 14, 3, 13, 1, 10, 0, 7, 0, 4, 1, 3, 3],\n  116: [12, 5, 21, 5, 4, 6, 1, 8, 0, 10, 0, undefined, 2, 14, 9, 14],\n  117: [19, 4, 14, 4, 4, 5, 1, 7, 0, 10, 0, 12, 1, 15, 4, undefined, 15, 14, 15, 0],\n  118: [16, 2, 14, 8, 0, undefined, 14, 14, 8, 0],\n  119: [22, 3, 14, 7, 0, undefined, 11, 14, 7, 0, undefined, 11, 14, 15, 0, undefined, 19, 14, 15, 0],\n  120: [17, 3, 14, 14, 0, undefined, 14, 14, 3, 0],\n  121: [16, 2, 14, 8, 0, undefined, 14, 14, 8, 0, 6, -4, 4, -6, 2, -7, 1, -7],\n  122: [17, 14, 14, 3, 0, undefined, 3, 14, 14, 14, undefined, 3, 0, 14, 0],\n  123: [14, 9, 25, 7, 24, 6, 23, 5, 21, 5, 19, 6, 17, 7, 16, 8, 14, 8, 12, 6, 10, undefined, 7, 24, 6, 22, 6, 20, 7, 18, 8, 17, 9, 15, 9, 13, 8, 11, 4, 9, 8, 7, 9, 5, 9, 3, 8, 1, 7, 0, 6, -2, 6, -4, 7, -6, undefined, 6, 8, 8, 6, 8, 4, 7, 2, 6, 1, 5, -1, 5, -3, 6, -5, 7, -6, 9, -7],\n  124: [8, 4, 25, 4, -7],\n  125: [14, 5, 25, 7, 24, 8, 23, 9, 21, 9, 19, 8, 17, 7, 16, 6, 14, 6, 12, 8, 10, undefined, 7, 24, 8, 22, 8, 20, 7, 18, 6, 17, 5, 15, 5, 13, 6, 11, 10, 9, 6, 7, 5, 5, 5, 3, 6, 1, 7, 0, 8, -2, 8, -4, 7, -6, undefined, 8, 8, 6, 6, 6, 4, 7, 2, 8, 1, 9, -1, 9, -3, 8, -5, 7, -6, 5, -7],\n  126: [24, 3, 6, 3, 8, 4, 11, 6, 12, 8, 12, 10, 11, 14, 8, 16, 7, 18, 7, 20, 8, 21, 10, undefined, 3, 8, 4, 10, 6, 11, 8, 11, 10, 10, 14, 7, 16, 6, 18, 6, 20, 7, 21, 10, 21, 12]\n}\n","const defaultFont = require('./fonts/single-line/hershey/simplex.js')\n\nconst defaultsVectorParams = {\n  xOffset: 0,\n  yOffset: 0,\n  input: '?',\n  align: 'left',\n  font: defaultFont,\n  height: 14, // == old vector_xxx simplex font height\n  lineSpacing: 2.142857142857143, // == 30/14 == old vector_xxx ratio\n  letterSpacing: 1,\n  extrudeOffset: 0\n}\n\n// vectorsXXX parameters handler\nconst vectorParams = (options, input) => {\n  if (!input && typeof options === 'string') {\n    options = { input: options }\n  }\n  options = options || {}\n  const params = Object.assign({}, defaultsVectorParams, options)\n  params.input = input || params.input\n  return params\n}\n\nmodule.exports = vectorParams\n","const vectorParams = require('./vectorParams')\n\n/**\n * Represents a character as a list of segments\n * @typedef {Object} VectorCharObject\n * @property {Float} width - character width\n * @property {Float} height - character height (uppercase)\n * @property {Array} segments - character segments [[[x, y], ...], ...]\n */\n\n/** Construct a {@link VectorCharObject} from a ascii character whose code is between 31 and 127,\n* if the character is not supported it is replaced by a question mark.\n* @param {Object|String} [options] - options for construction or ascii character\n* @param {Float} [options.xOffset=0] - x offset\n* @param {Float} [options.yOffset=0] - y offset\n* @param {Float} [options.height=21] - font size (uppercase height)\n* @param {Float} [options.extrudeOffset=0] - width of the extrusion that will be applied (manually) after the creation of the character\n* @param {String} [options.input='?'] - ascii character (ignored/overwrited if provided as seconds parameter)\n* @param {String} [char='?'] - ascii character\n* @returns {VectorCharObject}\n* @alias module:modeling/text.vectorChar\n*\n* @example\n* let vectorCharObject = vectorChar()\n* or\n* let vectorCharObject = vectorChar('A')\n* or\n* let vectorCharObject = vectorChar({ xOffset: 57 }, 'C')\n* or\n* let vectorCharObject = vectorChar({ xOffset: 78, input: '!' })\n*/\nconst vectorChar = (options, char) => {\n  const {\n    xOffset, yOffset, input, font, height, extrudeOffset\n  } = vectorParams(options, char)\n  let code = input.charCodeAt(0)\n  if (!code || !font[code]) {\n    code = 63 // 63 => ?\n  }\n  const glyph = [].concat(font[code])\n  const ratio = (height - extrudeOffset) / font.height\n  const extrudeYOffset = (extrudeOffset / 2)\n  const width = glyph.shift() * ratio\n  const segments = []\n  let polyline = []\n  for (let i = 0, il = glyph.length; i < il; i += 2) {\n    const gx = ratio * glyph[i] + xOffset\n    const gy = ratio * glyph[i + 1] + yOffset + extrudeYOffset\n    if (glyph[i] !== undefined) {\n      polyline.push([gx, gy])\n      continue\n    }\n    segments.push(polyline)\n    polyline = []\n    i--\n  }\n  if (polyline.length) {\n    segments.push(polyline)\n  }\n  return { width, height, segments }\n}\n\nmodule.exports = vectorChar\n","const vectorChar = require('./vectorChar')\nconst vectorParams = require('./vectorParams')\n\n// translate text line\nconst translateLine = (options, line) => {\n  const { x, y } = Object.assign({ x: 0, y: 0 }, options || {})\n  const segments = line.segments\n  let segment = null\n  let point = null\n  for (let i = 0, il = segments.length; i < il; i++) {\n    segment = segments[i]\n    for (let j = 0, jl = segment.length; j < jl; j++) {\n      point = segment[j]\n      segment[j] = [point[0] + x, point[1] + y]\n    }\n  }\n  return line\n}\n\n/**\n * Construct an array of character segments from a ascii string whose characters code is between 31 and 127,\n * if one character is not supported it is replaced by a question mark.\n * @param {Object|String} [options] - options for construction or ascii string\n * @param {Float} [options.xOffset=0] - x offset\n * @param {Float} [options.yOffset=0] - y offset\n * @param {Float} [options.height=21] - font size (uppercase height)\n * @param {Float} [options.lineSpacing=1.4] - line spacing expressed as a percentage of font size\n * @param {Float} [options.letterSpacing=1] - extra letter spacing expressed as a percentage of font size\n * @param {String} [options.align='left'] - multi-line text alignement: left, center or right\n * @param {Float} [options.extrudeOffset=0] - width of the extrusion that will be applied (manually) after the creation of the character\n * @param {String} [options.input='?'] - ascii string (ignored/overwrited if provided as seconds parameter)\n * @param {String} [text='?'] - ascii string\n * @returns {Array} characters segments [[[x, y], ...], ...]\n * @alias module:modeling/text.vectorText\n *\n * @example\n * let textSegments = vectorText()\n * or\n * let textSegments = vectorText('OpenJSCAD')\n * or\n * let textSegments = vectorText({ yOffset: -50 }, 'OpenJSCAD')\n * or\n * let textSegments = vectorText({ yOffset: -80, input: 'OpenJSCAD' })\n */\nconst vectorText = (options, text) => {\n  const {\n    xOffset, yOffset, input, font, height, align, extrudeOffset, lineSpacing, letterSpacing\n  } = vectorParams(options, text)\n  let [x, y] = [xOffset, yOffset]\n  let [i, il, char, vect, width, diff] = []\n  let line = { width: 0, segments: [] }\n  const lines = []\n  let output = []\n  let maxWidth = 0\n  const lineStart = x\n  const pushLine = () => {\n    lines.push(line)\n    maxWidth = Math.max(maxWidth, line.width)\n    line = { width: 0, segments: [] }\n  }\n  for (i = 0, il = input.length; i < il; i++) {\n    char = input[i]\n    vect = vectorChar({ xOffset: x, yOffset: y, font, height, extrudeOffset }, char)\n    if (char === '\\n') {\n      x = lineStart\n      y -= vect.height * lineSpacing\n      pushLine()\n      continue\n    }\n    width = vect.width * letterSpacing\n    line.width += width\n    x += width\n    if (char !== ' ') {\n      line.segments = line.segments.concat(vect.segments)\n    }\n  }\n  if (line.segments.length) {\n    pushLine()\n  }\n  for (i = 0, il = lines.length; i < il; i++) {\n    line = lines[i]\n    if (maxWidth > line.width) {\n      diff = maxWidth - line.width\n      if (align === 'right') {\n        line = translateLine({ x: diff }, line)\n      } else if (align === 'center') {\n        line = translateLine({ x: diff / 2 }, line)\n      }\n    }\n    output = output.concat(line.segments)\n  }\n  return output\n}\n\nmodule.exports = vectorText\n","/**\n * Texts provide sets of segments for each character or text strings.\n * The segments can be used to create outlines for both 2D and 3D geometry.\n * Note: Only ASCII characters are supported.\n * @module modeling/text\n * @example\n * const { vectorChar, vectorText } = require('@jscad/modeling').text\n */\nmodule.exports = {\n  vectorChar: require('./vectorChar'),\n  vectorText: require('./vectorText')\n}\n","// list of supported geometries\nconst geom2 = require('../geometries/geom2')\nconst geom3 = require('../geometries/geom3')\nconst path2 = require('../geometries/path2')\n\n/**\n * @param {Array} shapes - list of shapes to compare\n * @returns {Boolean} true if the given shapes are of the same type\n * @alias module:modeling/utils.areAllShapesTheSameType\n */\nconst areAllShapesTheSameType = (shapes) => {\n  let previousType\n  shapes.forEach((shape) => {\n    let currentType = 0\n    if (geom2.isA(shape)) currentType = 1\n    if (geom3.isA(shape)) currentType = 2\n    if (path2.isA(shape)) currentType = 3\n\n    if (previousType && currentType !== previousType) return false\n    previousType = currentType\n  })\n  return true\n}\n\nmodule.exports = areAllShapesTheSameType\n","/**\n * Convert the given angle (degrees) to radians.\n * @param {Number} degrees - angle in degrees\n * @returns {Number} angle in radians\n * @alias module:modeling/utils.degToRad\n */\nconst degToRad = (degrees) => degrees * 0.017453292519943295\n\nmodule.exports = degToRad\n","/**\n * @alias module:modeling/utils.fnNumberSort\n */\nconst fnNumberSort = (a, b) => a - b\n\nmodule.exports = fnNumberSort\n","/**\n * @alias module:modeling/utils.insertSorted\n */\nconst insertSorted = (array, element, comparefunc) => {\n  let leftbound = 0\n  let rightbound = array.length\n  while (rightbound > leftbound) {\n    const testindex = Math.floor((leftbound + rightbound) / 2)\n    const testelement = array[testindex]\n    const compareresult = comparefunc(element, testelement)\n    if (compareresult > 0) { // element > testelement\n      leftbound = testindex + 1\n    } else {\n      rightbound = testindex\n    }\n  }\n  array.splice(leftbound, 0, element)\n}\n\nmodule.exports = insertSorted\n","/**\n * Calculate the number of segments from the given radius based on minimum length or angle.\n * @param {Number} radius - radius of the requested shape\n * @param {Number} minimumLength - minimum length of segments; 0 > length\n * @param {Number} minimumAngle - minimum angle (radians) between segments; 0 > angle < Math.PI * 2\n * @returns {Number} number of segments to complete the radius\n * @alias module:modeling/utils.radiusToSegments\n */\nconst radiusToSegments = (radius, minimumLength, minimumAngle) => {\n  const ss = minimumLength > 0 ? radius * 2 * Math.PI / minimumLength : 0\n  const as = minimumAngle > 0 ? Math.PI * 2 / minimumAngle : 0\n  // minimum segments is four(4) for round primitives\n  return Math.ceil(Math.max(ss, as, 4))\n}\n\nmodule.exports = radiusToSegments\n","/**\n * Convert the given angle (radians) to degrees.\n * @param {Number} radians - angle in radians\n * @returns {Number} angle in degrees\n * @alias module:modeling/utils.radToDeg\n */\nconst radToDeg = (radians) => radians * 57.29577951308232\n\nmodule.exports = radToDeg\n","/**\n * Utility functions of various sorts.\n * @module modeling/utils\n * @example\n * const { flatten, insertSorted } = require('@jscad/modeling').utils\n */\nmodule.exports = {\n  areAllShapesTheSameType: require('./areAllShapesTheSameType'),\n  degToRad: require('./degToRad'),\n  flatten: require('./flatten'),\n  fnNumberSort: require('./fnNumberSort'),\n  insertSorted: require('./insertSorted'),\n  radiusToSegments: require('./radiusToSegments'),\n  radToDeg: require('./radToDeg')\n}\n","const vec2 = require('../../maths/vec2')\n\nconst geom2 = require('../../geometries/geom2')\n\nconst fromFakePolygon = (epsilon, polygon) => {\n  // this can happen based on union, seems to be residuals -\n  // return null and handle in caller\n  if (polygon.vertices.length < 4) {\n    return null\n  }\n  const vert1Indices = []\n  const points3D = polygon.vertices.filter((vertex, i) => {\n    if (vertex[2] > 0) {\n      vert1Indices.push(i)\n      return true\n    }\n    return false\n  })\n\n  if (points3D.length !== 2) {\n    throw new Error('Assertion failed: fromFakePolygon: not enough points found') // TBD remove later\n  }\n\n  const points2D = points3D.map((v3) => {\n    const x = Math.round(v3[0] / epsilon) * epsilon + 0 // no more -0\n    const y = Math.round(v3[1] / epsilon) * epsilon + 0 // no more -0\n    return vec2.fromValues(x, y)\n  })\n\n  if (vec2.equals(points2D[0], points2D[1])) return null\n\n  const d = vert1Indices[1] - vert1Indices[0]\n  if (d === 1 || d === 3) {\n    if (d === 1) {\n      points2D.reverse()\n    }\n  } else {\n    throw new Error('Assertion failed: fromFakePolygon: unknown index ordering')\n  }\n  return points2D\n}\n\n/*\n * Convert the given polygons to a list of sides.\n * The polygons must have only z coordinates +1 and -1, as constructed by to3DWalls().\n */\nconst fromFakePolygons = (epsilon, polygons) => {\n  const sides = polygons.map((polygon) => fromFakePolygon(epsilon, polygon)).filter((polygon) => (polygon !== null))\n  return geom2.create(sides)\n}\n\nmodule.exports = fromFakePolygons\n","const vec3 = require('../../maths/vec3')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst poly3 = require('../../geometries/poly3')\n\n/*\n * Create a polygon (wall) from the given Z values and side.\n */\nconst to3DWall = (z0, z1, side) => {\n  const points = [\n    vec3.fromVec2(side[0], z0),\n    vec3.fromVec2(side[1], z0),\n    vec3.fromVec2(side[1], z1),\n    vec3.fromVec2(side[0], z1)\n  ]\n  return poly3.fromPoints(points)\n}\n\n/*\n * Create a 3D geometry with walls, as constructed from the given options and geometry.\n *\n * @param {Object} options - options with Z offsets\n * @param {geom2} geometry - geometry used as base of walls\n * @return {geom3} the new geometry\n */\nconst to3DWalls = (options, geometry) => {\n  const sides = geom2.toSides(geometry)\n\n  const polygons = sides.map((side) => to3DWall(options.z0, options.z1, side))\n\n  const result = geom3.create(polygons)\n  return result\n}\n\nmodule.exports = to3DWalls\n","const mat4 = require('./mat4')\n\nconst line2 = require('./line2')\nconst line3 = require('./line3')\n\nconst plane = require('./plane')\n\nconst vec2 = require('./vec2')\nconst vec3 = require('./vec3')\n\n/*\n * Class OrthoNormalBasis\n * Reprojects points on a 3D plane onto a 2D plane\n * or from a 2D plane back onto the 3D plane\n * @param  {Plane} plane\n * @param  {Vector3D|Vector2D} rightvector\n */\nconst OrthoNormalBasis = function (plane, rightvector) {\n  if (arguments.length < 2) {\n    // choose an arbitrary right hand vector, making sure it is somewhat orthogonal to the plane normal:\n    rightvector = vec3.orthogonal(plane)\n  } else {\n    rightvector = rightvector\n  }\n  this.v = vec3.unit(vec3.cross(plane, rightvector))\n  this.u = vec3.cross(this.v, plane)\n  this.plane = plane\n  this.planeorigin = vec3.scale(plane[3], plane)\n}\n\n// Get an orthonormal basis for the standard XYZ planes.\n// Parameters: the names of two 3D axes. The 2d x axis will map to the first given 3D axis, the 2d y\n// axis will map to the second.\n// Prepend the axis with a \"-\" to invert the direction of this axis.\n// For example: OrthoNormalBasis.GetCartesian(\"-Y\",\"Z\")\n//   will return an orthonormal basis where the 2d X axis maps to the 3D inverted Y axis, and\n//   the 2d Y axis maps to the 3D Z axis.\nOrthoNormalBasis.GetCartesian = function (xaxisid, yaxisid) {\n  const axisid = xaxisid + '/' + yaxisid\n  let planenormal, rightvector\n  if (axisid === 'X/Y') {\n    planenormal = [0, 0, 1]\n    rightvector = [1, 0, 0]\n  } else if (axisid === 'Y/-X') {\n    planenormal = [0, 0, 1]\n    rightvector = [0, 1, 0]\n  } else if (axisid === '-X/-Y') {\n    planenormal = [0, 0, 1]\n    rightvector = [-1, 0, 0]\n  } else if (axisid === '-Y/X') {\n    planenormal = [0, 0, 1]\n    rightvector = [0, -1, 0]\n  } else if (axisid === '-X/Y') {\n    planenormal = [0, 0, -1]\n    rightvector = [-1, 0, 0]\n  } else if (axisid === '-Y/-X') {\n    planenormal = [0, 0, -1]\n    rightvector = [0, -1, 0]\n  } else if (axisid === 'X/-Y') {\n    planenormal = [0, 0, -1]\n    rightvector = [1, 0, 0]\n  } else if (axisid === 'Y/X') {\n    planenormal = [0, 0, -1]\n    rightvector = [0, 1, 0]\n  } else if (axisid === 'X/Z') {\n    planenormal = [0, -1, 0]\n    rightvector = [1, 0, 0]\n  } else if (axisid === 'Z/-X') {\n    planenormal = [0, -1, 0]\n    rightvector = [0, 0, 1]\n  } else if (axisid === '-X/-Z') {\n    planenormal = [0, -1, 0]\n    rightvector = [-1, 0, 0]\n  } else if (axisid === '-Z/X') {\n    planenormal = [0, -1, 0]\n    rightvector = [0, 0, -1]\n  } else if (axisid === '-X/Z') {\n    planenormal = [0, 1, 0]\n    rightvector = [-1, 0, 0]\n  } else if (axisid === '-Z/-X') {\n    planenormal = [0, 1, 0]\n    rightvector = [0, 0, -1]\n  } else if (axisid === 'X/-Z') {\n    planenormal = [0, 1, 0]\n    rightvector = [1, 0, 0]\n  } else if (axisid === 'Z/X') {\n    planenormal = [0, 1, 0]\n    rightvector = [0, 0, 1]\n  } else if (axisid === 'Y/Z') {\n    planenormal = [1, 0, 0]\n    rightvector = [0, 1, 0]\n  } else if (axisid === 'Z/-Y') {\n    planenormal = [1, 0, 0]\n    rightvector = [0, 0, 1]\n  } else if (axisid === '-Y/-Z') {\n    planenormal = [1, 0, 0]\n    rightvector = [0, -1, 0]\n  } else if (axisid === '-Z/Y') {\n    planenormal = [1, 0, 0]\n    rightvector = [0, 0, -1]\n  } else if (axisid === '-Y/Z') {\n    planenormal = [-1, 0, 0]\n    rightvector = [0, -1, 0]\n  } else if (axisid === '-Z/-Y') {\n    planenormal = [-1, 0, 0]\n    rightvector = [0, 0, -1]\n  } else if (axisid === 'Y/-Z') {\n    planenormal = [-1, 0, 0]\n    rightvector = [0, 1, 0]\n  } else if (axisid === 'Z/Y') {\n    planenormal = [-1, 0, 0]\n    rightvector = [0, 0, 1]\n  } else {\n    throw new Error('OrthoNormalBasis.GetCartesian: invalid combination of axis identifiers. Should pass two string arguments from [X,Y,Z,-X,-Y,-Z], being two different axes.')\n  }\n  return new OrthoNormalBasis(new Plane(new Vector3D(planenormal), 0), new Vector3D(rightvector))\n}\n\n/*\n// test code for OrthoNormalBasis.GetCartesian()\nOrthoNormalBasis.GetCartesian_Test=function() {\n  let axisnames=[\"X\",\"Y\",\"Z\",\"-X\",\"-Y\",\"-Z\"];\n  let axisvectors=[[1,0,0], [0,1,0], [0,0,1], [-1,0,0], [0,-1,0], [0,0,-1]];\n  for(let axis1=0; axis1 < 3; axis1++) {\n    for(let axis1inverted=0; axis1inverted < 2; axis1inverted++) {\n      let axis1name=axisnames[axis1+3*axis1inverted];\n      let axis1vector=axisvectors[axis1+3*axis1inverted];\n      for(let axis2=0; axis2 < 3; axis2++) {\n        if(axis2 != axis1) {\n          for(let axis2inverted=0; axis2inverted < 2; axis2inverted++) {\n            let axis2name=axisnames[axis2+3*axis2inverted];\n            let axis2vector=axisvectors[axis2+3*axis2inverted];\n            let orthobasis=OrthoNormalBasis.GetCartesian(axis1name, axis2name);\n            let test1=orthobasis.to3D(new Vector2D([1,0]));\n            let test2=orthobasis.to3D(new Vector2D([0,1]));\n            let expected1=new Vector3D(axis1vector);\n            let expected2=new Vector3D(axis2vector);\n            let d1=test1.distanceTo(expected1);\n            let d2=test2.distanceTo(expected2);\n            if( (d1 > 0.01) || (d2 > 0.01) ) {\n              throw new Error(\"Wrong!\");\n  }}}}}}\n  throw new Error(\"OK\");\n};\n*/\n\n// The z=0 plane, with the 3D x and y vectors mapped to the 2D x and y vector\nOrthoNormalBasis.Z0Plane = function () {\n  const plane = new Plane(new Vector3D([0, 0, 1]), 0)\n  return new OrthoNormalBasis(plane, new Vector3D([1, 0, 0]))\n}\n\nOrthoNormalBasis.prototype = {\n\n  getProjectionMatrix: function () {\n    return mat4.fromValues(\n      this.u[0], this.v[0], this.plane[0], 0,\n      this.u[1], this.v[1], this.plane[1], 0,\n      this.u[2], this.v[2], this.plane[2], 0,\n      0, 0, -this.plane[3], 1\n    )\n  },\n\n  getInverseProjectionMatrix: function () {\n    const p = vec3.scale(this.plane[3], this.plane)\n    return mat4.fromValues(\n      this.u[0], this.u[1], this.u[2], 0,\n      this.v[0], this.v[1], this.v[2], 0,\n      this.plane[0], this.plane[1], this.plane[2], 0,\n      p[0], p[1], p[2], 1\n    )\n  },\n\n  to2D: function (point) {\n    return vec2.fromValues(vec3.dot(point, this.u), vec3.dot(point, this.v))\n  },\n\n  to3D: function (point) {\n    const v1 = vec3.scale(point[0], this.u)\n    const v2 = vec3.scale(point[1], this.v)\n\n    const v3 = vec3.add(this.planeorigin, v1)\n    const v4 = vec3.add(v3, v2)\n    return v4\n  },\n\n  line3Dto2D: function (line3d) {\n    const a = line3d.point\n    const b = line3d.direction.plus(a)\n    const a2d = this.to2D(a)\n    const b2d = this.to2D(b)\n    return Line2D.fromPoints(a2d, b2d)\n  },\n\n  line2Dto3D: function (line2d) {\n    const a = line2d.origin()\n    const b = line2d.direction().plus(a)\n    const a3d = this.to3D(a)\n    const b3d = this.to3D(b)\n    return Line3D.fromPoints(a3d, b3d)\n  },\n\n  transform: function (matrix4x4) {\n    // todo: this may not work properly in case of mirroring\n    const newplane = this.plane.transform(matrix4x4)\n    const rightpointTransformed = this.u.transform(matrix4x4)\n    const originTransformed = new Vector3D(0, 0, 0).transform(matrix4x4)\n    const newrighthandvector = rightpointTransformed.minus(originTransformed)\n    const newbasis = new OrthoNormalBasis(newplane, newrighthandvector)\n    return newbasis\n  }\n}\n\nmodule.exports = OrthoNormalBasis\n","const { EPS } = require('../../maths/constants')\n\nconst line2 = require('../../maths/line2')\nconst vec2 = require('../../maths/vec2')\nconst OrthoNormalBasis = require('../../maths/OrthoNormalBasis')\nconst interpolateBetween2DPointsForY = require('../../maths/utils/interpolateBetween2DPointsForY')\n\nconst { insertSorted, fnNumberSort } = require('../../utils')\n\nconst poly3 = require('../../geometries/poly3')\n\n/*\n * Retesselation for a set of COPLANAR polygons.\n * @param {poly3[]} sourcepolygons - list of polygons\n * @returns {poly3[]} new set of polygons\n */\nconst reTesselateCoplanarPolygons = (sourcepolygons) => {\n  if (sourcepolygons.length < 2) return sourcepolygons\n\n  const destpolygons = []\n  const numpolygons = sourcepolygons.length\n  const plane = poly3.plane(sourcepolygons[0])\n  const orthobasis = new OrthoNormalBasis(plane)\n  const polygonvertices2d = [] // array of array of Vector2D\n  const polygontopvertexindexes = [] // array of indexes of topmost vertex per polygon\n  const topy2polygonindexes = {}\n  const ycoordinatetopolygonindexes = {}\n\n  const ycoordinatebins = {}\n\n  // convert all polygon vertices to 2D\n  // Make a list of all encountered y coordinates\n  // And build a map of all polygons that have a vertex at a certain y coordinate:\n  const ycoordinateBinningFactor = 1.0 / EPS * 10\n  for (let polygonindex = 0; polygonindex < numpolygons; polygonindex++) {\n    const poly3d = sourcepolygons[polygonindex]\n    let vertices2d = []\n    let numvertices = poly3d.vertices.length\n    let minindex = -1\n    if (numvertices > 0) {\n      let miny\n      let maxy\n      for (let i = 0; i < numvertices; i++) {\n        let pos2d = orthobasis.to2D(poly3d.vertices[i])\n        // perform binning of y coordinates: If we have multiple vertices very\n        // close to each other, give them the same y coordinate:\n        const ycoordinatebin = Math.floor(pos2d[1] * ycoordinateBinningFactor)\n        let newy\n        if (ycoordinatebin in ycoordinatebins) {\n          newy = ycoordinatebins[ycoordinatebin]\n        } else if (ycoordinatebin + 1 in ycoordinatebins) {\n          newy = ycoordinatebins[ycoordinatebin + 1]\n        } else if (ycoordinatebin - 1 in ycoordinatebins) {\n          newy = ycoordinatebins[ycoordinatebin - 1]\n        } else {\n          newy = pos2d[1]\n          ycoordinatebins[ycoordinatebin] = pos2d[1]\n        }\n        pos2d = vec2.fromValues(pos2d[0], newy)\n        vertices2d.push(pos2d)\n        const y = pos2d[1]\n        if ((i === 0) || (y < miny)) {\n          miny = y\n          minindex = i\n        }\n        if ((i === 0) || (y > maxy)) {\n          maxy = y\n        }\n        if (!(y in ycoordinatetopolygonindexes)) {\n          ycoordinatetopolygonindexes[y] = {}\n        }\n        ycoordinatetopolygonindexes[y][polygonindex] = true\n      }\n      if (miny >= maxy) {\n        // degenerate polygon, all vertices have same y coordinate. Just ignore it from now:\n        vertices2d = []\n        numvertices = 0\n        minindex = -1\n      } else {\n        if (!(miny in topy2polygonindexes)) {\n          topy2polygonindexes[miny] = []\n        }\n        topy2polygonindexes[miny].push(polygonindex)\n      }\n    } // if(numvertices > 0)\n    // reverse the vertex order:\n    vertices2d.reverse()\n    minindex = numvertices - minindex - 1\n    polygonvertices2d.push(vertices2d)\n    polygontopvertexindexes.push(minindex)\n  }\n  const ycoordinates = []\n  for (const ycoordinate in ycoordinatetopolygonindexes) ycoordinates.push(ycoordinate)\n  ycoordinates.sort(fnNumberSort)\n\n  // Now we will iterate over all y coordinates, from lowest to highest y coordinate\n  // activepolygons: source polygons that are 'active', i.e. intersect with our y coordinate\n  //   Is sorted so the polygons are in left to right order\n  // Each element in activepolygons has these properties:\n  //        polygonindex: the index of the source polygon (i.e. an index into the sourcepolygons\n  //                      and polygonvertices2d arrays)\n  //        leftvertexindex: the index of the vertex at the left side of the polygon (lowest x)\n  //                         that is at or just above the current y coordinate\n  //        rightvertexindex: dito at right hand side of polygon\n  //        topleft, bottomleft: coordinates of the left side of the polygon crossing the current y coordinate\n  //        topright, bottomright: coordinates of the right hand side of the polygon crossing the current y coordinate\n  let activepolygons = []\n  let prevoutpolygonrow = []\n  for (let yindex = 0; yindex < ycoordinates.length; yindex++) {\n    const newoutpolygonrow = []\n    const ycoordinateasstring = ycoordinates[yindex]\n    const ycoordinate = Number(ycoordinateasstring)\n\n    // update activepolygons for this y coordinate:\n    // - Remove any polygons that end at this y coordinate\n    // - update leftvertexindex and rightvertexindex (which point to the current vertex index\n    //   at the the left and right side of the polygon\n    // Iterate over all polygons that have a corner at this y coordinate:\n    const polygonindexeswithcorner = ycoordinatetopolygonindexes[ycoordinateasstring]\n    for (let activepolygonindex = 0; activepolygonindex < activepolygons.length; ++activepolygonindex) {\n      const activepolygon = activepolygons[activepolygonindex]\n      const polygonindex = activepolygon.polygonindex\n      if (polygonindexeswithcorner[polygonindex]) {\n        // this active polygon has a corner at this y coordinate:\n        const vertices2d = polygonvertices2d[polygonindex]\n        const numvertices = vertices2d.length\n        let newleftvertexindex = activepolygon.leftvertexindex\n        let newrightvertexindex = activepolygon.rightvertexindex\n        // See if we need to increase leftvertexindex or decrease rightvertexindex:\n        while (true) {\n          let nextleftvertexindex = newleftvertexindex + 1\n          if (nextleftvertexindex >= numvertices) nextleftvertexindex = 0\n          if (vertices2d[nextleftvertexindex][1] !== ycoordinate) break\n          newleftvertexindex = nextleftvertexindex\n        }\n        let nextrightvertexindex = newrightvertexindex - 1\n        if (nextrightvertexindex < 0) nextrightvertexindex = numvertices - 1\n        if (vertices2d[nextrightvertexindex][1] === ycoordinate) {\n          newrightvertexindex = nextrightvertexindex\n        }\n        if ((newleftvertexindex !== activepolygon.leftvertexindex) && (newleftvertexindex === newrightvertexindex)) {\n          // We have increased leftvertexindex or decreased rightvertexindex, and now they point to the same vertex\n          // This means that this is the bottom point of the polygon. We'll remove it:\n          activepolygons.splice(activepolygonindex, 1)\n          --activepolygonindex\n        } else {\n          activepolygon.leftvertexindex = newleftvertexindex\n          activepolygon.rightvertexindex = newrightvertexindex\n          activepolygon.topleft = vertices2d[newleftvertexindex]\n          activepolygon.topright = vertices2d[newrightvertexindex]\n          let nextleftvertexindex = newleftvertexindex + 1\n          if (nextleftvertexindex >= numvertices) nextleftvertexindex = 0\n          activepolygon.bottomleft = vertices2d[nextleftvertexindex]\n          let nextrightvertexindex = newrightvertexindex - 1\n          if (nextrightvertexindex < 0) nextrightvertexindex = numvertices - 1\n          activepolygon.bottomright = vertices2d[nextrightvertexindex]\n        }\n      } // if polygon has corner here\n    } // for activepolygonindex\n    let nextycoordinate\n    if (yindex >= ycoordinates.length - 1) {\n      // last row, all polygons must be finished here:\n      activepolygons = []\n      nextycoordinate = null\n    } else { // yindex < ycoordinates.length-1\n      nextycoordinate = Number(ycoordinates[yindex + 1])\n      const middleycoordinate = 0.5 * (ycoordinate + nextycoordinate)\n      // update activepolygons by adding any polygons that start here:\n      const startingpolygonindexes = topy2polygonindexes[ycoordinateasstring]\n      for (const polygonindexKey in startingpolygonindexes) {\n        const polygonindex = startingpolygonindexes[polygonindexKey]\n        const vertices2d = polygonvertices2d[polygonindex]\n        const numvertices = vertices2d.length\n        const topvertexindex = polygontopvertexindexes[polygonindex]\n        // the top of the polygon may be a horizontal line. In that case topvertexindex can point to any point on this line.\n        // Find the left and right topmost vertices which have the current y coordinate:\n        let topleftvertexindex = topvertexindex\n        while (true) {\n          let i = topleftvertexindex + 1\n          if (i >= numvertices) i = 0\n          if (vertices2d[i][1] !== ycoordinate) break\n          if (i === topvertexindex) break // should not happen, but just to prevent endless loops\n          topleftvertexindex = i\n        }\n        let toprightvertexindex = topvertexindex\n        while (true) {\n          let i = toprightvertexindex - 1\n          if (i < 0) i = numvertices - 1\n          if (vertices2d[i][1] !== ycoordinate) break\n          if (i === topleftvertexindex) break // should not happen, but just to prevent endless loops\n          toprightvertexindex = i\n        }\n        let nextleftvertexindex = topleftvertexindex + 1\n        if (nextleftvertexindex >= numvertices) nextleftvertexindex = 0\n        let nextrightvertexindex = toprightvertexindex - 1\n        if (nextrightvertexindex < 0) nextrightvertexindex = numvertices - 1\n        const newactivepolygon = {\n          polygonindex: polygonindex,\n          leftvertexindex: topleftvertexindex,\n          rightvertexindex: toprightvertexindex,\n          topleft: vertices2d[topleftvertexindex],\n          topright: vertices2d[toprightvertexindex],\n          bottomleft: vertices2d[nextleftvertexindex],\n          bottomright: vertices2d[nextrightvertexindex]\n        }\n        insertSorted(activepolygons, newactivepolygon, (el1, el2) => {\n          const x1 = interpolateBetween2DPointsForY(el1.topleft, el1.bottomleft, middleycoordinate)\n          const x2 = interpolateBetween2DPointsForY(el2.topleft, el2.bottomleft, middleycoordinate)\n          if (x1 > x2) return 1\n          if (x1 < x2) return -1\n          return 0\n        })\n      } // for(let polygonindex in startingpolygonindexes)\n    } //  yindex < ycoordinates.length-1\n    // if( (yindex === ycoordinates.length-1) || (nextycoordinate - ycoordinate > EPS) )\n    // FIXME : what ???\n\n    // Now activepolygons is up to date\n    // Build the output polygons for the next row in newoutpolygonrow:\n    for (const activepolygonKey in activepolygons) {\n      const activepolygon = activepolygons[activepolygonKey]\n\n      let x = interpolateBetween2DPointsForY(activepolygon.topleft, activepolygon.bottomleft, ycoordinate)\n      const topleft = vec2.fromValues(x, ycoordinate)\n      x = interpolateBetween2DPointsForY(activepolygon.topright, activepolygon.bottomright, ycoordinate)\n      const topright = vec2.fromValues(x, ycoordinate)\n      x = interpolateBetween2DPointsForY(activepolygon.topleft, activepolygon.bottomleft, nextycoordinate)\n      const bottomleft = vec2.fromValues(x, nextycoordinate)\n      x = interpolateBetween2DPointsForY(activepolygon.topright, activepolygon.bottomright, nextycoordinate)\n      const bottomright = vec2.fromValues(x, nextycoordinate)\n      const outpolygon = {\n        topleft: topleft,\n        topright: topright,\n        bottomleft: bottomleft,\n        bottomright: bottomright,\n        leftline: line2.fromPoints(topleft, bottomleft),\n        rightline: line2.fromPoints(bottomright, topright)\n      }\n      if (newoutpolygonrow.length > 0) {\n        const prevoutpolygon = newoutpolygonrow[newoutpolygonrow.length - 1]\n        const d1 = vec2.distance(outpolygon.topleft, prevoutpolygon.topright)\n        const d2 = vec2.distance(outpolygon.bottomleft, prevoutpolygon.bottomright)\n        if ((d1 < EPS) && (d2 < EPS)) {\n          // we can join this polygon with the one to the left:\n          outpolygon.topleft = prevoutpolygon.topleft\n          outpolygon.leftline = prevoutpolygon.leftline\n          outpolygon.bottomleft = prevoutpolygon.bottomleft\n          newoutpolygonrow.splice(newoutpolygonrow.length - 1, 1)\n        }\n      }\n      newoutpolygonrow.push(outpolygon)\n    } // for(activepolygon in activepolygons)\n    if (yindex > 0) {\n      // try to match the new polygons against the previous row:\n      const prevcontinuedindexes = {}\n      const matchedindexes = {}\n      for (let i = 0; i < newoutpolygonrow.length; i++) {\n        const thispolygon = newoutpolygonrow[i]\n        for (let ii = 0; ii < prevoutpolygonrow.length; ii++) {\n          if (!matchedindexes[ii]) { // not already processed?\n            // We have a match if the sidelines are equal or if the top coordinates\n            // are on the sidelines of the previous polygon\n            const prevpolygon = prevoutpolygonrow[ii]\n            if (vec2.distance(prevpolygon.bottomleft, thispolygon.topleft) < EPS) {\n              if (vec2.distance(prevpolygon.bottomright, thispolygon.topright) < EPS) {\n                // Yes, the top of this polygon matches the bottom of the previous:\n                matchedindexes[ii] = true\n                // Now check if the joined polygon would remain convex:\n                const v1 = line2.direction(thispolygon.leftline)\n                const v2 = line2.direction(prevpolygon.leftline)\n                const d1 = v1[0] - v2[0]\n\n                const v3 = line2.direction(thispolygon.rightline)\n                const v4 = line2.direction(prevpolygon.rightline)\n                const d2 = v3[0] - v4[0]\n\n                const leftlinecontinues = Math.abs(d1) < EPS\n                const rightlinecontinues = Math.abs(d2) < EPS\n                const leftlineisconvex = leftlinecontinues || (d1 >= 0)\n                const rightlineisconvex = rightlinecontinues || (d2 >= 0)\n                if (leftlineisconvex && rightlineisconvex) {\n                  // yes, both sides have convex corners:\n                  // This polygon will continue the previous polygon\n                  thispolygon.outpolygon = prevpolygon.outpolygon\n                  thispolygon.leftlinecontinues = leftlinecontinues\n                  thispolygon.rightlinecontinues = rightlinecontinues\n                  prevcontinuedindexes[ii] = true\n                }\n                break\n              }\n            }\n          } // if(!prevcontinuedindexes[ii])\n        } // for ii\n      } // for i\n      for (let ii = 0; ii < prevoutpolygonrow.length; ii++) {\n        if (!prevcontinuedindexes[ii]) {\n          // polygon ends here\n          // Finish the polygon with the last point(s):\n          const prevpolygon = prevoutpolygonrow[ii]\n          prevpolygon.outpolygon.rightpoints.push(prevpolygon.bottomright)\n          if (vec2.distance(prevpolygon.bottomright, prevpolygon.bottomleft) > EPS) {\n            // polygon ends with a horizontal line:\n            prevpolygon.outpolygon.leftpoints.push(prevpolygon.bottomleft)\n          }\n          // reverse the left half so we get a counterclockwise circle:\n          prevpolygon.outpolygon.leftpoints.reverse()\n          const points2d = prevpolygon.outpolygon.rightpoints.concat(prevpolygon.outpolygon.leftpoints)\n          const vertices3d = points2d.map((point2d) => orthobasis.to3D(point2d))\n          const polygon = poly3.fromPointsAndPlane(vertices3d, plane) // TODO support shared\n          destpolygons.push(polygon)\n        }\n      }\n    } // if(yindex > 0)\n    for (let i = 0; i < newoutpolygonrow.length; i++) {\n      const thispolygon = newoutpolygonrow[i]\n      if (!thispolygon.outpolygon) {\n        // polygon starts here:\n        thispolygon.outpolygon = {\n          leftpoints: [],\n          rightpoints: []\n        }\n        thispolygon.outpolygon.leftpoints.push(thispolygon.topleft)\n        if (vec2.distance(thispolygon.topleft, thispolygon.topright) > EPS) {\n          // we have a horizontal line at the top:\n          thispolygon.outpolygon.rightpoints.push(thispolygon.topright)\n        }\n      } else {\n        // continuation of a previous row\n        if (!thispolygon.leftlinecontinues) {\n          thispolygon.outpolygon.leftpoints.push(thispolygon.topleft)\n        }\n        if (!thispolygon.rightlinecontinues) {\n          thispolygon.outpolygon.rightpoints.push(thispolygon.topright)\n        }\n      }\n    }\n    prevoutpolygonrow = newoutpolygonrow\n  } // for yindex\n  return destpolygons\n}\n\nmodule.exports = reTesselateCoplanarPolygons\n","const geom3 = require('../../geometries/geom3')\nconst poly3 = require('../../geometries/poly3')\n\nconst reTesselateCoplanarPolygons = require('./reTesselateCoplanarPolygons')\n\n// Normals are directional vectors with component values from 0 to 1.0, requiring specialized comparision\n// This EPS is derived from a serieas of tests to determine the optimal precision for comparing coplanar polygons,\n// as provided by the sphere primitive at high segmentation\n// This EPS is for 64 bit Number values\nconst NEPS = 1e-13\n\n// Compare two normals (unit vectors) for equality.\nconst aboutEqualNormals = (a, b) => {\n  return (Math.abs(a[0] - b[0]) <= NEPS && Math.abs(a[1] - b[1]) <= NEPS && Math.abs(a[2] - b[2]) <= NEPS)\n}\n\nconst coplanar = (plane1, plane2) => {\n  // expect the same distance from the origin, within tolerance\n  if (Math.abs(plane1[3] - plane2[3]) < 0.00000015) {\n    return aboutEqualNormals(plane1, plane2)\n  }\n  return false\n}\n\n/*\n  After boolean operations all coplanar polygon fragments are joined by a retesselating\n  operation. geom3.reTesselate(geom).\n  Retesselation is done through a linear sweep over the polygon surface.\n  The sweep line passes over the y coordinates of all vertices in the polygon.\n  Polygons are split at each sweep line, and the fragments are joined horizontally and vertically into larger polygons\n  (making sure that we will end up with convex polygons).\n*/\nconst retessellate = (geometry) => {\n  if (geometry.isRetesselated) {\n    return geometry\n  }\n\n  const polygons = geom3.toPolygons(geometry)\n  const polygonsPerPlane = [] // elements: [plane, [poly3...]]\n  polygons.forEach((polygon) => {\n    const mapping = polygonsPerPlane.find((element) => coplanar(element[0], poly3.plane(polygon)))\n    if (mapping) {\n      const polygons = mapping[1]\n      polygons.push(polygon)\n    } else {\n      polygonsPerPlane.push([poly3.plane(polygon), [polygon]])\n    }\n  })\n\n  let destpolygons = []\n  polygonsPerPlane.forEach((mapping) => {\n    const sourcepolygons = mapping[1]\n    const retesselayedpolygons = reTesselateCoplanarPolygons(sourcepolygons)\n    destpolygons = destpolygons.concat(retesselayedpolygons)\n  })\n\n  const result = geom3.create(destpolygons)\n  result.isRetesselated = true\n\n  return result\n}\n\nmodule.exports = retessellate\n","const flatten = require('../../utils/flatten')\n\nconst retessellate = require('./retessellate')\nconst intersectSub = require('./intersectGeom3Sub')\n\n/*\n * Return a new 3D geometry representing space in both the first geometry and\n * in the subsequent geometries. None of the given geometries are modified.\n * @param {...geom3} geometries - list of 3D geometries\n * @returns {geom3} new 3D geometry\n */\nconst intersect = (...geometries) => {\n  geometries = flatten(geometries)\n\n  let newgeometry = geometries.shift()\n  geometries.forEach((geometry) => {\n    newgeometry = intersectSub(newgeometry, geometry)\n  })\n\n  newgeometry = retessellate(newgeometry)\n  return newgeometry\n}\n\nmodule.exports = intersect\n","const flatten = require('../../utils/flatten')\n\nconst geom3 = require('../../geometries/geom3')\n\nconst measureEpsilon = require('../../measurements/measureEpsilon')\n\nconst fromFakePolygons = require('./fromFakePolygons')\nconst to3DWalls = require('./to3DWalls')\nconst intersectGeom3 = require('./intersectGeom3')\n\n/*\n * Return a new 2D geometry representing space in both the first geometry and\n * in the subsequent geometries. None of the given geometries are modified.\n * @param {...geom2} geometries - list of 2D geometries\n * @returns {geom2} new 2D geometry\n */\nconst intersect = (...geometries) => {\n  geometries = flatten(geometries)\n  const newgeometries = geometries.map((geometry) => to3DWalls({ z0: -1, z1: 1 }, geometry))\n\n  const newgeom3 = intersectGeom3(newgeometries)\n  const epsilon = measureEpsilon(newgeom3)\n\n  return fromFakePolygons(epsilon, geom3.toPolygons(newgeom3))\n}\n\nmodule.exports = intersect\n","const flatten = require('../../utils/flatten')\nconst areAllShapesTheSameType = require('../../utils/areAllShapesTheSameType')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\n\nconst intersectGeom2 = require('./intersectGeom2')\nconst intersectGeom3 = require('./intersectGeom3')\n\n/**\n * Return a new geometry representing space in both the first geometry and\n * all subsequent geometries.\n * The given geometries should be of the same type, either geom2 or geom3.\n *\n * @param {...Object} geometries - list of geometries\n * @returns {geom2|geom3} a new geometry\n * @alias module:modeling/booleans.intersect\n *\n * @example\n * let myshape = intersect(cube({size: [5,5,5]}), cube({size: [5,5,5], center: [5,5,5]}))\n *\n * @example\n * +-------+\n * |       |\n * |   A   |\n * |    +--+----+   =   +--+\n * +----+--+    |       +--+\n *      |   B   |\n *      |       |\n *      +-------+\n */\nconst intersect = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n\n  if (!areAllShapesTheSameType(geometries)) {\n    throw new Error('only intersect of the types are supported')\n  }\n\n  const geometry = geometries[0]\n  // if (path.isA(geometry)) return pathintersect(matrix, geometries)\n  if (geom2.isA(geometry)) return intersectGeom2(geometries)\n  if (geom3.isA(geometry)) return intersectGeom3(geometries)\n  return geometry\n}\n\nmodule.exports = intersect\n","const geom3 = require('../../geometries/geom3')\n\nconst mayOverlap = require('./mayOverlap')\nconst { Tree } = require('./trees')\n\n/*\n * Return a new 3D geometry representing the space in the first geometry but not\n * in the second geometry. None of the given geometries are modified.\n * @param {geom3} geometry1 - a geometry\n * @param {geom3} geometry2 - a geometry\n * @returns {geom3} new 3D geometry\n */\nconst subtractGeom3Sub = (geometry1, geometry2) => {\n  if (!mayOverlap(geometry1, geometry2)) {\n    return geom3.clone(geometry1)\n  }\n\n  const a = new Tree(geom3.toPolygons(geometry1))\n  const b = new Tree(geom3.toPolygons(geometry2))\n\n  a.invert()\n  a.clipTo(b)\n  b.clipTo(a, true)\n  a.addPolygons(b.allPolygons())\n  a.invert()\n\n  const newpolygons = a.allPolygons()\n  return geom3.create(newpolygons)\n}\n\nmodule.exports = subtractGeom3Sub\n","const flatten = require('../../utils/flatten')\n\nconst retessellate = require('./retessellate')\nconst subtractSub = require('./subtractGeom3Sub')\n\n/*\n * Return a new 3D geometry representing space in this geometry but not in the given geometries.\n * Neither this geometry nor the given geometries are modified.\n * @param {...geom3} geometries - list of geometries\n * @returns {geom3} new 3D geometry\n */\nconst subtract = (...geometries) => {\n  geometries = flatten(geometries)\n\n  let newgeometry = geometries.shift()\n  geometries.forEach((geometry) => {\n    newgeometry = subtractSub(newgeometry, geometry)\n  })\n\n  newgeometry = retessellate(newgeometry)\n  return newgeometry\n}\n\nmodule.exports = subtract\n","const flatten = require('../../utils/flatten')\n\nconst geom3 = require('../../geometries/geom3')\n\nconst measureEpsilon = require('../../measurements/measureEpsilon')\n\nconst fromFakePolygons = require('./fromFakePolygons')\nconst to3DWalls = require('./to3DWalls')\nconst subtractGeom3 = require('./subtractGeom3')\n\n/*\n * Return a new 2D geometry representing space in the first geometry but\n * not in the subsequent geometries. None of the given geometries are modified.\n * @param {...geom2} geometries - list of geometries\n * @returns {geom2} new 2D geometry\n */\nconst subtract = (...geometries) => {\n  geometries = flatten(geometries)\n  const newgeometries = geometries.map((geometry) => to3DWalls({ z0: -1, z1: 1 }, geometry))\n\n  const newgeom3 = subtractGeom3(newgeometries)\n  const epsilon = measureEpsilon(newgeom3)\n\n  return fromFakePolygons(epsilon, geom3.toPolygons(newgeom3))\n}\n\nmodule.exports = subtract\n","const flatten = require('../../utils/flatten')\nconst areAllShapesTheSameType = require('../../utils/areAllShapesTheSameType')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\n\nconst subtractGeom2 = require('./subtractGeom2')\nconst subtractGeom3 = require('./subtractGeom3')\n\n/**\n * Return a new geometry representing space in the first geometry but\n * not in all subsequent geometries.\n * The given geometries should be of the same type, either geom2 or geom3.\n *\n * @param {...Object} geometries - list of geometries\n * @returns {geom2|geom3} a new geometry\n * @alias module:modeling/booleans.subtract\n *\n * @example\n * let myshape = subtract(cubiod({size: [5,5,5]}), cubiod({size: [5,5,5], center: [5,5,5]}))\n *\n * @example\n * +-------+            +-------+\n * |       |            |       |\n * |   A   |            |       |\n * |    +--+----+   =   |    +--+\n * +----+--+    |       +----+\n *      |   B   |\n *      |       |\n *      +-------+\n */\nconst subtract = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n\n  if (!areAllShapesTheSameType(geometries)) {\n    throw new Error('only subtract of the types are supported')\n  }\n\n  const geometry = geometries[0]\n  // if (path.isA(geometry)) return pathsubtract(matrix, geometries)\n  if (geom2.isA(geometry)) return subtractGeom2(geometries)\n  if (geom3.isA(geometry)) return subtractGeom3(geometries)\n  return geometry\n}\n\nmodule.exports = subtract\n","const geom3 = require('../../geometries/geom3')\n\nconst mayOverlap = require('./mayOverlap')\nconst { Tree } = require('./trees')\n\n/*\n * Return a new 3D geometry representing the space in the given geometries.\n * @param {geom3} geometry1 - geometry to union\n * @param {geom3} geometry2 - geometry to union\n * @returns {goem3} new 3D geometry\n */\nconst unionSub = (geometry1, geometry2) => {\n  if (!mayOverlap(geometry1, geometry2)) {\n    return unionForNonIntersecting(geometry1, geometry2)\n  }\n\n  const a = new Tree(geom3.toPolygons(geometry1))\n  const b = new Tree(geom3.toPolygons(geometry2))\n\n  a.clipTo(b, false)\n  // b.clipTo(a, true); // ERROR: doesn't work\n  b.clipTo(a)\n  b.invert()\n  b.clipTo(a)\n  b.invert()\n\n  const newpolygons = a.allPolygons().concat(b.allPolygons())\n  const result = geom3.create(newpolygons)\n  return result\n}\n\n// Like union, but when we know that the two solids are not intersecting\n// Do not use if you are not completely sure that the solids do not intersect!\nconst unionForNonIntersecting = (geometry1, geometry2) => {\n  let newpolygons = geom3.toPolygons(geometry1)\n  newpolygons = newpolygons.concat(geom3.toPolygons(geometry2))\n  return geom3.create(newpolygons)\n}\n\nmodule.exports = unionSub\n","const flatten = require('../../utils/flatten')\n\nconst retessellate = require('./retessellate')\nconst unionSub = require('./unionGeom3Sub')\n\n/*\n * Return a new 3D geometry representing the space in the given 3D geometries.\n * @param {...objects} geometries - list of geometries to union\n * @returns {geom3} new 3D geometry\n */\nconst union = (...geometries) => {\n  geometries = flatten(geometries)\n\n  // combine geometries in a way that forms a balanced binary tree pattern\n  let i\n  for (i = 1; i < geometries.length; i += 2) {\n    geometries.push(unionSub(geometries[i - 1], geometries[i]))\n  }\n  let newgeometry = geometries[i - 1]\n  newgeometry = retessellate(newgeometry)\n  return newgeometry\n}\n\nmodule.exports = union\n","const flatten = require('../../utils/flatten')\n\nconst geom3 = require('../../geometries/geom3')\n\nconst measureEpsilon = require('../../measurements/measureEpsilon')\n\nconst fromFakePolygons = require('./fromFakePolygons')\nconst to3DWalls = require('./to3DWalls')\nconst unionGeom3 = require('./unionGeom3')\n\n/*\n * Return a new 2D geometry representing the total space in the given 2D geometries.\n * @param {...geom2} geometries - list of 2D geometries to union\n * @returns {geom2} new 2D geometry\n */\nconst union = (...geometries) => {\n  geometries = flatten(geometries)\n  const newgeometries = geometries.map((geometry) => to3DWalls({ z0: -1, z1: 1 }, geometry))\n\n  const newgeom3 = unionGeom3(newgeometries)\n  const epsilon = measureEpsilon(newgeom3)\n\n  return fromFakePolygons(epsilon, geom3.toPolygons(newgeom3))\n}\n\nmodule.exports = union\n","const flatten = require('../../utils/flatten')\nconst areAllShapesTheSameType = require('../../utils/areAllShapesTheSameType')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\n\nconst unionGeom2 = require('./unionGeom2')\nconst unionGeom3 = require('./unionGeom3')\n\n/**\n * Return a new geometry representing the total space in the given geometries.\n * The given geometries should be of the same type, either geom2 or geom3.\n *\n * @param {...Object} geometries - list of geometries\n * @returns {geom2|geom3} a new geometry\n * @alias module:modeling/booleans.union\n *\n * @example\n * let myshape = union(cube({size: [5,5,5]}), cube({size: [5,5,5], center: [5,5,5]}))\n *\n * @example\n * +-------+            +-------+\n * |       |            |       |\n * |   A   |            |       |\n * |    +--+----+   =   |       +----+\n * +----+--+    |       +----+       |\n *      |   B   |            |       |\n *      |       |            |       |\n *      +-------+            +-------+\n */\nconst union = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n\n  if (!areAllShapesTheSameType(geometries)) {\n    throw new Error('only unions of the same type are supported')\n  }\n\n  const geometry = geometries[0]\n  // if (path.isA(geometry)) return pathunion(matrix, geometries)\n  if (geom2.isA(geometry)) return unionGeom2(geometries)\n  if (geom3.isA(geometry)) return unionGeom3(geometries)\n  return geometry\n}\n\nmodule.exports = union\n","/**\n * All shapes (primitives or the results of operations) can be passed to boolean functions\n * to perform logical operations, e.g. remove a hole from a board.\n * In all cases, the function returns the results, and never changes the original shapes.\n * @module modeling/booleans\n * @example\n * const { intersect, subtract, union } = require('@jscad/modeling').booleans\n */\nmodule.exports = {\n  intersect: require('./intersect'),\n  subtract: require('./subtract'),\n  union: require('./union')\n}\n","const { EPS } = require('../../maths/constants')\n\nconst intersect = require('../../maths/utils/intersect')\nconst line2 = require('../../maths/line2')\nconst vec2 = require('../../maths/vec2')\nconst area = require('../../maths/utils/area')\n\n/*\n * Create a set of offset points from the given points using the given options (if any).\n * @param {Object} options - options for offset\n * @param {Float} [options.delta=1] - delta of offset (+ to exterior, - from interior)\n * @param {String} [options.corners='edge'] - type corner to create during of expansion; edge, chamfer, round\n * @param {Integer} [options.segments=16] - number of segments when creating round corners\n * @param {Integer} [options.closed=false] - is the last point connected back to the first point?\n * @param {Array} points - array of 2D points\n * @returns {Array} new set of offset points, plus points for each rounded corner\n */\nconst offsetFromPoints = (options, points) => {\n  const defaults = {\n    delta: 1,\n    corners: 'edge',\n    closed: false,\n    segments: 16\n  }\n  let { delta, corners, closed, segments } = Object.assign({ }, defaults, options)\n\n  if (Math.abs(delta) < EPS) return points\n\n  let rotation = options.closed ? area(points) : 1.0 // + counter clockwise, - clockwise\n  if (rotation === 0) rotation = 1.0\n\n  // use right hand normal?\n  const orientation = ((rotation > 0) && (delta >= 0)) || ((rotation < 0) && (delta < 0))\n  delta = Math.abs(delta) // sign is no longer required\n\n  let previousSegment = null\n  const newPoints = []\n  const newCorners = []\n  const n = points.length\n  for (let i = 0; i < n; i++) {\n    const j = (i + 1) % n\n    const p0 = points[i]\n    const p1 = points[j]\n    // calculate the unit normal\n    const of = orientation ? vec2.normal(vec2.subtract(p0, p1)) : vec2.normal(vec2.subtract(p1, p0))\n    vec2.normalize(of, of)\n    // calculate the offset vector\n    vec2.scale(of, delta, of)\n    // calculate the new points (edge)\n    const n0 = vec2.add(p0, of)\n    const n1 = vec2.add(p1, of)\n\n    const currentSegment = [n0, n1]\n    if (previousSegment != null) {\n      if (closed || (!closed && j !== 0)) {\n        // check for intersection of new line segments\n        const ip = intersect(previousSegment[0], previousSegment[1], currentSegment[0], currentSegment[1])\n        if (ip) {\n          // adjust the previous points\n          newPoints.pop()\n          // adjust current points\n          currentSegment[0] = ip\n        } else {\n          newCorners.push({ c: p0, s0: previousSegment, s1: currentSegment })\n        }\n      }\n    }\n    previousSegment = [n0, n1]\n\n    if (j === 0 && !closed) continue\n\n    newPoints.push(currentSegment[0])\n    newPoints.push(currentSegment[1])\n  }\n  // complete the closure if required\n  if (closed && previousSegment != null) {\n    // check for intersection of closing line segments\n    const n0 = newPoints[0]\n    const n1 = newPoints[1]\n    const ip = intersect(previousSegment[0], previousSegment[1], n0, n1)\n    if (ip) {\n      // adjust the previous points\n      newPoints[0] = ip\n      newPoints.pop()\n    } else {\n      const p0 = points[0]\n      const cursegment = [n0, n1]\n      newCorners.push({ c: p0, s0: previousSegment, s1: cursegment })\n    }\n  }\n\n  // generate corners if necessary\n\n  if (corners === 'edge') {\n    // create edge corners\n    newCorners.forEach((corner) => {\n      const line0 = line2.fromPoints(corner.s0[0], corner.s0[1])\n      const line1 = line2.fromPoints(corner.s1[0], corner.s1[1])\n      const ip = line2.intersectPointOfLines(line0, line1)\n      if (Number.isFinite(ip[0]) && Number.isFinite(ip[1])) {\n        const p0 = corner.s0[1]\n        let i = newPoints.findIndex((point) => vec2.equals(p0, point))\n        i = (i + 1) % newPoints.length\n        newPoints.splice(i, 0, ip)\n      } else {\n        // paralell segments, drop one\n        const p0 = corner.s1[0]\n        const i = newPoints.findIndex((point) => vec2.equals(p0, point))\n        newPoints.splice(i, 1)\n      }\n    })\n  }\n\n  if (corners === 'round') {\n    // create rounded corners\n    let cornersegments = Math.floor(segments / 4)\n    newCorners.forEach((corner) => {\n      // calculate angle of rotation\n      let rotation = vec2.angle(vec2.subtract(corner.s1[0], corner.c))\n      rotation -= vec2.angle(vec2.subtract(corner.s0[1], corner.c))\n      if (orientation && rotation < 0) {\n        rotation = rotation + Math.PI\n        if (rotation < 0) rotation = rotation + Math.PI\n      }\n      if ((!orientation) && rotation > 0) {\n        rotation = rotation - Math.PI\n        if (rotation > 0) rotation = rotation - Math.PI\n      }\n\n      if (rotation !== 0.0) {\n        // generate the segments\n        cornersegments = Math.floor(segments * (Math.abs(rotation) / (2 * Math.PI)))\n        const step = rotation / cornersegments\n        const start = vec2.angle(vec2.subtract(corner.s0[1], corner.c))\n        const cornerpoints = []\n        for (let i = 1; i < cornersegments; i++) {\n          const radians = start + (step * i)\n          const point = vec2.add(corner.c, vec2.scale(delta, vec2.fromAngleRadians(radians)))\n          cornerpoints.push(point)\n        }\n        if (cornerpoints.length > 0) {\n          const p0 = corner.s0[1]\n          let i = newPoints.findIndex((point) => vec2.equals(p0, point))\n          i = (i + 1) % newPoints.length\n          newPoints.splice(i, 0, ...cornerpoints)\n        }\n      } else {\n        // paralell segments, drop one\n        const p0 = corner.s1[0]\n        const i = newPoints.findIndex((point) => vec2.equals(p0, point))\n        newPoints.splice(i, 1)\n      }\n    })\n  }\n  return newPoints\n}\n\nmodule.exports = offsetFromPoints\n","const geom2 = require('../../geometries/geom2')\n\nconst offsetFromPoints = require('./offsetFromPoints')\n\n/*\n * Expand the given geometry (geom2) using the given options (if any).\n * @param {Object} options - options for expand\n * @param {Number} [options.delta=1] - delta (+/-) of expansion\n * @param {String} [options.corners='edge'] - type corner to create during of expansion; edge, chamfer, round\n * @param {Integer} [options.segments=16] - number of segments when creating round corners\n * @param {geom2} geometry - the geometry to expand\n * @returns {geom2} expanded geometry\n */\nconst expandGeom2 = (options, geometry) => {\n  const defaults = {\n    delta: 1,\n    corners: 'edge',\n    segments: 16\n  }\n  const { delta, corners, segments } = Object.assign({ }, defaults, options)\n\n  if (!(corners === 'edge' || corners === 'chamfer' || corners === 'round')) {\n    throw new Error('corners must be \"edge\", \"chamfer\", or \"round\"')\n  }\n\n  // convert the geometry to outlines, and generate offsets from each\n  const outlines = geom2.toOutlines(geometry)\n  const newoutlines = outlines.map((outline) => {\n    options = {\n      delta,\n      corners,\n      closed: true,\n      segments\n    }\n    return offsetFromPoints(options, outline)\n  })\n\n  // create a composite geometry from the new outlines\n  const allsides = newoutlines.reduce((sides, newoutline) => sides.concat(geom2.toSides(geom2.fromPoints(newoutline))), [])\n  return geom2.create(allsides)\n}\n\nmodule.exports = expandGeom2\n","const mat4 = require('../../maths/mat4')\nconst vec3 = require('../../maths/vec3')\n\nconst geom3 = require('../../geometries/geom3')\nconst poly3 = require('../../geometries/poly3')\n\n// Extrude a polygon in the direction of the offsetvector.\n// Returns (geom3) a new geometry\nconst extrudePolygon = (offsetvector, polygon1) => {\n  const direction = vec3.dot(poly3.plane(polygon1), offsetvector)\n  if (direction > 0) {\n    polygon1 = poly3.invert(polygon1)\n  }\n\n  const newpolygons = [polygon1]\n\n  const polygon2 = poly3.transform(mat4.fromTranslation(offsetvector), polygon1)\n  const numvertices = polygon1.vertices.length\n  for (let i = 0; i < numvertices; i++) {\n    const sidefacepoints = []\n    const nexti = (i < (numvertices - 1)) ? i + 1 : 0\n    sidefacepoints.push(polygon1.vertices[i])\n    sidefacepoints.push(polygon2.vertices[i])\n    sidefacepoints.push(polygon2.vertices[nexti])\n    sidefacepoints.push(polygon1.vertices[nexti])\n    const sidefacepolygon = poly3.fromPoints(sidefacepoints)\n    newpolygons.push(sidefacepolygon)\n  }\n  newpolygons.push(poly3.invert(polygon2))\n\n  return geom3.create(newpolygons)\n}\n\nmodule.exports = extrudePolygon\n","const { EPS } = require('../../maths/constants')\n\nconst mat4 = require('../../maths/mat4')\nconst vec3 = require('../../maths/vec3')\n\nconst fnNumberSort = require('../../utils/fnNumberSort')\n\nconst geom3 = require('../../geometries/geom3')\nconst poly3 = require('../../geometries/poly3')\n\nconst sphere = require('../../primitives/sphere')\n\nconst retessellate = require('../booleans/retessellate')\nconst unionGeom3Sub = require('../booleans/unionGeom3Sub')\n\nconst extrudePolygon = require('./extrudePolygon')\n\nconst mapPlaneToVertex = (map, vertex, plane) => {\n  const i = map.findIndex((item) => vec3.equals(item[0], vertex))\n  if (i < 0) {\n    const entry = [vertex, [plane]]\n    map.push(entry)\n    return map.length\n  }\n  const planes = map[i][1]\n  planes.push(plane)\n  return i\n}\n\nconst mapPlaneToEdge = (map, edge, plane) => {\n  const i = map.findIndex((item) => (vec3.equals(item[0], edge[0]) && vec3.equals(item[1], edge[1])) || (vec3.equals(item[0], edge[1]) && vec3.equals(item[1], edge[0])))\n  if (i < 0) {\n    const entry = [edge, [plane]]\n    map.push(entry)\n    return map.length\n  }\n  const planes = map[i][1]\n  planes.push(plane)\n  return i\n}\n\nconst addUniqueAngle = (map, angle) => {\n  const i = map.findIndex((item) => item === angle)\n  if (i < 0) {\n    map.push(angle)\n    return map.length\n  }\n  return i\n}\n\n/*\n * Create the expanded shell of the solid:\n * All faces are extruded to 2 times delta\n * Cylinders are constructed around every side\n * Spheres are placed on every vertex\n * the result is a true expansion of the solid\n * @param  {Number} delta\n * @param  {Integer} segments\n */\nconst expandShell = (options, geometry) => {\n  const defaults = {\n    delta: 1,\n    segments: 12\n  }\n  const { delta, segments } = Object.assign({ }, defaults, options)\n\n  let result = geom3.create()\n  const vertices2planes = [] // contents: [vertex, [plane, ...]]\n  const edges2planes = [] // contents: [[vertex, vertex], [plane, ...]]\n\n  // loop through the polygons\n  // - extruded the polygon, and add to the composite result\n  // - add the plane to the unique vertice map\n  // - add the plane to the unique edge map\n  const polygons = geom3.toPolygons(geometry)\n  polygons.forEach((polygon) => {\n    const extrudevector = vec3.scale(2 * delta, poly3.plane(polygon))\n    const translatedpolygon = poly3.transform(mat4.fromTranslation(vec3.scale(-0.5, extrudevector)), polygon)\n    const extrudedface = extrudePolygon(extrudevector, translatedpolygon)\n    result = unionGeom3Sub(result, extrudedface)\n\n    const vertices = polygon.vertices\n    for (let i = 0; i < vertices.length; i++) {\n      mapPlaneToVertex(vertices2planes, vertices[i], poly3.plane(polygon))\n      const j = (i + 1) % vertices.length\n      const edge = [vertices[i], vertices[j]]\n      mapPlaneToEdge(edges2planes, edge, poly3.plane(polygon))\n    }\n  })\n\n  // now construct a cylinder on every side\n  // The cylinder is always an approximation of a true cylinder, having polygons\n  // around the sides. We will make sure though that the cylinder will have an edge at every\n  // face that touches this side. This ensures that we will get a smooth fill even\n  // if two edges are at, say, 10 degrees and the segments is low.\n  edges2planes.forEach((item) => {\n    const edge = item[0]\n    const planes = item[1]\n    const startpoint = edge[0]\n    const endpoint = edge[1]\n\n    // our x,y and z vectors:\n    const zbase = vec3.unit(vec3.subtract(endpoint, startpoint))\n    const xbase = planes[0]\n    const ybase = vec3.cross(xbase, zbase)\n\n    // make a list of angles that the cylinder should traverse:\n    let angles = []\n\n    // first of all equally spaced around the cylinder:\n    for (let i = 0; i < segments; i++) {\n      addUniqueAngle(angles, (i * Math.PI * 2 / segments))\n    }\n\n    // and also at every normal of all touching planes:\n    for (let i = 0, iMax = planes.length; i < iMax; i++) {\n      const planenormal = planes[i]\n      const si = vec3.dot(ybase, planenormal)\n      const co = vec3.dot(xbase, planenormal)\n      let angle = Math.atan2(si, co)\n\n      if (angle < 0) angle += Math.PI * 2\n      addUniqueAngle(angles, angle)\n      angle = Math.atan2(-si, -co)\n      if (angle < 0) angle += Math.PI * 2\n      addUniqueAngle(angles, angle)\n    }\n\n    // this will result in some duplicate angles but we will get rid of those later.\n    angles = angles.sort(fnNumberSort)\n\n    // Now construct the cylinder by traversing all angles:\n    const numangles = angles.length\n    let prevp1\n    let prevp2\n    const startfacevertices = []\n    const endfacevertices = []\n    const polygons = []\n    for (let i = -1; i < numangles; i++) {\n      const angle = angles[(i < 0) ? (i + numangles) : i]\n      const si = Math.sin(angle)\n      const co = Math.cos(angle)\n      const p = vec3.add(vec3.scale(co * delta, xbase), vec3.scale(si * delta, ybase))\n      const p1 = vec3.add(startpoint, p)\n      const p2 = vec3.add(endpoint, p)\n      let skip = false\n      if (i >= 0) {\n        if (vec3.distance(p1, prevp1) < EPS) {\n          skip = true\n        }\n      }\n      if (!skip) {\n        if (i >= 0) {\n          startfacevertices.push(p1)\n          endfacevertices.push(p2)\n          const points = [prevp2, p2, p1, prevp1]\n          const polygon = poly3.fromPoints(points)\n          polygons.push(polygon)\n        }\n        prevp1 = p1\n        prevp2 = p2\n      }\n    }\n    endfacevertices.reverse()\n    polygons.push(poly3.fromPoints(startfacevertices))\n    polygons.push(poly3.fromPoints(endfacevertices))\n\n    const cylinder = geom3.create(polygons)\n    result = unionGeom3Sub(result, cylinder)\n  })\n\n  // build spheres at each unique vertex\n  // We will try to set the x and z axis to the normals of 2 planes\n  // This will ensure that our sphere tesselation somewhat matches 2 planes\n  vertices2planes.forEach((item) => {\n    const vertex = item[0]\n    const planes = item[1]\n    // use the first normal to be the x axis of our sphere:\n    const xaxis = planes[0]\n    // and find a suitable z axis. We will use the normal which is most perpendicular to the x axis:\n    let bestzaxis = null\n    let bestzaxisorthogonality = 0\n    for (let i = 1; i < planes.length; i++) {\n      const normal = planes[i]\n      const cross = vec3.cross(xaxis, normal)\n      const crosslength = vec3.length(cross)\n      if (crosslength > 0.05) {\n        if (crosslength > bestzaxisorthogonality) {\n          bestzaxisorthogonality = crosslength\n          bestzaxis = normal\n        }\n      }\n    }\n    if (!bestzaxis) {\n      bestzaxis = vec3.orthogonal(xaxis)\n    }\n    const yaxis = vec3.unit(vec3.cross(xaxis, bestzaxis))\n    const zaxis = vec3.cross(yaxis, xaxis)\n    const corner = sphere({\n      center: [vertex[0], vertex[1], vertex[2]],\n      radius: delta,\n      segments: segments,\n      axes: [xaxis, yaxis, zaxis]\n    })\n    result = unionGeom3Sub(result, corner)\n  })\n  return retessellate(result)\n}\n\nmodule.exports = expandShell\n","const geom3 = require('../../geometries/geom3')\n\nconst union = require('../booleans/union')\n\nconst expandShell = require('./expandShell')\n\n/*\n * Expand the given geometry (geom3) using the given options (if any).\n * @param {Object} options - options for expand\n * @param {Number} [options.delta=1] - delta (+/-) of expansion\n * @param {String} [options.corners='round'] - type corner to create during of expansion; round\n * @param {Integer} [options.segments=12] - number of segments when creating round corners\n * @param {geom3} geometry - the geometry to expand\n * @returns {geom3} expanded geometry\n */\nconst expandGeom3 = (options, geometry) => {\n  const defaults = {\n    delta: 1,\n    corners: 'round',\n    segments: 12\n  }\n  const { delta, corners, segments } = Object.assign({ }, defaults, options)\n\n  if (!(corners === 'round')) {\n    throw new Error('corners must be \"round\" for 3D geometries')\n  }\n\n  const polygons = geom3.toPolygons(geometry)\n  if (polygons.length === 0) throw new Error('the given geometry cannot be empty')\n\n  options = { delta, corners, segments }\n  const expanded = expandShell(options, geometry)\n  return union(geometry, expanded)\n}\n\nmodule.exports = expandGeom3\n","const area = require('../../maths/utils/area')\n\nconst vec2 = require('../../maths/vec2')\n\nconst geom2 = require('../../geometries/geom2')\nconst path2 = require('../../geometries/path2')\n\nconst offsetFromPoints = require('./offsetFromPoints')\n\nconst createGeometryFromClosedOffsets = (paths) => {\n  let { external, internal } = paths\n  if (area(external) < 0) {\n    external = external.reverse()\n  } else {\n    internal = internal.reverse()\n  }\n  // NOTE: creating path2 from the points ensures proper closure\n  const externalPath = path2.fromPoints({ closed: true }, external)\n  const internalPath = path2.fromPoints({ closed: true }, internal)\n  const externalSides = geom2.toSides(geom2.fromPoints(path2.toPoints(externalPath)))\n  const internalSides = geom2.toSides(geom2.fromPoints(path2.toPoints(internalPath)))\n  externalSides.push(...internalSides)\n  return geom2.create(externalSides)\n}\n\nconst createGeometryFromExpandedOpenPath = (paths, segments, corners, delta) => {\n  const { points, external, internal } = paths\n  const capSegments = Math.floor(segments / 2) // rotation is 180 degrees\n  const e2iCap = []\n  const i2eCap = []\n  if (corners === 'round' && capSegments > 0) {\n    // added round caps to the geometry\n    const step = Math.PI / capSegments\n    const eCorner = points[points.length - 1]\n    const e2iStart = vec2.angle(vec2.subtract(external[external.length - 1], eCorner))\n    const iCorner = points[0]\n    const i2eStart = vec2.angle(vec2.subtract(internal[0], iCorner))\n    for (let i = 1; i < capSegments; i++) {\n      let radians = e2iStart + (step * i)\n      let point = vec2.add(eCorner, vec2.scale(delta, vec2.fromAngleRadians(radians)))\n      e2iCap.push(point)\n\n      radians = i2eStart + (step * i)\n      point = vec2.add(iCorner, vec2.scale(delta, vec2.fromAngleRadians(radians)))\n      i2eCap.push(point)\n    }\n  }\n  const allPoints = []\n  allPoints.push(...external, ...e2iCap, ...internal.reverse(), ...i2eCap)\n  return geom2.fromPoints(allPoints)\n}\n\n/*\n * Expand the given geometry (path2) using the given options (if any).\n * @param {Object} options - options for expand\n * @param {Number} [options.delta=1] - delta (+) of expansion\n * @param {String} [options.corners='edge'] - type corner to create during of expansion; edge, chamfer, round\n * @param {Integer} [options.segments=16] - number of segments when creating round corners\n * @param {path2} geometry - the geometry to expand\n * @returns {geom2} expanded geometry\n */\nconst expandPath2 = (options, geometry) => {\n  const defaults = {\n    delta: 1,\n    corners: 'edge',\n    segments: 16\n  }\n\n  options = Object.assign({ }, defaults, options)\n  const { delta, corners, segments } = options\n\n  if (delta <= 0) throw new Error('the given delta must be positive for paths')\n\n  if (!(corners === 'edge' || corners === 'chamfer' || corners === 'round')) {\n    throw new Error('corners must be \"edge\", \"chamfer\", or \"round\"')\n  }\n\n  const closed = geometry.isClosed\n  const points = path2.toPoints(geometry)\n  if (points.length === 0) throw new Error('the given geometry cannot be empty')\n\n  const paths = {\n    points: points,\n    external: offsetFromPoints({ delta, corners, segments, closed }, points),\n    internal: offsetFromPoints({ delta: -delta, corners, segments, closed }, points)\n  }\n\n  if (geometry.isClosed) {\n    return createGeometryFromClosedOffsets(paths)\n  } else {\n    return createGeometryFromExpandedOpenPath(paths, segments, corners, delta)\n  }\n}\n\nmodule.exports = expandPath2\n","const flatten = require('../../utils/flatten')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\nconst expandGeom2 = require('./expandGeom2')\nconst expandGeom3 = require('./expandGeom3')\nconst expandPath2 = require('./expandPath2')\n\n/**\n * Expand the given geometry using the given options.\n * Note: Contract is expand using a negative delta.\n * @param {Object} options - options for expand\n * @param {Number} [options.delta=1] - delta (+/-) of expansion\n * @param {String} [options.corners='edge'] - type of corner to create during of expansion; edge, chamfer, round\n * @param {Integer} [options.segments=16] - number of segments when creating round corners\n * @param {...Objects} geometry - the list of geometry to expand\n * @return {Object|Array} new geometry, or list of new geometries\n * @alias module:modeling/expansions.expand\n *\n * @example\n * let newarc = expand({delta: 5, corners: 'edge'}, arc({}))\n * let newsquare = expand({delta: 5, corners: 'chamfer'}, square({size: 30}))\n * let newsphere = expand({delta: 2, corners: 'round'}, cuboid({size: [20, 25, 5]}))\n */\nconst expand = (options, ...objects) => {\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  const results = objects.map((object) => {\n    if (path2.isA(object)) return expandPath2(options, object)\n    if (geom2.isA(object)) return expandGeom2(options, object)\n    if (geom3.isA(object)) return expandGeom3(options, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = expand\n","const geom2 = require('../../geometries/geom2')\nconst poly2 = require('../../geometries/poly2')\n\nconst offsetFromPoints = require('./offsetFromPoints')\n\n/*\n * Create a offset geometry from the given geom2 using the given options (if any).\n * @param {Object} options - options for offset\n * @param {Float} [options.delta=1] - delta of offset (+ to exterior, - from interior)\n * @param {String} [options.corners='edge'] - type corner to create during of expansion; edge, chamfer, round\n * @param {Integer} [options.segments=16] - number of segments when creating round corners\n * @param {geom2} geometry - geometry from which to create the offset\n * @returns {geom2} offset geometry, plus rounded corners\n */\nconst offsetGeom2 = (options, geometry) => {\n  const defaults = {\n    delta: 1,\n    corners: 'edge',\n    segments: 0\n  }\n  const { delta, corners, segments } = Object.assign({ }, defaults, options)\n\n  if (!(corners === 'edge' || corners === 'chamfer' || corners === 'round')) {\n    throw new Error('corners must be \"edge\", \"chamfer\", or \"round\"')\n  }\n\n  // convert the geometry to outlines, and generate offsets from each\n  const outlines = geom2.toOutlines(geometry)\n  const newoutlines = outlines.map((outline) => {\n    const level = outlines.reduce((acc, polygon) => acc + poly2.arePointsInside(outline, poly2.create(polygon)), 0)\n    const outside = (level % 2) === 0\n\n    options = {\n      delta: outside ? delta : -delta,\n      corners,\n      closed: true,\n      segments\n    }\n    return offsetFromPoints(options, outline)\n  })\n\n  // create a composite geometry from the new outlines\n  const allsides = newoutlines.reduce((sides, newoutline) => sides.concat(geom2.toSides(geom2.fromPoints(newoutline))), [])\n  return geom2.create(allsides)\n}\n\nmodule.exports = offsetGeom2\n","const path2 = require('../../geometries/path2')\n\nconst offsetFromPoints = require('./offsetFromPoints')\n\n/*\n * Create a offset geometry from the given path using the given options (if any).\n * @param {Object} options - options for offset\n * @param {Float} [options.delta=1] - delta of offset (+ to exterior, - from interior)\n * @param {String} [options.corners='edge'] - type corner to create during of expansion; edge, chamfer, round\n * @param {Integer} [options.segments=16] - number of segments when creating round corners\n * @param {path2} geometry - geometry from which to create the offset\n * @returns {path2} offset geometry, plus rounded corners\n */\nconst offsetPath2 = (options, geometry) => {\n  const defaults = {\n    delta: 1,\n    corners: 'edge',\n    closed: geometry.isClosed,\n    segments: 16\n  }\n  const { delta, corners, closed, segments } = Object.assign({ }, defaults, options)\n\n  if (!(corners === 'edge' || corners === 'chamfer' || corners === 'round')) {\n    throw new Error('corners must be \"edge\", \"chamfer\", or \"round\"')\n  }\n\n  options = { delta, corners, closed, segments }\n  const newpoints = offsetFromPoints(options, path2.toPoints(geometry))\n  return path2.fromPoints({ closed: closed }, newpoints)\n}\n\nmodule.exports = offsetPath2\n","const flatten = require('../../utils/flatten')\n\nconst geom2 = require('../../geometries/geom2')\nconst path2 = require('../../geometries/path2')\n\nconst offsetGeom2 = require('./offsetGeom2')\nconst offsetPath2 = require('./offsetPath2')\n\n/**\n * Create offset geometry from the given geometry using the given options.\n * @param {Object} options - options for offset\n * @param {Float} [options.delta=1] - delta of offset (+ to exterior, - from interior)\n * @param {String} [options.corners='edge'] - type corner to create during of expansion; edge, chamfer, round\n * @param {Integer} [options.segments=16] - number of segments when creating round corners\n * @param {...Object} geometry - the list of geometry to offset\n * @return {Object|Array} new geometry, or list of new geometries\n * @alias module:modeling/expansions.offset\n *\n * @example\n * let small = offset({ delta: -4, corners: 'chamfer' }, square({size: 40})) // contract\n */\nconst offset = (options, ...objects) => {\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  const results = objects.map((object) => {\n    if (path2.isA(object)) return offsetPath2(options, object)\n    if (geom2.isA(object)) return offsetGeom2(options, object)\n    // if (geom3.isA(object)) return geom3.transform(matrix, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = offset\n","/**\n * All shapes (primitives or the results of operations) can be expanded (or contracted.)\n * In all cases, the function returns the results, and never changes the original shapes.\n * @module modeling/expansions\n * @example\n * const { expand, offset } = require('@jscad/modeling').expansions\n */\nmodule.exports = {\n  expand: require('./expand'),\n  offset: require('./offset')\n}\n","const mat4 = require('../../maths/mat4')\nconst vec3 = require('../../maths/vec3')\n\nconst geom2 = require('../../geometries/geom2')\n\nconst slice = require('./slice')\n\nconst extrudeFromSlices = require('./extrudeFromSlices')\n\n/*\n * Extrude the given geometry using the given options.\n *\n * @param {Object} [options] - options for extrude\n * @param {Array} [options.offset] - the direction of the extrusion as a 3D vector\n * @param {Number} [options.twistAngle] - the final rotation (RADIANS) about the origin\n * @param {Integer} [options.twistSteps] - the number of steps created to produce the twist (if any)\n * @param {geom2} geometry - the geometry to extrude\n * @returns {geom3} the extruded 3D geometry\n*/\nconst extrudeGeom2 = (options, geometry) => {\n  const defaults = {\n    offset: [0, 0, 1],\n    twistAngle: 0,\n    twistSteps: 12\n  }\n  let { offset, twistAngle, twistSteps } = Object.assign({ }, defaults, options)\n\n  if (twistSteps < 1) throw new Error('twistSteps must be 1 or more')\n\n  if (twistAngle === 0) {\n    twistSteps = 1\n  }\n\n  // convert to vector in order to perform transforms\n  const offsetv = vec3.fromArray(offset)\n\n  const baseSides = geom2.toSides(geometry)\n  if (baseSides.length === 0) throw new Error('the given geometry cannot be empty')\n\n  const baseSlice = slice.fromSides(baseSides)\n  if (offsetv[2] < 0) slice.reverse(baseSlice, baseSlice)\n\n  const createTwist = (progress, index, base) => {\n    const Zrotation = index / twistSteps * twistAngle\n    const Zoffset = vec3.scale(index / twistSteps, offsetv)\n    const matrix = mat4.multiply(mat4.fromZRotation(Zrotation), mat4.fromTranslation(Zoffset))\n\n    return slice.transform(matrix, base)\n  }\n\n  options = {\n    numberOfSlices: twistSteps + 1,\n    capStart: true,\n    capEnd: true,\n    callback: createTwist\n  }\n  return extrudeFromSlices(options, baseSlice)\n}\n\nmodule.exports = extrudeGeom2\n","const flatten = require('../../utils/flatten')\n\nconst geom2 = require('../../geometries/geom2')\n\nconst extrudeLinearGeom2 = require('./extrudeLinearGeom2')\n\n/**\n * Extrude the given geometry in an upward linear direction using the given options.\n * @param {Object} options - options for extrude\n * @param {Array} [options.height=1] the height of the extrusion\n * @param {Number} [options.twistAngle=0] the final rotation (RADIANS) about the origin of the shape (if any)\n * @param {Integer} [options.twistSteps=1] the resolution of the twist about the axis (if any)\n * @param {...Object} geometry - the list of geometry to extrude\n * @return {Object|Array} the extruded geometry, or a list of extruded geometry\n * @alias module:modeling/extrusions.extrudeLinear\n *\n * @example\n * let myshape = extrudeLinear({height: 10}, rectangle({size: [20, 25]}))\n */\nconst extrudeLinear = (options, ...objects) => {\n  const defaults = {\n    height: 1,\n    twistAngle: 0,\n    twistSteps: 1\n  }\n  const { height, twistAngle, twistSteps } = Object.assign({ }, defaults, options)\n\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  options = { offset: [0, 0, height], twistAngle: twistAngle, twistSteps: twistSteps }\n\n  const results = objects.map((object) => {\n    // if (path.isA(object)) return pathextrude(options, object)\n    if (geom2.isA(object)) return extrudeLinearGeom2(options, object)\n    // if (geom3.isA(object)) return geom3.extrude(options, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = extrudeLinear\n","const path2 = require('../../geometries/path2')\n\nconst expand = require('../expansions/expand')\n\nconst extrudeLinearGeom2 = require('./extrudeLinearGeom2')\n\n/*\n * Expand and extrude the given geometry (path2).\n * @See expand for addition options\n * @param {Object} options - options for extrusion, if any\n * @param {Number} [options.size=1] - size of the rectangle\n * @param {Number} [options.height=1] - height of the extrusion\n * @param {path2} geometry - the geometry to extrude\n * @return {geom3} the extruded geometry\n */\nconst extrudeRectangularPath2 = (options, geometry) => {\n  const defaults = {\n    size: 1,\n    height: 1\n  }\n  const { size, height } = Object.assign({ }, defaults, options)\n\n  options.delta = size\n  options.offset = [0, 0, height]\n\n  const points = path2.toPoints(geometry)\n  if (points.length === 0) throw new Error('the given geometry cannot be empty')\n\n  const newgeometry = expand(options, geometry)\n  return extrudeLinearGeom2(options, newgeometry)\n}\n\nmodule.exports = extrudeRectangularPath2\n","const { area } = require('../../maths/utils')\n\nconst geom2 = require('../../geometries/geom2')\nconst path2 = require('../../geometries/path2')\n\nconst expand = require('../expansions/expand')\n\nconst extrudeLinearGeom2 = require('./extrudeLinearGeom2')\n\n/*\n * Expand and extrude the given geometry (geom2).\n * @see expand for additional options\n * @param {Object} options - options for extrusion, if any\n * @param {Number} [options.size=1] - size of the rectangle\n * @param {Number} [options.height=1] - height of the extrusion\n * @param {geom2} geometry - the geometry to extrude\n * @return {geom3} the extruded geometry\n */\nconst extrudeRectangularGeom2 = (options, geometry) => {\n  const defaults = {\n    size: 1,\n    height: 1\n  }\n  const { size, height } = Object.assign({ }, defaults, options)\n\n  options.delta = size\n  options.offset = [0, 0, height]\n\n  // convert the geometry to outlines\n  const outlines = geom2.toOutlines(geometry)\n  if (outlines.length === 0) throw new Error('the given geometry cannot be empty')\n\n  // expand the outlines\n  const newparts = outlines.map((outline) => {\n    if (area(outline) < 0) outline.reverse() // all outlines must wind counter clockwise\n    return expand(options, path2.fromPoints({ closed: true }, outline))\n  })\n\n  // create a composite geometry\n  const allsides = newparts.reduce((sides, part) => sides.concat(geom2.toSides(part)), [])\n  const newgeometry = geom2.create(allsides)\n\n  return extrudeLinearGeom2(options, newgeometry)\n}\n\nmodule.exports = extrudeRectangularGeom2\n","const flatten = require('../../utils/flatten')\n\nconst geom2 = require('../../geometries/geom2')\nconst path2 = require('../../geometries/path2')\n\nconst extrudeRectangularPath2 = require('./extrudeRectangularPath2')\nconst extrudeRectangularGeom2 = require('./extrudeRectangularGeom2')\n\n/**\n * Extrude the given geometry by following the outline(s) with a rectangle.\n * @See expand for addition options\n * @param {Object} options - options for extrusion, if any\n * @param {Number} [options.size=1] - size of the rectangle\n * @param {Number} [options.height=1] - height of the extrusion\n * @param {...Object} geometry - the list of geometry to extrude\n * @return {Object|Array} the extruded object, or a list of extruded objects\n * @alias module:modeling/extrusions.extrudeRectangular\n *\n * @example:\n * let mywalls = extrudeRectangular({offset: [0,0,10]}, square())\n */\nconst extrudeRectangular = (options, ...objects) => {\n  const defaults = {\n    size: 1,\n    height: 1\n  }\n  const { size, height } = Object.assign({}, defaults, options)\n\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  if (size <= 0) throw new Error('size must be positive')\n  if (height <= 0) throw new Error('height must be positive')\n\n  const results = objects.map((object) => {\n    if (path2.isA(object)) return extrudeRectangularPath2(options, object)\n    if (geom2.isA(object)) return extrudeRectangularGeom2(options, object)\n    // if (geom3.isA(object)) return geom3.transform(matrix, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = extrudeRectangular\n","/**\n * All 2D shapes (primitives or the results of operations) can be extruded in various ways.\n * In all cases, the function returns the results, and never changes the original shapes.\n * @module modeling/extrusions\n * @example\n * const { extrudeLinear, extrudeRectangular, extrudeRotate } = require('@jscad/modeling').extrusions\n */\nmodule.exports = {\n  extrudeFromSlices: require('./extrudeFromSlices'),\n  extrudeLinear: require('./extrudeLinear'),\n  extrudeRectangular: require('./extrudeRectangular'),\n  extrudeRotate: require('./extrudeRotate'),\n  slice: require('./slice')\n}\n","const vec2 = require('../../maths/vec2')\n\nconst angleBetweenPoints = (p0, p1) => Math.atan2((p1[1] - p0[1]), (p1[0] - p0[0]))\n\nconst compareIndex = (index1, index2) => {\n  if (index1.angle < index2.angle) {\n    return -1\n  } else if (index1.angle > index2.angle) {\n    return 1\n  } else {\n    if (index1.distance < index2.distance) {\n      return -1\n    } else if (index1.distance > index2.distance) {\n      return 1\n    }\n  }\n  return 0\n}\n\n// Ported from https://github.com/bkiers/GrahamScan\nconst compute = (points) => {\n  if (points.length < 3) {\n    return points\n  }\n\n  // Find the lowest point\n  let min = 0\n  points.forEach((point, i) => {\n    const minpoint = points[min]\n    if (point[1] === minpoint[1]) {\n      if (point[0] < minpoint[0]) {\n        min = i\n      }\n    } else if (point[1] < minpoint[1]) {\n      min = i\n    }\n  })\n\n  // Calculate angles and distances from the lowest point\n  const al = []\n  let angle = 0.0\n  let dist = 0.0\n  for (let i = 0; i < points.length; i++) {\n    if (i === min) {\n      continue\n    }\n    angle = angleBetweenPoints(points[min], points[i])\n    if (angle < 0) {\n      angle += Math.PI\n    }\n    dist = vec2.squaredDistance(points[min], points[i])\n    al.push({ index: i, angle: angle, distance: dist })\n  }\n\n  al.sort((a, b) => compareIndex(a, b))\n\n  // Wind around the points CCW, removing interior points\n  const stack = new Array(points.length + 1)\n  let j = 2\n  for (let i = 0; i < points.length; i++) {\n    if (i === min) {\n      continue\n    }\n    stack[j] = al[j - 2].index\n    j++\n  }\n  stack[0] = stack[points.length]\n  stack[1] = min\n\n  const ccw = (i1, i2, i3) => (points[i2][0] - points[i1][0]) * (points[i3][1] - points[i1][1]) - (points[i2][1] - points[i1][1]) * (points[i3][0] - points[i1][0])\n\n  let tmp\n  let M = 2\n  for (let i = 3; i <= points.length; i++) {\n    while (ccw(stack[M - 1], stack[M], stack[i]) < 1e-5) {\n      M--\n    }\n    M++\n    tmp = stack[i]\n    stack[i] = stack[M]\n    stack[M] = tmp\n  }\n\n  // Return the indices to the points\n  const indices = new Array(M)\n  for (let i = 0; i < M; i++) {\n    indices[i] = stack[i + 1]\n  }\n  return indices\n}\n\n/*\n * Create a convex hull of the given set of points,  where each point is an array of [x,y].\n * @param {Array} uniquepoints - list of UNIQUE points from which to create a hull\n * @returns {Array} a list of points that form the hull\n */\nconst hullPoints2 = (uniquepoints) => {\n  const indices = compute(uniquepoints)\n\n  let hullpoints = []\n  if (Array.isArray(indices)) {\n    hullpoints = indices.map((index) => uniquepoints[index])\n  }\n  return hullpoints\n}\n\nmodule.exports = hullPoints2\n","const flatten = require('../../utils/flatten')\n\nconst vec2 = require('../../maths/vec2')\n\nconst path2 = require('../../geometries/path2')\n\nconst hullPoints2 = require('./hullPoints2')\n\n/*\n * Create a convex hull of the given geometries (path2).\n * @param {...geometries} geometries - list of path2 geometries\n * @returns {path2} new geometry\n */\nconst hullPath2 = (...geometries) => {\n  geometries = flatten(geometries)\n\n  // extract the unique points from the geometries\n  const uniquepoints = []\n  geometries.forEach((geometry) => {\n    const points = path2.toPoints(geometry)\n    points.forEach((point) => {\n      const index = uniquepoints.findIndex((unique) => vec2.equals(unique, point))\n      if (index < 0) uniquepoints.push(point)\n    })\n  })\n\n  const hullpoints = hullPoints2(uniquepoints)\n\n  // assemble a new geometry from the list of points\n  return path2.fromPoints({ closed: true }, hullpoints)\n}\n\nmodule.exports = hullPath2\n","const flatten = require('../../utils/flatten')\n\nconst geom2 = require('../../geometries/geom2')\n\nconst hullPoints2 = require('./hullPoints2')\n\n/*\n * Create a convex hull of the given geom2 geometries.\n * @param {...geometries} geometries - list of geom2 geometries\n * @returns {geom2} new geometry\n */\nconst hullGeom2 = (...geometries) => {\n  geometries = flatten(geometries)\n\n  // extract the unique points from the geometries\n  const uniquepoints = []\n  const found = new Map()\n  for (let g = 0; g < geometries.length; g++) {\n    const sides = geom2.toSides(geometries[g])\n    for (let s = 0; s < sides.length; s++) {\n      const side = sides[s]\n      const point = side[0]\n      const id = `${point[0]},${point[1]}`\n      if (found.has(id)) continue\n      uniquepoints.push(point)\n      found.set(id, true)\n    }\n  }\n  found.clear()\n\n  const hullpoints = hullPoints2(uniquepoints)\n\n  // NOTE: more then three points are required to create a new geometry\n  if (hullpoints.length < 3) return geom2.create()\n\n  // assemble a new geometry from the list of points\n  return geom2.fromPoints(hullpoints)\n}\n\nmodule.exports = hullGeom2\n","const cross = require('../../../maths/vec3/cross')\nconst subtract = require('../../../maths/vec3/subtract')\nconst squaredLength = require('../../../maths/vec3/squaredLength')\n\n/*\n * Original source from quickhull3d (https://github.com/mauriciopoppe/quickhull3d)\n * Copyright (c) 2015 Mauricio Poppe\n *\n * Adapted to JSCAD by Jeff Gay\n */\n\nconst distanceSquared = (p, a, b) => {\n  // == parallelogram solution\n  //\n  //            s\n  //      __a________b__\n  //       /   |    /\n  //      /   h|   /\n  //     /_____|__/\n  //    p\n  //\n  //  s = b - a\n  //  area = s * h\n  //  |ap x s| = s * h\n  //  h = |ap x s| / s\n  //\n  const ab = []\n  const ap = []\n  const cr = []\n  subtract(ab, b, a)\n  subtract(ap, p, a)\n  const area = squaredLength(cross(cr, ap, ab))\n  const s = squaredLength(ab)\n  if (s === 0) {\n    throw Error('a and b are the same point')\n  }\n  return area / s\n}\n\nconst pointLineDistance = (point, a, b) => Math.sqrt(distanceSquared(point, a, b))\n\nmodule.exports = pointLineDistance\n","const cross = require('../../../maths/vec3/cross')\nconst normalize = require('../../../maths/vec3/normalize')\nconst subtract = require('../../../maths/vec3/subtract')\n\n/*\n * Original source from quickhull3d (https://github.com/mauriciopoppe/quickhull3d)\n * Copyright (c) 2015 Mauricio Poppe\n *\n * Adapted to JSCAD by Jeff Gay\n */\n\nconst planeNormal = (out, point1, point2, point3) => {\n  const tmp = [0, 0, 0]\n  subtract(out, point1, point2)\n  subtract(tmp, point2, point3)\n  cross(out, out, tmp)\n  return normalize(out, out)\n}\n\nmodule.exports = planeNormal\n","/*\n * Original source from quickhull3d (https://github.com/mauriciopoppe/quickhull3d)\n * Copyright (c) 2015 Mauricio Poppe\n *\n * Adapted to JSCAD by Jeff Gay\n */\n\nclass VertexList {\n  constructor () {\n    this.head = null\n    this.tail = null\n  }\n\n  clear () {\n    this.head = this.tail = null\n  }\n\n  /**\n   * Inserts a `node` before `target`, it's assumed that\n   * `target` belongs to this doubly linked list\n   *\n   * @param {*} target\n   * @param {*} node\n   */\n  insertBefore (target, node) {\n    node.prev = target.prev\n    node.next = target\n    if (!node.prev) {\n      this.head = node\n    } else {\n      node.prev.next = node\n    }\n    target.prev = node\n  }\n\n  /**\n   * Inserts a `node` after `target`, it's assumed that\n   * `target` belongs to this doubly linked list\n   *\n   * @param {Vertex} target\n   * @param {Vertex} node\n   */\n  insertAfter (target, node) {\n    node.prev = target\n    node.next = target.next\n    if (!node.next) {\n      this.tail = node\n    } else {\n      node.next.prev = node\n    }\n    target.next = node\n  }\n\n  /**\n   * Appends a `node` to the end of this doubly linked list\n   * Note: `node.next` will be unlinked from `node`\n   * Note: if `node` is part of another linked list call `addAll` instead\n   *\n   * @param {*} node\n   */\n  add (node) {\n    if (!this.head) {\n      this.head = node\n    } else {\n      this.tail.next = node\n    }\n    node.prev = this.tail\n    // since node is the new end it doesn't have a next node\n    node.next = null\n    this.tail = node\n  }\n\n  /**\n   * Appends a chain of nodes where `node` is the head,\n   * the difference with `add` is that it correctly sets the position\n   * of the node list `tail` property\n   *\n   * @param {*} node\n   */\n  addAll (node) {\n    if (!this.head) {\n      this.head = node\n    } else {\n      this.tail.next = node\n    }\n    node.prev = this.tail\n\n    // find the end of the list\n    while (node.next) {\n      node = node.next\n    }\n    this.tail = node\n  }\n\n  /**\n   * Deletes a `node` from this linked list, it's assumed that `node` is a\n   * member of this linked list\n   *\n   * @param {*} node\n   */\n  remove (node) {\n    if (!node.prev) {\n      this.head = node.next\n    } else {\n      node.prev.next = node.next\n    }\n\n    if (!node.next) {\n      this.tail = node.prev\n    } else {\n      node.next.prev = node.prev\n    }\n  }\n\n  /**\n   * Removes a chain of nodes whose head is `a` and whose tail is `b`,\n   * it's assumed that `a` and `b` belong to this list and also that `a`\n   * comes before `b` in the linked list\n   *\n   * @param {*} a\n   * @param {*} b\n   */\n  removeChain (a, b) {\n    if (!a.prev) {\n      this.head = b.next\n    } else {\n      a.prev.next = b.next\n    }\n\n    if (!b.next) {\n      this.tail = a.prev\n    } else {\n      b.next.prev = a.prev\n    }\n  }\n\n  first () {\n    return this.head\n  }\n\n  isEmpty () {\n    return !this.head\n  }\n}\n\nmodule.exports = VertexList\n","/*\n * Original source from quickhull3d (https://github.com/mauriciopoppe/quickhull3d)\n * Copyright (c) 2015 Mauricio Poppe\n *\n * Adapted to JSCAD by Jeff Gay\n */\n\nclass Vertex {\n  constructor (point, index) {\n    this.point = point\n    // index in the input array\n    this.index = index\n    // vertex is a double linked list node\n    this.next = null\n    this.prev = null\n    // the face that is able to see this point\n    this.face = null\n  }\n}\n\nmodule.exports = Vertex\n","const distance = require('../../../maths/vec3/distance')\nconst squaredDistance = require('../../../maths/vec3/squaredDistance')\n\n/*\n * Original source from quickhull3d (https://github.com/mauriciopoppe/quickhull3d)\n * Copyright (c) 2015 Mauricio Poppe\n *\n * Adapted to JSCAD by Jeff Gay\n */\n\nclass HalfEdge {\n  constructor (vertex, face) {\n    this.vertex = vertex\n    this.face = face\n    this.next = null\n    this.prev = null\n    this.opposite = null\n  }\n\n  head () {\n    return this.vertex\n  }\n\n  tail () {\n    return this.prev\n      ? this.prev.vertex\n      : null\n  }\n\n  length () {\n    if (this.tail()) {\n      return distance(\n        this.tail().point,\n        this.head().point\n      )\n    }\n    return -1\n  }\n\n  lengthSquared () {\n    if (this.tail()) {\n      return squaredDistance(\n        this.tail().point,\n        this.head().point\n      )\n    }\n    return -1\n  }\n\n  setOpposite (edge) {\n    this.opposite = edge\n    edge.opposite = this\n  }\n}\n\nmodule.exports = HalfEdge\n","const add = require('../../../maths/vec3/add')\nconst clone = require('../../../maths/vec3/clone')\nconst cross = require('../../../maths/vec3/cross')\nconst dot = require('../../../maths/vec3/dot')\nconst length = require('../../../maths/vec3/length')\nconst normalize = require('../../../maths/vec3/normalize')\nconst scale = require('../../../maths/vec3/scale')\nconst subtract = require('../../../maths/vec3/subtract')\n\n/*\n * Original source from quickhull3d (https://github.com/mauriciopoppe/quickhull3d)\n * Copyright (c) 2015 Mauricio Poppe\n *\n * Adapted to JSCAD by Jeff Gay\n */\n\nconst HalfEdge = require('./HalfEdge')\n\nconst VISIBLE = 0\nconst NON_CONVEX = 1\nconst DELETED = 2\n\nclass Face {\n  constructor () {\n    this.normal = []\n    this.centroid = []\n    // signed distance from face to the origin\n    this.offset = 0\n    // pointer to the a vertex in a double linked list this face can see\n    this.outside = null\n    this.mark = VISIBLE\n    this.edge = null\n    this.nVertices = 0\n  }\n\n  getEdge (i) {\n    if (typeof i !== 'number') {\n      throw Error('requires a number')\n    }\n    let it = this.edge\n    while (i > 0) {\n      it = it.next\n      i -= 1\n    }\n    while (i < 0) {\n      it = it.prev\n      i += 1\n    }\n    return it\n  }\n\n  computeNormal () {\n    const e0 = this.edge\n    const e1 = e0.next\n    let e2 = e1.next\n    const v2 = subtract([], e1.head().point, e0.head().point)\n    const t = []\n    const v1 = []\n\n    this.nVertices = 2\n    this.normal = [0, 0, 0]\n    while (e2 !== e0) {\n      clone(v1, v2)\n      subtract(v2, e2.head().point, e0.head().point)\n      add(this.normal, this.normal, cross(t, v1, v2))\n      e2 = e2.next\n      this.nVertices += 1\n    }\n    this.area = length(this.normal)\n    // normalize the vector, since we've already calculated the area\n    // it's cheaper to scale the vector using this quantity instead of\n    // doing the same operation again\n    this.normal = scale(this.normal, 1 / this.area, this.normal) // TODO review scale parameters\n  }\n\n  computeNormalMinArea (minArea) {\n    this.computeNormal()\n    if (this.area < minArea) {\n      // compute the normal without the longest edge\n      let maxEdge\n      let maxSquaredLength = 0\n      let edge = this.edge\n\n      // find the longest edge (in length) in the chain of edges\n      do {\n        const lengthSquared = edge.lengthSquared()\n        if (lengthSquared > maxSquaredLength) {\n          maxEdge = edge\n          maxSquaredLength = lengthSquared\n        }\n        edge = edge.next\n      } while (edge !== this.edge)\n\n      const p1 = maxEdge.tail().point\n      const p2 = maxEdge.head().point\n      const maxVector = subtract([], p2, p1)\n      const maxLength = Math.sqrt(maxSquaredLength)\n      // maxVector is normalized after this operation\n      scale(maxVector, 1 / maxLength, maxVector) // TODO review scale parameters\n      // compute the projection of maxVector over this face normal\n      const maxProjection = dot(this.normal, maxVector)\n      // subtract the quantity maxEdge adds on the normal\n      scale(maxVector, -maxProjection, maxVector) // TODO review scale parameters\n      add(this.normal, this.normal, maxVector)\n      // renormalize `this.normal`\n      normalize(this.normal, this.normal)\n    }\n  }\n\n  computeCentroid () {\n    this.centroid = [0, 0, 0]\n    let edge = this.edge\n    do {\n      add(this.centroid, this.centroid, edge.head().point)\n      edge = edge.next\n    } while (edge !== this.edge)\n    scale(this.centroid, 1 / this.nVertices, this.centroid)\n  }\n\n  computeNormalAndCentroid (minArea) {\n    if (typeof minArea !== 'undefined') {\n      this.computeNormalMinArea(minArea)\n    } else {\n      this.computeNormal()\n    }\n    this.computeCentroid()\n    this.offset = dot(this.normal, this.centroid)\n  }\n\n  distanceToPlane (point) {\n    return dot(this.normal, point) - this.offset\n  }\n\n  /**\n   * @private\n   *\n   * Connects two edges assuming that prev.head().point === next.tail().point\n   *\n   * @param {HalfEdge} prev\n   * @param {HalfEdge} next\n   */\n  connectHalfEdges (prev, next) {\n    let discardedFace\n    if (prev.opposite.face === next.opposite.face) {\n      // `prev` is remove a redundant edge\n      const oppositeFace = next.opposite.face\n      let oppositeEdge\n      if (prev === this.edge) {\n        this.edge = next\n      }\n      if (oppositeFace.nVertices === 3) {\n        // case:\n        // remove the face on the right\n        //\n        //       /|\\\n        //      / | \\ the face on the right\n        //     /  |  \\ --> opposite edge\n        //    / a |   \\\n        //   *----*----*\n        //  /     b  |  \\\n        //           ▾\n        //      redundant edge\n        //\n        // Note: the opposite edge is actually in the face to the right\n        // of the face to be destroyed\n        oppositeEdge = next.opposite.prev.opposite\n        oppositeFace.mark = DELETED\n        discardedFace = oppositeFace\n      } else {\n        // case:\n        //          t\n        //        *----\n        //       /| <- right face's redundant edge\n        //      / | opposite edge\n        //     /  |  ▴   /\n        //    / a |  |  /\n        //   *----*----*\n        //  /     b  |  \\\n        //           ▾\n        //      redundant edge\n        oppositeEdge = next.opposite.next\n        // make sure that the link `oppositeFace.edge` points correctly even\n        // after the right face redundant edge is removed\n        if (oppositeFace.edge === oppositeEdge.prev) {\n          oppositeFace.edge = oppositeEdge\n        }\n\n        //       /|   /\n        //      / | t/opposite edge\n        //     /  | / ▴  /\n        //    / a |/  | /\n        //   *----*----*\n        //  /     b     \\\n        oppositeEdge.prev = oppositeEdge.prev.prev\n        oppositeEdge.prev.next = oppositeEdge\n      }\n      //       /|\n      //      / |\n      //     /  |\n      //    / a |\n      //   *----*----*\n      //  /     b  ▴  \\\n      //           |\n      //     redundant edge\n      next.prev = prev.prev\n      next.prev.next = next\n\n      //       / \\  \\\n      //      /   \\->\\\n      //     /     \\<-\\ opposite edge\n      //    / a     \\  \\\n      //   *----*----*\n      //  /     b  ^  \\\n      next.setOpposite(oppositeEdge)\n\n      oppositeFace.computeNormalAndCentroid()\n    } else {\n      // trivial case\n      //        *\n      //       /|\\\n      //      / | \\\n      //     /  |--> next\n      //    / a |   \\\n      //   *----*----*\n      //    \\ b |   /\n      //     \\  |--> prev\n      //      \\ | /\n      //       \\|/\n      //        *\n      prev.next = next\n      next.prev = prev\n    }\n    return discardedFace\n  }\n\n  mergeAdjacentFaces (adjacentEdge, discardedFaces) {\n    const oppositeEdge = adjacentEdge.opposite\n    const oppositeFace = oppositeEdge.face\n\n    discardedFaces.push(oppositeFace)\n    oppositeFace.mark = DELETED\n\n    // find the chain of edges whose opposite face is `oppositeFace`\n    //\n    //                ===>\n    //      \\         face         /\n    //       * ---- * ---- * ---- *\n    //      /     opposite face    \\\n    //                <===\n    //\n    let adjacentEdgePrev = adjacentEdge.prev\n    let adjacentEdgeNext = adjacentEdge.next\n    let oppositeEdgePrev = oppositeEdge.prev\n    let oppositeEdgeNext = oppositeEdge.next\n\n    // left edge\n    while (adjacentEdgePrev.opposite.face === oppositeFace) {\n      adjacentEdgePrev = adjacentEdgePrev.prev\n      oppositeEdgeNext = oppositeEdgeNext.next\n    }\n    // right edge\n    while (adjacentEdgeNext.opposite.face === oppositeFace) {\n      adjacentEdgeNext = adjacentEdgeNext.next\n      oppositeEdgePrev = oppositeEdgePrev.prev\n    }\n    // adjacentEdgePrev  \\         face         / adjacentEdgeNext\n    //                    * ---- * ---- * ---- *\n    // oppositeEdgeNext  /     opposite face    \\ oppositeEdgePrev\n\n    // fix the face reference of all the opposite edges that are not part of\n    // the edges whose opposite face is not `face` i.e. all the edges that\n    // `face` and `oppositeFace` do not have in common\n    let edge\n    for (edge = oppositeEdgeNext; edge !== oppositeEdgePrev.next; edge = edge.next) {\n      edge.face = this\n    }\n\n    // make sure that `face.edge` is not one of the edges to be destroyed\n    // Note: it's important for it to be a `next` edge since `prev` edges\n    // might be destroyed on `connectHalfEdges`\n    this.edge = adjacentEdgeNext\n\n    // connect the extremes\n    // Note: it might be possible that after connecting the edges a triangular\n    // face might be redundant\n    let discardedFace\n    discardedFace = this.connectHalfEdges(oppositeEdgePrev, adjacentEdgeNext)\n    if (discardedFace) {\n      discardedFaces.push(discardedFace)\n    }\n    discardedFace = this.connectHalfEdges(adjacentEdgePrev, oppositeEdgeNext)\n    if (discardedFace) {\n      discardedFaces.push(discardedFace)\n    }\n\n    this.computeNormalAndCentroid()\n    // TODO: additional consistency checks\n    return discardedFaces\n  }\n\n  collectIndices () {\n    const indices = []\n    let edge = this.edge\n    do {\n      indices.push(edge.head().index)\n      edge = edge.next\n    } while (edge !== this.edge)\n    return indices\n  }\n\n  static createTriangle (v0, v1, v2, minArea = 0) {\n    const face = new Face()\n    const e0 = new HalfEdge(v0, face)\n    const e1 = new HalfEdge(v1, face)\n    const e2 = new HalfEdge(v2, face)\n\n    // join edges\n    e0.next = e2.prev = e1\n    e1.next = e0.prev = e2\n    e2.next = e1.prev = e0\n\n    // main half edge reference\n    face.edge = e0\n    face.computeNormalAndCentroid(minArea)\n    return face\n  }\n}\n\nmodule.exports = {\n  VISIBLE,\n  NON_CONVEX,\n  DELETED,\n  Face\n}\n","const dot = require('../../../maths/vec3/dot')\n\nconst pointLineDistance = require('./point-line-distance')\nconst getPlaneNormal = require('./get-plane-normal')\n\nconst VertexList = require('./VertexList')\nconst Vertex = require('./Vertex')\nconst { Face, VISIBLE, NON_CONVEX, DELETED } = require('./Face')\n\n/*\n * Original source from quickhull3d (https://github.com/mauriciopoppe/quickhull3d)\n * Copyright (c) 2015 Mauricio Poppe\n *\n * Adapted to JSCAD by Jeff Gay\n */\n\n// merge types\n// non convex with respect to the large face\nconst MERGE_NON_CONVEX_WRT_LARGER_FACE = 1\nconst MERGE_NON_CONVEX = 2\n\nclass QuickHull {\n  constructor (points) {\n    if (!Array.isArray(points)) {\n      throw TypeError('input is not a valid array')\n    }\n    if (points.length < 4) {\n      throw Error('cannot build a simplex out of <4 points')\n    }\n\n    this.tolerance = -1\n\n    // buffers\n    this.nFaces = 0\n    this.nPoints = points.length\n\n    this.faces = []\n    this.newFaces = []\n    // helpers\n    //\n    // let `a`, `b` be `Face` instances\n    // let `v` be points wrapped as instance of `Vertex`\n    //\n    //     [v, v, ..., v, v, v, ...]\n    //      ^             ^\n    //      |             |\n    //  a.outside     b.outside\n    //\n    this.claimed = new VertexList()\n    this.unclaimed = new VertexList()\n\n    // vertices of the hull(internal representation of points)\n    this.vertices = []\n    for (let i = 0; i < points.length; i += 1) {\n      this.vertices.push(new Vertex(points[i], i))\n    }\n    this.discardedFaces = []\n    this.vertexPointIndices = []\n  }\n\n  addVertexToFace (vertex, face) {\n    vertex.face = face\n    if (!face.outside) {\n      this.claimed.add(vertex)\n    } else {\n      this.claimed.insertBefore(face.outside, vertex)\n    }\n    face.outside = vertex\n  }\n\n  /**\n   * Removes `vertex` for the `claimed` list of vertices, it also makes sure\n   * that the link from `face` to the first vertex it sees in `claimed` is\n   * linked correctly after the removal\n   *\n   * @param {Vertex} vertex\n   * @param {Face} face\n   */\n  removeVertexFromFace (vertex, face) {\n    if (vertex === face.outside) {\n      // fix face.outside link\n      if (vertex.next && vertex.next.face === face) {\n        // face has at least 2 outside vertices, move the `outside` reference\n        face.outside = vertex.next\n      } else {\n        // vertex was the only outside vertex that face had\n        face.outside = null\n      }\n    }\n    this.claimed.remove(vertex)\n  }\n\n  /**\n   * Removes all the visible vertices that `face` is able to see which are\n   * stored in the `claimed` vertext list\n   *\n   * @param {Face} face\n   * @return {Vertex|undefined} If face had visible vertices returns\n   * `face.outside`, otherwise undefined\n   */\n  removeAllVerticesFromFace (face) {\n    if (face.outside) {\n      // pointer to the last vertex of this face\n      // [..., outside, ..., end, outside, ...]\n      //          |           |      |\n      //          a           a      b\n      let end = face.outside\n      while (end.next && end.next.face === face) {\n        end = end.next\n      }\n      this.claimed.removeChain(face.outside, end)\n      //                            b\n      //                       [ outside, ...]\n      //                            |  removes this link\n      //     [ outside, ..., end ] -┘\n      //          |           |\n      //          a           a\n      end.next = null\n      return face.outside\n    }\n  }\n\n  /**\n   * Removes all the visible vertices that `face` is able to see, additionally\n   * checking the following:\n   *\n   * If `absorbingFace` doesn't exist then all the removed vertices will be\n   * added to the `unclaimed` vertex list\n   *\n   * If `absorbingFace` exists then this method will assign all the vertices of\n   * `face` that can see `absorbingFace`, if a vertex cannot see `absorbingFace`\n   * it's added to the `unclaimed` vertex list\n   *\n   * @param {Face} face\n   * @param {Face} [absorbingFace]\n   */\n  deleteFaceVertices (face, absorbingFace) {\n    const faceVertices = this.removeAllVerticesFromFace(face)\n    if (faceVertices) {\n      if (!absorbingFace) {\n        // mark the vertices to be reassigned to some other face\n        this.unclaimed.addAll(faceVertices)\n      } else {\n        // if there's an absorbing face try to assign as many vertices\n        // as possible to it\n\n        // the reference `vertex.next` might be destroyed on\n        // `this.addVertexToFace` (see VertexList#add), nextVertex is a\n        // reference to it\n        let nextVertex\n        for (let vertex = faceVertices; vertex; vertex = nextVertex) {\n          nextVertex = vertex.next\n          const distance = absorbingFace.distanceToPlane(vertex.point)\n\n          // check if `vertex` is able to see `absorbingFace`\n          if (distance > this.tolerance) {\n            this.addVertexToFace(vertex, absorbingFace)\n          } else {\n            this.unclaimed.add(vertex)\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Reassigns as many vertices as possible from the unclaimed list to the new\n   * faces\n   *\n   * @param {Faces[]} newFaces\n   */\n  resolveUnclaimedPoints (newFaces) {\n    // cache next vertex so that if `vertex.next` is destroyed it's still\n    // recoverable\n    let vertexNext = this.unclaimed.first()\n    for (let vertex = vertexNext; vertex; vertex = vertexNext) {\n      vertexNext = vertex.next\n      let maxDistance = this.tolerance\n      let maxFace\n      for (let i = 0; i < newFaces.length; i += 1) {\n        const face = newFaces[i]\n        if (face.mark === VISIBLE) {\n          const dist = face.distanceToPlane(vertex.point)\n          if (dist > maxDistance) {\n            maxDistance = dist\n            maxFace = face\n          }\n          if (maxDistance > 1000 * this.tolerance) {\n            break\n          }\n        }\n      }\n\n      if (maxFace) {\n        this.addVertexToFace(vertex, maxFace)\n      }\n    }\n  }\n\n  /**\n   * Computes the extremes of a tetrahedron which will be the initial hull\n   *\n   * @return {number[]} The min/max vertices in the x,y,z directions\n   */\n  computeExtremes () {\n    const min = []\n    const max = []\n\n    // min vertex on the x,y,z directions\n    const minVertices = []\n    // max vertex on the x,y,z directions\n    const maxVertices = []\n\n    let i, j\n\n    // initially assume that the first vertex is the min/max\n    for (i = 0; i < 3; i += 1) {\n      minVertices[i] = maxVertices[i] = this.vertices[0]\n    }\n    // copy the coordinates of the first vertex to min/max\n    for (i = 0; i < 3; i += 1) {\n      min[i] = max[i] = this.vertices[0].point[i]\n    }\n\n    // compute the min/max vertex on all 6 directions\n    for (i = 1; i < this.vertices.length; i += 1) {\n      const vertex = this.vertices[i]\n      const point = vertex.point\n      // update the min coordinates\n      for (j = 0; j < 3; j += 1) {\n        if (point[j] < min[j]) {\n          min[j] = point[j]\n          minVertices[j] = vertex\n        }\n      }\n      // update the max coordinates\n      for (j = 0; j < 3; j += 1) {\n        if (point[j] > max[j]) {\n          max[j] = point[j]\n          maxVertices[j] = vertex\n        }\n      }\n    }\n\n    // compute epsilon\n    this.tolerance = 3 * Number.EPSILON * (\n      Math.max(Math.abs(min[0]), Math.abs(max[0])) +\n      Math.max(Math.abs(min[1]), Math.abs(max[1])) +\n      Math.max(Math.abs(min[2]), Math.abs(max[2]))\n    )\n    return [minVertices, maxVertices]\n  }\n\n  /**\n   * Compues the initial tetrahedron assigning to its faces all the points that\n   * are candidates to form part of the hull\n   */\n  createInitialSimplex () {\n    const vertices = this.vertices\n    const [min, max] = this.computeExtremes()\n    let v2, v3\n    let i, j\n\n    // Find the two vertices with the greatest 1d separation\n    // (max.x - min.x)\n    // (max.y - min.y)\n    // (max.z - min.z)\n    let maxDistance = 0\n    let indexMax = 0\n    for (i = 0; i < 3; i += 1) {\n      const distance = max[i].point[i] - min[i].point[i]\n      if (distance > maxDistance) {\n        maxDistance = distance\n        indexMax = i\n      }\n    }\n    const v0 = min[indexMax]\n    const v1 = max[indexMax]\n\n    // the next vertex is the one farthest to the line formed by `v0` and `v1`\n    maxDistance = 0\n    for (i = 0; i < this.vertices.length; i += 1) {\n      const vertex = this.vertices[i]\n      if (vertex !== v0 && vertex !== v1) {\n        const distance = pointLineDistance(\n          vertex.point, v0.point, v1.point\n        )\n        if (distance > maxDistance) {\n          maxDistance = distance\n          v2 = vertex\n        }\n      }\n    }\n\n    // the next vertes is the one farthest to the plane `v0`, `v1`, `v2`\n    // normalize((v2 - v1) x (v0 - v1))\n    const normal = getPlaneNormal([], v0.point, v1.point, v2.point)\n    // distance from the origin to the plane\n    const distPO = dot(v0.point, normal)\n    maxDistance = -1\n    for (i = 0; i < this.vertices.length; i += 1) {\n      const vertex = this.vertices[i]\n      if (vertex !== v0 && vertex !== v1 && vertex !== v2) {\n        const distance = Math.abs(dot(normal, vertex.point) - distPO)\n        if (distance > maxDistance) {\n          maxDistance = distance\n          v3 = vertex\n        }\n      }\n    }\n\n    // initial simplex\n    // Taken from http://everything2.com/title/How+to+paint+a+tetrahedron\n    //\n    //                              v2\n    //                             ,|,\n    //                           ,7``\\'VA,\n    //                         ,7`   |, `'VA,\n    //                       ,7`     `\\    `'VA,\n    //                     ,7`        |,      `'VA,\n    //                   ,7`          `\\         `'VA,\n    //                 ,7`             |,           `'VA,\n    //               ,7`               `\\       ,..ooOOTK` v3\n    //             ,7`                  |,.ooOOT''`    AV\n    //           ,7`            ,..ooOOT`\\`           /7\n    //         ,7`      ,..ooOOT''`      |,          AV\n    //        ,T,..ooOOT''`              `\\         /7\n    //     v0 `'TTs.,                     |,       AV\n    //            `'TTs.,                 `\\      /7\n    //                 `'TTs.,             |,    AV\n    //                      `'TTs.,        `\\   /7\n    //                           `'TTs.,    |, AV\n    //                                `'TTs.,\\/7\n    //                                     `'T`\n    //                                       v1\n    //\n    const faces = []\n    if (dot(v3.point, normal) - distPO < 0) {\n      // the face is not able to see the point so `planeNormal`\n      // is pointing outside the tetrahedron\n      faces.push(\n        Face.createTriangle(v0, v1, v2),\n        Face.createTriangle(v3, v1, v0),\n        Face.createTriangle(v3, v2, v1),\n        Face.createTriangle(v3, v0, v2)\n      )\n\n      // set the opposite edge\n      for (i = 0; i < 3; i += 1) {\n        const j = (i + 1) % 3\n        // join face[i] i > 0, with the first face\n        faces[i + 1].getEdge(2).setOpposite(faces[0].getEdge(j))\n        // join face[i] with face[i + 1], 1 <= i <= 3\n        faces[i + 1].getEdge(1).setOpposite(faces[j + 1].getEdge(0))\n      }\n    } else {\n      // the face is able to see the point so `planeNormal`\n      // is pointing inside the tetrahedron\n      faces.push(\n        Face.createTriangle(v0, v2, v1),\n        Face.createTriangle(v3, v0, v1),\n        Face.createTriangle(v3, v1, v2),\n        Face.createTriangle(v3, v2, v0)\n      )\n\n      // set the opposite edge\n      for (i = 0; i < 3; i += 1) {\n        const j = (i + 1) % 3\n        // join face[i] i > 0, with the first face\n        faces[i + 1].getEdge(2).setOpposite(faces[0].getEdge((3 - i) % 3))\n        // join face[i] with face[i + 1]\n        faces[i + 1].getEdge(0).setOpposite(faces[j + 1].getEdge(1))\n      }\n    }\n\n    // the initial hull is the tetrahedron\n    for (i = 0; i < 4; i += 1) {\n      this.faces.push(faces[i])\n    }\n\n    // initial assignment of vertices to the faces of the tetrahedron\n    for (i = 0; i < vertices.length; i += 1) {\n      const vertex = vertices[i]\n      if (vertex !== v0 && vertex !== v1 && vertex !== v2 && vertex !== v3) {\n        maxDistance = this.tolerance\n        let maxFace\n        for (j = 0; j < 4; j += 1) {\n          const distance = faces[j].distanceToPlane(vertex.point)\n          if (distance > maxDistance) {\n            maxDistance = distance\n            maxFace = faces[j]\n          }\n        }\n\n        if (maxFace) {\n          this.addVertexToFace(vertex, maxFace)\n        }\n      }\n    }\n  }\n\n  reindexFaceAndVertices () {\n    // remove inactive faces\n    const activeFaces = []\n    for (let i = 0; i < this.faces.length; i += 1) {\n      const face = this.faces[i]\n      if (face.mark === VISIBLE) {\n        activeFaces.push(face)\n      }\n    }\n    this.faces = activeFaces\n  }\n\n  collectFaces (skipTriangulation) {\n    const faceIndices = []\n    for (let i = 0; i < this.faces.length; i += 1) {\n      if (this.faces[i].mark !== VISIBLE) {\n        throw Error('attempt to include a destroyed face in the hull')\n      }\n      const indices = this.faces[i].collectIndices()\n      if (skipTriangulation) {\n        faceIndices.push(indices)\n      } else {\n        for (let j = 0; j < indices.length - 2; j += 1) {\n          faceIndices.push(\n            [indices[0], indices[j + 1], indices[j + 2]]\n          )\n        }\n      }\n    }\n    return faceIndices\n  }\n\n  /**\n   * Finds the next vertex to make faces with the current hull\n   *\n   * - let `face` be the first face existing in the `claimed` vertex list\n   *  - if `face` doesn't exist then return since there're no vertices left\n   *  - otherwise for each `vertex` that face sees find the one furthest away\n   *  from `face`\n   *\n   * @return {Vertex|undefined} Returns undefined when there're no more\n   * visible vertices\n   */\n  nextVertexToAdd () {\n    if (!this.claimed.isEmpty()) {\n      let eyeVertex, vertex\n      let maxDistance = 0\n      const eyeFace = this.claimed.first().face\n      for (vertex = eyeFace.outside; vertex && vertex.face === eyeFace; vertex = vertex.next) {\n        const distance = eyeFace.distanceToPlane(vertex.point)\n        if (distance > maxDistance) {\n          maxDistance = distance\n          eyeVertex = vertex\n        }\n      }\n      return eyeVertex\n    }\n  }\n\n  /**\n   * Computes a chain of half edges in ccw order called the `horizon`, for an\n   * edge to be part of the horizon it must join a face that can see\n   * `eyePoint` and a face that cannot see `eyePoint`\n   *\n   * @param {number[]} eyePoint - The coordinates of a point\n   * @param {HalfEdge} crossEdge - The edge used to jump to the current `face`\n   * @param {Face} face - The current face being tested\n   * @param {HalfEdge[]} horizon - The edges that form part of the horizon in\n   * ccw order\n   */\n  computeHorizon (eyePoint, crossEdge, face, horizon) {\n    // moves face's vertices to the `unclaimed` vertex list\n    this.deleteFaceVertices(face)\n\n    face.mark = DELETED\n\n    let edge\n    if (!crossEdge) {\n      edge = crossEdge = face.getEdge(0)\n    } else {\n      // start from the next edge since `crossEdge` was already analyzed\n      // (actually `crossEdge.opposite` was the face who called this method\n      // recursively)\n      edge = crossEdge.next\n    }\n\n    // All the faces that are able to see `eyeVertex` are defined as follows\n    //\n    //       v    /\n    //           / <== visible face\n    //          /\n    //         |\n    //         | <== not visible face\n    //\n    //  dot(v, visible face normal) - visible face offset > this.tolerance\n    //\n    do {\n      const oppositeEdge = edge.opposite\n      const oppositeFace = oppositeEdge.face\n      if (oppositeFace.mark === VISIBLE) {\n        if (oppositeFace.distanceToPlane(eyePoint) > this.tolerance) {\n          this.computeHorizon(eyePoint, oppositeEdge, oppositeFace, horizon)\n        } else {\n          horizon.push(edge)\n        }\n      }\n      edge = edge.next\n    } while (edge !== crossEdge)\n  }\n\n  /**\n   * Creates a face with the points `eyeVertex.point`, `horizonEdge.tail` and\n   * `horizonEdge.tail` in ccw order\n   *\n   * @param {Vertex} eyeVertex\n   * @param {HalfEdge} horizonEdge\n   * @return {HalfEdge} The half edge whose vertex is the eyeVertex\n   */\n  addAdjoiningFace (eyeVertex, horizonEdge) {\n    // all the half edges are created in ccw order thus the face is always\n    // pointing outside the hull\n    // edges:\n    //\n    //                  eyeVertex.point\n    //                       / \\\n    //                      /   \\\n    //                  1  /     \\  0\n    //                    /       \\\n    //                   /         \\\n    //                  /           \\\n    //          horizon.tail --- horizon.head\n    //                        2\n    //\n    const face = Face.createTriangle(\n      eyeVertex,\n      horizonEdge.tail(),\n      horizonEdge.head()\n    )\n    this.faces.push(face)\n    // join face.getEdge(-1) with the horizon's opposite edge\n    // face.getEdge(-1) = face.getEdge(2)\n    face.getEdge(-1).setOpposite(horizonEdge.opposite)\n    return face.getEdge(0)\n  }\n\n  /**\n   * Adds horizon.length faces to the hull, each face will be 'linked' with the\n   * horizon opposite face and the face on the left/right\n   *\n   * @param {Vertex} eyeVertex\n   * @param {HalfEdge[]} horizon - A chain of half edges in ccw order\n   */\n  addNewFaces (eyeVertex, horizon) {\n    this.newFaces = []\n    let firstSideEdge, previousSideEdge\n    for (let i = 0; i < horizon.length; i += 1) {\n      const horizonEdge = horizon[i]\n      // returns the right side edge\n      const sideEdge = this.addAdjoiningFace(eyeVertex, horizonEdge)\n      if (!firstSideEdge) {\n        firstSideEdge = sideEdge\n      } else {\n        // joins face.getEdge(1) with previousFace.getEdge(0)\n        sideEdge.next.setOpposite(previousSideEdge)\n      }\n      this.newFaces.push(sideEdge.face)\n      previousSideEdge = sideEdge\n    }\n    firstSideEdge.next.setOpposite(previousSideEdge)\n  }\n\n  /**\n   * Computes the distance from `edge` opposite face's centroid to\n   * `edge.face`\n   *\n   * @param {HalfEdge} edge\n   * @return {number}\n   * - A positive number when the centroid of the opposite face is above the\n   *   face i.e. when the faces are concave\n   * - A negative number when the centroid of the opposite face is below the\n   *   face i.e. when the faces are convex\n   */\n  oppositeFaceDistance (edge) {\n    return edge.face.distanceToPlane(edge.opposite.face.centroid)\n  }\n\n  /**\n   * Merges a face with none/any/all its neighbors according to the strategy\n   * used\n   *\n   * if `mergeType` is MERGE_NON_CONVEX_WRT_LARGER_FACE then the merge will be\n   * decided based on the face with the larger area, the centroid of the face\n   * with the smaller area will be checked against the one with the larger area\n   * to see if it's in the merge range [tolerance, -tolerance] i.e.\n   *\n   *    dot(centroid smaller face, larger face normal) - larger face offset > -tolerance\n   *\n   * Note that the first check (with +tolerance) was done on `computeHorizon`\n   *\n   * If the above is not true then the check is done with respect to the smaller\n   * face i.e.\n   *\n   *    dot(centroid larger face, smaller face normal) - smaller face offset > -tolerance\n   *\n   * If true then it means that two faces are non convex (concave), even if the\n   * dot(...) - offset value is > 0 (that's the point of doing the merge in the\n   * first place)\n   *\n   * If two faces are concave then the check must also be done on the other face\n   * but this is done in another merge pass, for this to happen the face is\n   * marked in a temporal NON_CONVEX state\n   *\n   * if `mergeType` is MERGE_NON_CONVEX then two faces will be merged only if\n   * they pass the following conditions\n   *\n   *    dot(centroid smaller face, larger face normal) - larger face offset > -tolerance\n   *    dot(centroid larger face, smaller face normal) - smaller face offset > -tolerance\n   *\n   * @param {Face} face\n   * @param {number} mergeType - Either MERGE_NON_CONVEX_WRT_LARGER_FACE or\n   * MERGE_NON_CONVEX\n   */\n  doAdjacentMerge (face, mergeType) {\n    let edge = face.edge\n    let convex = true\n    let it = 0\n    do {\n      if (it >= face.nVertices) {\n        throw Error('merge recursion limit exceeded')\n      }\n      const oppositeFace = edge.opposite.face\n      let merge = false\n\n      // Important notes about the algorithm to merge faces\n      //\n      // - Given a vertex `eyeVertex` that will be added to the hull\n      //   all the faces that cannot see `eyeVertex` are defined as follows\n      //\n      //      dot(v, not visible face normal) - not visible offset < tolerance\n      //\n      // - Two faces can be merged when the centroid of one of these faces\n      // projected to the normal of the other face minus the other face offset\n      // is in the range [tolerance, -tolerance]\n      // - Since `face` (given in the input for this method) has passed the\n      // check above we only have to check the lower bound e.g.\n      //\n      //      dot(v, not visible face normal) - not visible offset > -tolerance\n      //\n      if (mergeType === MERGE_NON_CONVEX) {\n        if (this.oppositeFaceDistance(edge) > -this.tolerance ||\n            this.oppositeFaceDistance(edge.opposite) > -this.tolerance) {\n          merge = true\n        }\n      } else {\n        if (face.area > oppositeFace.area) {\n          if (this.oppositeFaceDistance(edge) > -this.tolerance) {\n            merge = true\n          } else if (this.oppositeFaceDistance(edge.opposite) > -this.tolerance) {\n            convex = false\n          }\n        } else {\n          if (this.oppositeFaceDistance(edge.opposite) > -this.tolerance) {\n            merge = true\n          } else if (this.oppositeFaceDistance(edge) > -this.tolerance) {\n            convex = false\n          }\n        }\n      }\n\n      if (merge) {\n        // when two faces are merged it might be possible that redundant faces\n        // are destroyed, in that case move all the visible vertices from the\n        // destroyed faces to the `unclaimed` vertex list\n        const discardedFaces = face.mergeAdjacentFaces(edge, [])\n        for (let i = 0; i < discardedFaces.length; i += 1) {\n          this.deleteFaceVertices(discardedFaces[i], face)\n        }\n        return true\n      }\n\n      edge = edge.next\n      it += 1\n    } while (edge !== face.edge)\n    if (!convex) {\n      face.mark = NON_CONVEX\n    }\n    return false\n  }\n\n  /**\n   * Adds a vertex to the hull with the following algorithm\n   *\n   * - Compute the `horizon` which is a chain of half edges, for an edge to\n   *   belong to this group it must be the edge connecting a face that can\n   *   see `eyeVertex` and a face which cannot see `eyeVertex`\n   * - All the faces that can see `eyeVertex` have its visible vertices removed\n   *   from the claimed VertexList\n   * - A new set of faces is created with each edge of the `horizon` and\n   *   `eyeVertex`, each face is connected with the opposite horizon face and\n   *   the face on the left/right\n   * - The new faces are merged if possible with the opposite horizon face first\n   *   and then the faces on the right/left\n   * - The vertices removed from all the visible faces are assigned to the new\n   *   faces if possible\n   *\n   * @param {Vertex} eyeVertex\n   */\n  addVertexToHull (eyeVertex) {\n    const horizon = []\n\n    this.unclaimed.clear()\n\n    // remove `eyeVertex` from `eyeVertex.face` so that it can't be added to the\n    // `unclaimed` vertex list\n    this.removeVertexFromFace(eyeVertex, eyeVertex.face)\n    this.computeHorizon(eyeVertex.point, null, eyeVertex.face, horizon)\n    this.addNewFaces(eyeVertex, horizon)\n\n    // first merge pass\n    // Do the merge with respect to the larger face\n    for (let i = 0; i < this.newFaces.length; i += 1) {\n      const face = this.newFaces[i]\n      if (face.mark === VISIBLE) {\n        while (this.doAdjacentMerge(face, MERGE_NON_CONVEX_WRT_LARGER_FACE)) {}\n      }\n    }\n\n    // second merge pass\n    // Do the merge on non convex faces (a face is marked as non convex in the\n    // first pass)\n    for (let i = 0; i < this.newFaces.length; i += 1) {\n      const face = this.newFaces[i]\n      if (face.mark === NON_CONVEX) {\n        face.mark = VISIBLE\n        while (this.doAdjacentMerge(face, MERGE_NON_CONVEX)) {}\n      }\n    }\n\n    // reassign `unclaimed` vertices to the new faces\n    this.resolveUnclaimedPoints(this.newFaces)\n  }\n\n  build () {\n    let eyeVertex\n    this.createInitialSimplex()\n    while ((eyeVertex = this.nextVertexToAdd())) {\n      this.addVertexToHull(eyeVertex)\n    }\n    this.reindexFaceAndVertices()\n  }\n}\n\nmodule.exports = QuickHull\n","const QuickHull = require('./QuickHull')\n\n/*\n * Original source from quickhull3d (https://github.com/mauriciopoppe/quickhull3d)\n * Copyright (c) 2015 Mauricio Poppe\n *\n * Adapted to JSCAD by Jeff Gay\n */\n\nconst runner = (points, options = {}) => {\n  const instance = new QuickHull(points)\n  instance.build()\n  return instance.collectFaces(options.skipTriangulation)\n}\n\nmodule.exports = runner\n","const flatten = require('../../utils/flatten')\n\nconst geom3 = require('../../geometries/geom3')\nconst poly3 = require('../../geometries/poly3')\n\nconst quickhull = require('./quickhull')\n\n/*\n * Create a convex hull of the given geometries (geom3).\n * @param {...geometries} geometries - list of geom3 geometries\n * @returns {geom3} new geometry\n */\nconst hullGeom3 = (...geometries) => {\n  geometries = flatten(geometries)\n\n  if (geometries.length === 1) return geometries[0]\n\n  // extract the unique vertices from the geometries\n  const uniquevertices = []\n  const found = new Map()\n  for (let g = 0; g < geometries.length; ++g) {\n    const polygons = geom3.toPolygons(geometries[g])\n    for (let p = 0; p < polygons.length; ++p) {\n      const vertices = polygons[p].vertices\n      for (let v = 0; v < vertices.length; ++v) {\n        const id = `${vertices[v]}`\n        if (found.has(id)) continue\n        uniquevertices.push(vertices[v])\n        found.set(id, true)\n      }\n    }\n  }\n  found.clear()\n\n  const faces = quickhull(uniquevertices, { skipTriangulation: true })\n\n  const polygons = faces.map((face) => {\n    const vertices = face.map((index) => uniquevertices[index])\n    return poly3.create(vertices)\n  })\n\n  return geom3.create(polygons)\n}\n\nmodule.exports = hullGeom3\n","const flatten = require('../../utils/flatten')\nconst areAllShapesTheSameType = require('../../utils/areAllShapesTheSameType')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\nconst hullPath2 = require('./hullPath2')\nconst hullGeom2 = require('./hullGeom2')\nconst hullGeom3 = require('./hullGeom3')\n\n/**\n * Create a convex hull of the given geometries.\n * The given geometries should be of the same type, either geom2 or geom3 or path2.\n * @param {...Objects} geometries - list of geometries from which to create a hull\n * @returns {geom2|geom3} new geometry\n * @alias module:modeling/hulls.hull\n *\n * @example\n * let myshape = hull(rectangle({center: [-5,-5]}), ellipse({center: [5,5]}))\n *\n * @example\n * +-------+           +-------+\n * |       |           |        \\\n * |   A   |           |         \\\n * |       |           |          \\\n * +-------+           +           \\\n *                  =   \\           \\\n *       +-------+       \\           +\n *       |       |        \\          |\n *       |   B   |         \\         |\n *       |       |          \\        |\n *       +-------+           +-------+\n */\nconst hull = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n\n  if (!areAllShapesTheSameType(geometries)) {\n    throw new Error('only hulls of the same type are supported')\n  }\n\n  const geometry = geometries[0]\n  if (path2.isA(geometry)) return hullPath2(geometries)\n  if (geom2.isA(geometry)) return hullGeom2(geometries)\n  if (geom3.isA(geometry)) return hullGeom3(geometries)\n\n  // FIXME should this throw an error for unknown geometries?\n  return geometry\n}\n\nmodule.exports = hull\n","const flatten = require('../../utils/flatten')\n\nconst union = require('../booleans/union')\n\nconst hull = require('./hull')\n\n/**\n * Create a chain of hulled geometries from the given gemetries.\n * Essentially hull A+B, B+C, C+D, etc., then union the results.\n * The given geometries should be of the same type, either geom2 or geom3 or path2.\n *\n * @param {...Objects} geometries - list of geometries from which to create a hull\n * @returns {geom2|geom3} new geometry\n * @alias module:modeling/hulls.hullChain\n *\n * @example\n * let newshape = hullChain(rectangle({center: [-5,-5]}), circle({center: [0,0]}), rectangle({center: [5,5]}))\n *\n * @example\n * +-------+   +-------+     +-------+   +------+\n * |       |   |       |     |        \\ /       |\n * |   A   |   |   C   |     |         |        |\n * |       |   |       |     |                  |\n * +-------+   +-------+     +                  +\n *                       =   \\                 /\n *       +-------+            \\               /\n *       |       |             \\             /\n *       |   B   |              \\           /\n *       |       |               \\         /\n *       +-------+                +-------+\n */\nconst hullChain = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length < 2) throw new Error('wrong number of arguments')\n\n  const hulls = []\n  for (let i = 1; i < geometries.length; i++) {\n    hulls.push(hull(geometries[i - 1], geometries[i]))\n  }\n  return union(hulls)\n}\n\nmodule.exports = hullChain\n","/**\n * All shapes (primitives or the results of operations) can be passed to hull functions\n * to determine the convex hull of all points.\n * In all cases, the function returns the results, and never changes the original shapes.\n * @module modeling/hulls\n * @example\n * const { hull, hullChain } = require('@jscad/modeling').hulls\n */\nmodule.exports = {\n  hull: require('./hull'),\n  hullChain: require('./hullChain')\n}\n","const vec3 = require('../../maths/vec3')\n\nconst poly3 = require('../../geometries/poly3')\n\nconst isValidPoly3 = (epsilon, polygon) => {\n  const area = poly3.measureArea(polygon)\n  return (Number.isFinite(area) && area > epsilon)\n}\n\n/*\n * Snap the given list of polygons to the epsilon.\n */\nconst snapPolygons = (epsilon, polygons) => {\n  let newpolygons = polygons.map((polygon) => {\n    const snapvertices = polygon.vertices.map((vertice) => vec3.snap(vec3.create(), epsilon, vertice))\n    // only retain unique vertices\n    const newvertices = []\n    for (let i = 0; i < snapvertices.length; i++) {\n      const j = (i + 1) % snapvertices.length\n      if (! vec3.equals(snapvertices[i], snapvertices[j])) newvertices.push(snapvertices[i])\n    }\n    return poly3.create(newvertices)\n  })\n  // snap can produce polygons with zero (0) area, remove those\n  const epsilonArea = (epsilon * epsilon * Math.sqrt(3) / 4)\n  newpolygons = newpolygons.filter((polygon) => isValidPoly3(epsilonArea, polygon))\n  return newpolygons\n}\n\nmodule.exports = snapPolygons\n","const vec3 = require('../../maths/vec3')\n\nconst poly3 = require('../../geometries/poly3')\n\n// create a set of edges from the given polygon, and link the edges as well\nconst createEdges = (polygon) => {\n  const points = poly3.toPoints(polygon)\n  const edges = []\n  for (let i = 0; i < points.length; i++) {\n    const j = (i + 1) % points.length\n    const edge = {\n      v1: points[i],\n      v2: points[j]\n    }\n    edges.push(edge)\n  }\n  // link the edges together\n  for (let i = 0; i < edges.length; i++) {\n    const j = (i + 1) % points.length\n    edges[i].next = edges[j]\n    edges[j].prev = edges[i]\n  }\n  return edges\n}\n\nconst insertEdge = (edges, edge) => {\n  const key = `${edge.v1}:${edge.v2}`\n  edges.set(key, edge)\n}\n\nconst deleteEdge = (edges, edge) => {\n  const key = `${edge.v1}:${edge.v2}`\n  edges.delete(key)\n}\n\nconst findOppositeEdge = (edges, edge) => {\n  const key = `${edge.v2}:${edge.v1}` // NOTE: OPPOSITE OF INSERT KEY\n  return edges.get(key)\n}\n\n// calculate the two adjoining angles between the opposing edges\nconst calculateAnglesBetween = (current, opposite, normal) => {\n  let v0 = current.prev.v1\n  let v1 = current.prev.v2\n  let v2 = opposite.next.v2\n  const angle1 = calculateAngle(v0, v1, v2, normal)\n\n  v0 = opposite.prev.v1\n  v1 = opposite.prev.v2\n  v2 = current.next.v2\n  const angle2 = calculateAngle(v0, v1, v2, normal)\n\n  return [angle1, angle2]\n}\n\nconst calculateAngle = (prevpoint, point, nextpoint, normal) => {\n  const crossproduct = vec3.cross(\n    vec3.subtract(point, prevpoint),\n    vec3.subtract(nextpoint, point)\n  )\n  return vec3.dot(crossproduct, normal)\n}\n\n// create a polygon starting from the given edge (if possible)\nconst createPolygonAnd = (edge) => {\n  let polygon\n  const points = []\n  while (edge.next) {\n    const next = edge.next\n\n    points.push(edge.v1)\n\n    edge.v1 = null\n    edge.v2 = null\n    edge.next = null\n    edge.prev = null\n\n    edge = next\n  }\n  if (points.length > 0) polygon = poly3.fromPoints(points)\n  return polygon\n}\n\n/*\n * Merge COPLANAR polygons that share common edges.\n * @param {poly3[]} sourcepolygons - list of polygons\n * @returns {poly3[]} new set of polygons\n */\nconst mergeCoplanarPolygons = (epsilon, sourcepolygons) => {\n  if (sourcepolygons.length < 2) return sourcepolygons\n\n  const normal = sourcepolygons[0].plane\n  const polygons = sourcepolygons.slice()\n  const edgeList = new Map()\n\n  while (polygons.length > 0) { // NOTE: the length of polygons WILL change\n    const polygon = polygons.shift()\n    const edges = createEdges(polygon)\n    for (let i = 0; i < edges.length; i++) {\n      const current = edges[i]\n      const opposite = findOppositeEdge(edgeList, current)\n      if (opposite) {\n        const angles = calculateAnglesBetween(current, opposite, normal)\n        if (angles[0] >= 0 && angles[1] >= 0) {\n          const edge1 = opposite.next\n          const edge2 = current.next\n          // adjust the edges, linking together opposing polygons\n          current.prev.next = opposite.next\n          current.next.prev = opposite.prev\n\n          opposite.prev.next = current.next\n          opposite.next.prev = current.prev\n\n          // remove the opposing edges\n          current.v1 = null\n          current.v2 = null\n          current.next = null\n          current.prev = null\n\n          deleteEdge(edgeList, opposite)\n\n          opposite.v1 = null\n          opposite.v2 = null\n          opposite.next = null\n          opposite.prev = null\n\n          const mergeEdges = (list, e1, e2) => {\n            const newedge = {\n              v1: e2.v1,\n              v2: e1.v2,\n              next: e1.next,\n              prev: e2.prev\n            }\n            // link in newedge\n            e2.prev.next = newedge\n            e1.next.prev = newedge\n            // remove old edges\n            deleteEdge(list, e1)\n            e1.v1 = null\n            e1.v2 = null\n            e1.next = null\n            e1.prev = null\n\n            deleteEdge(list, e2)\n            e2.v1 = null\n            e2.v2 = null\n            e2.next = null\n            e2.prev = null\n          }\n\n          if (angles[0] === 0.0) {\n            mergeEdges(edgeList, edge1, edge1.prev)\n          }\n          if (angles[1] === 0.0) {\n            mergeEdges(edgeList, edge2, edge2.prev)\n          }\n        }\n      } else {\n        if (current.next) insertEdge(edgeList, current)\n      }\n    }\n  }\n\n  // build a set of polygons from the remaining edges\n  const destpolygons = []\n  edgeList.forEach((edge) => {\n    const polygon = createPolygonAnd(edge)\n    if (polygon) destpolygons.push(polygon)\n  })\n\n  return destpolygons\n}\n\n// Normals are directional vectors with component values from 0 to 1.0, requiring specialized comparision\n// This EPS is derived from a serieas of tests to determine the optimal precision for comparing coplanar polygons,\n// as provided by the sphere primitive at high segmentation\n// This EPS is for 64 bit Number values\nconst NEPS = 1e-13\n\n// Compare two normals (unit vectors) for equality.\nconst aboutEqualNormals = (a, b) => {\n  return (Math.abs(a[0] - b[0]) <= NEPS && Math.abs(a[1] - b[1]) <= NEPS && Math.abs(a[2] - b[2]) <= NEPS)\n}\n\nconst coplanar = (plane1, plane2) => {\n  // expect the same distance from the origin, within tolerance\n  if (Math.abs(plane1[3] - plane2[3]) < 0.00000015) {\n    return aboutEqualNormals(plane1, plane2)\n  }\n  return false\n}\n\nconst mergePolygons = (epsilon, polygons) => {\n  const polygonsPerPlane = [] // elements: [plane, [poly3...]]\n  polygons.forEach((polygon) => {\n    const mapping = polygonsPerPlane.find((element) => coplanar(element[0], poly3.plane(polygon)))\n    if (mapping) {\n      const polygons = mapping[1]\n      polygons.push(polygon)\n    } else {\n      polygonsPerPlane.push([poly3.plane(polygon), [polygon]])\n    }\n  })\n\n  let destpolygons = []\n  polygonsPerPlane.forEach((mapping) => {\n    const sourcepolygons = mapping[1]\n    const retesselayedpolygons = mergeCoplanarPolygons(epsilon, sourcepolygons)\n    destpolygons = destpolygons.concat(retesselayedpolygons)\n  })\n  return destpolygons\n}\n\nmodule.exports = mergePolygons\n","const constants = require('../../maths/constants')\nconst vec3 = require('../../maths/vec3')\nconst poly3 = require('../../geometries/poly3')\n\nconst assert = false\n\nconst getTag = (vertex) => `${vertex}`\n\nconst addSide = (sidemap, vertextag2sidestart, vertextag2sideend, vertex0, vertex1, polygonindex) => {\n  const starttag = getTag(vertex0)\n  const endtag = getTag(vertex1)\n  if (assert && starttag === endtag) throw new Error('assert failed')\n  const newsidetag = `${starttag}/${endtag}`\n  const reversesidetag = `${endtag}/${starttag}`\n  if (sidemap.has(reversesidetag)) {\n    // remove the opposing side from mappings\n    deleteSide(sidemap, vertextag2sidestart, vertextag2sideend, vertex1, vertex0, null)\n    return null\n  }\n  // add the side to the mappings\n  const newsideobj = {\n    vertex0: vertex0,\n    vertex1: vertex1,\n    polygonindex: polygonindex\n  }\n  if (!(sidemap.has(newsidetag))) {\n    sidemap.set(newsidetag, [newsideobj])\n  } else {\n    sidemap.get(newsidetag).push(newsideobj)\n  }\n  if (starttag in vertextag2sidestart) {\n    vertextag2sidestart[starttag].push(newsidetag)\n  } else {\n    vertextag2sidestart[starttag] = [newsidetag]\n  }\n  if (endtag in vertextag2sideend) {\n    vertextag2sideend[endtag].push(newsidetag)\n  } else {\n    vertextag2sideend[endtag] = [newsidetag]\n  }\n  return newsidetag\n}\n\nconst deleteSide = (sidemap, vertextag2sidestart, vertextag2sideend, vertex0, vertex1, polygonindex) => {\n  const starttag = getTag(vertex0)\n  const endtag = getTag(vertex1)\n  const sidetag = `${starttag}/${endtag}`\n  if (assert && !(sidemap.has(sidetag))) throw new Error('assert failed')\n  let idx = -1\n  const sideobjs = sidemap.get(sidetag)\n  for (let i = 0; i < sideobjs.length; i++) {\n    const sideobj = sideobjs[i]\n    let sidetag = getTag(sideobj.vertex0)\n    if (sidetag !== starttag) continue\n    sidetag = getTag(sideobj.vertex1)\n    if (sidetag !== endtag) continue\n    if (polygonindex !== null) {\n      if (sideobj.polygonindex !== polygonindex) continue\n    }\n    idx = i\n    break\n  }\n  if (assert && idx < 0) throw new Error('assert failed')\n  sideobjs.splice(idx, 1)\n  if (sideobjs.length === 0) {\n    sidemap.delete(sidetag)\n  }\n\n  // adjust start and end lists\n  idx = vertextag2sidestart[starttag].indexOf(sidetag)\n  if (assert && idx < 0) throw new Error('assert failed')\n  vertextag2sidestart[starttag].splice(idx, 1)\n  if (vertextag2sidestart[starttag].length === 0) {\n    delete vertextag2sidestart[starttag]\n  }\n\n  idx = vertextag2sideend[endtag].indexOf(sidetag)\n  if (assert && idx < 0) throw new Error('assert failed')\n  vertextag2sideend[endtag].splice(idx, 1)\n  if (vertextag2sideend[endtag].length === 0) {\n    delete vertextag2sideend[endtag]\n  }\n}\n\n/*\n  Suppose we have two polygons ACDB and EDGF:\n\n   A-----B\n   |     |\n   |     E--F\n   |     |  |\n   C-----D--G\n\n  Note that vertex E forms a T-junction on the side BD. In this case some STL slicers will complain\n  that the solid is not watertight. This is because the watertightness check is done by checking if\n  each side DE is matched by another side ED.\n\n  This function will return a new solid with ACDB replaced by ACDEB\n\n  Note that this can create polygons that are slightly non-convex (due to rounding errors). Therefore the result should\n  not be used for further CSG operations!\n\n  Note this function is meant to be used to preprocess geometries when triangulation is required, i.e. AMF, STL, etc.\n  Do not use the results in other operations.\n*/\n\n/*\n * Insert missing vertices for T junctions, which creates polygons that can be triangulated.\n * @param {Array} polygons - the original polygons which may or may not have T junctions\n * @return original polygons (if no T junctions found) or new polygons with updated vertices\n */\nconst insertTjunctions = (polygons) => {\n  // STEP 1 : build a map of 'unmatched' sides from the polygons\n  // i.e. side AB in one polygon does not have a matching side BA in another polygon\n  const sidemap = new Map()\n  for (let polygonindex = 0; polygonindex < polygons.length; polygonindex++) {\n    const polygon = polygons[polygonindex]\n    const numvertices = polygon.vertices.length\n    if (numvertices >= 3) {\n      let vertex = polygon.vertices[0]\n      let vertextag = getTag(vertex)\n      for (let vertexindex = 0; vertexindex < numvertices; vertexindex++) {\n        let nextvertexindex = vertexindex + 1\n        if (nextvertexindex === numvertices) nextvertexindex = 0\n\n        const nextvertex = polygon.vertices[nextvertexindex]\n        const nextvertextag = getTag(nextvertex)\n\n        const sidetag = `${vertextag}/${nextvertextag}`\n        const reversesidetag = `${nextvertextag}/${vertextag}`\n        if (sidemap.has(reversesidetag)) {\n          // this side matches the same side in another polygon. Remove from sidemap\n          // FIXME is this check necessary? there should only be ONE(1) opposing side\n          // FIXME assert ?\n          const ar = sidemap.get(reversesidetag)\n          ar.splice(-1, 1)\n          if (ar.length === 0) {\n            sidemap.delete(reversesidetag)\n          }\n        } else {\n          const sideobj = {\n            vertex0: vertex,\n            vertex1: nextvertex,\n            polygonindex: polygonindex\n          }\n          if (!(sidemap.has(sidetag))) {\n            sidemap.set(sidetag, [sideobj])\n          } else {\n            sidemap.get(sidetag).push(sideobj)\n          }\n        }\n        vertex = nextvertex\n        vertextag = nextvertextag\n      }\n    } else {\n      console.warn('warning: invalid polygon found during insertTjunctions')\n    }\n  }\n\n  if (sidemap.size > 0) {\n    // console.log('insertTjunctions',sidemap.size)\n    // STEP 2 : create a list of starting sides and ending sides\n    const vertextag2sidestart = {}\n    const vertextag2sideend = {}\n    const sidestocheck = {}\n    for (const [sidetag, sideobjs] of sidemap) {\n      sidestocheck[sidetag] = true\n      sideobjs.forEach((sideobj) => {\n        const starttag = getTag(sideobj.vertex0)\n        const endtag = getTag(sideobj.vertex1)\n        if (starttag in vertextag2sidestart) {\n          vertextag2sidestart[starttag].push(sidetag)\n        } else {\n          vertextag2sidestart[starttag] = [sidetag]\n        }\n        if (endtag in vertextag2sideend) {\n          vertextag2sideend[endtag].push(sidetag)\n        } else {\n          vertextag2sideend[endtag] = [sidetag]\n        }\n      })\n    }\n\n    // STEP 3 : if sidemap is not empty\n    const newpolygons = polygons.slice(0) // make a copy in order to replace polygons inline\n    while (true) {\n      if (sidemap.size === 0) break\n\n      for (const sidetag of sidemap.keys()) {\n        sidestocheck[sidetag] = true\n      }\n\n      let donesomething = false\n      while (true) {\n        const sidetags = Object.keys(sidestocheck)\n        if (sidetags.length === 0) break // sidestocheck is empty, we're done!\n        const sidetagtocheck = sidetags[0]\n        let donewithside = true\n        if (sidemap.has(sidetagtocheck)) {\n          const sideobjs = sidemap.get(sidetagtocheck)\n          if (assert && sideobjs.length === 0) throw new Error('assert failed')\n          const sideobj = sideobjs[0]\n          for (let directionindex = 0; directionindex < 2; directionindex++) {\n            const startvertex = (directionindex === 0) ? sideobj.vertex0 : sideobj.vertex1\n            const endvertex = (directionindex === 0) ? sideobj.vertex1 : sideobj.vertex0\n            const startvertextag = getTag(startvertex)\n            const endvertextag = getTag(endvertex)\n            let matchingsides = []\n            if (directionindex === 0) {\n              if (startvertextag in vertextag2sideend) {\n                matchingsides = vertextag2sideend[startvertextag]\n              }\n            } else {\n              if (startvertextag in vertextag2sidestart) {\n                matchingsides = vertextag2sidestart[startvertextag]\n              }\n            }\n            for (let matchingsideindex = 0; matchingsideindex < matchingsides.length; matchingsideindex++) {\n              const matchingsidetag = matchingsides[matchingsideindex]\n              const matchingside = sidemap.get(matchingsidetag)[0]\n              const matchingsidestartvertex = (directionindex === 0) ? matchingside.vertex0 : matchingside.vertex1\n              const matchingsideendvertex = (directionindex === 0) ? matchingside.vertex1 : matchingside.vertex0\n              const matchingsidestartvertextag = getTag(matchingsidestartvertex)\n              const matchingsideendvertextag = getTag(matchingsideendvertex)\n              if (assert && matchingsideendvertextag !== startvertextag) throw new Error('assert failed')\n              if (matchingsidestartvertextag === endvertextag) {\n                // matchingside cancels sidetagtocheck\n                deleteSide(sidemap, vertextag2sidestart, vertextag2sideend, startvertex, endvertex, null)\n                deleteSide(sidemap, vertextag2sidestart, vertextag2sideend, endvertex, startvertex, null)\n                donewithside = false\n                directionindex = 2 // skip reverse direction check\n                donesomething = true\n                break\n              } else {\n                const startpos = startvertex\n                const endpos = endvertex\n                const checkpos = matchingsidestartvertex\n                const direction = vec3.subtract(checkpos, startpos)\n                // Now we need to check if endpos is on the line startpos-checkpos:\n                const t = vec3.dot(vec3.subtract(endpos, startpos), direction) / vec3.dot(direction, direction)\n                if ((t > 0) && (t < 1)) {\n                  const closestpoint = vec3.add(startpos, vec3.scale(t, direction))\n                  const distancesquared = vec3.squaredDistance(closestpoint, endpos)\n                  if (distancesquared < (constants.EPS * constants.EPS)) {\n                    // Yes it's a t-junction! We need to split matchingside in two:\n                    const polygonindex = matchingside.polygonindex\n                    const polygon = newpolygons[polygonindex]\n                    // find the index of startvertextag in polygon:\n                    const insertionvertextag = getTag(matchingside.vertex1)\n                    let insertionvertextagindex = -1\n                    for (let i = 0; i < polygon.vertices.length; i++) {\n                      if (getTag(polygon.vertices[i]) === insertionvertextag) {\n                        insertionvertextagindex = i\n                        break\n                      }\n                    }\n                    if (assert && insertionvertextagindex < 0) throw new Error('assert failed')\n                    // split the side by inserting the vertex:\n                    const newvertices = polygon.vertices.slice(0)\n                    newvertices.splice(insertionvertextagindex, 0, endvertex)\n                    const newpolygon = poly3.fromPoints(newvertices)\n\n                    newpolygons[polygonindex] = newpolygon\n\n                    // remove the original sides from our maps\n                    deleteSide(sidemap, vertextag2sidestart, vertextag2sideend, matchingside.vertex0, matchingside.vertex1, polygonindex)\n                    const newsidetag1 = addSide(sidemap, vertextag2sidestart, vertextag2sideend, matchingside.vertex0, endvertex, polygonindex)\n                    const newsidetag2 = addSide(sidemap, vertextag2sidestart, vertextag2sideend, endvertex, matchingside.vertex1, polygonindex)\n                    if (newsidetag1 !== null) sidestocheck[newsidetag1] = true\n                    if (newsidetag2 !== null) sidestocheck[newsidetag2] = true\n                    donewithside = false\n                    directionindex = 2 // skip reverse direction check\n                    donesomething = true\n                    break\n                  } // if(distancesquared < 1e-10)\n                } // if( (t > 0) && (t < 1) )\n              } // if(endingstidestartvertextag === endvertextag)\n            } // for matchingsideindex\n          } // for directionindex\n        } // if(sidetagtocheck in sidemap)\n        if (donewithside) {\n          delete sidestocheck[sidetagtocheck]\n        }\n      }\n      if (!donesomething) break\n    }\n    polygons = newpolygons\n  }\n  sidemap.clear()\n\n  return polygons\n}\n\nmodule.exports = insertTjunctions\n","const vec3 = require('../../maths/vec3')\nconst poly3 = require('../../geometries/poly3')\n\nconst triangulatePolygon = (epsilon, polygon, triangles) => {\n  const nv = polygon.vertices.length\n  if (nv > 3) {\n    if (nv > 4) {\n      // split the polygon using a midpoint\n      const midpoint = [0, 0, 0]\n      polygon.vertices.forEach((vertice) => vec3.add(midpoint, midpoint, vertice))\n      vec3.snap(midpoint, epsilon, vec3.divide(midpoint, midpoint, [nv, nv, nv]))\n      for (let i = 0; i < nv; i++) {\n        triangles.push(poly3.fromPoints([midpoint, polygon.vertices[i], polygon.vertices[(i + 1) % nv]]))\n      }\n      return\n    }\n    // exactly 4 vertices, use simple triangulation\n    triangles.push(poly3.fromPoints([polygon.vertices[0], polygon.vertices[1], polygon.vertices[2]]))\n    triangles.push(poly3.fromPoints([polygon.vertices[0], polygon.vertices[2], polygon.vertices[3]]))\n    return\n  }\n  // exactly 3 vertices, so return the original\n  triangles.push(polygon)\n}\n\n/*\n * Convert the given polygons into a list of triangles (polygons with 3 vertices).\n * NOTE: this is possible because poly3 is CONVEX by definition\n */\nconst triangulatePolygons = (epsilon, polygons) => {\n  const triangles = []\n  polygons.forEach((polygon) => {\n    triangulatePolygon(epsilon, polygon, triangles)\n  })\n  return triangles\n}\n\nmodule.exports = triangulatePolygons\n","const vec3 = require('../../maths/vec3')\nconst line3 = require('../../maths/line3')\n\nconst poly3 = require('../../geometries/poly3')\n\n/*\n * Add a unique edge to the given list of edges.\n * Each edge has a list of associated polygons.\n * Edges with two polygons are complete, while edges with one polygon are open, i.e hole or t-junction..\n */\nconst addEdge = (edges, edge, polygon) => {\n  const ei = edges.findIndex((element) => {\n    if (element) {\n      if (vec3.equals(element[0], edge[0]) && vec3.equals(element[1], edge[1])) return true\n      if (vec3.equals(element[0], edge[1]) && vec3.equals(element[1], edge[0])) return true\n    }\n    return false\n  })\n  if (ei >= 0) {\n    edge = edges[ei]\n    edge.polygons.push(polygon)\n  } else {\n    edge.polygons = [polygon]\n    edges.push(edge)\n  }\n}\n\n/*\n * Remove the edge from the given list of edges.\n */\nconst removeEdge = (edges, edge) => {\n  const ei = edges.findIndex((element) => {\n    if (element) {\n      if (vec3.equals(element[0], edge[0]) && vec3.equals(element[1], edge[1])) return true\n      if (vec3.equals(element[0], edge[1]) && vec3.equals(element[1], edge[0])) return true\n    }\n    return false\n  })\n  if (ei >= 0) {\n    edges[ei].polygons = []\n    edges[ei] = null\n  }\n}\n\n/*\n * Add all edges of the polygon to the given list of edges.\n */\nconst addPolygon = (edges, polygon) => {\n  const vertices = polygon.vertices\n  const nv = vertices.length\n\n  let edge = [vertices[nv - 1], vertices[0]]\n  addEdge(edges, edge, polygon)\n\n  for (let i = 0; i < (nv - 1); i++) {\n    edge = [vertices[i], vertices[i + 1]]\n    addEdge(edges, edge, polygon)\n  }\n}\n\n/*\n * Remove all polygons associated with the old edge from the given list of edges.\n */\nconst removePolygons = (edges, oldedge) => {\n  // console.log('removePolygons',oldedge)\n  const polygons = oldedge.polygons\n  polygons.forEach((polygon) => {\n    const vertices = polygon.vertices\n    const nv = vertices.length\n\n    let edge = [vertices[nv - 1], vertices[0]]\n    removeEdge(edges, edge)\n\n    for (let i = 0; i < (nv - 1); i++) {\n      edge = [vertices[i], vertices[i + 1]]\n      removeEdge(edges, edge)\n    }\n  })\n}\n\n/*\n * Split the polygon, ensuring one polygon includes the open edge.\n */\nconst splitPolygon = (openedge, polygon, eps) => {\n  // console.log('splitPolygon',openedge,polygon)\n  const vertices = polygon.vertices\n  const i = vertices.findIndex((point) => almostEquals(eps, point, openedge[0]))\n  const polygon1 = poly3.fromPoints([vertices[(i + 0) % 3], vertices[(i + 1) % 3], openedge[1]])\n  const polygon2 = poly3.fromPoints([openedge[1], vertices[(i + 1) % 3], vertices[(i + 2) % 3]])\n  if (polygon.color) {\n    polygon1.color = polygon.color\n    polygon2.color = polygon.color\n  }\n  // console.log('polygon1',polygon1)\n  // console.log('polygon2',polygon2)\n  return [polygon1, polygon2]\n}\n\n/*\n * TBD This should be part of vec3.\n */\nconst almostEquals = (eps, v1, v2) => {\n  return (Math.abs(v1[0] - v2[0]) <= eps && Math.abs(v1[1] - v2[1]) <= eps && Math.abs(v1[2] - v2[2]) <= eps)\n}\n\nconst enclosedEdge = (openedge, edge, eps) => {\n  if (openedge.distance < edge.distance) {\n    // only look for opposing edges\n    if (vec3.equals(openedge[0], edge[1])) {\n      // only opposing open edges enclosed by the edge\n      const distanceE0O0 = vec3.squaredDistance(openedge[0], edge[0])\n      const distanceE0O1 = vec3.squaredDistance(openedge[1], edge[0])\n      const distanceE1O0 = vec3.squaredDistance(openedge[0], edge[1])\n      const distanceE1O1 = vec3.squaredDistance(openedge[1], edge[1])\n      if (distanceE0O0 <= edge.distance && distanceE0O1 < edge.distance && distanceE1O0 < edge.distance && distanceE1O1 < edge.distance) {\n        // only look for paralell open edges\n        const line3d = line3.fromPoints(edge[0], edge[1])\n        const closest0 = vec3.snap(vec3.create(), eps, line3.closestPoint(openedge[0], line3d))\n        const closest1 = vec3.snap(vec3.create(), eps, line3.closestPoint(openedge[1], line3d))\n        if (almostEquals(eps, closest0, openedge[0]) && almostEquals(eps, closest1, openedge[1])) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n}\n\n/*\n * Split the edge if posssible from the list of open edges.\n * Return a list of new polygons, or null if not possible\n */\nconst splitEdge = (openedges, edge, eps) => {\n  // console.log('splitEdge',edge)\n  for (let i = 0; i < openedges.length; i++) {\n    const openedge = openedges[i]\n    if (openedge) {\n      if (enclosedEdge(openedge, edge, eps)) {\n        // spit the polygon associated with the edge\n        const polygon = edge.polygons[0]\n        const newpolygons = splitPolygon(openedge, polygon, eps)\n        return newpolygons\n      }\n    }\n  }\n  return null\n}\n\n/*\n * Cull a list of open edges (see above) from the list of edges.\n */\nconst cullOpenEdges = (edges) => {\n  const openedges = []\n  edges.forEach((edge, i) => {\n    const polygons = edge.polygons\n    if (polygons.length === 1) {\n      // console.log('open edge: ',edge[0],'<-->',edge[1])\n      edge.distance = vec3.squaredDistance(edge[0], edge[1])\n      openedges.push(edge)\n    }\n  })\n  // console.log('open edges:',openedges.length)\n  // console.log('**********OPEN*********')\n  // console.log(openedges)\n  // console.log('**********OPEN*********')\n  return openedges\n}\n\n/*\n * Convert the list of edges into a list of polygons.\n */\nconst edgesToPolygons = (edges) => {\n  const polygons = []\n  edges.forEach((edge) => {\n    if (edge && edge.polygons) {\n      edge.polygons.forEach((polygon) => {\n        if (polygon.visited) return\n        polygon.visited = true\n        polygons.push(polygon)\n      })\n    }\n  })\n  return polygons\n}\n\n/*\n * Convert the given list of polygons to a list of edges.\n */\nconst polygonsToEdges = (polygons) => {\n  const edges = []\n  polygons.forEach((polygon) => {\n    addPolygon(edges, polygon)\n  })\n  return edges\n}\n\nmodule.exports = { polygonsToEdges, edgesToPolygons, cullOpenEdges, splitEdge, removePolygons, addPolygon }\n","const { polygonsToEdges, edgesToPolygons, cullOpenEdges, splitEdge, removePolygons, addPolygon } = require('./edges')\n\n/*\n */\nconst repairTjunctions = (epsilon, polygons) => {\n  const edges = polygonsToEdges(polygons)\n  let openedges = cullOpenEdges(edges)\n  if (openedges.length === 0) return polygons\n\n  // split open edges until no longer possible\n  let splitting = true\n  while (splitting) {\n    let splitcount = 0\n    for (let i = 0; i < openedges.length; i++) {\n      const edge = openedges[i]\n      if (edge && edge.polygons && edge.polygons.length === 1) {\n        const newpolygons = splitEdge(openedges, edge, epsilon)\n        if (newpolygons) {\n          openedges[i] = null\n          addPolygon(openedges, newpolygons[0])\n          addPolygon(openedges, newpolygons[1])\n\n          // adjust the master list as well\n          removePolygons(edges, edge)\n          // add edges for each new polygon\n          addPolygon(edges, newpolygons[0])\n          addPolygon(edges, newpolygons[1])\n\n          splitcount++\n          break // start again\n        }\n      }\n    }\n    splitting = (splitcount > 0)\n  }\n  openedges = openedges.filter((edge) => (edge && edge.polygons && edge.polygons.length === 1))\n  if (openedges.length > 0) console.warn('Repair of all T-junctions failed:', openedges.length)\n\n  // rebuild the list of polygons from the edges\n  polygons = edgesToPolygons(edges)\n  return polygons\n}\n\nmodule.exports = repairTjunctions\n","const flatten = require('../../utils/flatten')\n\nconst measureEpsilon = require('../../measurements/measureEpsilon')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\nconst snapPolygons = require('./snapPolygons')\nconst mergePolygons = require('./mergePolygons')\nconst insertTjunctions = require('./insertTjunctions')\nconst triangulatePolygons = require('./triangulatePolygons')\n\nconst repairTjunctions = require('./repairTjunctions')\n\n/*\n */\nconst generalizePath2 = (options, geometry) => {\n  return geometry\n}\n\n\n/*\n */\nconst generalizeGeom2 = (options, geometry) => {\n  return geometry\n}\n\n/*\n */\nconst generalizeGeom3 = (options, geometry) => {\n  const defaults = {\n    snap: false,\n    simplify: false,\n    triangulate: false,\n    repair: false\n  }\n  const { snap, simplify, triangulate, repair } = Object.assign({}, defaults, options)\n\n  const epsilon = measureEpsilon(geometry)\n  let polygons = geom3.toPolygons(geometry)\n\n  // snap the given geometry if requested\n  if (snap) {\n    polygons = snapPolygons(epsilon, polygons)\n  }\n\n  // simplify the polygons if requested\n  if (simplify) {\n    // TODO implement some mesh decimations\n    polygons = mergePolygons(epsilon, polygons)\n  }\n\n  // triangulate the polygons if requested\n  if (triangulate) {\n    polygons = insertTjunctions(polygons)\n    polygons = triangulatePolygons(epsilon, polygons)\n  }\n\n  // repair the polygons (possibly triangles) if requested\n  if (repair) {\n    // fix T junctions\n    polygons = repairTjunctions(epsilon, polygons)\n    // TODO fill holes\n  }\n\n  // FIXME replace with geom3.cloneShallow() when available\n  const clone = Object.assign({}, geometry)\n  clone.polygons = polygons\n\n  return clone\n}\n\n/**\n * Apply various modifications in proper order to produce a generalized geometry.\n * @param {Object} options - options for modifications\n * @param {Boolean} [options.snap=false] the geometries should be snapped to epsilons\n * @param {Boolean} [options.simplify=false] the geometries should be simplified\n * @param {Boolean} [options.triangulate=false] the geometries should be triangulated\n * @param {Boolean} [options.repair=false] the geometries should be repaired\n * @return {Object|Array} the modified geometry, or a list of modified geometries\n */\nconst generalize = (options, ...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n\n  const results = geometries.map((geometry, i) => {\n    if (path2.isA(geometry)) return generalizePath2(options, geometry)\n    if (geom2.isA(geometry)) return generalizeGeom2(options, geometry)\n    if (geom3.isA(geometry)) return generalizeGeom3(options, geometry)\n    throw new Error('invalid geometry')\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = generalize\n","const flatten = require('../../utils/flatten')\n\nconst vec2 = require('../../maths/vec2')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\nconst measureEpsilon = require('../../measurements/measureEpsilon')\n\nconst snapPolygons = require('./snapPolygons')\n\nconst snapPath2 = (geometry) => {\n  const epsilon = measureEpsilon(geometry)\n  const points = path2.toPoints(geometry)\n  const newpoints = points.map((point) => vec2.snap(vec2.create(), epsilon, point))\n  // snap can produce duplicate points, remove those\n  return path2.create(newpoints)\n}\n\nconst snapGeom2 = (geometry) => {\n  const epsilon = measureEpsilon(geometry)\n  const sides = geom2.toSides(geometry)\n  let newsides = sides.map((side) => [vec2.snap(vec2.create(), epsilon, side[0]), vec2.snap(vec2.create(), epsilon, side[1])])\n  // snap can produce sides with zero (0) length, remove those\n  newsides = newsides.filter((side) => !vec2.equals(side[0], side[1]))\n  return geom2.create(newsides)\n}\n\nconst snapGeom3 = (geometry) => {\n  const epsilon = measureEpsilon(geometry)\n  const polygons = geom3.toPolygons(geometry)\n  const newpolygons = snapPolygons(epsilon, polygons)\n  return geom3.create(newpolygons)\n}\n\n/**\n * Snap the given geometries to the overall precision (epsilon) of the geometry.\n * @see measurements.measureEpsilon()\n * @param {...Object} geometries - the geometries to snap\n * @return {Object|Array} the snapped geometry, or a list of snapped geometries\n */\nconst snap = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n\n  const results = geometries.map((geometry) => {\n    if (path2.isA(geometry)) return snapPath2(geometry)\n    if (geom2.isA(geometry)) return snapGeom2(geometry)\n    if (geom3.isA(geometry)) return snapGeom3(geometry)\n    return geometry\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = snap\n","/**\n * All shapes (primitives or the results of operations) can be modified to correct issues, etc.\n * In all cases, these functions returns the results, and never changes the original geometry.\n * @module modeling/modifiers\n * @example\n * const { snap } = require('@jscad/modeling').modifiers\n */\nmodule.exports = {\n  generalize: require('./generalize'),\n  snap: require('./snap')\n}\n","/**\n * Build an array of at minimum a specified length from an existing array and a padding value. IF the array is already larger than the target length, it will not be shortened.\n * @param {Array} anArray - the source array to copy into the result.\n * @param {*} padding - the value to add to the new array to reach the desired length.\n * @param {Number} targetLength - The desired length of the return array.\n * @returns {Array} an array of at least 'targetLength\" length\n * @alias module:modeling/utils.padArrayToLength\n */\nconst padArrayToLength = (anArray, padding, targetLength) => {\n  anArray = anArray.slice()\n  while (anArray.length < targetLength) {\n    anArray.push(padding)\n  }\n  return anArray\n}\n\nmodule.exports = padArrayToLength\n","const flatten = require('../../utils/flatten')\nconst padArrayToLength = require('../../utils/padArrayToLength')\nconst measureAggregateBoundingBox = require('../../measurements/measureAggregateBoundingBox')\nconst { translate } = require('./translate')\n\nconst validateOptions = (options) => {\n  if (!Array.isArray(options.modes) || options.modes.length > 3) throw new Error('align(): modes must be an array of length <= 3')\n  options.modes = padArrayToLength(options.modes, 'none', 3)\n  if (options.modes.filter((mode) => ['center', 'max', 'min', 'none'].includes(mode)).length !== 3) throw new Error('align(): all modes must be one of \"center\", \"max\" or \"min\"')\n\n  if (!Array.isArray(options.relativeTo) || options.relativeTo.length > 3) throw new Error('align(): relativeTo must be an array of length <= 3')\n  options.relativeTo = padArrayToLength(options.relativeTo, 0, 3)\n  if (options.relativeTo.filter((alignVal) => (Number.isFinite(alignVal) || alignVal == null)).length !== 3) throw new Error('align(): all relativeTo values must be a number, or null.')\n\n  if (typeof options.grouped !== 'boolean') throw new Error('align(): grouped must be a boolean value.')\n\n  return options\n}\n\nconst populateRelativeToFromBounds = (relativeTo, modes, bounds) => {\n  for (let i = 0; i < 3; i++) {\n    if (relativeTo[i] == null) {\n      if (modes[i] === 'center') {\n        relativeTo[i] = (bounds[0][i] + bounds[1][i]) / 2\n      } else if (modes[i] === 'max') {\n        relativeTo[i] = bounds[1][i]\n      } else if (modes[i] === 'min') {\n        relativeTo[i] = bounds[0][i]\n      }\n    }\n  }\n  return relativeTo\n}\n\nconst alignGeometries = (geometry, modes, relativeTo) => {\n  const bounds = measureAggregateBoundingBox(geometry)\n  const translation = [0, 0, 0]\n  for (let i = 0; i < 3; i++) {\n    if (modes[i] === 'center') {\n      translation[i] = relativeTo[i] - (bounds[0][i] + bounds[1][i]) / 2\n    } else if (modes[i] === 'max') {\n      translation[i] = relativeTo[i] - bounds[1][i]\n    } else if (modes[i] === 'min') {\n      translation[i] = relativeTo[i] - bounds[0][i]\n    }\n  }\n\n  return translate(translation, geometry)\n}\n\n/**\n * Align the boundaries of the given geometries using the given options.\n * @param {Object} options - options for aligning\n * @param {Array} [options.modes = ['center', 'center', 'min']] - the point on the geometries to align to for each axis. Valid options are \"center\", \"max\", \"min\", and \"none\".\n * @param {Array} [options.relativeTo = [0,0,0]] - The point one each axis on which to align the geometries upon.  If the value is null, then the corresponding value from the group's bounding box is used.\n * @param {Boolean} [options.grouped = false] - if true, transform all geometries by the same amount, maintaining the relative positions to each other.\n * @param {...Object} geometries - the geometries to align\n * @return {Object|Array} the aligned geometry, or a list of aligned geometries\n * @alias module:modeling/transforms.align\n *\n * @example\n * let alignedGeometries = align({modes: ['min', 'center', 'none'], relativeTo: [10, null, 10], grouped: true }, geometries)\n */\nconst align = (options, ...geometries) => {\n  const defaults = {\n    modes: ['center', 'center', 'min'],\n    relativeTo: [0, 0, 0],\n    grouped: false\n  }\n  options = Object.assign({}, defaults, options)\n\n  options = validateOptions(options)\n  let { modes, relativeTo, grouped } = options\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('align(): No geometries were provided to act upon')\n\n  if (relativeTo.filter((val) => val == null).length) {\n    const bounds = measureAggregateBoundingBox(geometries)\n    relativeTo = populateRelativeToFromBounds(relativeTo, modes, bounds)\n  }\n  if (grouped) {\n    geometries = alignGeometries(geometries, modes, relativeTo)\n  } else {\n    geometries = geometries.map((geometry) => alignGeometries(geometry, modes, relativeTo))\n  }\n  return geometries.length === 1 ? geometries[0] : geometries\n}\n\nmodule.exports = align\n","const flatten = require('../../utils/flatten')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\nconst measureBoundingBox = require('../../measurements/measureBoundingBox')\n\nconst { translate } = require('./translate')\n\nconst centerGeometry = (options, object) => {\n  const defaults = {\n    axes: [true, true, true],\n    relativeTo: [0, 0, 0]\n  }\n  const { axes, relativeTo } = Object.assign({}, defaults, options)\n\n  const bounds = measureBoundingBox(object)\n  const offset = [0, 0, 0]\n  if (axes[0]) offset[0] = relativeTo[0] - (bounds[0][0] + ((bounds[1][0] - bounds[0][0]) / 2))\n  if (axes[1]) offset[1] = relativeTo[1] - (bounds[0][1] + ((bounds[1][1] - bounds[0][1]) / 2))\n  if (axes[2]) offset[2] = relativeTo[2] - (bounds[0][2] + ((bounds[1][2] - bounds[0][2]) / 2))\n  return translate(offset, object)\n}\n\n/**\n * Center the given geometries using the given options.\n * @param {Object} options - options for centering\n * @param {Array} [options.axes=[true,true,true]] - axis of which to center, true or false\n * @param {Array} [options.relativeTo=[0,0,0]] - relative point of which to center the geometries\n * @param {...Object} geometries - the geometries to center\n * @return {Object|Array} the centered geometry, or a list of centered geometries\n * @alias module:modeling/transforms.center\n *\n * @example\n * let myshape = center({axes: [true,false,false]}, sphere()) // center about the X axis\n */\nconst center = (options, ...geometries) => {\n  const defaults = {\n    axes: [true, true, true],\n    relativeTo: [0, 0, 0]\n  // TODO : Add addition 'methods' of centering; midpoint, centeriod\n  }\n  const { axes, relativeTo } = Object.assign({}, defaults, options)\n\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n  if (relativeTo.length !== 3) throw new Error('relativeTo must be an array of length 3')\n\n  options = { axes, relativeTo }\n\n  const results = geometries.map((object) => {\n    if (path2.isA(object)) return centerGeometry(options, object)\n    if (geom2.isA(object)) return centerGeometry(options, object)\n    if (geom3.isA(object)) return centerGeometry(options, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\n/**\n * Center the given geometries about the X axis.\n * @param {...Object} geometries - the geometries to center\n * @return {Object|Array} the centered geometry, or a list of centered geometry\n * @alias module:modeling/transforms.centerX\n */\nconst centerX = (...objects) => center({ axes: [true, false, false] }, objects)\n\n/**\n * Center the given geometries about the Y axis.\n * @param {...Object} geometries - the geometries to center\n * @return {Object|Array} the centered geometry, or a list of centered geometry\n * @alias module:modeling/transforms.centerY\n */\nconst centerY = (...objects) => center({ axes: [false, true, false] }, objects)\n\n/**\n * Center the given geometries about the Z axis.\n * @param {...Object} geometries - the geometries to center\n * @return {Object|Array} the centered geometry, or a list of centered geometry\n * @alias module:modeling/transforms.centerZ\n */\nconst centerZ = (...objects) => center({ axes: [false, false, true] }, objects)\n\nmodule.exports = {\n  center,\n  centerX,\n  centerY,\n  centerZ\n}\n","const flatten = require('../../utils/flatten')\n\nconst mat4 = require('../../maths/mat4')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\n/**\n * Scale the given geometries using the given options.\n * @param {Array} factors - X, Y, Z factors by which to scale the geometries\n * @param {...Object} geometries - the geometries to scale\n * @return {Object|Array} the scaled geometry, or a list of scaled geometries\n * @alias module:modeling/transforms.scale\n *\n * @example\n * let myshape = scale([5, 0, 10], sphere())\n */\nconst scale = (factors, ...objects) => {\n  if (!Array.isArray(factors)) throw new Error('factors must be an array')\n\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  // adjust the factors if necessary\n  factors = factors.slice() // don't modify the original\n  while (factors.length < 3) factors.push(1)\n\n  if (factors[0] <= 0 || factors[1] <= 0 || factors[2] <= 0) throw new Error('factors must be positive')\n\n  const matrix = mat4.fromScaling(factors)\n\n  const results = objects.map((object) => {\n    if (path2.isA(object)) return path2.transform(matrix, object)\n    if (geom2.isA(object)) return geom2.transform(matrix, object)\n    if (geom3.isA(object)) return geom3.transform(matrix, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\n/**\n * Scale the given geometries about the X axis using the given options.\n * @param {Number} factor - X factor by which to scale the geometries\n * @param {...Object} geometries - the geometries to scale\n * @return {Object|Array} the scaled geometry, or a list of scaled geometries\n * @alias module:modeling/transforms.scaleX\n */\nconst scaleX = (offset, ...objects) => scale([offset, 1, 1], objects)\n\n/**\n * Scale the given geometries about the Y axis using the given options.\n * @param {Number} factor - Y factor by which to scale the geometries\n * @param {...Object} geometries - the geometries to scale\n * @return {Object|Array} the scaled geometry, or a list of scaled geometries\n * @alias module:modeling/transforms.scaleY\n */\nconst scaleY = (offset, ...objects) => scale([1, offset, 1], objects)\n\n/**\n * Scale the given geometries about the Z axis using the given options.\n * @param {Number} factor - Z factor by which to scale the geometries\n * @param {...Object} geometries - the geometries to scale\n * @return {Object|Array} the scaled geometry, or a list of scaled geometries\n * @alias module:modeling/transforms.scaleZ\n */\nconst scaleZ = (offset, ...objects) => scale([1, 1, offset], objects)\n\nmodule.exports = {\n  scale,\n  scaleX,\n  scaleY,\n  scaleZ\n}\n","const flatten = require('../../utils/flatten')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\n/**\n * Transform the given geometries using the given matrix.\n * @param {mat4} matrix - a transformation matrix\n * @param {...Object} geometries - the geometries to transform\n * @return {Object|Array} the transformed geometry, or a list of transformed geometries\n * @alias module:modeling/transforms.transform\n *\n * @example\n * const newsphere = transform(mat4.rotateX(Math.PI/4), sphere())\n */\nconst transform = (matrix, ...objects) => {\n  // TODO how to check that the matrix is REAL?\n\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  const results = objects.map((object) => {\n    if (path2.isA(object)) return path2.transform(matrix, object)\n    if (geom2.isA(object)) return geom2.transform(matrix, object)\n    if (geom3.isA(object)) return geom3.transform(matrix, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = transform\n","/**\n * All shapes (primitives or the results of operations) can be transformed, such as scaled or rotated.\n * In all cases, the function returns the results, and never changes the original shapes.\n * @module modeling/transforms\n * @example\n * const { center, rotateX, translate } = require('@jscad/modeling').transforms\n */\nmodule.exports = {\n  align: require('./align'),\n\n  center: require('./center').center,\n  centerX: require('./center').centerX,\n  centerY: require('./center').centerY,\n  centerZ: require('./center').centerZ,\n\n  mirror: require('./mirror').mirror,\n  mirrorX: require('./mirror').mirrorX,\n  mirrorY: require('./mirror').mirrorY,\n  mirrorZ: require('./mirror').mirrorZ,\n\n  rotate: require('./rotate').rotate,\n  rotateX: require('./rotate').rotateX,\n  rotateY: require('./rotate').rotateY,\n  rotateZ: require('./rotate').rotateZ,\n\n  scale: require('./scale').scale,\n  scaleX: require('./scale').scaleX,\n  scaleY: require('./scale').scaleY,\n  scaleZ: require('./scale').scaleZ,\n\n  transform: require('./transform'),\n\n  translate: require('./translate').translate,\n  translateX: require('./translate').translateX,\n  translateY: require('./translate').translateY,\n  translateZ: require('./translate').translateZ\n}\n","module.exports = {\n  colors: require('./colors'),\n  curves: require('./curves'),\n  geometries: require('./geometries'),\n  maths: require('./maths'),\n  measurements: require('./measurements'),\n  primitives: require('./primitives'),\n  text: require('./text'),\n  utils: require('./utils'),\n\n  booleans: require('./operations/booleans'),\n  expansions: require('./operations/expansions'),\n  extrusions: require('./operations/extrusions'),\n  hulls: require('./operations/hulls'),\n  modifiers: require('./operations/modifiers'),\n  transforms: require('./operations/transforms')\n}\n","import {\n  BufferGeometry,\n  BufferAttribute,\n  Vector3,\n  Matrix4\n} from \"three/build/three.module.js\";\n\nexport default function CSG2Geom(csg) {\n  const vertices = [];\n  const indices = [];\n  let idx = 0;\n  csg.polygons.forEach((polygon) => {\n    polygon.vertices.forEach((vertex) => {\n      vertex.index = idx;\n      vertices.push(vertex[0], vertex[1], vertex[2]);\n      idx++;\n    });\n    const first = polygon.vertices[0].index;\n    for (let i = 2; i < polygon.vertices.length; i++) {\n      const second = polygon.vertices[i - 1].index;\n      const third = polygon.vertices[i].index;\n      indices.push(first, second, third);\n    }\n  });\n\n  const geo = new BufferGeometry();\n  geo.setAttribute(\n    \"position\",\n    new BufferAttribute(new Float32Array(vertices), 3)\n  );\n  geo.setIndex(indices);\n  if (csg.transforms) {\n    const transforms = new Matrix4();\n    transforms.set(...csg.transforms).transpose();\n    geo.applyMatrix4(transforms);\n  }\n  geo.computeVertexNormals();\n\n  //console.log(geo);\n  const positions = {};\n  for (let i = 0; i < geo.attributes.position.count; i++) {\n    const pArray = geo.attributes.position.array;\n    const x = Math.round(pArray[i * 3] * 100);\n    const y = Math.round(pArray[i * 3 + 1] * 100);\n    const z = Math.round(pArray[i * 3 + 2] * 100);\n    const position = `${x},${y},${z}`;\n    if (!positions[position]) {\n      positions[position] = { normals: [] };\n    }\n    const nArray = geo.attributes.normal.array;\n    const nx = nArray[i * 3];\n    const ny = nArray[i * 3 + 1];\n    const nz = nArray[i * 3 + 2];\n    const normal = new Vector3(nx, ny, nz);\n    positions[position].normals.push({ index: i, normal: normal });\n  }\n\n  for (let p in positions) {\n    const currentPosition = positions[p];\n    const nl = currentPosition.normals.length;\n    const toAverage = {};\n    for (let i = 0; i < nl - 1; i += 1) {\n      for (let j = i + 1; j < nl; j += 1) {\n        const n1 = currentPosition.normals[i].normal;\n        const n2 = currentPosition.normals[j].normal;\n        if (n1.angleTo(n2) < Math.PI * 0.5 && n1.angleTo(n2) !== 0) {\n          toAverage[currentPosition.normals[i].index] =\n            currentPosition.normals[i].normal;\n          toAverage[currentPosition.normals[j].index] =\n            currentPosition.normals[j].normal;\n        }\n      }\n    }\n    const averageNormal = new Vector3();\n    const indexes = Object.keys(toAverage);\n    indexes.forEach((index) => {\n      averageNormal.add(toAverage[index]);\n      averageNormal.normalize();\n    });\n    indexes.forEach((index) => {\n      geo.attributes.normal.array[index * 3] = averageNormal.x;\n      geo.attributes.normal.array[index * 3 + 1] = averageNormal.y;\n      geo.attributes.normal.array[index * 3 + 2] = averageNormal.z;\n    });\n  }\n\n  geo.attributes.normal.array.needsUpdate = true;\n  return geo;\n}\n","/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tlet p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\tif ( outerNode ) {\n\n\t\tconst b = splitPolygon( outerNode, hole );\n\n\t\t// filter collinear points around the cuts\n\t\tfilterPoints( outerNode, outerNode.next );\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode;\n\tconst hx = hole.x;\n\tconst hy = hole.y;\n\tlet qx = - Infinity, m;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n\t\t( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t\t( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t\tequals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nexport { Earcut };\n","function fnNumberSort (a, b) {\n  return a - b\n}\n\nfunction fnSortByIndex (a, b) {\n  return a.index - b.index\n}\n\nconst IsFloat = function (n) {\n  return (!isNaN(n)) || (n === Infinity) || (n === -Infinity)\n}\n\nconst solve2Linear = function (a, b, c, d, u, v) {\n  let det = a * d - b * c\n  let invdet = 1.0 / det\n  let x = u * d - b * v\n  let y = -u * c + a * v\n  x *= invdet\n  y *= invdet\n  return [x, y]\n}\n\nfunction insertSorted (array, element, comparefunc) {\n  let leftbound = 0\n  let rightbound = array.length\n  while (rightbound > leftbound) {\n    let testindex = Math.floor((leftbound + rightbound) / 2)\n    let testelement = array[testindex]\n    let compareresult = comparefunc(element, testelement)\n    if (compareresult > 0) // element > testelement\n    {\n      leftbound = testindex + 1\n    } else {\n      rightbound = testindex\n    }\n  }\n  array.splice(leftbound, 0, element)\n}\n\n// Get the x coordinate of a point with a certain y coordinate, interpolated between two\n// points (CSG.Vector2D).\n// Interpolation is robust even if the points have the same y coordinate\nconst interpolateBetween2DPointsForY = function (point1, point2, y) {\n  let f1 = y - point1.y\n  let f2 = point2.y - point1.y\n  if (f2 < 0) {\n    f1 = -f1\n    f2 = -f2\n  }\n  let t\n  if (f1 <= 0) {\n    t = 0.0\n  } else if (f1 >= f2) {\n    t = 1.0\n  } else if (f2 < 1e-10) { // FIXME Should this be CSG.EPS?\n    t = 0.5\n  } else {\n    t = f1 / f2\n  }\n  let result = point1.x + t * (point2.x - point1.x)\n  return result\n}\n\nfunction isCAG (object) {\n  // objects[i] instanceof CAG => NOT RELIABLE\n  // 'instanceof' causes huge issues when using objects from\n  // two different versions of CSG.js as they are not reckonized as one and the same\n  // so DO NOT use instanceof to detect matching types for CSG/CAG\n  if (!('sides' in object)) {\n    return false\n  }\n  if (!('length' in object.sides)) {\n    return false\n  }\n\n  return true\n}\n\nfunction isCSG (object) {\n  // objects[i] instanceof CSG => NOT RELIABLE\n  // 'instanceof' causes huge issues when using objects from\n  // two different versions of CSG.js as they are not reckonized as one and the same\n  // so DO NOT use instanceof to detect matching types for CSG/CAG\n  if (!('polygons' in object)) {\n    return false\n  }\n  if (!('length' in object.polygons)) {\n    return false\n  }\n  return true\n}\n\nmodule.exports = {\n  fnNumberSort,\n  fnSortByIndex,\n  IsFloat,\n  solve2Linear,\n  insertSorted,\n  interpolateBetween2DPointsForY,\n  isCAG,\n  isCSG\n}\n","const {IsFloat} = require('../utils')\n\n/** Class Vector2D\n * Represents a 2D vector with X, Y coordinates\n * @constructor\n *\n * @example\n * new CSG.Vector2D(1, 2);\n * new CSG.Vector2D([1, 2]);\n * new CSG.Vector2D({ x: 1, y: 2});\n */\nconst Vector2D = function (x, y) {\n  if (arguments.length === 2) {\n    this._x = parseFloat(x)\n    this._y = parseFloat(y)\n  } else {\n    var ok = true\n    if (arguments.length === 1) {\n      if (typeof (x) === 'object') {\n        if (x instanceof Vector2D) {\n          this._x = x._x\n          this._y = x._y\n        } else if (x instanceof Array) {\n          this._x = parseFloat(x[0])\n          this._y = parseFloat(x[1])\n        } else if (('x' in x) && ('y' in x)) {\n          this._x = parseFloat(x.x)\n          this._y = parseFloat(x.y)\n        } else ok = false\n      } else {\n        var v = parseFloat(x)\n        this._x = v\n        this._y = v\n      }\n    } else ok = false\n    if (ok) {\n      if ((!IsFloat(this._x)) || (!IsFloat(this._y))) ok = false\n    }\n    if (!ok) {\n      throw new Error('wrong arguments')\n    }\n  }\n}\n\nVector2D.fromAngle = function (radians) {\n  return Vector2D.fromAngleRadians(radians)\n}\n\nVector2D.fromAngleDegrees = function (degrees) {\n  var radians = Math.PI * degrees / 180\n  return Vector2D.fromAngleRadians(radians)\n}\n\nVector2D.fromAngleRadians = function (radians) {\n  return Vector2D.Create(Math.cos(radians), Math.sin(radians))\n}\n\n// This does the same as new Vector2D(x,y) but it doesn't go through the constructor\n// and the parameters are not validated. Is much faster.\nVector2D.Create = function (x, y) {\n  var result = Object.create(Vector2D.prototype)\n  result._x = x\n  result._y = y\n  return result\n}\n\nVector2D.prototype = {\n  get x () {\n    return this._x\n  },\n  get y () {\n    return this._y\n  },\n\n  set x (v) {\n    throw new Error('Vector2D is immutable')\n  },\n  set y (v) {\n    throw new Error('Vector2D is immutable')\n  },\n\n  // extend to a 3D vector by adding a z coordinate:\n  toVector3D: function (z) {\n    const Vector3D = require('./Vector3') // FIXME: circular dependencies Vector2 => Vector3 => Vector2\n    return new Vector3D(this._x, this._y, z)\n  },\n\n  equals: function (a) {\n    return (this._x === a._x) && (this._y === a._y)\n  },\n\n  clone: function () {\n    return Vector2D.Create(this._x, this._y)\n  },\n\n  negated: function () {\n    return Vector2D.Create(-this._x, -this._y)\n  },\n\n  plus: function (a) {\n    return Vector2D.Create(this._x + a._x, this._y + a._y)\n  },\n\n  minus: function (a) {\n    return Vector2D.Create(this._x - a._x, this._y - a._y)\n  },\n\n  times: function (a) {\n    return Vector2D.Create(this._x * a, this._y * a)\n  },\n\n  dividedBy: function (a) {\n    return Vector2D.Create(this._x / a, this._y / a)\n  },\n\n  dot: function (a) {\n    return this._x * a._x + this._y * a._y\n  },\n\n  lerp: function (a, t) {\n    return this.plus(a.minus(this).times(t))\n  },\n\n  length: function () {\n    return Math.sqrt(this.dot(this))\n  },\n\n  distanceTo: function (a) {\n    return this.minus(a).length()\n  },\n\n  distanceToSquared: function (a) {\n    return this.minus(a).lengthSquared()\n  },\n\n  lengthSquared: function () {\n    return this.dot(this)\n  },\n\n  unit: function () {\n    return this.dividedBy(this.length())\n  },\n\n  cross: function (a) {\n    return this._x * a._y - this._y * a._x\n  },\n\n    // returns the vector rotated by 90 degrees clockwise\n  normal: function () {\n    return Vector2D.Create(this._y, -this._x)\n  },\n\n    // Right multiply by a 4x4 matrix (the vector is interpreted as a row vector)\n    // Returns a new Vector2D\n  multiply4x4: function (matrix4x4) {\n    return matrix4x4.leftMultiply1x2Vector(this)\n  },\n\n  transform: function (matrix4x4) {\n    return matrix4x4.leftMultiply1x2Vector(this)\n  },\n\n  angle: function () {\n    return this.angleRadians()\n  },\n\n  angleDegrees: function () {\n    var radians = this.angleRadians()\n    return 180 * radians / Math.PI\n  },\n\n  angleRadians: function () {\n        // y=sin, x=cos\n    return Math.atan2(this._y, this._x)\n  },\n\n  min: function (p) {\n    return Vector2D.Create(\n            Math.min(this._x, p._x), Math.min(this._y, p._y))\n  },\n\n  max: function (p) {\n    return Vector2D.Create(\n            Math.max(this._x, p._x), Math.max(this._y, p._y))\n  },\n\n  toString: function () {\n    return '(' + this._x.toFixed(5) + ', ' + this._y.toFixed(5) + ')'\n  },\n\n  abs: function () {\n    return Vector2D.Create(Math.abs(this._x), Math.abs(this._y))\n  }\n}\n\nmodule.exports = Vector2D\n","const {IsFloat} = require('../utils')\nconst Vector2D = require('./Vector2')\n\n/** Class Vector3D\n * Represents a 3D vector with X, Y, Z coordinates.\n * @constructor\n *\n * @example\n * new CSG.Vector3D(1, 2, 3);\n * new CSG.Vector3D([1, 2, 3]);\n * new CSG.Vector3D({ x: 1, y: 2, z: 3 });\n * new CSG.Vector3D(1, 2); // assumes z=0\n * new CSG.Vector3D([1, 2]); // assumes z=0\n */\nconst Vector3D = function (x, y, z) {\n  if (arguments.length === 3) {\n    this._x = parseFloat(x)\n    this._y = parseFloat(y)\n    this._z = parseFloat(z)\n  } else if (arguments.length === 2) {\n    this._x = parseFloat(x)\n    this._y = parseFloat(y)\n    this._z = 0\n  } else {\n    var ok = true\n    if (arguments.length === 1) {\n      if (typeof (x) === 'object') {\n        if (x instanceof Vector3D) {\n          this._x = x._x\n          this._y = x._y\n          this._z = x._z\n        } else if (x instanceof Vector2D) {\n          this._x = x._x\n          this._y = x._y\n          this._z = 0\n        } else if (x instanceof Array) {\n          if ((x.length < 2) || (x.length > 3)) {\n            ok = false\n          } else {\n            this._x = parseFloat(x[0])\n            this._y = parseFloat(x[1])\n            if (x.length === 3) {\n              this._z = parseFloat(x[2])\n            } else {\n              this._z = 0\n            }\n          }\n        } else if (('x' in x) && ('y' in x)) {\n          this._x = parseFloat(x.x)\n          this._y = parseFloat(x.y)\n          if ('z' in x) {\n            this._z = parseFloat(x.z)\n          } else {\n            this._z = 0\n          }\n        } else if (('_x' in x) && ('_y' in x)) {\n          this._x = parseFloat(x._x)\n          this._y = parseFloat(x._y)\n          if ('_z' in x) {\n            this._z = parseFloat(x._z)\n          } else {\n            this._z = 0\n          }\n        } else ok = false\n      } else {\n        var v = parseFloat(x)\n        this._x = v\n        this._y = v\n        this._z = v\n      }\n    } else ok = false\n    if (ok) {\n      if ((!IsFloat(this._x)) || (!IsFloat(this._y)) || (!IsFloat(this._z))) ok = false\n    } else {\n      throw new Error('wrong arguments')\n    }\n  }\n}\n\n// This does the same as new Vector3D(x,y,z) but it doesn't go through the constructor\n// and the parameters are not validated. Is much faster.\nVector3D.Create = function (x, y, z) {\n  var result = Object.create(Vector3D.prototype)\n  result._x = x\n  result._y = y\n  result._z = z\n  return result\n}\n\nVector3D.prototype = {\n  get x () {\n    return this._x\n  },\n  get y () {\n    return this._y\n  },\n  get z () {\n    return this._z\n  },\n\n  set x (v) {\n    throw new Error('Vector3D is immutable')\n  },\n  set y (v) {\n    throw new Error('Vector3D is immutable')\n  },\n  set z (v) {\n    throw new Error('Vector3D is immutable')\n  },\n\n  clone: function () {\n    return Vector3D.Create(this._x, this._y, this._z)\n  },\n\n  negated: function () {\n    return Vector3D.Create(-this._x, -this._y, -this._z)\n  },\n\n  abs: function () {\n    return Vector3D.Create(Math.abs(this._x), Math.abs(this._y), Math.abs(this._z))\n  },\n\n  plus: function (a) {\n    return Vector3D.Create(this._x + a._x, this._y + a._y, this._z + a._z)\n  },\n\n  minus: function (a) {\n    return Vector3D.Create(this._x - a._x, this._y - a._y, this._z - a._z)\n  },\n\n  times: function (a) {\n    return Vector3D.Create(this._x * a, this._y * a, this._z * a)\n  },\n\n  dividedBy: function (a) {\n    return Vector3D.Create(this._x / a, this._y / a, this._z / a)\n  },\n\n  dot: function (a) {\n    return this._x * a._x + this._y * a._y + this._z * a._z\n  },\n\n  lerp: function (a, t) {\n    return this.plus(a.minus(this).times(t))\n  },\n\n  lengthSquared: function () {\n    return this.dot(this)\n  },\n\n  length: function () {\n    return Math.sqrt(this.lengthSquared())\n  },\n\n  unit: function () {\n    return this.dividedBy(this.length())\n  },\n\n  cross: function (a) {\n    return Vector3D.Create(\n            this._y * a._z - this._z * a._y, this._z * a._x - this._x * a._z, this._x * a._y - this._y * a._x)\n  },\n\n  distanceTo: function (a) {\n    return this.minus(a).length()\n  },\n\n  distanceToSquared: function (a) {\n    return this.minus(a).lengthSquared()\n  },\n\n  equals: function (a) {\n    return (this._x === a._x) && (this._y === a._y) && (this._z === a._z)\n  },\n\n    // Right multiply by a 4x4 matrix (the vector is interpreted as a row vector)\n    // Returns a new Vector3D\n  multiply4x4: function (matrix4x4) {\n    return matrix4x4.leftMultiply1x3Vector(this)\n  },\n\n  transform: function (matrix4x4) {\n    return matrix4x4.leftMultiply1x3Vector(this)\n  },\n\n  toString: function () {\n    return '(' + this._x.toFixed(5) + ', ' + this._y.toFixed(5) + ', ' + this._z.toFixed(5) + ')'\n  },\n\n    // find a vector that is somewhat perpendicular to this one\n  randomNonParallelVector: function () {\n    var abs = this.abs()\n    if ((abs._x <= abs._y) && (abs._x <= abs._z)) {\n      return Vector3D.Create(1, 0, 0)\n    } else if ((abs._y <= abs._x) && (abs._y <= abs._z)) {\n      return Vector3D.Create(0, 1, 0)\n    } else {\n      return Vector3D.Create(0, 0, 1)\n    }\n  },\n\n  min: function (p) {\n    return Vector3D.Create(\n            Math.min(this._x, p._x), Math.min(this._y, p._y), Math.min(this._z, p._z))\n  },\n\n  max: function (p) {\n    return Vector3D.Create(\n            Math.max(this._x, p._x), Math.max(this._y, p._y), Math.max(this._z, p._z))\n  }\n}\n\nmodule.exports = Vector3D\n","const Vector2D = require('./Vector2')\nconst {solve2Linear} = require('../utils')\n\n/**  class Line2D\n * Represents a directional line in 2D space\n * A line is parametrized by its normal vector (perpendicular to the line, rotated 90 degrees counter clockwise)\n * and w. The line passes through the point <normal>.times(w).\n * Equation: p is on line if normal.dot(p)==w\n * @param {Vector2D} normal normal must be a unit vector!\n * @returns {Line2D}\n*/\nconst Line2D = function (normal, w) {\n  normal = new Vector2D(normal)\n  w = parseFloat(w)\n  let l = normal.length()\n    // normalize:\n  w *= l\n  normal = normal.times(1.0 / l)\n  this.normal = normal\n  this.w = w\n}\n\nLine2D.fromPoints = function (p1, p2) {\n  p1 = new Vector2D(p1)\n  p2 = new Vector2D(p2)\n  let direction = p2.minus(p1)\n  let normal = direction.normal().negated().unit()\n  let w = p1.dot(normal)\n  return new Line2D(normal, w)\n}\n\nLine2D.prototype = {\n    // same line but opposite direction:\n  reverse: function () {\n    return new Line2D(this.normal.negated(), -this.w)\n  },\n\n  equals: function (l) {\n    return (l.normal.equals(this.normal) && (l.w === this.w))\n  },\n\n  origin: function () {\n    return this.normal.times(this.w)\n  },\n\n  direction: function () {\n    return this.normal.normal()\n  },\n\n  xAtY: function (y) {\n        // (py == y) && (normal * p == w)\n        // -> px = (w - normal._y * y) / normal.x\n    let x = (this.w - this.normal._y * y) / this.normal.x\n    return x\n  },\n\n  absDistanceToPoint: function (point) {\n    point = new Vector2D(point)\n    let pointProjected = point.dot(this.normal)\n    let distance = Math.abs(pointProjected - this.w)\n    return distance\n  },\n    /* FIXME: has error - origin is not defined, the method is never used\n     closestPoint: function(point) {\n         point = new Vector2D(point);\n         let vector = point.dot(this.direction());\n         return origin.plus(vector);\n     },\n     */\n\n    // intersection between two lines, returns point as Vector2D\n  intersectWithLine: function (line2d) {\n    let point = solve2Linear(this.normal.x, this.normal.y, line2d.normal.x, line2d.normal.y, this.w, line2d.w)\n    point = new Vector2D(point) // make  vector2d\n    return point\n  },\n\n  transform: function (matrix4x4) {\n    let origin = new Vector2D(0, 0)\n    let pointOnPlane = this.normal.times(this.w)\n    let neworigin = origin.multiply4x4(matrix4x4)\n    let neworiginPlusNormal = this.normal.multiply4x4(matrix4x4)\n    let newnormal = neworiginPlusNormal.minus(neworigin)\n    let newpointOnPlane = pointOnPlane.multiply4x4(matrix4x4)\n    let neww = newnormal.dot(newpointOnPlane)\n    return new Line2D(newnormal, neww)\n  }\n}\n\nmodule.exports = Line2D\n","const _CSGDEBUG = false\n\n/** Number of polygons per 360 degree revolution for 2D objects.\n * @default\n */\nconst defaultResolution2D = 32 // FIXME this seems excessive\n/** Number of polygons per 360 degree revolution for 3D objects.\n * @default\n */\nconst defaultResolution3D = 12\n\n/** Epsilon used during determination of near zero distances.\n * @default\n */\nconst EPS = 1e-5\n\n/** Epsilon used during determination of near zero areas.\n * @default\n */\nconst angleEPS = 0.10\n\n/** Epsilon used during determination of near zero areas.\n *  This is the minimal area of a minimal polygon.\n * @default\n */\nconst areaEPS = 0.50 * EPS * EPS * Math.sin(angleEPS)\n\nconst all = 0\nconst top = 1\nconst bottom = 2\nconst left = 3\nconst right = 4\nconst front = 5\nconst back = 6\n// Tag factory: we can request a unique tag through CSG.getTag()\nlet staticTag = 1\nconst getTag = () => staticTag++\n\nmodule.exports = {\n  _CSGDEBUG,\n  defaultResolution2D,\n  defaultResolution3D,\n  EPS,\n  angleEPS,\n  areaEPS,\n  all,\n  top,\n  bottom,\n  left,\n  right,\n  front,\n  back,\n  staticTag,\n  getTag\n}\n","const Vector3D = require('./Vector3')\nconst {EPS} = require('../constants')\nconst {solve2Linear} = require('../utils')\n\n// # class Line3D\n// Represents a line in 3D space\n// direction must be a unit vector\n// point is a random point on the line\nconst Line3D = function (point, direction) {\n  point = new Vector3D(point)\n  direction = new Vector3D(direction)\n  this.point = point\n  this.direction = direction.unit()\n}\n\nLine3D.fromPoints = function (p1, p2) {\n  p1 = new Vector3D(p1)\n  p2 = new Vector3D(p2)\n  let direction = p2.minus(p1)\n  return new Line3D(p1, direction)\n}\n\nLine3D.fromPlanes = function (p1, p2) {\n  let direction = p1.normal.cross(p2.normal)\n  let l = direction.length()\n  if (l < EPS) {\n    throw new Error('Parallel planes')\n  }\n  direction = direction.times(1.0 / l)\n\n  let mabsx = Math.abs(direction.x)\n  let mabsy = Math.abs(direction.y)\n  let mabsz = Math.abs(direction.z)\n  let origin\n  if ((mabsx >= mabsy) && (mabsx >= mabsz)) {\n        // direction vector is mostly pointing towards x\n        // find a point p for which x is zero:\n    let r = solve2Linear(p1.normal.y, p1.normal.z, p2.normal.y, p2.normal.z, p1.w, p2.w)\n    origin = new Vector3D(0, r[0], r[1])\n  } else if ((mabsy >= mabsx) && (mabsy >= mabsz)) {\n        // find a point p for which y is zero:\n    let r = solve2Linear(p1.normal.x, p1.normal.z, p2.normal.x, p2.normal.z, p1.w, p2.w)\n    origin = new Vector3D(r[0], 0, r[1])\n  } else {\n        // find a point p for which z is zero:\n    let r = solve2Linear(p1.normal.x, p1.normal.y, p2.normal.x, p2.normal.y, p1.w, p2.w)\n    origin = new Vector3D(r[0], r[1], 0)\n  }\n  return new Line3D(origin, direction)\n}\n\nLine3D.prototype = {\n  intersectWithPlane: function (plane) {\n        // plane: plane.normal * p = plane.w\n        // line: p=line.point + labda * line.direction\n    let labda = (plane.w - plane.normal.dot(this.point)) / plane.normal.dot(this.direction)\n    let point = this.point.plus(this.direction.times(labda))\n    return point\n  },\n\n  clone: function (line) {\n    return new Line3D(this.point.clone(), this.direction.clone())\n  },\n\n  reverse: function () {\n    return new Line3D(this.point.clone(), this.direction.negated())\n  },\n\n  transform: function (matrix4x4) {\n    let newpoint = this.point.multiply4x4(matrix4x4)\n    let pointPlusDirection = this.point.plus(this.direction)\n    let newPointPlusDirection = pointPlusDirection.multiply4x4(matrix4x4)\n    let newdirection = newPointPlusDirection.minus(newpoint)\n    return new Line3D(newpoint, newdirection)\n  },\n\n  closestPointOnLine: function (point) {\n    point = new Vector3D(point)\n    let t = point.minus(this.point).dot(this.direction) / this.direction.dot(this.direction)\n    let closestpoint = this.point.plus(this.direction.times(t))\n    return closestpoint\n  },\n\n  distanceToPoint: function (point) {\n    point = new Vector3D(point)\n    let closestpoint = this.closestPointOnLine(point)\n    let distancevector = point.minus(closestpoint)\n    let distance = distancevector.length()\n    return distance\n  },\n\n  equals: function (line3d) {\n    if (!this.direction.equals(line3d.direction)) return false\n    let distance = this.distanceToPoint(line3d.point)\n    if (distance > EPS) return false\n    return true\n  }\n}\n\nmodule.exports = Line3D\n","const Vector3D = require('./Vector3')\nconst Line3D = require('./Line3')\nconst {EPS, getTag} = require('../constants')\n\n// # class Plane\n// Represents a plane in 3D space.\nconst Plane = function (normal, w) {\n  this.normal = normal\n  this.w = w\n}\n\n// create from an untyped object with identical property names:\nPlane.fromObject = function (obj) {\n  let normal = new Vector3D(obj.normal)\n  let w = parseFloat(obj.w)\n  return new Plane(normal, w)\n}\n\nPlane.fromVector3Ds = function (a, b, c) {\n  let n = b.minus(a).cross(c.minus(a)).unit()\n  return new Plane(n, n.dot(a))\n}\n\n// like fromVector3Ds, but allow the vectors to be on one point or one line\n// in such a case a random plane through the given points is constructed\nPlane.anyPlaneFromVector3Ds = function (a, b, c) {\n  let v1 = b.minus(a)\n  let v2 = c.minus(a)\n  if (v1.length() < EPS) {\n    v1 = v2.randomNonParallelVector()\n  }\n  if (v2.length() < EPS) {\n    v2 = v1.randomNonParallelVector()\n  }\n  let normal = v1.cross(v2)\n  if (normal.length() < EPS) {\n        // this would mean that v1 == v2.negated()\n    v2 = v1.randomNonParallelVector()\n    normal = v1.cross(v2)\n  }\n  normal = normal.unit()\n  return new Plane(normal, normal.dot(a))\n}\n\nPlane.fromPoints = function (a, b, c) {\n  a = new Vector3D(a)\n  b = new Vector3D(b)\n  c = new Vector3D(c)\n  return Plane.fromVector3Ds(a, b, c)\n}\n\nPlane.fromNormalAndPoint = function (normal, point) {\n  normal = new Vector3D(normal)\n  point = new Vector3D(point)\n  normal = normal.unit()\n  let w = point.dot(normal)\n  return new Plane(normal, w)\n}\n\nPlane.prototype = {\n  flipped: function () {\n    return new Plane(this.normal.negated(), -this.w)\n  },\n\n  getTag: function () {\n    let result = this.tag\n    if (!result) {\n      result = getTag()\n      this.tag = result\n    }\n    return result\n  },\n\n  equals: function (n) {\n    return this.normal.equals(n.normal) && this.w === n.w\n  },\n\n  transform: function (matrix4x4) {\n    let ismirror = matrix4x4.isMirroring()\n        // get two vectors in the plane:\n    let r = this.normal.randomNonParallelVector()\n    let u = this.normal.cross(r)\n    let v = this.normal.cross(u)\n        // get 3 points in the plane:\n    let point1 = this.normal.times(this.w)\n    let point2 = point1.plus(u)\n    let point3 = point1.plus(v)\n        // transform the points:\n    point1 = point1.multiply4x4(matrix4x4)\n    point2 = point2.multiply4x4(matrix4x4)\n    point3 = point3.multiply4x4(matrix4x4)\n        // and create a new plane from the transformed points:\n    let newplane = Plane.fromVector3Ds(point1, point2, point3)\n    if (ismirror) {\n            // the transform is mirroring\n            // We should mirror the plane:\n      newplane = newplane.flipped()\n    }\n    return newplane\n  },\n\n    // robust splitting of a line by a plane\n    // will work even if the line is parallel to the plane\n  splitLineBetweenPoints: function (p1, p2) {\n    let direction = p2.minus(p1)\n    let labda = (this.w - this.normal.dot(p1)) / this.normal.dot(direction)\n    if (isNaN(labda)) labda = 0\n    if (labda > 1) labda = 1\n    if (labda < 0) labda = 0\n    let result = p1.plus(direction.times(labda))\n    return result\n  },\n\n    // returns Vector3D\n  intersectWithLine: function (line3d) {\n    return line3d.intersectWithPlane(this)\n  },\n\n    // intersection of two planes\n  intersectWithPlane: function (plane) {\n    return Line3D.fromPlanes(this, plane)\n  },\n\n  signedDistanceToPoint: function (point) {\n    let t = this.normal.dot(point) - this.w\n    return t\n  },\n\n  toString: function () {\n    return '[normal: ' + this.normal.toString() + ', w: ' + this.w + ']'\n  },\n\n  mirrorPoint: function (point3d) {\n    let distance = this.signedDistanceToPoint(point3d)\n    let mirrored = point3d.minus(this.normal.times(distance * 2.0))\n    return mirrored\n  }\n}\n\nmodule.exports = Plane\n","const Vector2D = require('./Vector2')\nconst Vector3D = require('./Vector3')\nconst Line2D = require('./Line2')\nconst Line3D = require('./Line3')\nconst Plane = require('./Plane')\n\n/** class OrthoNormalBasis\n * Reprojects points on a 3D plane onto a 2D plane\n * or from a 2D plane back onto the 3D plane\n * @param  {Plane} plane\n * @param  {Vector3D|Vector2D} rightvector\n */\nconst OrthoNormalBasis = function (plane, rightvector) {\n  if (arguments.length < 2) {\n    // choose an arbitrary right hand vector, making sure it is somewhat orthogonal to the plane normal:\n    rightvector = plane.normal.randomNonParallelVector()\n  } else {\n    rightvector = new Vector3D(rightvector)\n  }\n  this.v = plane.normal.cross(rightvector).unit()\n  this.u = this.v.cross(plane.normal)\n  this.plane = plane\n  this.planeorigin = plane.normal.times(plane.w)\n}\n\n// Get an orthonormal basis for the standard XYZ planes.\n// Parameters: the names of two 3D axes. The 2d x axis will map to the first given 3D axis, the 2d y\n// axis will map to the second.\n// Prepend the axis with a \"-\" to invert the direction of this axis.\n// For example: OrthoNormalBasis.GetCartesian(\"-Y\",\"Z\")\n//   will return an orthonormal basis where the 2d X axis maps to the 3D inverted Y axis, and\n//   the 2d Y axis maps to the 3D Z axis.\nOrthoNormalBasis.GetCartesian = function (xaxisid, yaxisid) {\n  let axisid = xaxisid + '/' + yaxisid\n  let planenormal, rightvector\n  if (axisid === 'X/Y') {\n    planenormal = [0, 0, 1]\n    rightvector = [1, 0, 0]\n  } else if (axisid === 'Y/-X') {\n    planenormal = [0, 0, 1]\n    rightvector = [0, 1, 0]\n  } else if (axisid === '-X/-Y') {\n    planenormal = [0, 0, 1]\n    rightvector = [-1, 0, 0]\n  } else if (axisid === '-Y/X') {\n    planenormal = [0, 0, 1]\n    rightvector = [0, -1, 0]\n  } else if (axisid === '-X/Y') {\n    planenormal = [0, 0, -1]\n    rightvector = [-1, 0, 0]\n  } else if (axisid === '-Y/-X') {\n    planenormal = [0, 0, -1]\n    rightvector = [0, -1, 0]\n  } else if (axisid === 'X/-Y') {\n    planenormal = [0, 0, -1]\n    rightvector = [1, 0, 0]\n  } else if (axisid === 'Y/X') {\n    planenormal = [0, 0, -1]\n    rightvector = [0, 1, 0]\n  } else if (axisid === 'X/Z') {\n    planenormal = [0, -1, 0]\n    rightvector = [1, 0, 0]\n  } else if (axisid === 'Z/-X') {\n    planenormal = [0, -1, 0]\n    rightvector = [0, 0, 1]\n  } else if (axisid === '-X/-Z') {\n    planenormal = [0, -1, 0]\n    rightvector = [-1, 0, 0]\n  } else if (axisid === '-Z/X') {\n    planenormal = [0, -1, 0]\n    rightvector = [0, 0, -1]\n  } else if (axisid === '-X/Z') {\n    planenormal = [0, 1, 0]\n    rightvector = [-1, 0, 0]\n  } else if (axisid === '-Z/-X') {\n    planenormal = [0, 1, 0]\n    rightvector = [0, 0, -1]\n  } else if (axisid === 'X/-Z') {\n    planenormal = [0, 1, 0]\n    rightvector = [1, 0, 0]\n  } else if (axisid === 'Z/X') {\n    planenormal = [0, 1, 0]\n    rightvector = [0, 0, 1]\n  } else if (axisid === 'Y/Z') {\n    planenormal = [1, 0, 0]\n    rightvector = [0, 1, 0]\n  } else if (axisid === 'Z/-Y') {\n    planenormal = [1, 0, 0]\n    rightvector = [0, 0, 1]\n  } else if (axisid === '-Y/-Z') {\n    planenormal = [1, 0, 0]\n    rightvector = [0, -1, 0]\n  } else if (axisid === '-Z/Y') {\n    planenormal = [1, 0, 0]\n    rightvector = [0, 0, -1]\n  } else if (axisid === '-Y/Z') {\n    planenormal = [-1, 0, 0]\n    rightvector = [0, -1, 0]\n  } else if (axisid === '-Z/-Y') {\n    planenormal = [-1, 0, 0]\n    rightvector = [0, 0, -1]\n  } else if (axisid === 'Y/-Z') {\n    planenormal = [-1, 0, 0]\n    rightvector = [0, 1, 0]\n  } else if (axisid === 'Z/Y') {\n    planenormal = [-1, 0, 0]\n    rightvector = [0, 0, 1]\n  } else {\n    throw new Error('OrthoNormalBasis.GetCartesian: invalid combination of axis identifiers. Should pass two string arguments from [X,Y,Z,-X,-Y,-Z], being two different axes.')\n  }\n  return new OrthoNormalBasis(new Plane(new Vector3D(planenormal), 0), new Vector3D(rightvector))\n}\n\n/*\n// test code for OrthoNormalBasis.GetCartesian()\nOrthoNormalBasis.GetCartesian_Test=function() {\n  let axisnames=[\"X\",\"Y\",\"Z\",\"-X\",\"-Y\",\"-Z\"];\n  let axisvectors=[[1,0,0], [0,1,0], [0,0,1], [-1,0,0], [0,-1,0], [0,0,-1]];\n  for(let axis1=0; axis1 < 3; axis1++) {\n    for(let axis1inverted=0; axis1inverted < 2; axis1inverted++) {\n      let axis1name=axisnames[axis1+3*axis1inverted];\n      let axis1vector=axisvectors[axis1+3*axis1inverted];\n      for(let axis2=0; axis2 < 3; axis2++) {\n        if(axis2 != axis1) {\n          for(let axis2inverted=0; axis2inverted < 2; axis2inverted++) {\n            let axis2name=axisnames[axis2+3*axis2inverted];\n            let axis2vector=axisvectors[axis2+3*axis2inverted];\n            let orthobasis=OrthoNormalBasis.GetCartesian(axis1name, axis2name);\n            let test1=orthobasis.to3D(new Vector2D([1,0]));\n            let test2=orthobasis.to3D(new Vector2D([0,1]));\n            let expected1=new Vector3D(axis1vector);\n            let expected2=new Vector3D(axis2vector);\n            let d1=test1.distanceTo(expected1);\n            let d2=test2.distanceTo(expected2);\n            if( (d1 > 0.01) || (d2 > 0.01) ) {\n              throw new Error(\"Wrong!\");\n  }}}}}}\n  throw new Error(\"OK\");\n};\n*/\n\n// The z=0 plane, with the 3D x and y vectors mapped to the 2D x and y vector\nOrthoNormalBasis.Z0Plane = function () {\n  let plane = new Plane(new Vector3D([0, 0, 1]), 0)\n  return new OrthoNormalBasis(plane, new Vector3D([1, 0, 0]))\n}\n\nOrthoNormalBasis.prototype = {\n  getProjectionMatrix: function () {\n    const Matrix4x4 = require('./Matrix4') // FIXME: circular dependencies Matrix=>OrthoNormalBasis => Matrix\n    return new Matrix4x4([\n      this.u.x, this.v.x, this.plane.normal.x, 0,\n      this.u.y, this.v.y, this.plane.normal.y, 0,\n      this.u.z, this.v.z, this.plane.normal.z, 0,\n      0, 0, -this.plane.w, 1\n    ])\n  },\n\n  getInverseProjectionMatrix: function () {\n    const Matrix4x4 = require('./Matrix4') // FIXME: circular dependencies Matrix=>OrthoNormalBasis => Matrix\n    let p = this.plane.normal.times(this.plane.w)\n    return new Matrix4x4([\n      this.u.x, this.u.y, this.u.z, 0,\n      this.v.x, this.v.y, this.v.z, 0,\n      this.plane.normal.x, this.plane.normal.y, this.plane.normal.z, 0,\n      p.x, p.y, p.z, 1\n    ])\n  },\n\n  to2D: function (vec3) {\n    return new Vector2D(vec3.dot(this.u), vec3.dot(this.v))\n  },\n\n  to3D: function (vec2) {\n    return this.planeorigin.plus(this.u.times(vec2.x)).plus(this.v.times(vec2.y))\n  },\n\n  line3Dto2D: function (line3d) {\n    let a = line3d.point\n    let b = line3d.direction.plus(a)\n    let a2d = this.to2D(a)\n    let b2d = this.to2D(b)\n    return Line2D.fromPoints(a2d, b2d)\n  },\n\n  line2Dto3D: function (line2d) {\n    let a = line2d.origin()\n    let b = line2d.direction().plus(a)\n    let a3d = this.to3D(a)\n    let b3d = this.to3D(b)\n    return Line3D.fromPoints(a3d, b3d)\n  },\n\n  transform: function (matrix4x4) {\n    // todo: this may not work properly in case of mirroring\n    let newplane = this.plane.transform(matrix4x4)\n    let rightpointTransformed = this.u.transform(matrix4x4)\n    let originTransformed = new Vector3D(0, 0, 0).transform(matrix4x4)\n    let newrighthandvector = rightpointTransformed.minus(originTransformed)\n    let newbasis = new OrthoNormalBasis(newplane, newrighthandvector)\n    return newbasis\n  }\n}\n\nmodule.exports = OrthoNormalBasis\n","const Vector3D = require('./Vector3')\nconst Vector2D = require('./Vector2')\nconst OrthoNormalBasis = require('./OrthoNormalBasis')\nconst Plane = require('./Plane')\n\n// # class Matrix4x4:\n// Represents a 4x4 matrix. Elements are specified in row order\nconst Matrix4x4 = function (elements) {\n  if (arguments.length >= 1) {\n    this.elements = elements\n  } else {\n        // if no arguments passed: create unity matrix\n    this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]\n  }\n}\n\nMatrix4x4.prototype = {\n  plus: function (m) {\n    var r = []\n    for (var i = 0; i < 16; i++) {\n      r[i] = this.elements[i] + m.elements[i]\n    }\n    return new Matrix4x4(r)\n  },\n\n  minus: function (m) {\n    var r = []\n    for (var i = 0; i < 16; i++) {\n      r[i] = this.elements[i] - m.elements[i]\n    }\n    return new Matrix4x4(r)\n  },\n\n    // right multiply by another 4x4 matrix:\n  multiply: function (m) {\n        // cache elements in local variables, for speedup:\n    var this0 = this.elements[0]\n    var this1 = this.elements[1]\n    var this2 = this.elements[2]\n    var this3 = this.elements[3]\n    var this4 = this.elements[4]\n    var this5 = this.elements[5]\n    var this6 = this.elements[6]\n    var this7 = this.elements[7]\n    var this8 = this.elements[8]\n    var this9 = this.elements[9]\n    var this10 = this.elements[10]\n    var this11 = this.elements[11]\n    var this12 = this.elements[12]\n    var this13 = this.elements[13]\n    var this14 = this.elements[14]\n    var this15 = this.elements[15]\n    var m0 = m.elements[0]\n    var m1 = m.elements[1]\n    var m2 = m.elements[2]\n    var m3 = m.elements[3]\n    var m4 = m.elements[4]\n    var m5 = m.elements[5]\n    var m6 = m.elements[6]\n    var m7 = m.elements[7]\n    var m8 = m.elements[8]\n    var m9 = m.elements[9]\n    var m10 = m.elements[10]\n    var m11 = m.elements[11]\n    var m12 = m.elements[12]\n    var m13 = m.elements[13]\n    var m14 = m.elements[14]\n    var m15 = m.elements[15]\n\n    var result = []\n    result[0] = this0 * m0 + this1 * m4 + this2 * m8 + this3 * m12\n    result[1] = this0 * m1 + this1 * m5 + this2 * m9 + this3 * m13\n    result[2] = this0 * m2 + this1 * m6 + this2 * m10 + this3 * m14\n    result[3] = this0 * m3 + this1 * m7 + this2 * m11 + this3 * m15\n    result[4] = this4 * m0 + this5 * m4 + this6 * m8 + this7 * m12\n    result[5] = this4 * m1 + this5 * m5 + this6 * m9 + this7 * m13\n    result[6] = this4 * m2 + this5 * m6 + this6 * m10 + this7 * m14\n    result[7] = this4 * m3 + this5 * m7 + this6 * m11 + this7 * m15\n    result[8] = this8 * m0 + this9 * m4 + this10 * m8 + this11 * m12\n    result[9] = this8 * m1 + this9 * m5 + this10 * m9 + this11 * m13\n    result[10] = this8 * m2 + this9 * m6 + this10 * m10 + this11 * m14\n    result[11] = this8 * m3 + this9 * m7 + this10 * m11 + this11 * m15\n    result[12] = this12 * m0 + this13 * m4 + this14 * m8 + this15 * m12\n    result[13] = this12 * m1 + this13 * m5 + this14 * m9 + this15 * m13\n    result[14] = this12 * m2 + this13 * m6 + this14 * m10 + this15 * m14\n    result[15] = this12 * m3 + this13 * m7 + this14 * m11 + this15 * m15\n    return new Matrix4x4(result)\n  },\n\n  clone: function () {\n    var elements = this.elements.map(function (p) {\n      return p\n    })\n    return new Matrix4x4(elements)\n  },\n\n    // Right multiply the matrix by a Vector3D (interpreted as 3 row, 1 column)\n    // (result = M*v)\n    // Fourth element is taken as 1\n  rightMultiply1x3Vector: function (v) {\n    var v0 = v._x\n    var v1 = v._y\n    var v2 = v._z\n    var v3 = 1\n    var x = v0 * this.elements[0] + v1 * this.elements[1] + v2 * this.elements[2] + v3 * this.elements[3]\n    var y = v0 * this.elements[4] + v1 * this.elements[5] + v2 * this.elements[6] + v3 * this.elements[7]\n    var z = v0 * this.elements[8] + v1 * this.elements[9] + v2 * this.elements[10] + v3 * this.elements[11]\n    var w = v0 * this.elements[12] + v1 * this.elements[13] + v2 * this.elements[14] + v3 * this.elements[15]\n        // scale such that fourth element becomes 1:\n    if (w !== 1) {\n      var invw = 1.0 / w\n      x *= invw\n      y *= invw\n      z *= invw\n    }\n    return new Vector3D(x, y, z)\n  },\n\n    // Multiply a Vector3D (interpreted as 3 column, 1 row) by this matrix\n    // (result = v*M)\n    // Fourth element is taken as 1\n  leftMultiply1x3Vector: function (v) {\n    var v0 = v._x\n    var v1 = v._y\n    var v2 = v._z\n    var v3 = 1\n    var x = v0 * this.elements[0] + v1 * this.elements[4] + v2 * this.elements[8] + v3 * this.elements[12]\n    var y = v0 * this.elements[1] + v1 * this.elements[5] + v2 * this.elements[9] + v3 * this.elements[13]\n    var z = v0 * this.elements[2] + v1 * this.elements[6] + v2 * this.elements[10] + v3 * this.elements[14]\n    var w = v0 * this.elements[3] + v1 * this.elements[7] + v2 * this.elements[11] + v3 * this.elements[15]\n        // scale such that fourth element becomes 1:\n    if (w !== 1) {\n      var invw = 1.0 / w\n      x *= invw\n      y *= invw\n      z *= invw\n    }\n    return new Vector3D(x, y, z)\n  },\n\n    // Right multiply the matrix by a Vector2D (interpreted as 2 row, 1 column)\n    // (result = M*v)\n    // Fourth element is taken as 1\n  rightMultiply1x2Vector: function (v) {\n    var v0 = v.x\n    var v1 = v.y\n    var v2 = 0\n    var v3 = 1\n    var x = v0 * this.elements[0] + v1 * this.elements[1] + v2 * this.elements[2] + v3 * this.elements[3]\n    var y = v0 * this.elements[4] + v1 * this.elements[5] + v2 * this.elements[6] + v3 * this.elements[7]\n    var z = v0 * this.elements[8] + v1 * this.elements[9] + v2 * this.elements[10] + v3 * this.elements[11]\n    var w = v0 * this.elements[12] + v1 * this.elements[13] + v2 * this.elements[14] + v3 * this.elements[15]\n        // scale such that fourth element becomes 1:\n    if (w !== 1) {\n      var invw = 1.0 / w\n      x *= invw\n      y *= invw\n      z *= invw\n    }\n    return new Vector2D(x, y)\n  },\n\n    // Multiply a Vector2D (interpreted as 2 column, 1 row) by this matrix\n    // (result = v*M)\n    // Fourth element is taken as 1\n  leftMultiply1x2Vector: function (v) {\n    var v0 = v.x\n    var v1 = v.y\n    var v2 = 0\n    var v3 = 1\n    var x = v0 * this.elements[0] + v1 * this.elements[4] + v2 * this.elements[8] + v3 * this.elements[12]\n    var y = v0 * this.elements[1] + v1 * this.elements[5] + v2 * this.elements[9] + v3 * this.elements[13]\n    var z = v0 * this.elements[2] + v1 * this.elements[6] + v2 * this.elements[10] + v3 * this.elements[14]\n    var w = v0 * this.elements[3] + v1 * this.elements[7] + v2 * this.elements[11] + v3 * this.elements[15]\n        // scale such that fourth element becomes 1:\n    if (w !== 1) {\n      var invw = 1.0 / w\n      x *= invw\n      y *= invw\n      z *= invw\n    }\n    return new Vector2D(x, y)\n  },\n\n    // determine whether this matrix is a mirroring transformation\n  isMirroring: function () {\n    var u = new Vector3D(this.elements[0], this.elements[4], this.elements[8])\n    var v = new Vector3D(this.elements[1], this.elements[5], this.elements[9])\n    var w = new Vector3D(this.elements[2], this.elements[6], this.elements[10])\n\n        // for a true orthogonal, non-mirrored base, u.cross(v) == w\n        // If they have an opposite direction then we are mirroring\n    var mirrorvalue = u.cross(v).dot(w)\n    var ismirror = (mirrorvalue < 0)\n    return ismirror\n  }\n}\n\n// return the unity matrix\nMatrix4x4.unity = function () {\n  return new Matrix4x4()\n}\n\n// Create a rotation matrix for rotating around the x axis\nMatrix4x4.rotationX = function (degrees) {\n  var radians = degrees * Math.PI * (1.0 / 180.0)\n  var cos = Math.cos(radians)\n  var sin = Math.sin(radians)\n  var els = [\n    1, 0, 0, 0, 0, cos, sin, 0, 0, -sin, cos, 0, 0, 0, 0, 1\n  ]\n  return new Matrix4x4(els)\n}\n\n// Create a rotation matrix for rotating around the y axis\nMatrix4x4.rotationY = function (degrees) {\n  var radians = degrees * Math.PI * (1.0 / 180.0)\n  var cos = Math.cos(radians)\n  var sin = Math.sin(radians)\n  var els = [\n    cos, 0, -sin, 0, 0, 1, 0, 0, sin, 0, cos, 0, 0, 0, 0, 1\n  ]\n  return new Matrix4x4(els)\n}\n\n// Create a rotation matrix for rotating around the z axis\nMatrix4x4.rotationZ = function (degrees) {\n  var radians = degrees * Math.PI * (1.0 / 180.0)\n  var cos = Math.cos(radians)\n  var sin = Math.sin(radians)\n  var els = [\n    cos, sin, 0, 0, -sin, cos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1\n  ]\n  return new Matrix4x4(els)\n}\n\n// Matrix for rotation about arbitrary point and axis\nMatrix4x4.rotation = function (rotationCenter, rotationAxis, degrees) {\n  rotationCenter = new Vector3D(rotationCenter)\n  rotationAxis = new Vector3D(rotationAxis)\n  var rotationPlane = Plane.fromNormalAndPoint(rotationAxis, rotationCenter)\n  var orthobasis = new OrthoNormalBasis(rotationPlane)\n  var transformation = Matrix4x4.translation(rotationCenter.negated())\n  transformation = transformation.multiply(orthobasis.getProjectionMatrix())\n  transformation = transformation.multiply(Matrix4x4.rotationZ(degrees))\n  transformation = transformation.multiply(orthobasis.getInverseProjectionMatrix())\n  transformation = transformation.multiply(Matrix4x4.translation(rotationCenter))\n  return transformation\n}\n\n// Create an affine matrix for translation:\nMatrix4x4.translation = function (v) {\n    // parse as Vector3D, so we can pass an array or a Vector3D\n  var vec = new Vector3D(v)\n  var els = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, vec.x, vec.y, vec.z, 1]\n  return new Matrix4x4(els)\n}\n\n// Create an affine matrix for mirroring into an arbitrary plane:\nMatrix4x4.mirroring = function (plane) {\n  var nx = plane.normal.x\n  var ny = plane.normal.y\n  var nz = plane.normal.z\n  var w = plane.w\n  var els = [\n        (1.0 - 2.0 * nx * nx), (-2.0 * ny * nx), (-2.0 * nz * nx), 0,\n        (-2.0 * nx * ny), (1.0 - 2.0 * ny * ny), (-2.0 * nz * ny), 0,\n        (-2.0 * nx * nz), (-2.0 * ny * nz), (1.0 - 2.0 * nz * nz), 0,\n        (2.0 * nx * w), (2.0 * ny * w), (2.0 * nz * w), 1\n  ]\n  return new Matrix4x4(els)\n}\n\n// Create an affine matrix for scaling:\nMatrix4x4.scaling = function (v) {\n    // parse as Vector3D, so we can pass an array or a Vector3D\n  var vec = new Vector3D(v)\n  var els = [\n    vec.x, 0, 0, 0, 0, vec.y, 0, 0, 0, 0, vec.z, 0, 0, 0, 0, 1\n  ]\n  return new Matrix4x4(els)\n}\n\nmodule.exports = Matrix4x4\n","const Matrix4x4 = require('./math/Matrix4')\nconst Vector3D = require('./math/Vector3')\nconst Plane = require('./math/Plane')\n\n// Add several convenience methods to the classes that support a transform() method:\nconst addTransformationMethodsToPrototype = function (prot) {\n  prot.mirrored = function (plane) {\n    return this.transform(Matrix4x4.mirroring(plane))\n  }\n\n  prot.mirroredX = function () {\n    let plane = new Plane(Vector3D.Create(1, 0, 0), 0)\n    return this.mirrored(plane)\n  }\n\n  prot.mirroredY = function () {\n    let plane = new Plane(Vector3D.Create(0, 1, 0), 0)\n    return this.mirrored(plane)\n  }\n\n  prot.mirroredZ = function () {\n    let plane = new Plane(Vector3D.Create(0, 0, 1), 0)\n    return this.mirrored(plane)\n  }\n\n  prot.translate = function (v) {\n    return this.transform(Matrix4x4.translation(v))\n  }\n\n  prot.scale = function (f) {\n    return this.transform(Matrix4x4.scaling(f))\n  }\n\n  prot.rotateX = function (deg) {\n    return this.transform(Matrix4x4.rotationX(deg))\n  }\n\n  prot.rotateY = function (deg) {\n    return this.transform(Matrix4x4.rotationY(deg))\n  }\n\n  prot.rotateZ = function (deg) {\n    return this.transform(Matrix4x4.rotationZ(deg))\n  }\n\n  prot.rotate = function (rotationCenter, rotationAxis, degrees) {\n    return this.transform(Matrix4x4.rotation(rotationCenter, rotationAxis, degrees))\n  }\n\n  prot.rotateEulerAngles = function (alpha, beta, gamma, position) {\n    position = position || [0, 0, 0]\n\n    let Rz1 = Matrix4x4.rotationZ(alpha)\n    let Rx = Matrix4x4.rotationX(beta)\n    let Rz2 = Matrix4x4.rotationZ(gamma)\n    let T = Matrix4x4.translation(new Vector3D(position))\n\n    return this.transform(Rz2.multiply(Rx).multiply(Rz1).multiply(T))\n  }\n}\n\n// TODO: consider generalization and adding to addTransformationMethodsToPrototype\nconst addCenteringToPrototype = function (prot, axes) {\n  prot.center = function (cAxes) {\n    cAxes = Array.prototype.map.call(arguments, function (a) {\n      return a // .toLowerCase();\n    })\n        // no args: center on all axes\n    if (!cAxes.length) {\n      cAxes = axes.slice()\n    }\n    let b = this.getBounds()\n    return this.translate(axes.map(function (a) {\n      return cAxes.indexOf(a) > -1 ? -(b[0][a] + b[1][a]) / 2 : 0\n    }))\n  }\n}\nmodule.exports = {\n  addTransformationMethodsToPrototype,\n  addCenteringToPrototype\n}\n","const Vector3D = require('./Vector3')\nconst {getTag} = require('../constants')\n\n// # class Vertex\n// Represents a vertex of a polygon. Use your own vertex class instead of this\n// one to provide additional features like texture coordinates and vertex\n// colors. Custom vertex classes need to provide a `pos` property\n// `flipped()`, and `interpolate()` methods that behave analogous to the ones\n// FIXME: And a lot MORE (see plane.fromVector3Ds for ex) ! This is fragile code\n// defined by `Vertex`.\nconst Vertex = function (pos) {\n  this.pos = pos\n}\n\n// create from an untyped object with identical property names:\nVertex.fromObject = function (obj) {\n  var pos = new Vector3D(obj.pos)\n  return new Vertex(pos)\n}\n\nVertex.prototype = {\n    // Return a vertex with all orientation-specific data (e.g. vertex normal) flipped. Called when the\n    // orientation of a polygon is flipped.\n  flipped: function () {\n    return this\n  },\n\n  getTag: function () {\n    var result = this.tag\n    if (!result) {\n      result = getTag()\n      this.tag = result\n    }\n    return result\n  },\n\n    // Create a new vertex between this vertex and `other` by linearly\n    // interpolating all properties using a parameter of `t`. Subclasses should\n    // override this to interpolate additional properties.\n  interpolate: function (other, t) {\n    var newpos = this.pos.lerp(other.pos, t)\n    return new Vertex(newpos)\n  },\n\n    // Affine transformation of vertex. Returns a new Vertex\n  transform: function (matrix4x4) {\n    var newpos = this.pos.multiply4x4(matrix4x4)\n    return new Vertex(newpos)\n  },\n\n  toString: function () {\n    return this.pos.toString()\n  }\n}\n\nmodule.exports = Vertex\n","const Vector3D = require('./math/Vector3')\nconst Line3D = require('./math/Line3')\nconst Matrix4x4 = require('./math/Matrix4')\nconst OrthoNormalBasis = require('./math/OrthoNormalBasis')\nconst Plane = require('./math/Plane')\n\n// # class Connector\n// A connector allows to attach two objects at predefined positions\n// For example a servo motor and a servo horn:\n// Both can have a Connector called 'shaft'\n// The horn can be moved and rotated such that the two connectors match\n// and the horn is attached to the servo motor at the proper position.\n// Connectors are stored in the properties of a CSG solid so they are\n// ge the same transformations applied as the solid\nconst Connector = function (point, axisvector, normalvector) {\n  this.point = new Vector3D(point)\n  this.axisvector = new Vector3D(axisvector).unit()\n  this.normalvector = new Vector3D(normalvector).unit()\n}\n\nConnector.prototype = {\n  normalized: function () {\n    let axisvector = this.axisvector.unit()\n        // make the normal vector truly normal:\n    let n = this.normalvector.cross(axisvector).unit()\n    let normalvector = axisvector.cross(n)\n    return new Connector(this.point, axisvector, normalvector)\n  },\n\n  transform: function (matrix4x4) {\n    let point = this.point.multiply4x4(matrix4x4)\n    let axisvector = this.point.plus(this.axisvector).multiply4x4(matrix4x4).minus(point)\n    let normalvector = this.point.plus(this.normalvector).multiply4x4(matrix4x4).minus(point)\n    return new Connector(point, axisvector, normalvector)\n  },\n\n    // Get the transformation matrix to connect this Connector to another connector\n    //   other: a Connector to which this connector should be connected\n    //   mirror: false: the 'axis' vectors of the connectors should point in the same direction\n    //           true: the 'axis' vectors of the connectors should point in opposite direction\n    //   normalrotation: degrees of rotation between the 'normal' vectors of the two\n    //                   connectors\n  getTransformationTo: function (other, mirror, normalrotation) {\n    mirror = mirror ? true : false\n    normalrotation = normalrotation ? Number(normalrotation) : 0\n    let us = this.normalized()\n    other = other.normalized()\n        // shift to the origin:\n    let transformation = Matrix4x4.translation(this.point.negated())\n        // construct the plane crossing through the origin and the two axes:\n    let axesplane = Plane.anyPlaneFromVector3Ds(\n            new Vector3D(0, 0, 0), us.axisvector, other.axisvector)\n    let axesbasis = new OrthoNormalBasis(axesplane)\n    let angle1 = axesbasis.to2D(us.axisvector).angle()\n    let angle2 = axesbasis.to2D(other.axisvector).angle()\n    let rotation = 180.0 * (angle2 - angle1) / Math.PI\n    if (mirror) rotation += 180.0\n    transformation = transformation.multiply(axesbasis.getProjectionMatrix())\n    transformation = transformation.multiply(Matrix4x4.rotationZ(rotation))\n    transformation = transformation.multiply(axesbasis.getInverseProjectionMatrix())\n    let usAxesAligned = us.transform(transformation)\n        // Now we have done the transformation for aligning the axes.\n        // We still need to align the normals:\n    let normalsplane = Plane.fromNormalAndPoint(other.axisvector, new Vector3D(0, 0, 0))\n    let normalsbasis = new OrthoNormalBasis(normalsplane)\n    angle1 = normalsbasis.to2D(usAxesAligned.normalvector).angle()\n    angle2 = normalsbasis.to2D(other.normalvector).angle()\n    rotation = 180.0 * (angle2 - angle1) / Math.PI\n    rotation += normalrotation\n    transformation = transformation.multiply(normalsbasis.getProjectionMatrix())\n    transformation = transformation.multiply(Matrix4x4.rotationZ(rotation))\n    transformation = transformation.multiply(normalsbasis.getInverseProjectionMatrix())\n        // and translate to the destination point:\n    transformation = transformation.multiply(Matrix4x4.translation(other.point))\n        // let usAligned = us.transform(transformation);\n    return transformation\n  },\n\n  axisLine: function () {\n    return new Line3D(this.point, this.axisvector)\n  },\n\n    // creates a new Connector, with the connection point moved in the direction of the axisvector\n  extend: function (distance) {\n    let newpoint = this.point.plus(this.axisvector.unit().times(distance))\n    return new Connector(newpoint, this.axisvector, this.normalvector)\n  }\n}\n\nconst ConnectorList = function (connectors) {\n  this.connectors_ = connectors ? connectors.slice() : []\n}\n\nConnectorList.defaultNormal = [0, 0, 1]\n\nConnectorList.fromPath2D = function (path2D, arg1, arg2) {\n  if (arguments.length === 3) {\n    return ConnectorList._fromPath2DTangents(path2D, arg1, arg2)\n  } else if (arguments.length === 2) {\n    return ConnectorList._fromPath2DExplicit(path2D, arg1)\n  } else {\n    throw new Error('call with path2D and either 2 direction vectors, or a function returning direction vectors')\n  }\n}\n\n/*\n * calculate the connector axisvectors by calculating the \"tangent\" for path2D.\n * This is undefined for start and end points, so axis for these have to be manually\n * provided.\n */\nConnectorList._fromPath2DTangents = function (path2D, start, end) {\n    // path2D\n  let axis\n  let pathLen = path2D.points.length\n  let result = new ConnectorList([new Connector(path2D.points[0],\n        start, ConnectorList.defaultNormal)])\n    // middle points\n  path2D.points.slice(1, pathLen - 1).forEach(function (p2, i) {\n    axis = path2D.points[i + 2].minus(path2D.points[i]).toVector3D(0)\n    result.appendConnector(new Connector(p2.toVector3D(0), axis,\n          ConnectorList.defaultNormal))\n  }, this)\n  result.appendConnector(new Connector(path2D.points[pathLen - 1], end,\n      ConnectorList.defaultNormal))\n  result.closed = path2D.closed\n  return result\n}\n\n/*\n * angleIsh: either a static angle, or a function(point) returning an angle\n */\nConnectorList._fromPath2DExplicit = function (path2D, angleIsh) {\n  function getAngle (angleIsh, pt, i) {\n    if (typeof angleIsh === 'function') {\n      angleIsh = angleIsh(pt, i)\n    }\n    return angleIsh\n  }\n  let result = new ConnectorList(\n        path2D.points.map(function (p2, i) {\n          return new Connector(p2.toVector3D(0),\n                Vector3D.Create(1, 0, 0).rotateZ(getAngle(angleIsh, p2, i)),\n                  ConnectorList.defaultNormal)\n        }, this)\n    )\n  result.closed = path2D.closed\n  return result\n}\n\nConnectorList.prototype = {\n  setClosed: function (closed) {\n    this.closed = !!closed\n  },\n  appendConnector: function (conn) {\n    this.connectors_.push(conn)\n  },\n    /*\n     * arguments: cagish: a cag or a function(connector) returning a cag\n     *            closed: whether the 3d path defined by connectors location\n     *              should be closed or stay open\n     *              Note: don't duplicate connectors in the path\n     * TODO: consider an option \"maySelfIntersect\" to close & force union all single segments\n     */\n  followWith: function (cagish) {\n    const CSG = require('./CSG') // FIXME , circular dependency connectors => CSG => connectors\n\n    this.verify()\n    function getCag (cagish, connector) {\n      if (typeof cagish === 'function') {\n        cagish = cagish(connector.point, connector.axisvector, connector.normalvector)\n      }\n      return cagish\n    }\n\n    let polygons = []\n    let currCag\n    let prevConnector = this.connectors_[this.connectors_.length - 1]\n    let prevCag = getCag(cagish, prevConnector)\n        // add walls\n    this.connectors_.forEach(function (connector, notFirst) {\n      currCag = getCag(cagish, connector)\n      if (notFirst || this.closed) {\n        polygons.push.apply(polygons, prevCag._toWallPolygons({\n          toConnector1: prevConnector, toConnector2: connector, cag: currCag}))\n      } else {\n                // it is the first, and shape not closed -> build start wall\n        polygons.push.apply(polygons,\n                    currCag._toPlanePolygons({toConnector: connector, flipped: true}))\n      }\n      if (notFirst === this.connectors_.length - 1 && !this.closed) {\n                // build end wall\n        polygons.push.apply(polygons,\n                    currCag._toPlanePolygons({toConnector: connector}))\n      }\n      prevCag = currCag\n      prevConnector = connector\n    }, this)\n    return CSG.fromPolygons(polygons).reTesselated().canonicalized()\n  },\n    /*\n     * general idea behind these checks: connectors need to have smooth transition from one to another\n     * TODO: add a check that 2 follow-on CAGs are not intersecting\n     */\n  verify: function () {\n    let connI\n    let connI1\n    for (let i = 0; i < this.connectors_.length - 1; i++) {\n      connI = this.connectors_[i]\n      connI1 = this.connectors_[i + 1]\n      if (connI1.point.minus(connI.point).dot(connI.axisvector) <= 0) {\n        throw new Error('Invalid ConnectorList. Each connectors position needs to be within a <90deg range of previous connectors axisvector')\n      }\n      if (connI.axisvector.dot(connI1.axisvector) <= 0) {\n        throw new Error('invalid ConnectorList. No neighboring connectors axisvectors may span a >=90deg angle')\n      }\n    }\n  }\n}\n\nmodule.exports = {Connector, ConnectorList}\n","const Vector2D = require('./Vector2')\nconst {getTag} = require('../constants')\n\nconst Vertex = function (pos) {\n  this.pos = pos\n}\n\nVertex.fromObject = function (obj) {\n  return new Vertex(new Vector2D(obj.pos._x, obj.pos._y))\n}\n\nVertex.prototype = {\n  toString: function () {\n    return '(' + this.pos.x.toFixed(5) + ',' + this.pos.y.toFixed(5) + ')'\n  },\n  getTag: function () {\n    var result = this.tag\n    if (!result) {\n      result = getTag()\n      this.tag = result\n    }\n    return result\n  }\n}\n\nmodule.exports = Vertex\n","const Vector2D = require('./Vector2')\nconst Vertex = require('./Vertex2')\nconst Vertex3 = require('./Vertex3')\nconst Polygon = require('./Polygon3')\nconst {getTag} = require('../constants')\n\nconst Side = function (vertex0, vertex1) {\n  if (!(vertex0 instanceof Vertex)) throw new Error('Assertion failed')\n  if (!(vertex1 instanceof Vertex)) throw new Error('Assertion failed')\n  this.vertex0 = vertex0\n  this.vertex1 = vertex1\n}\n\nSide.fromObject = function (obj) {\n  var vertex0 = Vertex.fromObject(obj.vertex0)\n  var vertex1 = Vertex.fromObject(obj.vertex1)\n  return new Side(vertex0, vertex1)\n}\n\nSide._fromFakePolygon = function (polygon) {\n    // this can happen based on union, seems to be residuals -\n    // return null and handle in caller\n  if (polygon.vertices.length < 4) {\n    return null\n  }\n  var vert1Indices = []\n  var pts2d = polygon.vertices.filter(function (v, i) {\n    if (v.pos.z > 0) {\n      vert1Indices.push(i)\n      return true\n    }\n    return false\n  })\n    .map(function (v) {\n      return new Vector2D(v.pos.x, v.pos.y)\n    })\n  if (pts2d.length !== 2) {\n    throw new Error('Assertion failed: _fromFakePolygon: not enough points found')\n  }\n  var d = vert1Indices[1] - vert1Indices[0]\n  if (d === 1 || d === 3) {\n    if (d === 1) {\n      pts2d.reverse()\n    }\n  } else {\n    throw new Error('Assertion failed: _fromFakePolygon: unknown index ordering')\n  }\n  var result = new Side(new Vertex(pts2d[0]), new Vertex(pts2d[1]))\n  return result\n}\n\nSide.prototype = {\n  toString: function () {\n    return this.vertex0 + ' -> ' + this.vertex1\n  },\n\n  toPolygon3D: function (z0, z1) {\n    // console.log(this.vertex0.pos)\n    const vertices = [\n      new Vertex3(this.vertex0.pos.toVector3D(z0)),\n      new Vertex3(this.vertex1.pos.toVector3D(z0)),\n      new Vertex3(this.vertex1.pos.toVector3D(z1)),\n      new Vertex3(this.vertex0.pos.toVector3D(z1))\n    ]\n    return new Polygon(vertices)\n  },\n\n  transform: function (matrix4x4) {\n    var newp1 = this.vertex0.pos.transform(matrix4x4)\n    var newp2 = this.vertex1.pos.transform(matrix4x4)\n    return new Side(new Vertex(newp1), new Vertex(newp2))\n  },\n\n  flipped: function () {\n    return new Side(this.vertex1, this.vertex0)\n  },\n\n  direction: function () {\n    return this.vertex1.pos.minus(this.vertex0.pos)\n  },\n\n  getTag: function () {\n    var result = this.tag\n    if (!result) {\n      result = getTag()\n      this.tag = result\n    }\n    return result\n  },\n\n  lengthSquared: function () {\n    let x = this.vertex1.pos.x - this.vertex0.pos.x\n    let y = this.vertex1.pos.y - this.vertex0.pos.y\n    return x * x + y * y\n  },\n\n  length: function () {\n    return Math.sqrt(this.lengthSquared())\n  }\n}\n\nmodule.exports = Side\n","const {EPS} = require('../constants')\nconst {solve2Linear} = require('../utils')\n\n// see if the line between p0start and p0end intersects with the line between p1start and p1end\n// returns true if the lines strictly intersect, the end points are not counted!\nconst linesIntersect = function (p0start, p0end, p1start, p1end) {\n  if (p0end.equals(p1start) || p1end.equals(p0start)) {\n    let d = p1end.minus(p1start).unit().plus(p0end.minus(p0start).unit()).length()\n    if (d < EPS) {\n      return true\n    }\n  } else {\n    let d0 = p0end.minus(p0start)\n    let d1 = p1end.minus(p1start)\n    // FIXME These epsilons need review and testing\n    if (Math.abs(d0.cross(d1)) < 1e-9) return false // lines are parallel\n    let alphas = solve2Linear(-d0.x, d1.x, -d0.y, d1.y, p0start.x - p1start.x, p0start.y - p1start.y)\n    if ((alphas[0] > 1e-6) && (alphas[0] < 0.999999) && (alphas[1] > 1e-5) && (alphas[1] < 0.999999)) return true\n    // if( (alphas[0] >= 0) && (alphas[0] <= 1) && (alphas[1] >= 0) && (alphas[1] <= 1) ) return true;\n  }\n  return false\n}\n\nmodule.exports = {linesIntersect}\n","const {areaEPS} = require('../constants')\nconst {linesIntersect} = require('../math/lineUtils')\n\n// check if we are a valid CAG (for debugging)\n// NOTE(bebbi) uneven side count doesn't work because rounding with EPS isn't taken into account\nconst isCAGValid = function (CAG) {\n  let errors = []\n  if (CAG.isSelfIntersecting(true)) {\n    errors.push('Self intersects')\n  }\n  let pointcount = {}\n  CAG.sides.map(function (side) {\n    function mappoint (p) {\n      let tag = p.x + ' ' + p.y\n      if (!(tag in pointcount)) pointcount[tag] = 0\n      pointcount[tag] ++\n    }\n    mappoint(side.vertex0.pos)\n    mappoint(side.vertex1.pos)\n  })\n  for (let tag in pointcount) {\n    let count = pointcount[tag]\n    if (count & 1) {\n      errors.push('Uneven number of sides (' + count + ') for point ' + tag)\n    }\n  }\n  let area = CAG.area()\n  if (area < areaEPS) {\n    errors.push('Area is ' + area)\n  }\n  if (errors.length > 0) {\n    let ertxt = ''\n    errors.map(function (err) {\n      ertxt += err + '\\n'\n    })\n    throw new Error(ertxt)\n  }\n}\n\nconst isSelfIntersecting = function (cag, debug) {\n  let numsides = cag.sides.length\n  for (let i = 0; i < numsides; i++) {\n    let side0 = cag.sides[i]\n    for (let ii = i + 1; ii < numsides; ii++) {\n      let side1 = cag.sides[ii]\n      if (linesIntersect(side0.vertex0.pos, side0.vertex1.pos, side1.vertex0.pos, side1.vertex1.pos)) {\n        if (debug) { console.log('side ' + i + ': ' + side0); console.log('side ' + ii + ': ' + side1) }\n        return true\n      }\n    }\n  }\n  return false\n}\n\n/** Check if the point stay inside the CAG shape\n* ray-casting algorithm based on :\n* https://github.com/substack/point-in-polygon/blob/master/index.js\n* http://www.ecse.rp1.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n* originaly writed for https://github.com/lautr3k/SLAcer.js/blob/dev/js/slacer/slicer.js#L82\n* @param {CAG} cag - CAG object\n* @param {Object} p0 - Vertex2 like object\n* @returns {Boolean}\n*/\nconst hasPointInside = function (cag, p0) {\n  let p1 = null\n  let p2 = null\n  let inside = false\n  cag.sides.forEach(side => {\n    p1 = side.vertex0.pos\n    p2 = side.vertex1.pos\n    if (hasPointInside.c1(p0, p1, p2) && hasPointInside.c2(p0, p1, p2)) {\n      inside = !inside\n    }\n  })\n  return inside\n}\n\nhasPointInside.c1 = (p0, p1, p2) => (p1.y > p0.y) !== (p2.y > p0.y)\nhasPointInside.c2 = (p0, p1, p2) => (p0.x < (p2.x - p1.x) * (p0.y - p1.y) / (p2.y - p1.y) + p1.x)\n\n/** Check if all points from one CAG stay inside another CAG\n* @param {CAG} cag1 - CAG object\n* @param {Object} cag2 - CAG object\n* @returns {Boolean}\n*/\nconst contains = function (cag1, cag2) {\n  for (let i = 0, il = cag2.sides.length; i < il; i++) {\n    if (!hasPointInside(cag1, cag2.sides[i].vertex0.pos)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = {\n  isCAGValid,\n  isSelfIntersecting,\n  hasPointInside,\n  contains\n}\n","const {isCAG} = require('../core/utils')\n// boolean operations\n\n// FIXME should this be lazy ? in which case, how do we deal with 2D/3D combined\n// TODO we should have an option to set behaviour as first parameter\n/** union/ combine the given shapes\n * @param {Object(s)|Array} objects - objects to combine : can be given\n * - one by one: union(a,b,c) or\n * - as an array: union([a,b,c])\n * @returns {CSG} new CSG object, the union of all input shapes\n *\n * @example\n * let unionOfSpherAndCube = union(sphere(), cube())\n */\nfunction union () {\n  let options = {}\n  const defaults = {\n    extrude2d: false\n  }\n  let o\n  let i = 0\n  let a = arguments\n  if (a[0].length) a = a[0]\n  if ('extrude2d' in a[0]) { // first parameter is options\n    options = Object.assign({}, defaults, a[0])\n    o = a[i++]\n  }\n\n  o = a[i++]\n\n  // TODO: add option to be able to set this?\n  if ((typeof (a[i]) === 'object') && isCAG(a[i]) && options.extrude2d) {\n    o = a[i].extrude({offset: [0, 0, 0.1]}) // -- convert a 2D shape to a thin solid, note: do not a[i] = a[i].extrude()\n  }\n  for (; i < a.length; i++) {\n    let obj = a[i]\n\n    if ((typeof (a[i]) === 'object') && isCAG(a[i]) && options.extrude2d) {\n      obj = a[i].extrude({offset: [0, 0, 0.1]}) // -- convert a 2D shape to a thin solid:\n    }\n    o = o.union(obj)\n  }\n  return o\n}\n\n/** difference/ subtraction of the given shapes ie:\n * cut out C From B From A ie : a - b - c etc\n * @param {Object(s)|Array} objects - objects to subtract\n * can be given\n * - one by one: difference(a,b,c) or\n * - as an array: difference([a,b,c])\n * @returns {CSG} new CSG object, the difference of all input shapes\n *\n * @example\n * let differenceOfSpherAndCube = difference(sphere(), cube())\n */\nfunction difference () {\n  let object\n  let i = 0\n  let a = arguments\n  if (a[0].length) a = a[0]\n  for (object = a[i++]; i < a.length; i++) {\n    if ( isCAG(a[i])) {\n      object = object.subtract(a[i])\n    } else {\n      object = object.subtract(a[i].setColor(1, 1, 0)) // -- color the cuts\n    }\n  }\n  return object\n}\n\n/** intersection of the given shapes: ie keep only the common parts between the given shapes\n * @param {Object(s)|Array} objects - objects to intersect\n * can be given\n * - one by one: intersection(a,b,c) or\n * - as an array: intersection([a,b,c])\n * @returns {CSG} new CSG object, the intersection of all input shapes\n *\n * @example\n * let intersectionOfSpherAndCube = intersection(sphere(), cube())\n */\nfunction intersection () {\n  let object\n  let i = 0\n  let a = arguments\n  if (a[0].length) a = a[0]\n  for (object = a[i++]; i < a.length; i++) {\n    if (isCAG(a[i])) {\n      object = object.intersect(a[i])\n    } else {\n      object = object.intersect(a[i].setColor(1, 1, 0)) // -- color the cuts\n    }\n  }\n  return object\n}\n\nmodule.exports = {\n  union,\n  difference,\n  intersection\n}\n","const Side = require('./math/Side')\nconst Vector2D = require('./math/Vector2')\nconst Vertex2 = require('./math/Vertex2')\nconst {areaEPS} = require('./constants')\nconst {isSelfIntersecting, contains} = require('./utils/cagValidation')\nconst {union, difference} = require('../api/ops-booleans')\n\n/** Construct a CAG from a list of `Side` instances.\n * @param {Side[]} sides - list of sides\n * @returns {CAG} new CAG object\n */\nconst fromSides = function (sides) {\n  const CAG = require('./CAG') // circular dependency CAG => fromSides => CAG\n  let cag = new CAG()\n  cag.sides = sides\n  return cag\n}\n\n// Converts a CSG to a  The CSG must consist of polygons with only z coordinates +1 and -1\n// as constructed by _toCSGWall(-1, 1). This is so we can use the 3D union(), intersect() etc\nconst fromFakeCSG = function (csg) {\n  let sides = csg.polygons.map(function (p) {\n    return Side._fromFakePolygon(p)\n  })\n  .filter(function (s) {\n    return s !== null\n  })\n  return fromSides(sides)\n}\n\n/** Construct a CAG from a list of points (a polygon) or an nested array of points.\n * The rotation direction of the points is not relevant.\n * The points can define a convex or a concave polygon.\n * The polygon must not self intersect.\n * Hole detection follows the even/odd rule,\n * which means that the order of the paths is not important.\n * @param {points[]|Array.<points[]>} points - (nested) list of points in 2D space\n * @returns {CAG} new CAG object\n */\nconst fromPoints = function (points) {\n  if (!points) {\n    throw new Error('points parameter must be defined')\n  }\n  if (!Array.isArray(points)) {\n    throw new Error('points parameter must be an array')\n  }\n  if (points[0].x !== undefined || typeof points[0][0] === 'number') {\n    return fromPointsArray(points)\n  }\n  if (typeof points[0][0] === 'object') {\n    return fromNestedPointsArray(points)\n  }\n  throw new Error('Unsupported points list format')\n}\n\n// Do not export the two following function (code splitting for fromPoints())\nconst fromPointsArray = function (points) {\n  if (points.length < 3) {\n    throw new Error('CAG shape needs at least 3 points')\n  }\n  let sides = []\n  let prevvertex = new Vertex2(new Vector2D(points[points.length - 1]))\n  points.map(function (point) {\n    let vertex = new Vertex2(new Vector2D(point))\n    sides.push(new Side(prevvertex, vertex))\n    prevvertex = vertex\n  })\n  let result = fromSides(sides)\n  if (isSelfIntersecting(result)) {\n    throw new Error('Polygon is self intersecting!')\n  }\n  let area = result.area()\n  if (Math.abs(area) < areaEPS) {\n    throw new Error('Degenerate polygon!')\n  }\n  if (area < 0) {\n    result = result.flipped()\n  }\n  return result.canonicalized()\n}\n\nconst fromNestedPointsArray = function (points) {\n  if (points.length === 1) {\n    return fromPoints(points[0])\n  }\n  // First pass: create a collection of CAG paths\n  let paths = []\n  points.forEach(path => {\n    paths.push(fromPointsArray(path))\n  })\n  // Second pass: make a tree of paths\n  let tree = {}\n    // for each polygon extract parents and childs polygons\n  paths.forEach((p1, i) => {\n    // check for intersection\n    paths.forEach((p2, y) => {\n      if (p1 !== p2) {\n        // create default node\n        tree[i] || (tree[i] = { parents: [], isHole: false })\n        tree[y] || (tree[y] = { parents: [], isHole: false })\n        // check if polygon2 stay in poylgon1\n        if (contains(p2, p1)) {\n          // push parent and child; odd parents number ==> hole\n          tree[i].parents.push(y)\n          tree[i].isHole = !! (tree[i].parents.length % 2)\n          tree[y].isHole = !! (tree[y].parents.length % 2)\n        }\n      }\n    })\n  })\n  // Third pass: subtract holes\n  let path = null\n  for (key in tree) {\n    path = tree[key]\n    if (path.isHole) {\n      delete tree[key] // remove holes for final pass\n      path.parents.forEach(parentKey => {\n        paths[parentKey] = difference(paths[parentKey], paths[key])\n      })\n    }\n  }\n  // Fourth and last pass: create final CAG object\n  let cag = fromSides([])\n  for (key in tree) {\n    cag = union(cag, paths[key])\n  }\n  return cag\n}\n\n/** Reconstruct a CAG from an object with identical property names.\n * @param {Object} obj - anonymous object, typically from JSON\n * @returns {CAG} new CAG object\n */\nconst fromObject = function (obj) {\n  let sides = obj.sides.map(function (s) {\n    return Side.fromObject(s)\n  })\n  let cag = fromSides(sides)\n  cag.isCanonicalized = obj.isCanonicalized\n  return cag\n}\n\n/** Construct a CAG from a list of points (a polygon).\n * Like fromPoints() but does not check if the result is a valid polygon.\n * The points MUST rotate counter clockwise.\n * The points can define a convex or a concave polygon.\n * The polygon must not self intersect.\n * @param {points[]} points - list of points in 2D space\n * @returns {CAG} new CAG object\n */\nconst fromPointsNoCheck = function (points) {\n  let sides = []\n  let prevpoint = new Vector2D(points[points.length - 1])\n  let prevvertex = new Vertex2(prevpoint)\n  points.map(function (p) {\n    let point = new Vector2D(p)\n    let vertex = new Vertex2(point)\n    let side = new Side(prevvertex, vertex)\n    sides.push(side)\n    prevvertex = vertex\n  })\n  return fromSides(sides)\n}\n\n/** Construct a CAG from a 2d-path (a closed sequence of points).\n * Like fromPoints() but does not check if the result is a valid polygon.\n * @param {path} Path2 - a Path2 path\n * @returns {CAG} new CAG object\n */\nconst fromPath2 = function (path) {\n  if (!path.isClosed()) throw new Error('The path should be closed!')\n  return fromPoints(path.getPoints())\n}\n\n/** Reconstruct a CAG from the output of toCompactBinary().\n * @param {CompactBinary} bin - see toCompactBinary()\n * @returns {CAG} new CAG object\n */\nconst fromCompactBinary = function (bin) {\n  if (bin['class'] !== 'CAG') throw new Error('Not a CAG')\n  let vertices = []\n  let vertexData = bin.vertexData\n  let numvertices = vertexData.length / 2\n  let arrayindex = 0\n  for (let vertexindex = 0; vertexindex < numvertices; vertexindex++) {\n    let x = vertexData[arrayindex++]\n    let y = vertexData[arrayindex++]\n    let pos = new Vector2D(x, y)\n    let vertex = new Vertex2(pos)\n    vertices.push(vertex)\n  }\n  let sides = []\n  let numsides = bin.sideVertexIndices.length / 2\n  arrayindex = 0\n  for (let sideindex = 0; sideindex < numsides; sideindex++) {\n    let vertexindex0 = bin.sideVertexIndices[arrayindex++]\n    let vertexindex1 = bin.sideVertexIndices[arrayindex++]\n    let side = new Side(vertices[vertexindex0], vertices[vertexindex1])\n    sides.push(side)\n  }\n  let cag = fromSides(sides)\n  cag.isCanonicalized = true\n  return cag\n}\n\nmodule.exports = {\n  fromSides,\n  fromObject,\n  fromPoints,\n  fromPointsNoCheck,\n  fromPath2,\n  fromFakeCSG,\n  fromCompactBinary\n}\n","// //////////////////////////////\n// ## class fuzzyFactory\n// This class acts as a factory for objects. We can search for an object with approximately\n// the desired properties (say a rectangle with width 2 and height 1)\n// The lookupOrCreate() method looks for an existing object (for example it may find an existing rectangle\n// with width 2.0001 and height 0.999. If no object is found, the user supplied callback is\n// called, which should generate a new object. The new object is inserted into the database\n// so it can be found by future lookupOrCreate() calls.\n// Constructor:\n//   numdimensions: the number of parameters for each object\n//     for example for a 2D rectangle this would be 2\n//   tolerance: The maximum difference for each parameter allowed to be considered a match\nconst FuzzyFactory = function (numdimensions, tolerance) {\n  this.lookuptable = {}\n  this.multiplier = 1.0 / tolerance\n}\n\nFuzzyFactory.prototype = {\n    // let obj = f.lookupOrCreate([el1, el2, el3], function(elements) {/* create the new object */});\n    // Performs a fuzzy lookup of the object with the specified elements.\n    // If found, returns the existing object\n    // If not found, calls the supplied callback function which should create a new object with\n    // the specified properties. This object is inserted in the lookup database.\n  lookupOrCreate: function (els, creatorCallback) {\n    let hash = ''\n    let multiplier = this.multiplier\n    els.forEach(function (el) {\n      let valueQuantized = Math.round(el * multiplier)\n      hash += valueQuantized + '/'\n    })\n    if (hash in this.lookuptable) {\n      return this.lookuptable[hash]\n    } else {\n      let object = creatorCallback(els)\n      let hashparts = els.map(function (el) {\n        let q0 = Math.floor(el * multiplier)\n        let q1 = q0 + 1\n        return ['' + q0 + '/', '' + q1 + '/']\n      })\n      let numelements = els.length\n      let numhashes = 1 << numelements\n      for (let hashmask = 0; hashmask < numhashes; ++hashmask) {\n        let hashmaskShifted = hashmask\n        hash = ''\n        hashparts.forEach(function (hashpart) {\n          hash += hashpart[hashmaskShifted & 1]\n          hashmaskShifted >>= 1\n        })\n        this.lookuptable[hash] = object\n      }\n      return object\n    }\n  }\n}\n\nmodule.exports = FuzzyFactory\n","const {EPS} = require('./constants')\nconst Polygon = require('./math/Polygon3')\nconst FuzzyFactory = require('./FuzzyFactory')\n\n// ////////////////////////////////////\nconst FuzzyCSGFactory = function () {\n  this.vertexfactory = new FuzzyFactory(3, EPS)\n  this.planefactory = new FuzzyFactory(4, EPS)\n  this.polygonsharedfactory = {}\n}\n\nFuzzyCSGFactory.prototype = {\n  getPolygonShared: function (sourceshared) {\n    let hash = sourceshared.getHash()\n    if (hash in this.polygonsharedfactory) {\n      return this.polygonsharedfactory[hash]\n    } else {\n      this.polygonsharedfactory[hash] = sourceshared\n      return sourceshared\n    }\n  },\n\n  getVertex: function (sourcevertex) {\n    let elements = [sourcevertex.pos._x, sourcevertex.pos._y, sourcevertex.pos._z]\n    let result = this.vertexfactory.lookupOrCreate(elements, function (els) {\n      return sourcevertex\n    })\n    return result\n  },\n\n  getPlane: function (sourceplane) {\n    let elements = [sourceplane.normal._x, sourceplane.normal._y, sourceplane.normal._z, sourceplane.w]\n    let result = this.planefactory.lookupOrCreate(elements, function (els) {\n      return sourceplane\n    })\n    return result\n  },\n\n  getPolygon: function (sourcepolygon) {\n    let newplane = this.getPlane(sourcepolygon.plane)\n    let newshared = this.getPolygonShared(sourcepolygon.shared)\n    let _this = this\n    let newvertices = sourcepolygon.vertices.map(function (vertex) {\n      return _this.getVertex(vertex)\n    })\n        // two vertices that were originally very close may now have become\n        // truly identical (referring to the same Vertex object).\n        // Remove duplicate vertices:\n    let newverticesDedup = []\n    if (newvertices.length > 0) {\n      let prevvertextag = newvertices[newvertices.length - 1].getTag()\n      newvertices.forEach(function (vertex) {\n        let vertextag = vertex.getTag()\n        if (vertextag !== prevvertextag) {\n          newverticesDedup.push(vertex)\n        }\n        prevvertextag = vertextag\n      })\n    }\n        // If it's degenerate, remove all vertices:\n    if (newverticesDedup.length < 3) {\n      newverticesDedup = []\n    }\n    return new Polygon(newverticesDedup, newshared, newplane)\n  }\n}\n\nmodule.exports = FuzzyCSGFactory\n","const FuzzyFactory = require('./FuzzyFactory')\nconst {EPS} = require('./constants')\nconst Side = require('./math/Side')\n\nconst FuzzyCAGFactory = function () {\n  this.vertexfactory = new FuzzyFactory(2, EPS)\n}\n\nFuzzyCAGFactory.prototype = {\n  getVertex: function (sourcevertex) {\n    let elements = [sourcevertex.pos._x, sourcevertex.pos._y]\n    let result = this.vertexfactory.lookupOrCreate(elements, function (els) {\n      return sourcevertex\n    })\n    return result\n  },\n\n  getSide: function (sourceside) {\n    let vertex0 = this.getVertex(sourceside.vertex0)\n    let vertex1 = this.getVertex(sourceside.vertex1)\n    return new Side(vertex0, vertex1)\n  }\n}\n\nmodule.exports = FuzzyCAGFactory\n","const {EPS} = require('../constants')\nconst FuzzyCSGFactory = require('../FuzzyFactory3d')\nconst FuzzyCAGFactory = require('../FuzzyFactory2d')\nconst {fromPolygons} = require('../CSGFactories')\nconst {fromSides} = require('../CAGFactories')\n\n/**\n   * Returns a cannoicalized version of the input csg/cag : ie every very close\n   * points get deduplicated\n   * @returns {CSG|CAG}\n   * @example\n   * let rawInput = someCSGORCAGMakingFunction()\n   * let canonicalized= canonicalize(rawInput)\n   */\nconst canonicalize = function (csgOrCAG, options) {\n  if (csgOrCAG.isCanonicalized) {\n    return csgOrCAG\n  } else {\n    if ('sides' in csgOrCAG) {\n      return canonicalizeCAG(csgOrCAG, options)\n    } else {\n      return canonicalizeCSG(csgOrCAG, options)\n    }\n  }\n}\n\n/**\n   * Returns a cannoicalized version of the input csg : ie every very close\n   * points get deduplicated\n   * @returns {CSG}\n   * @example\n   * let rawCSG = someCSGMakingFunction()\n   * let canonicalizedCSG = canonicalize(rawCSG)\n   */\nconst canonicalizeCSG = function (csg, options) {\n  if (csg.isCanonicalized) {\n    return csg\n  } else {\n    const factory = new FuzzyCSGFactory()\n    let result = CSGFromCSGFuzzyFactory(factory, csg)\n    result.isCanonicalized = true\n    result.isRetesselated = csg.isRetesselated\n    result.properties = csg.properties // keep original properties\n    return result\n  }\n}\n\nconst canonicalizeCAG = function (cag, options) {\n  if (cag.isCanonicalized) {\n    return cag\n  } else {\n    let factory = new FuzzyCAGFactory()\n    let result = CAGFromCAGFuzzyFactory(factory, cag)\n    result.isCanonicalized = true\n    return result\n  }\n}\n\nconst CSGFromCSGFuzzyFactory = function (factory, sourcecsg) {\n  let _this = factory\n  let newpolygons = []\n  sourcecsg.polygons.forEach(function (polygon) {\n    let newpolygon = _this.getPolygon(polygon)\n          // see getPolygon above: we may get a polygon with no vertices, discard it:\n    if (newpolygon.vertices.length >= 3) {\n      newpolygons.push(newpolygon)\n    }\n  })\n  return fromPolygons(newpolygons)\n}\n\nconst CAGFromCAGFuzzyFactory = function (factory, sourcecag) {\n  let _this = factory\n  let newsides = sourcecag.sides.map(function (side) {\n    return _this.getSide(side)\n  })\n  // remove bad sides (mostly a user input issue)\n  .filter(function (side) {\n    return side.length() > EPS\n  })\n  return fromSides(newsides)\n}\n\nmodule.exports = canonicalize\n","const {EPS} = require('../constants')\nconst OrthoNormalBasis = require('./OrthoNormalBasis')\nconst {interpolateBetween2DPointsForY, insertSorted, fnNumberSort} = require('../utils')\nconst Vertex = require('./Vertex3')\nconst Vector2D = require('./Vector2')\nconst Line2D = require('./Line2')\nconst Polygon = require('./Polygon3')\n\n// Retesselation function for a set of coplanar polygons. See the introduction at the top of\n// this file.\nconst reTesselateCoplanarPolygons = function (sourcepolygons, destpolygons) {\n  let numpolygons = sourcepolygons.length\n  if (numpolygons > 0) {\n    let plane = sourcepolygons[0].plane\n    let shared = sourcepolygons[0].shared\n    let orthobasis = new OrthoNormalBasis(plane)\n    let polygonvertices2d = [] // array of array of Vector2D\n    let polygontopvertexindexes = [] // array of indexes of topmost vertex per polygon\n    let topy2polygonindexes = {}\n    let ycoordinatetopolygonindexes = {}\n\n    let xcoordinatebins = {}\n    let ycoordinatebins = {}\n\n        // convert all polygon vertices to 2D\n        // Make a list of all encountered y coordinates\n        // And build a map of all polygons that have a vertex at a certain y coordinate:\n    let ycoordinateBinningFactor = 1.0 / EPS * 10\n    for (let polygonindex = 0; polygonindex < numpolygons; polygonindex++) {\n      let poly3d = sourcepolygons[polygonindex]\n      let vertices2d = []\n      let numvertices = poly3d.vertices.length\n      let minindex = -1\n      if (numvertices > 0) {\n        let miny, maxy, maxindex\n        for (let i = 0; i < numvertices; i++) {\n          let pos2d = orthobasis.to2D(poly3d.vertices[i].pos)\n                    // perform binning of y coordinates: If we have multiple vertices very\n                    // close to each other, give them the same y coordinate:\n          let ycoordinatebin = Math.floor(pos2d.y * ycoordinateBinningFactor)\n          let newy\n          if (ycoordinatebin in ycoordinatebins) {\n            newy = ycoordinatebins[ycoordinatebin]\n          } else if (ycoordinatebin + 1 in ycoordinatebins) {\n            newy = ycoordinatebins[ycoordinatebin + 1]\n          } else if (ycoordinatebin - 1 in ycoordinatebins) {\n            newy = ycoordinatebins[ycoordinatebin - 1]\n          } else {\n            newy = pos2d.y\n            ycoordinatebins[ycoordinatebin] = pos2d.y\n          }\n          pos2d = Vector2D.Create(pos2d.x, newy)\n          vertices2d.push(pos2d)\n          let y = pos2d.y\n          if ((i === 0) || (y < miny)) {\n            miny = y\n            minindex = i\n          }\n          if ((i === 0) || (y > maxy)) {\n            maxy = y\n            maxindex = i\n          }\n          if (!(y in ycoordinatetopolygonindexes)) {\n            ycoordinatetopolygonindexes[y] = {}\n          }\n          ycoordinatetopolygonindexes[y][polygonindex] = true\n        }\n        if (miny >= maxy) {\n                    // degenerate polygon, all vertices have same y coordinate. Just ignore it from now:\n          vertices2d = []\n          numvertices = 0\n          minindex = -1\n        } else {\n          if (!(miny in topy2polygonindexes)) {\n            topy2polygonindexes[miny] = []\n          }\n          topy2polygonindexes[miny].push(polygonindex)\n        }\n      } // if(numvertices > 0)\n            // reverse the vertex order:\n      vertices2d.reverse()\n      minindex = numvertices - minindex - 1\n      polygonvertices2d.push(vertices2d)\n      polygontopvertexindexes.push(minindex)\n    }\n    let ycoordinates = []\n    for (let ycoordinate in ycoordinatetopolygonindexes) ycoordinates.push(ycoordinate)\n    ycoordinates.sort(fnNumberSort)\n\n        // Now we will iterate over all y coordinates, from lowest to highest y coordinate\n        // activepolygons: source polygons that are 'active', i.e. intersect with our y coordinate\n        //   Is sorted so the polygons are in left to right order\n        // Each element in activepolygons has these properties:\n        //        polygonindex: the index of the source polygon (i.e. an index into the sourcepolygons\n        //                      and polygonvertices2d arrays)\n        //        leftvertexindex: the index of the vertex at the left side of the polygon (lowest x)\n        //                         that is at or just above the current y coordinate\n        //        rightvertexindex: dito at right hand side of polygon\n        //        topleft, bottomleft: coordinates of the left side of the polygon crossing the current y coordinate\n        //        topright, bottomright: coordinates of the right hand side of the polygon crossing the current y coordinate\n    let activepolygons = []\n    let prevoutpolygonrow = []\n    for (let yindex = 0; yindex < ycoordinates.length; yindex++) {\n      let newoutpolygonrow = []\n      let ycoordinate_as_string = ycoordinates[yindex]\n      let ycoordinate = Number(ycoordinate_as_string)\n\n            // update activepolygons for this y coordinate:\n            // - Remove any polygons that end at this y coordinate\n            // - update leftvertexindex and rightvertexindex (which point to the current vertex index\n            //   at the the left and right side of the polygon\n            // Iterate over all polygons that have a corner at this y coordinate:\n      let polygonindexeswithcorner = ycoordinatetopolygonindexes[ycoordinate_as_string]\n      for (let activepolygonindex = 0; activepolygonindex < activepolygons.length; ++activepolygonindex) {\n        let activepolygon = activepolygons[activepolygonindex]\n        let polygonindex = activepolygon.polygonindex\n        if (polygonindexeswithcorner[polygonindex]) {\n                    // this active polygon has a corner at this y coordinate:\n          let vertices2d = polygonvertices2d[polygonindex]\n          let numvertices = vertices2d.length\n          let newleftvertexindex = activepolygon.leftvertexindex\n          let newrightvertexindex = activepolygon.rightvertexindex\n                    // See if we need to increase leftvertexindex or decrease rightvertexindex:\n          while (true) {\n            let nextleftvertexindex = newleftvertexindex + 1\n            if (nextleftvertexindex >= numvertices) nextleftvertexindex = 0\n            if (vertices2d[nextleftvertexindex].y !== ycoordinate) break\n            newleftvertexindex = nextleftvertexindex\n          }\n          let nextrightvertexindex = newrightvertexindex - 1\n          if (nextrightvertexindex < 0) nextrightvertexindex = numvertices - 1\n          if (vertices2d[nextrightvertexindex].y === ycoordinate) {\n            newrightvertexindex = nextrightvertexindex\n          }\n          if ((newleftvertexindex !== activepolygon.leftvertexindex) && (newleftvertexindex === newrightvertexindex)) {\n                        // We have increased leftvertexindex or decreased rightvertexindex, and now they point to the same vertex\n                        // This means that this is the bottom point of the polygon. We'll remove it:\n            activepolygons.splice(activepolygonindex, 1)\n            --activepolygonindex\n          } else {\n            activepolygon.leftvertexindex = newleftvertexindex\n            activepolygon.rightvertexindex = newrightvertexindex\n            activepolygon.topleft = vertices2d[newleftvertexindex]\n            activepolygon.topright = vertices2d[newrightvertexindex]\n            let nextleftvertexindex = newleftvertexindex + 1\n            if (nextleftvertexindex >= numvertices) nextleftvertexindex = 0\n            activepolygon.bottomleft = vertices2d[nextleftvertexindex]\n            let nextrightvertexindex = newrightvertexindex - 1\n            if (nextrightvertexindex < 0) nextrightvertexindex = numvertices - 1\n            activepolygon.bottomright = vertices2d[nextrightvertexindex]\n          }\n        } // if polygon has corner here\n      } // for activepolygonindex\n      let nextycoordinate\n      if (yindex >= ycoordinates.length - 1) {\n                // last row, all polygons must be finished here:\n        activepolygons = []\n        nextycoordinate = null\n      } else // yindex < ycoordinates.length-1\n            {\n        nextycoordinate = Number(ycoordinates[yindex + 1])\n        let middleycoordinate = 0.5 * (ycoordinate + nextycoordinate)\n                // update activepolygons by adding any polygons that start here:\n        let startingpolygonindexes = topy2polygonindexes[ycoordinate_as_string]\n        for (let polygonindex_key in startingpolygonindexes) {\n          let polygonindex = startingpolygonindexes[polygonindex_key]\n          let vertices2d = polygonvertices2d[polygonindex]\n          let numvertices = vertices2d.length\n          let topvertexindex = polygontopvertexindexes[polygonindex]\n                    // the top of the polygon may be a horizontal line. In that case topvertexindex can point to any point on this line.\n                    // Find the left and right topmost vertices which have the current y coordinate:\n          let topleftvertexindex = topvertexindex\n          while (true) {\n            let i = topleftvertexindex + 1\n            if (i >= numvertices) i = 0\n            if (vertices2d[i].y !== ycoordinate) break\n            if (i === topvertexindex) break // should not happen, but just to prevent endless loops\n            topleftvertexindex = i\n          }\n          let toprightvertexindex = topvertexindex\n          while (true) {\n            let i = toprightvertexindex - 1\n            if (i < 0) i = numvertices - 1\n            if (vertices2d[i].y !== ycoordinate) break\n            if (i === topleftvertexindex) break // should not happen, but just to prevent endless loops\n            toprightvertexindex = i\n          }\n          let nextleftvertexindex = topleftvertexindex + 1\n          if (nextleftvertexindex >= numvertices) nextleftvertexindex = 0\n          let nextrightvertexindex = toprightvertexindex - 1\n          if (nextrightvertexindex < 0) nextrightvertexindex = numvertices - 1\n          let newactivepolygon = {\n            polygonindex: polygonindex,\n            leftvertexindex: topleftvertexindex,\n            rightvertexindex: toprightvertexindex,\n            topleft: vertices2d[topleftvertexindex],\n            topright: vertices2d[toprightvertexindex],\n            bottomleft: vertices2d[nextleftvertexindex],\n            bottomright: vertices2d[nextrightvertexindex]\n          }\n          insertSorted(activepolygons, newactivepolygon, function (el1, el2) {\n            let x1 = interpolateBetween2DPointsForY(\n                            el1.topleft, el1.bottomleft, middleycoordinate)\n            let x2 = interpolateBetween2DPointsForY(\n                            el2.topleft, el2.bottomleft, middleycoordinate)\n            if (x1 > x2) return 1\n            if (x1 < x2) return -1\n            return 0\n          })\n        } // for(let polygonindex in startingpolygonindexes)\n      } //  yindex < ycoordinates.length-1\n            // if( (yindex === ycoordinates.length-1) || (nextycoordinate - ycoordinate > EPS) )\n      if (true) {\n        // Now activepolygons is up to date\n        // Build the output polygons for the next row in newoutpolygonrow:\n        for (let activepolygonKey in activepolygons) {\n          let activepolygon = activepolygons[activepolygonKey]\n          let polygonindex = activepolygon.polygonindex\n          let vertices2d = polygonvertices2d[polygonindex]\n          let numvertices = vertices2d.length\n\n          let x = interpolateBetween2DPointsForY(activepolygon.topleft, activepolygon.bottomleft, ycoordinate)\n          let topleft = Vector2D.Create(x, ycoordinate)\n          x = interpolateBetween2DPointsForY(activepolygon.topright, activepolygon.bottomright, ycoordinate)\n          let topright = Vector2D.Create(x, ycoordinate)\n          x = interpolateBetween2DPointsForY(activepolygon.topleft, activepolygon.bottomleft, nextycoordinate)\n          let bottomleft = Vector2D.Create(x, nextycoordinate)\n          x = interpolateBetween2DPointsForY(activepolygon.topright, activepolygon.bottomright, nextycoordinate)\n          let bottomright = Vector2D.Create(x, nextycoordinate)\n          let outpolygon = {\n            topleft: topleft,\n            topright: topright,\n            bottomleft: bottomleft,\n            bottomright: bottomright,\n            leftline: Line2D.fromPoints(topleft, bottomleft),\n            rightline: Line2D.fromPoints(bottomright, topright)\n          }\n          if (newoutpolygonrow.length > 0) {\n            let prevoutpolygon = newoutpolygonrow[newoutpolygonrow.length - 1]\n            let d1 = outpolygon.topleft.distanceTo(prevoutpolygon.topright)\n            let d2 = outpolygon.bottomleft.distanceTo(prevoutpolygon.bottomright)\n            if ((d1 < EPS) && (d2 < EPS)) {\n                            // we can join this polygon with the one to the left:\n              outpolygon.topleft = prevoutpolygon.topleft\n              outpolygon.leftline = prevoutpolygon.leftline\n              outpolygon.bottomleft = prevoutpolygon.bottomleft\n              newoutpolygonrow.splice(newoutpolygonrow.length - 1, 1)\n            }\n          }\n          newoutpolygonrow.push(outpolygon)\n        } // for(activepolygon in activepolygons)\n        if (yindex > 0) {\n                    // try to match the new polygons against the previous row:\n          let prevcontinuedindexes = {}\n          let matchedindexes = {}\n          for (let i = 0; i < newoutpolygonrow.length; i++) {\n            let thispolygon = newoutpolygonrow[i]\n            for (let ii = 0; ii < prevoutpolygonrow.length; ii++) {\n              if (!matchedindexes[ii]) // not already processed?\n                            {\n                                // We have a match if the sidelines are equal or if the top coordinates\n                                // are on the sidelines of the previous polygon\n                let prevpolygon = prevoutpolygonrow[ii]\n                if (prevpolygon.bottomleft.distanceTo(thispolygon.topleft) < EPS) {\n                  if (prevpolygon.bottomright.distanceTo(thispolygon.topright) < EPS) {\n                                        // Yes, the top of this polygon matches the bottom of the previous:\n                    matchedindexes[ii] = true\n                                        // Now check if the joined polygon would remain convex:\n                    let d1 = thispolygon.leftline.direction().x - prevpolygon.leftline.direction().x\n                    let d2 = thispolygon.rightline.direction().x - prevpolygon.rightline.direction().x\n                    let leftlinecontinues = Math.abs(d1) < EPS\n                    let rightlinecontinues = Math.abs(d2) < EPS\n                    let leftlineisconvex = leftlinecontinues || (d1 >= 0)\n                    let rightlineisconvex = rightlinecontinues || (d2 >= 0)\n                    if (leftlineisconvex && rightlineisconvex) {\n                                            // yes, both sides have convex corners:\n                                            // This polygon will continue the previous polygon\n                      thispolygon.outpolygon = prevpolygon.outpolygon\n                      thispolygon.leftlinecontinues = leftlinecontinues\n                      thispolygon.rightlinecontinues = rightlinecontinues\n                      prevcontinuedindexes[ii] = true\n                    }\n                    break\n                  }\n                }\n              } // if(!prevcontinuedindexes[ii])\n            } // for ii\n          } // for i\n          for (let ii = 0; ii < prevoutpolygonrow.length; ii++) {\n            if (!prevcontinuedindexes[ii]) {\n                            // polygon ends here\n                            // Finish the polygon with the last point(s):\n              let prevpolygon = prevoutpolygonrow[ii]\n              prevpolygon.outpolygon.rightpoints.push(prevpolygon.bottomright)\n              if (prevpolygon.bottomright.distanceTo(prevpolygon.bottomleft) > EPS) {\n                                // polygon ends with a horizontal line:\n                prevpolygon.outpolygon.leftpoints.push(prevpolygon.bottomleft)\n              }\n                            // reverse the left half so we get a counterclockwise circle:\n              prevpolygon.outpolygon.leftpoints.reverse()\n              let points2d = prevpolygon.outpolygon.rightpoints.concat(prevpolygon.outpolygon.leftpoints)\n              let vertices3d = []\n              points2d.map(function (point2d) {\n                let point3d = orthobasis.to3D(point2d)\n                let vertex3d = new Vertex(point3d)\n                vertices3d.push(vertex3d)\n              })\n              let polygon = new Polygon(vertices3d, shared, plane)\n              destpolygons.push(polygon)\n            }\n          }\n        } // if(yindex > 0)\n        for (let i = 0; i < newoutpolygonrow.length; i++) {\n          let thispolygon = newoutpolygonrow[i]\n          if (!thispolygon.outpolygon) {\n                        // polygon starts here:\n            thispolygon.outpolygon = {\n              leftpoints: [],\n              rightpoints: []\n            }\n            thispolygon.outpolygon.leftpoints.push(thispolygon.topleft)\n            if (thispolygon.topleft.distanceTo(thispolygon.topright) > EPS) {\n                            // we have a horizontal line at the top:\n              thispolygon.outpolygon.rightpoints.push(thispolygon.topright)\n            }\n          } else {\n                        // continuation of a previous row\n            if (!thispolygon.leftlinecontinues) {\n              thispolygon.outpolygon.leftpoints.push(thispolygon.topleft)\n            }\n            if (!thispolygon.rightlinecontinues) {\n              thispolygon.outpolygon.rightpoints.push(thispolygon.topright)\n            }\n          }\n        }\n        prevoutpolygonrow = newoutpolygonrow\n      }\n    } // for yindex\n  } // if(numpolygons > 0)\n}\n\nmodule.exports = reTesselateCoplanarPolygons\n","const FuzzyCSGFactory = require('../FuzzyFactory3d')\nconst reTesselateCoplanarPolygons = require('../math/reTesselateCoplanarPolygons')\nconst {fromPolygons} = require('../CSGFactories')\n\nconst reTesselate = function (csg) {\n  if (csg.isRetesselated) {\n    return csg\n  } else {\n    let polygonsPerPlane = {}\n    let isCanonicalized = csg.isCanonicalized\n    let fuzzyfactory = new FuzzyCSGFactory()\n    csg.polygons.map(function (polygon) {\n      let plane = polygon.plane\n      let shared = polygon.shared\n      if (!isCanonicalized) {\n        // in order to identify polygons having the same plane, we need to canonicalize the planes\n        // We don't have to do a full canonizalization (including vertices), to save time only do the planes and the shared data:\n        plane = fuzzyfactory.getPlane(plane)\n        shared = fuzzyfactory.getPolygonShared(shared)\n      }\n      let tag = plane.getTag() + '/' + shared.getTag()\n      if (!(tag in polygonsPerPlane)) {\n        polygonsPerPlane[tag] = [polygon]\n      } else {\n        polygonsPerPlane[tag].push(polygon)\n      }\n    })\n    let destpolygons = []\n    for (let planetag in polygonsPerPlane) {\n      let sourcepolygons = polygonsPerPlane[planetag]\n      if (sourcepolygons.length < 2) {\n        destpolygons = destpolygons.concat(sourcepolygons)\n      } else {\n        let retesselayedpolygons = []\n        reTesselateCoplanarPolygons(sourcepolygons, retesselayedpolygons)\n        destpolygons = destpolygons.concat(retesselayedpolygons)\n      }\n    }\n    let result = fromPolygons(destpolygons)\n    result.isRetesselated = true\n    // result = result.canonicalized();\n    result.properties = csg.properties // keep original properties\n    return result\n  }\n}\n\nmodule.exports = reTesselate\n","const Vector2D = require('../math/Vector2')\n\n// see http://local.wasp.uwa.edu.au/~pbourke/geometry/polyarea/ :\n// Area of the polygon. For a counter clockwise rotating polygon the area is positive, otherwise negative\n// Note(bebbi): this looks wrong. See polygon getArea()\nconst area = function (cag) {\n  let polygonArea = 0\n  cag.sides.map(function (side) {\n    polygonArea += side.vertex0.pos.cross(side.vertex1.pos)\n  })\n  polygonArea *= 0.5\n  return polygonArea\n}\n\nconst getBounds = function (cag) {\n  let minpoint\n  if (cag.sides.length === 0) {\n    minpoint = new Vector2D(0, 0)\n  } else {\n    minpoint = cag.sides[0].vertex0.pos\n  }\n  let maxpoint = minpoint\n  cag.sides.map(function (side) {\n    minpoint = minpoint.min(side.vertex0.pos)\n    minpoint = minpoint.min(side.vertex1.pos)\n    maxpoint = maxpoint.max(side.vertex0.pos)\n    maxpoint = maxpoint.max(side.vertex1.pos)\n  })\n  return [minpoint, maxpoint]\n}\n\nmodule.exports = {area, getBounds}\n","const Matrix4x4 = require('../core/math/Matrix4.js')\nconst Vector3D = require('../core/math/Vector3.js')\nconst {Connector} = require('../core/connectors.js')\nconst {fromPoints} = require('../core/CAGFactories')\nconst Vector2D = require('../core/math/Vector2')\n\n// Get the transformation that transforms this CSG such that it is lying on the z=0 plane,\n// as flat as possible (i.e. the least z-height).\n// So that it is in an orientation suitable for CNC milling\nconst getTransformationAndInverseTransformationToFlatLying = function (_csg) {\n  if (_csg.polygons.length === 0) {\n    let m = new Matrix4x4() // unity\n    return [m, m]\n  } else {\n          // get a list of unique planes in the CSG:\n    let csg = _csg.canonicalized()\n    let planemap = {}\n    csg.polygons.map(function (polygon) {\n      planemap[polygon.plane.getTag()] = polygon.plane\n    })\n          // try each plane in the CSG and find the plane that, when we align it flat onto z=0,\n          // gives the least height in z-direction.\n          // If two planes give the same height, pick the plane that originally had a normal closest\n          // to [0,0,-1].\n    let xvector = new Vector3D(1, 0, 0)\n    let yvector = new Vector3D(0, 1, 0)\n    let zvector = new Vector3D(0, 0, 1)\n    let z0connectorx = new Connector([0, 0, 0], [0, 0, -1], xvector)\n    let z0connectory = new Connector([0, 0, 0], [0, 0, -1], yvector)\n    let isfirst = true\n    let minheight = 0\n    let maxdotz = 0\n    let besttransformation, bestinversetransformation\n    for (let planetag in planemap) {\n      let plane = planemap[planetag]\n      let pointonplane = plane.normal.times(plane.w)\n      let transformation, inversetransformation\n              // We need a normal vecrtor for the transformation\n              // determine which is more perpendicular to the plane normal: x or y?\n              // we will align this as much as possible to the x or y axis vector\n      let xorthogonality = plane.normal.cross(xvector).length()\n      let yorthogonality = plane.normal.cross(yvector).length()\n      if (xorthogonality > yorthogonality) {\n                  // x is better:\n        let planeconnector = new Connector(pointonplane, plane.normal, xvector)\n        transformation = planeconnector.getTransformationTo(z0connectorx, false, 0)\n        inversetransformation = z0connectorx.getTransformationTo(planeconnector, false, 0)\n      } else {\n                  // y is better:\n        let planeconnector = new Connector(pointonplane, plane.normal, yvector)\n        transformation = planeconnector.getTransformationTo(z0connectory, false, 0)\n        inversetransformation = z0connectory.getTransformationTo(planeconnector, false, 0)\n      }\n      let transformedcsg = csg.transform(transformation)\n      let dotz = -plane.normal.dot(zvector)\n      let bounds = transformedcsg.getBounds()\n      let zheight = bounds[1].z - bounds[0].z\n      let isbetter = isfirst\n      if (!isbetter) {\n        if (zheight < minheight) {\n          isbetter = true\n        } else if (zheight === minheight) {\n          if (dotz > maxdotz) isbetter = true\n        }\n      }\n      if (isbetter) {\n                  // translate the transformation around the z-axis and onto the z plane:\n        let translation = new Vector3D([-0.5 * (bounds[1].x + bounds[0].x), -0.5 * (bounds[1].y + bounds[0].y), -bounds[0].z])\n        transformation = transformation.multiply(Matrix4x4.translation(translation))\n        inversetransformation = Matrix4x4.translation(translation.negated()).multiply(inversetransformation)\n        minheight = zheight\n        maxdotz = dotz\n        besttransformation = transformation\n        bestinversetransformation = inversetransformation\n      }\n      isfirst = false\n    }\n    return [besttransformation, bestinversetransformation]\n  }\n}\n\nconst getTransformationToFlatLying = function (csg) {\n  let result = csg.getTransformationAndInverseTransformationToFlatLying()\n  return result[0]\n}\n\nconst lieFlat = function (csg) {\n  let transformation = csg.getTransformationToFlatLying()\n  return csg.transform(transformation)\n}\n\n/** cag = cag.overCutInsideCorners(cutterradius);\n * Using a CNC router it's impossible to cut out a true sharp inside corner. The inside corner\n * will be rounded due to the radius of the cutter. This function compensates for this by creating\n * an extra cutout at each inner corner so that the actual cut out shape will be at least as large\n * as needed.\n * @param {Object} _cag - input cag\n * @param {Float} cutterradius - radius to cut inside corners by\n * @returns {CAG} cag with overcutInsideCorners\n */\nconst overCutInsideCorners = function (_cag, cutterradius) {\n  let cag = _cag.canonicalized()\n  // for each vertex determine the 'incoming' side and 'outgoing' side:\n  let pointmap = {} // tag => {pos: coord, from: [], to: []}\n  cag.sides.map(function (side) {\n    if (!(side.vertex0.getTag() in pointmap)) {\n      pointmap[side.vertex0.getTag()] = {\n        pos: side.vertex0.pos,\n        from: [],\n        to: []\n      }\n    }\n    pointmap[side.vertex0.getTag()].to.push(side.vertex1.pos)\n    if (!(side.vertex1.getTag() in pointmap)) {\n      pointmap[side.vertex1.getTag()] = {\n        pos: side.vertex1.pos,\n        from: [],\n        to: []\n      }\n    }\n    pointmap[side.vertex1.getTag()].from.push(side.vertex0.pos)\n  })\n          // overcut all sharp corners:\n  let cutouts = []\n  for (let pointtag in pointmap) {\n    let pointobj = pointmap[pointtag]\n    if ((pointobj.from.length === 1) && (pointobj.to.length === 1)) {\n                  // ok, 1 incoming side and 1 outgoing side:\n      let fromcoord = pointobj.from[0]\n      let pointcoord = pointobj.pos\n      let tocoord = pointobj.to[0]\n      let v1 = pointcoord.minus(fromcoord).unit()\n      let v2 = tocoord.minus(pointcoord).unit()\n      let crossproduct = v1.cross(v2)\n      let isInnerCorner = (crossproduct < 0.001)\n      if (isInnerCorner) {\n                      // yes it's a sharp corner:\n        let alpha = v2.angleRadians() - v1.angleRadians() + Math.PI\n        if (alpha < 0) {\n          alpha += 2 * Math.PI\n        } else if (alpha >= 2 * Math.PI) {\n          alpha -= 2 * Math.PI\n        }\n        let midvector = v2.minus(v1).unit()\n        let circlesegmentangle = 30 / 180 * Math.PI // resolution of the circle: segments of 30 degrees\n                      // we need to increase the radius slightly so that our imperfect circle will contain a perfect circle of cutterradius\n        let radiuscorrected = cutterradius / Math.cos(circlesegmentangle / 2)\n        let circlecenter = pointcoord.plus(midvector.times(radiuscorrected))\n                      // we don't need to create a full circle; a pie is enough. Find the angles for the pie:\n        let startangle = alpha + midvector.angleRadians()\n        let deltaangle = 2 * (Math.PI - alpha)\n        let numsteps = 2 * Math.ceil(deltaangle / circlesegmentangle / 2) // should be even\n                      // build the pie:\n        let points = [circlecenter]\n        for (let i = 0; i <= numsteps; i++) {\n          let angle = startangle + i / numsteps * deltaangle\n          let p = Vector2D.fromAngleRadians(angle).times(radiuscorrected).plus(circlecenter)\n          points.push(p)\n        }\n        cutouts.push(fromPoints(points))\n      }\n    }\n  }\n  return cag.subtract(cutouts)\n}\n\nmodule.exports = {lieFlat, getTransformationToFlatLying, getTransformationAndInverseTransformationToFlatLying, overCutInsideCorners}\n","const Vector3D = require('../core/math/Vector3')\nconst Vector2D = require('../core/math/Vector2')\n\n// Parse an option from the options object\n// If the option is not present, return the default value\nconst parseOption = function (options, optionname, defaultvalue) {\n  var result = defaultvalue\n  if (options && optionname in options) {\n    result = options[optionname]\n  }\n  return result\n}\n\n  // Parse an option and force into a Vector3D. If a scalar is passed it is converted\n  // into a vector with equal x,y,z\nconst parseOptionAs3DVector = function (options, optionname, defaultvalue) {\n  var result = parseOption(options, optionname, defaultvalue)\n  result = new Vector3D(result)\n  return result\n}\n\nconst parseOptionAs3DVectorList = function (options, optionname, defaultvalue) {\n  var result = parseOption(options, optionname, defaultvalue)\n  return result.map(function (res) {\n    return new Vector3D(res)\n  })\n}\n\n  // Parse an option and force into a Vector2D. If a scalar is passed it is converted\n  // into a vector with equal x,y\nconst parseOptionAs2DVector = function (options, optionname, defaultvalue) {\n  var result = parseOption(options, optionname, defaultvalue)\n  result = new Vector2D(result)\n  return result\n}\n\nconst parseOptionAsFloat = function (options, optionname, defaultvalue) {\n  var result = parseOption(options, optionname, defaultvalue)\n  if (typeof (result) === 'string') {\n    result = Number(result)\n  }\n  if (isNaN(result) || typeof (result) !== 'number') {\n    throw new Error('Parameter ' + optionname + ' should be a number')\n  }\n  return result\n}\n\nconst parseOptionAsInt = function (options, optionname, defaultvalue) {\n  var result = parseOption(options, optionname, defaultvalue)\n  result = Number(Math.floor(result))\n  if (isNaN(result)) {\n    throw new Error('Parameter ' + optionname + ' should be a number')\n  }\n  return result\n}\n\nconst parseOptionAsBool = function (options, optionname, defaultvalue) {\n  var result = parseOption(options, optionname, defaultvalue)\n  if (typeof (result) === 'string') {\n    if (result === 'true') result = true\n    else if (result === 'false') result = false\n    else if (result === 0) result = false\n  }\n  result = !!result\n  return result\n}\n\nmodule.exports = {\n  parseOption,\n  parseOptionAsInt,\n  parseOptionAsFloat,\n  parseOptionAsBool,\n  parseOptionAs3DVector,\n  parseOptionAs2DVector,\n  parseOptionAs3DVectorList\n}\n","const Vector2D = require('./Vector2')\nconst {EPS, angleEPS} = require('../constants')\nconst {parseOptionAs2DVector, parseOptionAsFloat, parseOptionAsInt, parseOptionAsBool} = require('../../api/optionParsers')\nconst {defaultResolution2D} = require('../constants')\nconst Vertex = require('./Vertex2')\nconst Side = require('./Side')\n\n/** Class Path2D\n * Represents a series of points, connected by infinitely thin lines.\n * A path can be open or closed, i.e. additional line between first and last points.\n * The difference between Path2D and CAG is that a path is a 'thin' line, whereas a CAG is an enclosed area.\n * @constructor\n * @param {Vector2D[]} [points=[]] - list of points\n * @param {boolean} [closed=false] - closer of path\n *\n * @example\n * new CSG.Path2D()\n * new CSG.Path2D([[10,10], [-10,10], [-10,-10], [10,-10]], true) // closed\n */\nconst Path2D = function (points, closed) {\n  closed = !!closed\n  points = points || []\n    // re-parse the points into Vector2D\n    // and remove any duplicate points\n  let prevpoint = null\n  if (closed && (points.length > 0)) {\n    prevpoint = new Vector2D(points[points.length - 1])\n  }\n  let newpoints = []\n  points.map(function (point) {\n    point = new Vector2D(point)\n    let skip = false\n    if (prevpoint !== null) {\n      let distance = point.distanceTo(prevpoint)\n      skip = distance < EPS\n    }\n    if (!skip) newpoints.push(point)\n    prevpoint = point\n  })\n  this.points = newpoints\n  this.closed = closed\n}\n\n/** Construct an arc.\n * @param {Object} [options] - options for construction\n * @param {Vector2D} [options.center=[0,0]] - center of circle\n * @param {Number} [options.radius=1] - radius of circle\n * @param {Number} [options.startangle=0] - starting angle of the arc, in degrees\n * @param {Number} [options.endangle=360] - ending angle of the arc, in degrees\n * @param {Number} [options.resolution=defaultResolution2D] - number of sides per 360 rotation\n * @param {Boolean} [options.maketangent=false] - adds line segments at both ends of the arc to ensure that the gradients at the edges are tangent\n * @returns {Path2D} new Path2D object (not closed)\n *\n * @example\n * let path = CSG.Path2D.arc({\n *   center: [5, 5],\n *   radius: 10,\n *   startangle: 90,\n *   endangle: 180,\n *   resolution: 36,\n *   maketangent: true\n * });\n */\nPath2D.arc = function (options) {\n  let center = parseOptionAs2DVector(options, 'center', 0)\n  let radius = parseOptionAsFloat(options, 'radius', 1)\n  let startangle = parseOptionAsFloat(options, 'startangle', 0)\n  let endangle = parseOptionAsFloat(options, 'endangle', 360)\n  let resolution = parseOptionAsInt(options, 'resolution', defaultResolution2D)\n  let maketangent = parseOptionAsBool(options, 'maketangent', false)\n    // no need to make multiple turns:\n  while (endangle - startangle >= 720) {\n    endangle -= 360\n  }\n  while (endangle - startangle <= -720) {\n    endangle += 360\n  }\n  let points = []\n  let point\n  let absangledif = Math.abs(endangle - startangle)\n  if (absangledif < angleEPS) {\n    point = Vector2D.fromAngle(startangle / 180.0 * Math.PI).times(radius)\n    points.push(point.plus(center))\n  } else {\n    let numsteps = Math.floor(resolution * absangledif / 360) + 1\n    let edgestepsize = numsteps * 0.5 / absangledif // step size for half a degree\n    if (edgestepsize > 0.25) edgestepsize = 0.25\n    let numstepsMod = maketangent ? (numsteps + 2) : numsteps\n    for (let i = 0; i <= numstepsMod; i++) {\n      let step = i\n      if (maketangent) {\n        step = (i - 1) * (numsteps - 2 * edgestepsize) / numsteps + edgestepsize\n        if (step < 0) step = 0\n        if (step > numsteps) step = numsteps\n      }\n      let angle = startangle + step * (endangle - startangle) / numsteps\n      point = Vector2D.fromAngle(angle / 180.0 * Math.PI).times(radius)\n      points.push(point.plus(center))\n    }\n  }\n  return new Path2D(points, false)\n}\n\nPath2D.prototype = {\n  concat: function (otherpath) {\n    if (this.closed || otherpath.closed) {\n      throw new Error('Paths must not be closed')\n    }\n    let newpoints = this.points.concat(otherpath.points)\n    return new Path2D(newpoints)\n  },\n\n  /**\n   * Get the points that make up the path.\n   * note that this is current internal list of points, not an immutable copy.\n   * @returns {Vector2[]} array of points the make up the path\n   */\n  getPoints: function () {\n    return this.points\n  },\n\n  /**\n   * Append an point to the end of the path.\n   * @param {Vector2D} point - point to append\n   * @returns {Path2D} new Path2D object (not closed)\n   */\n  appendPoint: function (point) {\n    if (this.closed) {\n      throw new Error('Path must not be closed')\n    }\n    point = new Vector2D(point) // cast to Vector2D\n    let newpoints = this.points.concat([point])\n    return new Path2D(newpoints)\n  },\n\n  /**\n   * Append a list of points to the end of the path.\n   * @param {Vector2D[]} points - points to append\n   * @returns {Path2D} new Path2D object (not closed)\n   */\n  appendPoints: function (points) {\n    if (this.closed) {\n      throw new Error('Path must not be closed')\n    }\n    let newpoints = this.points\n    points.forEach(function (point) {\n      newpoints.push(new Vector2D(point)) // cast to Vector2D\n    })\n    return new Path2D(newpoints)\n  },\n\n  close: function () {\n    return new Path2D(this.points, true)\n  },\n\n  /**\n   * Determine if the path is a closed or not.\n   * @returns {Boolean} true when the path is closed, otherwise false\n   */\n  isClosed: function () {\n    return this.closed\n  },\n\n  /**\n   * Determine the overall clockwise or anti-clockwise turn of a path.\n   * See: http://mathworld.wolfram.com/PolygonArea.html\n   * @returns {String} One of ['clockwise', 'counter-clockwise', 'straight'].\n   */\n  getTurn: function () {\n    const points = this.points;\n    let twice_area = 0;\n    let last = points.length - 1;\n    for (let current = 0; current < points.length; last = current++) {\n      twice_area += points[last].x * points[current].y - points[last].y * points[current].x;\n    }\n    if (twice_area > 0) {\n      return 'clockwise';\n    } else if (twice_area < 0) {\n      return 'counter-clockwise';\n    } else {\n      return 'straight';\n    }\n  },\n\n    // Extrude the path by following it with a rectangle (upright, perpendicular to the path direction)\n    // Returns a CSG solid\n    //   width: width of the extrusion, in the z=0 plane\n    //   height: height of the extrusion in the z direction\n    //   resolution: number of segments per 360 degrees for the curve in a corner\n  rectangularExtrude: function (width, height, resolution) {\n    let cag = this.expandToCAG(width / 2, resolution)\n    let result = cag.extrude({\n      offset: [0, 0, height]\n    })\n    return result\n  },\n\n    // Expand the path to a CAG\n    // This traces the path with a circle with radius pathradius\n  expandToCAG: function (pathradius, resolution) {\n    const CAG = require('../CAG') // FIXME: cyclic dependencies CAG => PATH2 => CAG\n    let sides = []\n    let numpoints = this.points.length\n    let startindex = 0\n    if (this.closed && (numpoints > 2)) startindex = -1\n    let prevvertex\n    for (let i = startindex; i < numpoints; i++) {\n      let pointindex = i\n      if (pointindex < 0) pointindex = numpoints - 1\n      let point = this.points[pointindex]\n      let vertex = new Vertex(point)\n      if (i > startindex) {\n        let side = new Side(prevvertex, vertex)\n        sides.push(side)\n      }\n      prevvertex = vertex\n    }\n    let shellcag = CAG.fromSides(sides)\n    let expanded = shellcag.expandedShell(pathradius, resolution)\n    return expanded\n  },\n\n  innerToCAG: function () {\n    const CAG = require('../CAG') // FIXME: cyclic dependencies CAG => PATH2 => CAG\n    if (!this.closed) throw new Error('The path should be closed!')\n    return CAG.fromPoints(this.points)\n  },\n\n  transform: function (matrix4x4) {\n    let newpoints = this.points.map(function (point) {\n      return point.multiply4x4(matrix4x4)\n    })\n    return new Path2D(newpoints, this.closed)\n  },\n\n  /**\n   * Append a Bezier curve to the end of the path, using the control points to transition the curve through start and end points.\n   * <br>\n   * The Bézier curve starts at the last point in the path,\n   * and ends at the last given control point. Other control points are intermediate control points.\n   * <br>\n   * The first control point may be null to ensure a smooth transition occurs. In this case,\n   * the second to last control point of the path is mirrored into the control points of the Bezier curve.\n   * In other words, the trailing gradient of the path matches the new gradient of the curve.\n   * @param {Vector2D[]} controlpoints - list of control points\n   * @param {Object} [options] - options for construction\n   * @param {Number} [options.resolution=defaultResolution2D] - number of sides per 360 rotation\n   * @returns {Path2D} new Path2D object (not closed)\n   *\n   * @example\n   * let p5 = new CSG.Path2D([[10,-20]],false);\n   * p5 = p5.appendBezier([[10,-10],[25,-10],[25,-20]]);\n   * p5 = p5.appendBezier([[25,-30],[40,-30],[40,-20]]);\n   */\n  appendBezier: function (controlpoints, options) {\n    if (arguments.length < 2) {\n      options = {}\n    }\n    if (this.closed) {\n      throw new Error('Path must not be closed')\n    }\n    if (!(controlpoints instanceof Array)) {\n      throw new Error('appendBezier: should pass an array of control points')\n    }\n    if (controlpoints.length < 1) {\n      throw new Error('appendBezier: need at least 1 control point')\n    }\n    if (this.points.length < 1) {\n      throw new Error('appendBezier: path must already contain a point (the endpoint of the path is used as the starting point for the bezier curve)')\n    }\n    let resolution = parseOptionAsInt(options, 'resolution', defaultResolution2D)\n    if (resolution < 4) resolution = 4\n    let factorials = []\n    let controlpointsParsed = []\n    controlpointsParsed.push(this.points[this.points.length - 1]) // start at the previous end point\n    for (let i = 0; i < controlpoints.length; ++i) {\n      let p = controlpoints[i]\n      if (p === null) {\n                // we can pass null as the first control point. In that case a smooth gradient is ensured:\n        if (i !== 0) {\n          throw new Error('appendBezier: null can only be passed as the first control point')\n        }\n        if (controlpoints.length < 2) {\n          throw new Error('appendBezier: null can only be passed if there is at least one more control point')\n        }\n        let lastBezierControlPoint\n        if ('lastBezierControlPoint' in this) {\n          lastBezierControlPoint = this.lastBezierControlPoint\n        } else {\n          if (this.points.length < 2) {\n            throw new Error('appendBezier: null is passed as a control point but this requires a previous bezier curve or at least two points in the existing path')\n          }\n          lastBezierControlPoint = this.points[this.points.length - 2]\n        }\n                // mirror the last bezier control point:\n        p = this.points[this.points.length - 1].times(2).minus(lastBezierControlPoint)\n      } else {\n        p = new Vector2D(p) // cast to Vector2D\n      }\n      controlpointsParsed.push(p)\n    }\n    let bezierOrder = controlpointsParsed.length - 1\n    let fact = 1\n    for (let i = 0; i <= bezierOrder; ++i) {\n      if (i > 0) fact *= i\n      factorials.push(fact)\n    }\n    let binomials = []\n    for (let i = 0; i <= bezierOrder; ++i) {\n      let binomial = factorials[bezierOrder] / (factorials[i] * factorials[bezierOrder - i])\n      binomials.push(binomial)\n    }\n    let getPointForT = function (t) {\n      let t_k = 1 // = pow(t,k)\n      let one_minus_t_n_minus_k = Math.pow(1 - t, bezierOrder) // = pow( 1-t, bezierOrder - k)\n      let inv_1_minus_t = (t !== 1) ? (1 / (1 - t)) : 1\n      let point = new Vector2D(0, 0)\n      for (let k = 0; k <= bezierOrder; ++k) {\n        if (k === bezierOrder) one_minus_t_n_minus_k = 1\n        let bernstein_coefficient = binomials[k] * t_k * one_minus_t_n_minus_k\n        point = point.plus(controlpointsParsed[k].times(bernstein_coefficient))\n        t_k *= t\n        one_minus_t_n_minus_k *= inv_1_minus_t\n      }\n      return point\n    }\n    let newpoints = []\n    let newpoints_t = []\n    let numsteps = bezierOrder + 1\n    for (let i = 0; i < numsteps; ++i) {\n      let t = i / (numsteps - 1)\n      let point = getPointForT(t)\n      newpoints.push(point)\n      newpoints_t.push(t)\n    }\n    // subdivide each segment until the angle at each vertex becomes small enough:\n    let subdivideBase = 1\n    let maxangle = Math.PI * 2 / resolution // segments may have differ no more in angle than this\n    let maxsinangle = Math.sin(maxangle)\n    while (subdivideBase < newpoints.length - 1) {\n      let dir1 = newpoints[subdivideBase].minus(newpoints[subdivideBase - 1]).unit()\n      let dir2 = newpoints[subdivideBase + 1].minus(newpoints[subdivideBase]).unit()\n      let sinangle = dir1.cross(dir2) // this is the sine of the angle\n      if (Math.abs(sinangle) > maxsinangle) {\n                // angle is too big, we need to subdivide\n        let t0 = newpoints_t[subdivideBase - 1]\n        let t1 = newpoints_t[subdivideBase + 1]\n        let t0_new = t0 + (t1 - t0) * 1 / 3\n        let t1_new = t0 + (t1 - t0) * 2 / 3\n        let point0_new = getPointForT(t0_new)\n        let point1_new = getPointForT(t1_new)\n                // remove the point at subdivideBase and replace with 2 new points:\n        newpoints.splice(subdivideBase, 1, point0_new, point1_new)\n        newpoints_t.splice(subdivideBase, 1, t0_new, t1_new)\n                // re - evaluate the angles, starting at the previous junction since it has changed:\n        subdivideBase--\n        if (subdivideBase < 1) subdivideBase = 1\n      } else {\n        ++subdivideBase\n      }\n    }\n        // append to the previous points, but skip the first new point because it is identical to the last point:\n    newpoints = this.points.concat(newpoints.slice(1))\n    let result = new Path2D(newpoints)\n    result.lastBezierControlPoint = controlpointsParsed[controlpointsParsed.length - 2]\n    return result\n  },\n\n  /**\n   * Append an arc to the end of the path.\n   * This implementation follows the SVG arc specs. For the details see\n   * http://www.w3.org/TR/SVG/paths.html#PathDataEllipticalArcCommands\n   * @param {Vector2D} endpoint - end point of arc\n   * @param {Object} [options] - options for construction\n   * @param {Number} [options.radius=0] - radius of arc (X and Y), see also xradius and yradius\n   * @param {Number} [options.xradius=0] - X radius of arc, see also radius\n   * @param {Number} [options.yradius=0] - Y radius of arc, see also radius\n   * @param {Number} [options.xaxisrotation=0] -  rotation (in degrees) of the X axis of the arc with respect to the X axis of the coordinate system\n   * @param {Number} [options.resolution=defaultResolution2D] - number of sides per 360 rotation\n   * @param {Boolean} [options.clockwise=false] - draw an arc clockwise with respect to the center point\n   * @param {Boolean} [options.large=false] - draw an arc longer than 180 degrees\n   * @returns {Path2D} new Path2D object (not closed)\n   *\n   * @example\n   * let p1 = new CSG.Path2D([[27.5,-22.96875]],false);\n   * p1 = p1.appendPoint([27.5,-3.28125]);\n   * p1 = p1.appendArc([12.5,-22.96875],{xradius: 15,yradius: -19.6875,xaxisrotation: 0,clockwise: false,large: false});\n   * p1 = p1.close();\n   */\n  appendArc: function (endpoint, options) {\n    let decimals = 100000\n    if (arguments.length < 2) {\n      options = {}\n    }\n    if (this.closed) {\n      throw new Error('Path must not be closed')\n    }\n    if (this.points.length < 1) {\n      throw new Error('appendArc: path must already contain a point (the endpoint of the path is used as the starting point for the arc)')\n    }\n    let resolution = parseOptionAsInt(options, 'resolution', defaultResolution2D)\n    if (resolution < 4) resolution = 4\n    let xradius, yradius\n    if (('xradius' in options) || ('yradius' in options)) {\n      if ('radius' in options) {\n        throw new Error('Should either give an xradius and yradius parameter, or a radius parameter')\n      }\n      xradius = parseOptionAsFloat(options, 'xradius', 0)\n      yradius = parseOptionAsFloat(options, 'yradius', 0)\n    } else {\n      xradius = parseOptionAsFloat(options, 'radius', 0)\n      yradius = xradius\n    }\n    let xaxisrotation = parseOptionAsFloat(options, 'xaxisrotation', 0)\n    let clockwise = parseOptionAsBool(options, 'clockwise', false)\n    let largearc = parseOptionAsBool(options, 'large', false)\n    let startpoint = this.points[this.points.length - 1]\n    endpoint = new Vector2D(endpoint)\n        // round to precision in order to have determinate calculations\n    xradius = Math.round(xradius * decimals) / decimals\n    yradius = Math.round(yradius * decimals) / decimals\n    endpoint = new Vector2D(Math.round(endpoint.x * decimals) / decimals, Math.round(endpoint.y * decimals) / decimals)\n\n    let sweepFlag = !clockwise\n    let newpoints = []\n    if ((xradius === 0) || (yradius === 0)) {\n            // http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes:\n            // If rx = 0 or ry = 0, then treat this as a straight line from (x1, y1) to (x2, y2) and stop\n      newpoints.push(endpoint)\n    } else {\n      xradius = Math.abs(xradius)\n      yradius = Math.abs(yradius)\n\n            // see http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes :\n      let phi = xaxisrotation * Math.PI / 180.0\n      let cosphi = Math.cos(phi)\n      let sinphi = Math.sin(phi)\n      let minushalfdistance = startpoint.minus(endpoint).times(0.5)\n            // F.6.5.1:\n            // round to precision in order to have determinate calculations\n      let x = Math.round((cosphi * minushalfdistance.x + sinphi * minushalfdistance.y) * decimals) / decimals\n      let y = Math.round((-sinphi * minushalfdistance.x + cosphi * minushalfdistance.y) * decimals) / decimals\n      let startTranslated = new Vector2D(x, y)\n            // F.6.6.2:\n      let biglambda = (startTranslated.x * startTranslated.x) / (xradius * xradius) + (startTranslated.y * startTranslated.y) / (yradius * yradius)\n      if (biglambda > 1.0) {\n                // F.6.6.3:\n        let sqrtbiglambda = Math.sqrt(biglambda)\n        xradius *= sqrtbiglambda\n        yradius *= sqrtbiglambda\n                // round to precision in order to have determinate calculations\n        xradius = Math.round(xradius * decimals) / decimals\n        yradius = Math.round(yradius * decimals) / decimals\n      }\n            // F.6.5.2:\n      let multiplier1 = Math.sqrt((xradius * xradius * yradius * yradius - xradius * xradius * startTranslated.y * startTranslated.y - yradius * yradius * startTranslated.x * startTranslated.x) / (xradius * xradius * startTranslated.y * startTranslated.y + yradius * yradius * startTranslated.x * startTranslated.x))\n      if (sweepFlag === largearc) multiplier1 = -multiplier1\n      let centerTranslated = new Vector2D(xradius * startTranslated.y / yradius, -yradius * startTranslated.x / xradius).times(multiplier1)\n            // F.6.5.3:\n      let center = new Vector2D(cosphi * centerTranslated.x - sinphi * centerTranslated.y, sinphi * centerTranslated.x + cosphi * centerTranslated.y).plus((startpoint.plus(endpoint)).times(0.5))\n            // F.6.5.5:\n      let vec1 = new Vector2D((startTranslated.x - centerTranslated.x) / xradius, (startTranslated.y - centerTranslated.y) / yradius)\n      let vec2 = new Vector2D((-startTranslated.x - centerTranslated.x) / xradius, (-startTranslated.y - centerTranslated.y) / yradius)\n      let theta1 = vec1.angleRadians()\n      let theta2 = vec2.angleRadians()\n      let deltatheta = theta2 - theta1\n      deltatheta = deltatheta % (2 * Math.PI)\n      if ((!sweepFlag) && (deltatheta > 0)) {\n        deltatheta -= 2 * Math.PI\n      } else if ((sweepFlag) && (deltatheta < 0)) {\n        deltatheta += 2 * Math.PI\n      }\n\n            // Ok, we have the center point and angle range (from theta1, deltatheta radians) so we can create the ellipse\n      let numsteps = Math.ceil(Math.abs(deltatheta) / (2 * Math.PI) * resolution) + 1\n      if (numsteps < 1) numsteps = 1\n      for (let step = 1; step <= numsteps; step++) {\n        let theta = theta1 + step / numsteps * deltatheta\n        let costheta = Math.cos(theta)\n        let sintheta = Math.sin(theta)\n                // F.6.3.1:\n        let point = new Vector2D(cosphi * xradius * costheta - sinphi * yradius * sintheta, sinphi * xradius * costheta + cosphi * yradius * sintheta).plus(center)\n        newpoints.push(point)\n      }\n    }\n    newpoints = this.points.concat(newpoints)\n    let result = new Path2D(newpoints)\n    return result\n  }\n}\n\nmodule.exports = Path2D\n","const Vertex3 = require('../core/math/Vertex3')\nconst Vector3 = require('../core/math/Vector3')\nconst Polygon3 = require('../core/math/Polygon3')\n\n// FIXME: this is to have more readable/less extremely verbose code below\nconst vertexFromVectorArray = array => {\n  return new Vertex3(new Vector3(array))\n}\n\nconst polygonFromPoints = points => {\n  // EEK talk about wrapping wrappers !\n  const vertices = points.map(point => new Vertex3(new Vector3(point)))\n  return new Polygon3(vertices)\n}\n\n// Simplified, array vector rightMultiply1x3Vector\nconst rightMultiply1x3VectorToArray = (matrix, vector) => {\n  const [v0, v1, v2] = vector\n  const v3 = 1\n  let x = v0 * matrix.elements[0] + v1 * matrix.elements[1] + v2 * matrix.elements[2] + v3 * matrix.elements[3]\n  let y = v0 * matrix.elements[4] + v1 * matrix.elements[5] + v2 * matrix.elements[6] + v3 * matrix.elements[7]\n  let z = v0 * matrix.elements[8] + v1 * matrix.elements[9] + v2 * matrix.elements[10] + v3 * matrix.elements[11]\n  let w = v0 * matrix.elements[12] + v1 * matrix.elements[13] + v2 * matrix.elements[14] + v3 * matrix.elements[15]\n\n  // scale such that fourth element becomes 1:\n  if (w !== 1) {\n    const invw = 1.0 / w\n    x *= invw\n    y *= invw\n    z *= invw\n  }\n  return [x, y, z]\n}\n\nfunction clamp (value, min, max) {\n  return Math.min(Math.max(value, min), max)\n}\n\nconst cagToPointsArray = input => {\n  let points\n  if ('sides' in input) { // this is a cag\n    points = []\n    input.sides.forEach(side => {\n      points.push([side.vertex0.pos.x, side.vertex0.pos.y])\n      points.push([side.vertex1.pos.x, side.vertex1.pos.y])\n    })\n    // cag.sides.map(side => [side.vertex0.pos.x, side.vertex0.pos.y])\n    //, side.vertex1.pos.x, side.vertex1.pos.y])\n    // due to the logic of CAG.fromPoints()\n    // move the first point to the last\n    /* if (points.length > 0) {\n      points.push(points.shift())\n    } */\n  } else if ('points' in input) {\n    points = input.points.map(p => ([p.x, p.y]))\n  }\n\n  return points\n}\n\nconst degToRad = deg => (Math.PI / 180) * deg\n\nmodule.exports = {cagToPointsArray, clamp, rightMultiply1x3VectorToArray, polygonFromPoints}\n","const {EPS, defaultResolution3D} = require('../core/constants')\nconst OrthoNormalBasis = require('../core/math/OrthoNormalBasis')\nconst {parseOptionAs3DVector, parseOptionAsBool, parseOptionAsFloat, parseOptionAsInt} = require('./optionParsers')\nconst Vector3D = require('../core/math/Vector3')\nconst Matrix4 = require('../core/math/Matrix4')\nconst Path2D = require('../core/math/Path2')\nconst {Connector} = require('../core/connectors')\nconst {fromPolygons} = require('../core/CSGFactories')\nconst {cagToPointsArray, clamp, rightMultiply1x3VectorToArray, polygonFromPoints} = require('./helpers')\nconst {fromPoints} = require('../core/CAGFactories')\n\n/** extrude the CAG in a certain plane.\n * Giving just a plane is not enough, multiple different extrusions in the same plane would be possible\n * by rotating around the plane's origin. An additional right-hand vector should be specified as well,\n * and this is exactly a OrthoNormalBasis.\n * @param  {CAG} cag the cag to extrude\n * @param  {Orthonormalbasis} orthonormalbasis characterizes the plane in which to extrude\n * @param  {Float} depth thickness of the extruded shape. Extrusion is done upwards from the plane\n *  (unless symmetrical option is set, see below)\n * @param  {Object} [options] - options for construction\n * @param {Boolean} [options.symmetrical=true] - extrude symmetrically in two directions about the plane\n */\nconst extrudeInOrthonormalBasis = function (cag, orthonormalbasis, depth, options) {\n      // first extrude in the regular Z plane:\n  if (!(orthonormalbasis instanceof OrthoNormalBasis)) {\n    throw new Error('extrudeInPlane: the first parameter should be a OrthoNormalBasis')\n  }\n  let extruded = cag.extrude({\n    offset: [0, 0, depth]\n  })\n  if (parseOptionAsBool(options, 'symmetrical', false)) {\n    extruded = extruded.translate([0, 0, -depth / 2])\n  }\n  let matrix = orthonormalbasis.getInverseProjectionMatrix()\n  extruded = extruded.transform(matrix)\n  return extruded\n}\n\n/** Extrude in a standard cartesian plane, specified by two axis identifiers. Each identifier can be\n * one of [\"X\",\"Y\",\"Z\",\"-X\",\"-Y\",\"-Z\"]\n * The 2d x axis will map to the first given 3D axis, the 2d y axis will map to the second.\n * See OrthoNormalBasis.GetCartesian for details.\n * @param  {CAG} cag the cag to extrude\n * @param  {String} axis1 the first axis\n * @param  {String} axis2 the second axis\n * @param  {Float} depth thickness of the extruded shape. Extrusion is done upwards from the plane\n * @param  {Object} [options] - options for construction\n * @param {Boolean} [options.symmetrical=true] - extrude symmetrically in two directions about the plane\n */\nconst extrudeInPlane = function (cag, axis1, axis2, depth, options) {\n  return extrudeInOrthonormalBasis(cag, OrthoNormalBasis.GetCartesian(axis1, axis2), depth, options)\n}\n\n/** linear extrusion of 2D shape, with optional twist\n * @param  {CAG} cag the cag to extrude\n * @param  {Object} [options] - options for construction\n * @param {Array} [options.offset=[0,0,1]] - The 2d shape is placed in in z=0 plane and extruded into direction <offset>\n * (a 3D vector as a 3 component array)\n * @param {Boolean} [options.twiststeps=defaultResolution3D] - twiststeps determines the resolution of the twist (should be >= 1)\n * @param {Boolean} [options.twistangle=0] - twistangle The final face is rotated <twistangle> degrees. Rotation is done around the origin of the 2d shape (i.e. x=0, y=0)\n * @returns {CSG} the extrude shape, as a CSG object\n * @example extruded=cag.extrude({offset: [0,0,10], twistangle: 360, twiststeps: 100});\n*/\nconst extrude = function (cag, options) {\n  const CSG = require('../core/CSG') // FIXME: circular dependencies CAG=>CSG=>CAG\n  if (cag.sides.length === 0) {\n    // empty! : FIXME: should this throw ?\n    return new CSG()\n  }\n  let offsetVector = parseOptionAs3DVector(options, 'offset', [0, 0, 1])\n  let twistangle = parseOptionAsFloat(options, 'twistangle', 0)\n  let twiststeps = parseOptionAsInt(options, 'twiststeps', defaultResolution3D)\n  if (offsetVector.z === 0) {\n    throw new Error('offset cannot be orthogonal to Z axis')\n  }\n  if (twistangle === 0 || twiststeps < 1) {\n    twiststeps = 1\n  }\n  let normalVector = Vector3D.Create(0, 1, 0)\n\n  let polygons = []\n  // bottom and top\n  polygons = polygons.concat(cag._toPlanePolygons({\n    translation: [0, 0, 0],\n    normalVector: normalVector,\n    flipped: !(offsetVector.z < 0)}\n  ))\n  polygons = polygons.concat(cag._toPlanePolygons({\n    translation: offsetVector,\n    normalVector: normalVector.rotateZ(twistangle),\n    flipped: offsetVector.z < 0}))\n  // walls\n  for (let i = 0; i < twiststeps; i++) {\n    let c1 = new Connector(offsetVector.times(i / twiststeps), [0, 0, offsetVector.z],\n              normalVector.rotateZ(i * twistangle / twiststeps))\n    let c2 = new Connector(offsetVector.times((i + 1) / twiststeps), [0, 0, offsetVector.z],\n              normalVector.rotateZ((i + 1) * twistangle / twiststeps))\n    polygons = polygons.concat(cag._toWallPolygons({toConnector1: c1, toConnector2: c2}))\n  }\n\n  return fromPolygons(polygons)\n}\n\n// THIS IS AN OLD untested !!! version of rotate extrude\n/** Extrude to into a 3D solid by rotating the origin around the Y axis.\n * (and turning everything into XY plane)\n * @param {Object} options - options for construction\n * @param {Number} [options.angle=360] - angle of rotation\n * @param {Number} [options.resolution=defaultResolution3D] - number of polygons per 360 degree revolution\n * @returns {CSG} new 3D solid\n */\nconst rotateExtrude = function (cag, options) { // FIXME options should be optional\n  let alpha = parseOptionAsFloat(options, 'angle', 360)\n  let resolution = parseOptionAsInt(options, 'resolution', defaultResolution3D)\n\n  alpha = alpha > 360 ? alpha % 360 : alpha\n  let origin = [0, 0, 0]\n  let axisV = Vector3D.Create(0, 1, 0)\n  let normalV = [0, 0, 1]\n  let polygons = []\n  // planes only needed if alpha > 0\n  let connS = new Connector(origin, axisV, normalV)\n  if (alpha > 0 && alpha < 360) {\n          // we need to rotate negative to satisfy wall function condition of\n          // building in the direction of axis vector\n    let connE = new Connector(origin, axisV.rotateZ(-alpha), normalV)\n    polygons = polygons.concat(\n              cag._toPlanePolygons({toConnector: connS, flipped: true}))\n    polygons = polygons.concat(\n              cag._toPlanePolygons({toConnector: connE}))\n  }\n  let connT1 = connS\n  let connT2\n  let step = alpha / resolution\n  for (let a = step; a <= alpha + EPS; a += step) { // FIXME Should this be angelEPS?\n    connT2 = new Connector(origin, axisV.rotateZ(-a), normalV)\n    polygons = polygons.concat(cag._toWallPolygons(\n              {toConnector1: connT1, toConnector2: connT2}))\n    connT1 = connT2\n  }\n  return fromPolygons(polygons).reTesselated()\n}\n\n// FIXME: right now linear & rotate extrude take params first, while rectangular_extrude\n// takes params second ! confusing and incoherent ! needs to be changed (BREAKING CHANGE !)\n\n/** linear extrusion of the input 2d shape\n * @param {Object} [options] - options for construction\n * @param {Float} [options.height=1] - height of the extruded shape\n * @param {Integer} [options.slices=10] - number of intermediary steps/slices\n * @param {Integer} [options.twist=0] - angle (in degrees to twist the extusion by)\n * @param {Boolean} [options.center=false] - whether to center extrusion or not\n * @param {CAG} baseShape input 2d shape\n * @returns {CSG} new extruded shape\n *\n * @example\n * let revolved = linear_extrude({height: 10}, square())\n */\nfunction linear_extrude (params, baseShape) {\n  const defaults = {\n    height: 1,\n    slices: 10,\n    twist: 0,\n    center: false\n  }\n  /* convexity = 10, */\n  const {height, twist, slices, center} = Object.assign({}, defaults, params)\n\n  // if(params.convexity) convexity = params.convexity      // abandoned\n  let output = baseShape.extrude({offset: [0, 0, height], twistangle: twist, twiststeps: slices})\n  if (center === true) {\n    const b = output.getBounds() // b[0] = min, b[1] = max\n    const offset = (b[1].plus(b[0])).times(-0.5)\n    output = output.translate(offset)\n  }\n  return output\n}\n\n/** rotate extrusion / revolve of the given 2d shape\n * @param {Object} [options] - options for construction\n * @param {Integer} [options.fn=1] - resolution/number of segments of the extrusion\n * @param {Float} [options.startAngle=1] - start angle of the extrusion, in degrees\n * @param {Float} [options.angle=1] - angle of the extrusion, in degrees\n * @param {Float} [options.overflow='cap'] - what to do with points outside of bounds (+ / - x) :\n * defaults to capping those points to 0 (only supported behaviour for now)\n * @param {CAG} baseShape input 2d shape\n * @returns {CSG} new extruded shape\n *\n * @example\n * let revolved = rotate_extrude({fn: 10}, square())\n */\nfunction rotate_extrude (params, baseShape) {\n  // note, we should perhaps alias this to revolve() as well\n  const defaults = {\n    fn: 32,\n    startAngle: 0,\n    angle: 360,\n    overflow: 'cap'\n  }\n  params = Object.assign({}, defaults, params)\n  let {fn, startAngle, angle, overflow} = params\n  if (overflow !== 'cap') {\n    throw new Error('only capping of overflowing points is supported !')\n  }\n\n  if (arguments.length < 2) { // FIXME: what the hell ??? just put params second !\n    baseShape = params\n  }\n  // are we dealing with a positive or negative angle (for normals flipping)\n  const flipped = angle > 0\n  // limit actual angle between 0 & 360, regardless of direction\n  const totalAngle = flipped ? clamp((startAngle + angle), 0, 360) : clamp((startAngle + angle), -360, 0)\n  // adapt to the totalAngle : 1 extra segment per 45 degs if not 360 deg extrusion\n  // needs to be at least one and higher then the input resolution\n  const segments = Math.max(\n    Math.floor(Math.abs(totalAngle) / 45),\n    1,\n    fn\n  )\n  // maximum distance per axis between two points before considering them to be the same\n  const overlapTolerance = 0.00001\n  // convert baseshape to just an array of points, easier to deal with\n  let shapePoints = cagToPointsArray(baseShape)\n\n  // determine if the rotate_extrude can be computed in the first place\n  // ie all the points have to be either x > 0 or x < 0\n\n  // generic solution to always have a valid solid, even if points go beyond x/ -x\n  // 1. split points up between all those on the 'left' side of the axis (x<0) & those on the 'righ' (x>0)\n  // 2. for each set of points do the extrusion operation IN OPOSITE DIRECTIONS\n  // 3. union the two resulting solids\n\n  // 1. alt : OR : just cap of points at the axis ?\n\n  // console.log('shapePoints BEFORE', shapePoints, baseShape.sides)\n\n  const pointsWithNegativeX = shapePoints.filter(x => x[0] < 0)\n  const pointsWithPositiveX = shapePoints.filter(x => x[0] >= 0)\n  const arePointsWithNegAndPosX = pointsWithNegativeX.length > 0 && pointsWithPositiveX.length > 0\n\n  if (arePointsWithNegAndPosX && overflow === 'cap') {\n    if (pointsWithNegativeX.length > pointsWithPositiveX.length) {\n      shapePoints = shapePoints.map(function (point) {\n        return [Math.min(point[0], 0), point[1]]\n      })\n    } else if (pointsWithPositiveX.length >= pointsWithNegativeX.length) {\n      shapePoints = shapePoints.map(function (point) {\n        return [Math.max(point[0], 0), point[1]]\n      })\n    }\n  }\n\n  // console.log('negXs', pointsWithNegativeX, 'pointsWithPositiveX', pointsWithPositiveX, 'arePointsWithNegAndPosX', arePointsWithNegAndPosX)\n //  console.log('shapePoints AFTER', shapePoints, baseShape.sides)\n\n  let polygons = []\n\n  // for each of the intermediary steps in the extrusion\n  for (let i = 1; i < segments + 1; i++) {\n    // for each side of the 2d shape\n    for (let j = 0; j < shapePoints.length - 1; j++) {\n      // 2 points of a side\n      const curPoint = shapePoints[j]\n      const nextPoint = shapePoints[j + 1]\n\n      // compute matrix for current and next segment angle\n      let prevMatrix = Matrix4.rotationZ((i - 1) / segments * angle + startAngle)\n      let curMatrix = Matrix4.rotationZ(i / segments * angle + startAngle)\n\n      const pointA = rightMultiply1x3VectorToArray(prevMatrix, [curPoint[0], 0, curPoint[1]])\n      const pointAP = rightMultiply1x3VectorToArray(curMatrix, [curPoint[0], 0, curPoint[1]])\n      const pointB = rightMultiply1x3VectorToArray(prevMatrix, [nextPoint[0], 0, nextPoint[1]])\n      const pointBP = rightMultiply1x3VectorToArray(curMatrix, [nextPoint[0], 0, nextPoint[1]])\n\n      // console.log(`point ${j} edge connecting ${j} to ${j + 1}`)\n      let overlappingPoints = false\n      if (Math.abs(pointA[0] - pointAP[0]) < overlapTolerance && Math.abs(pointB[1] - pointBP[1]) < overlapTolerance) {\n        // console.log('identical / overlapping points (from current angle and next one), what now ?')\n        overlappingPoints = true\n      }\n\n      // we do not generate a single quad because:\n      // 1. it does not allow eliminating unneeded triangles in case of overlapping points\n      // 2. the current cleanup routines of csg.js create degenerate shapes from those quads\n      // let polyPoints = [pointA, pointB, pointBP, pointAP]\n      // polygons.push(polygonFromPoints(polyPoints))\n\n      if (flipped) {\n        // CW\n        polygons.push(polygonFromPoints([pointA, pointB, pointBP]))\n        if (!overlappingPoints) {\n          polygons.push(polygonFromPoints([pointBP, pointAP, pointA]))\n        }\n      } else {\n        // CCW\n        if (!overlappingPoints) {\n          polygons.push(polygonFromPoints([pointA, pointAP, pointBP]))\n        }\n        polygons.push(polygonFromPoints([pointBP, pointB, pointA]))\n      }\n    }\n    // if we do not do a full extrusion, we want caps at both ends (closed volume)\n    if (Math.abs(angle) < 360) {\n      // we need to recreate the side with capped points where applicable\n      const sideShape = fromPoints(shapePoints)\n      const endMatrix = Matrix4.rotationX(90).multiply(\n        Matrix4.rotationZ(-startAngle)\n      )\n      const endCap = sideShape._toPlanePolygons({flipped: flipped})\n        .map(x => x.transform(endMatrix))\n\n      const startMatrix = Matrix4.rotationX(90).multiply(\n        Matrix4.rotationZ(-angle - startAngle)\n      )\n      const startCap = sideShape._toPlanePolygons({flipped: !flipped})\n        .map(x => x.transform(startMatrix))\n      polygons = polygons.concat(endCap).concat(startCap)\n    }\n  }\n  return fromPolygons(polygons).reTesselated().canonicalized()\n}\n\n/** rectangular extrusion of the given array of points\n * @param {Array} basePoints array of points (nested) to extrude from\n * layed out like [ [0,0], [10,0], [5,10], [0,10] ]\n * @param {Object} [options] - options for construction\n * @param {Float} [options.h=1] - height of the extruded shape\n * @param {Float} [options.w=10] - width of the extruded shape\n * @param {Integer} [options.fn=1] - resolution/number of segments of the extrusion\n * @param {Boolean} [options.closed=false] - whether to close the input path for the extrusion or not\n * @param {Boolean} [options.round=true] - whether to round the extrusion or not\n * @returns {CSG} new extruded shape\n *\n * @example\n * let revolved = rectangular_extrude({height: 10}, square())\n */\nfunction rectangular_extrude (basePoints, params) {\n  const defaults = {\n    w: 1,\n    h: 1,\n    fn: 8,\n    closed: false,\n    round: true\n  }\n  const {w, h, fn, closed, round} = Object.assign({}, defaults, params)\n  return new Path2D(basePoints, closed).rectangularExtrude(w, h, fn, round)\n}\n\nmodule.exports = {\n  extrudeInOrthonormalBasis,\n  extrudeInPlane,\n  extrude,\n  linear_extrude,\n  rotate_extrude,\n  rotateExtrude,\n  rectangular_extrude\n}\n","const Path2D = require('../core/math/Path2')\n\nconst cagoutlinePaths = function (_cag) {\n  let cag = _cag.canonicalized()\n  let sideTagToSideMap = {}\n  let startVertexTagToSideTagMap = {}\n  cag.sides.map(function (side) {\n    let sidetag = side.getTag()\n    sideTagToSideMap[sidetag] = side\n    let startvertextag = side.vertex0.getTag()\n    if (!(startvertextag in startVertexTagToSideTagMap)) {\n      startVertexTagToSideTagMap[startvertextag] = []\n    }\n    startVertexTagToSideTagMap[startvertextag].push(sidetag)\n  })\n  let paths = []\n  while (true) {\n    let startsidetag = null\n    for (let aVertexTag in startVertexTagToSideTagMap) {\n      let sidesForcagVertex = startVertexTagToSideTagMap[aVertexTag]\n      startsidetag = sidesForcagVertex[0]\n      sidesForcagVertex.splice(0, 1)\n      if (sidesForcagVertex.length === 0) {\n        delete startVertexTagToSideTagMap[aVertexTag]\n      }\n      break\n    }\n    if (startsidetag === null) break // we've had all sides\n    let connectedVertexPoints = []\n    let sidetag = startsidetag\n    let cagside = sideTagToSideMap[sidetag]\n    let startvertextag = cagside.vertex0.getTag()\n    while (true) {\n      connectedVertexPoints.push(cagside.vertex0.pos)\n      let nextvertextag = cagside.vertex1.getTag()\n      if (nextvertextag === startvertextag) break // we've closed the polygon\n      if (!(nextvertextag in startVertexTagToSideTagMap)) {\n        throw new Error('Area is not closed!')\n      }\n      let nextpossiblesidetags = startVertexTagToSideTagMap[nextvertextag]\n      let nextsideindex = -1\n      if (nextpossiblesidetags.length === 1) {\n        nextsideindex = 0\n      } else {\n                  // more than one side starting at the same vertex. cag means we have\n                  // two shapes touching at the same corner\n        let bestangle = null\n        let cagangle = cagside.direction().angleDegrees()\n        for (let sideindex = 0; sideindex < nextpossiblesidetags.length; sideindex++) {\n          let nextpossiblesidetag = nextpossiblesidetags[sideindex]\n          let possibleside = sideTagToSideMap[nextpossiblesidetag]\n          let angle = possibleside.direction().angleDegrees()\n          let angledif = angle - cagangle\n          if (angledif < -180) angledif += 360\n          if (angledif >= 180) angledif -= 360\n          if ((nextsideindex < 0) || (angledif > bestangle)) {\n            nextsideindex = sideindex\n            bestangle = angledif\n          }\n        }\n      }\n      let nextsidetag = nextpossiblesidetags[nextsideindex]\n      nextpossiblesidetags.splice(nextsideindex, 1)\n      if (nextpossiblesidetags.length === 0) {\n        delete startVertexTagToSideTagMap[nextvertextag]\n      }\n      cagside = sideTagToSideMap[nextsidetag]\n    } // inner loop\n    // due to the logic of fromPoints()\n    // move the first point to the last\n    if (connectedVertexPoints.length > 0) {\n      connectedVertexPoints.push(connectedVertexPoints.shift())\n    }\n    let path = new Path2D(connectedVertexPoints, true)\n    paths.push(path)\n  } // outer loop\n  return paths\n}\n\nmodule.exports = cagoutlinePaths\n","/* converts input data to array if it is not already an array */\nfunction toArray (data) {\n  if (!data) return []\n  if (data.constructor !== Array) return [data]\n  return data\n}\n\nmodule.exports = toArray\n","const toArray = require('../core/utils/toArray')\n\n/**\n * Centers the given object(s) using the given options (if any)\n * @param {Object} [options] - options for centering\n * @param {Array} [options.axes=[true,true,true]] - axis of which to center, true or false\n * @param {Array} [options.center=[0,0,0]] - point of which to center the object upon\n * @param {Object|Array} objects - the shape(s) to center\n * @return {Object|Array} objects\n *\n * @example\n * let csg = center({axes: [true,false,false]}, sphere()) // center about the X axis\n */\nconst center = function (options, objects) {\n  const defaults = {\n    axes: [true, true, true],\n    center: [0, 0, 0]\n  // TODO : Add addition 'methods' of centering; midpoint, centeriod\n  }\n  options = Object.assign({}, defaults, options)\n  const {axes,center} = options\n  objects = toArray(objects)\n\n  const results = objects.map(function (object) {\n    let bounds = object.getBounds()\n    let offset = [0,0,0]\n    if (axes[0]) offset[0] = center[0] - (bounds[0].x + ((bounds[1].x - bounds[0].x) / 2))\n    if (axes[1]) offset[1] = center[1] - (bounds[0].y + ((bounds[1].y - bounds[0].y) / 2))\n    if (axes[2]) offset[2] = center[2] - (bounds[0].z + ((bounds[1].y - bounds[0].y) / 2))\n    return object.translate(offset)\n  })\n  // if there is more than one result, return them all , otherwise a single one\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = center\n","\nconst {EPS, angleEPS} = require('../core/constants')\nconst Vertex = require('../core/math/Vertex3')\nconst Vector2D = require('../core/math/Vector2')\nconst Polygon = require('../core/math/Polygon3')\nconst {fnNumberSort, isCSG} = require('../core/utils')\nconst {fromPoints, fromPointsNoCheck} = require('../core/CAGFactories')\n\nconst expand = function (shape, radius, resolution) {\n  let result\n  if (isCSG(shape)) {\n    result = shape.union(expandedShellOfCCSG(shape, radius, resolution))\n    result = result.reTesselated()\n    result.properties = shape.properties // keep original properties\n  } else {\n    result = shape.union(expandedShellOfCAG(shape, radius, resolution))\n  }\n  return result\n}\n\nconst contract = function (shape, radius, resolution) {\n  let result\n  if (isCSG(shape)) {\n    result = shape.subtract(expandedShellOfCCSG(shape, radius, resolution))\n    result = result.reTesselated()\n    result.properties = shape.properties // keep original properties\n  } else {\n    result = shape.subtract(expandedShellOfCAG(shape, radius, resolution))\n  }\n  return result\n}\n\nconst expandedShellOfCAG = function (_cag, radius, resolution) {\n  const CAG = require('../core/CAG') // FIXME, circular dependency !!\n  resolution = resolution || 8\n  if (resolution < 4) resolution = 4\n  let cags = []\n  let pointmap = {}\n  let cag = _cag.canonicalized()\n  cag.sides.map(function (side) {\n    let d = side.vertex1.pos.minus(side.vertex0.pos)\n    let dl = d.length()\n    if (dl > EPS) {\n      d = d.times(1.0 / dl)\n      let normal = d.normal().times(radius)\n      let shellpoints = [\n        side.vertex1.pos.plus(normal),\n        side.vertex1.pos.minus(normal),\n        side.vertex0.pos.minus(normal),\n        side.vertex0.pos.plus(normal)\n      ]\n      //      let newcag = fromPointsNoCheck(shellpoints);\n      let newcag = fromPoints(shellpoints)\n      cags.push(newcag)\n      for (let step = 0; step < 2; step++) {\n        let p1 = (step === 0) ? side.vertex0.pos : side.vertex1.pos\n        let p2 = (step === 0) ? side.vertex1.pos : side.vertex0.pos\n        let tag = p1.x + ' ' + p1.y\n        if (!(tag in pointmap)) {\n          pointmap[tag] = []\n        }\n        pointmap[tag].push({\n          'p1': p1,\n          'p2': p2\n        })\n      }\n    }\n  })\n  for (let tag in pointmap) {\n    let m = pointmap[tag]\n    let angle1, angle2\n    let pcenter = m[0].p1\n    if (m.length === 2) {\n      let end1 = m[0].p2\n      let end2 = m[1].p2\n      angle1 = end1.minus(pcenter).angleDegrees()\n      angle2 = end2.minus(pcenter).angleDegrees()\n      if (angle2 < angle1) angle2 += 360\n      if (angle2 >= (angle1 + 360)) angle2 -= 360\n      if (angle2 < angle1 + 180) {\n        let t = angle2\n        angle2 = angle1 + 360\n        angle1 = t\n      }\n      angle1 += 90\n      angle2 -= 90\n    } else {\n      angle1 = 0\n      angle2 = 360\n    }\n    let fullcircle = (angle2 > angle1 + 359.999)\n    if (fullcircle) {\n      angle1 = 0\n      angle2 = 360\n    }\n    if (angle2 > (angle1 + angleEPS)) {\n      let points = []\n      if (!fullcircle) {\n        points.push(pcenter)\n      }\n      let numsteps = Math.round(resolution * (angle2 - angle1) / 360)\n      if (numsteps < 1) numsteps = 1\n      for (let step = 0; step <= numsteps; step++) {\n        let angle = angle1 + step / numsteps * (angle2 - angle1)\n        if (step === numsteps) angle = angle2 // prevent rounding errors\n        let point = pcenter.plus(Vector2D.fromAngleDegrees(angle).times(radius))\n        if ((!fullcircle) || (step > 0)) {\n          points.push(point)\n        }\n      }\n      let newcag = fromPointsNoCheck(points)\n      cags.push(newcag)\n    }\n  }\n  let result = new CAG()\n  result = result.union(cags)\n  return result\n}\n\n/**\n * Create the expanded shell of the solid:\n * All faces are extruded to get a thickness of 2*radius\n * Cylinders are constructed around every side\n * Spheres are placed on every vertex\n * unionWithThis: if true, the resulting solid will be united with 'this' solid;\n * the result is a true expansion of the solid\n * If false, returns only the shell\n * @param  {Float} radius\n * @param  {Integer} resolution\n * @param  {Boolean} unionWithThis\n */\nconst expandedShellOfCCSG = function (_csg, radius, resolution, unionWithThis) {\n  const CSG = require('../core/CSG') // FIXME: circular dependency ! CSG => this => CSG\n  const {fromPolygons} = require('../core/CSGFactories') // FIXME: circular dependency !\n  // const {sphere} = require('./primitives3d') // FIXME: circular dependency !\n  let csg = _csg.reTesselated()\n  let result\n  if (unionWithThis) {\n    result = csg\n  } else {\n    result = new CSG()\n  }\n\n  // first extrude all polygons:\n  csg.polygons.map(function (polygon) {\n    let extrudevector = polygon.plane.normal.unit().times(2 * radius)\n    let translatedpolygon = polygon.translate(extrudevector.times(-0.5))\n    let extrudedface = translatedpolygon.extrude(extrudevector)\n    result = result.unionSub(extrudedface, false, false)\n  })\n\n    // Make a list of all unique vertex pairs (i.e. all sides of the solid)\n    // For each vertex pair we collect the following:\n    //   v1: first coordinate\n    //   v2: second coordinate\n    //   planenormals: array of normal vectors of all planes touching this side\n  let vertexpairs = {} // map of 'vertex pair tag' to {v1, v2, planenormals}\n  csg.polygons.map(function (polygon) {\n    let numvertices = polygon.vertices.length\n    let prevvertex = polygon.vertices[numvertices - 1]\n    let prevvertextag = prevvertex.getTag()\n    for (let i = 0; i < numvertices; i++) {\n      let vertex = polygon.vertices[i]\n      let vertextag = vertex.getTag()\n      let vertextagpair\n      if (vertextag < prevvertextag) {\n        vertextagpair = vertextag + '-' + prevvertextag\n      } else {\n        vertextagpair = prevvertextag + '-' + vertextag\n      }\n      let obj\n      if (vertextagpair in vertexpairs) {\n        obj = vertexpairs[vertextagpair]\n      } else {\n        obj = {\n          v1: prevvertex,\n          v2: vertex,\n          planenormals: []\n        }\n        vertexpairs[vertextagpair] = obj\n      }\n      obj.planenormals.push(polygon.plane.normal)\n\n      prevvertextag = vertextag\n      prevvertex = vertex\n    }\n  })\n\n  // now construct a cylinder on every side\n  // The cylinder is always an approximation of a true cylinder: it will have <resolution> polygons\n  // around the sides. We will make sure though that the cylinder will have an edge at every\n  // face that touches this side. This ensures that we will get a smooth fill even\n  // if two edges are at, say, 10 degrees and the resolution is low.\n  // Note: the result is not retesselated yet but it really should be!\n  for (let vertextagpair in vertexpairs) {\n    let vertexpair = vertexpairs[vertextagpair]\n    let startpoint = vertexpair.v1.pos\n    let endpoint = vertexpair.v2.pos\n                // our x,y and z vectors:\n    let zbase = endpoint.minus(startpoint).unit()\n    let xbase = vertexpair.planenormals[0].unit()\n    let ybase = xbase.cross(zbase)\n\n      // make a list of angles that the cylinder should traverse:\n    let angles = []\n\n    // first of all equally spaced around the cylinder:\n    for (let i = 0; i < resolution; i++) {\n      angles.push(i * Math.PI * 2 / resolution)\n    }\n\n    // and also at every normal of all touching planes:\n    for (let i = 0, iMax = vertexpair.planenormals.length; i < iMax; i++) {\n      let planenormal = vertexpair.planenormals[i]\n      let si = ybase.dot(planenormal)\n      let co = xbase.dot(planenormal)\n      let angle = Math.atan2(si, co)\n\n      if (angle < 0) angle += Math.PI * 2\n      angles.push(angle)\n      angle = Math.atan2(-si, -co)\n      if (angle < 0) angle += Math.PI * 2\n      angles.push(angle)\n    }\n\n    // this will result in some duplicate angles but we will get rid of those later.\n    // Sort:\n    angles = angles.sort(fnNumberSort)\n\n    // Now construct the cylinder by traversing all angles:\n    let numangles = angles.length\n    let prevp1\n    let prevp2\n    let startfacevertices = []\n    let endfacevertices = []\n    let polygons = []\n    for (let i = -1; i < numangles; i++) {\n      let angle = angles[(i < 0) ? (i + numangles) : i]\n      let si = Math.sin(angle)\n      let co = Math.cos(angle)\n      let p = xbase.times(co * radius).plus(ybase.times(si * radius))\n      let p1 = startpoint.plus(p)\n      let p2 = endpoint.plus(p)\n      let skip = false\n      if (i >= 0) {\n        if (p1.distanceTo(prevp1) < EPS) {\n          skip = true\n        }\n      }\n      if (!skip) {\n        if (i >= 0) {\n          startfacevertices.push(new Vertex(p1))\n          endfacevertices.push(new Vertex(p2))\n          let polygonvertices = [\n            new Vertex(prevp2),\n            new Vertex(p2),\n            new Vertex(p1),\n            new Vertex(prevp1)\n          ]\n          let polygon = new Polygon(polygonvertices)\n          polygons.push(polygon)\n        }\n        prevp1 = p1\n        prevp2 = p2\n      }\n    }\n    endfacevertices.reverse()\n    polygons.push(new Polygon(startfacevertices))\n    polygons.push(new Polygon(endfacevertices))\n    let cylinder = fromPolygons(polygons)\n    result = result.unionSub(cylinder, false, false)\n  }\n\n        // make a list of all unique vertices\n        // For each vertex we also collect the list of normals of the planes touching the vertices\n  let vertexmap = {}\n  csg.polygons.map(function (polygon) {\n    polygon.vertices.map(function (vertex) {\n      let vertextag = vertex.getTag()\n      let obj\n      if (vertextag in vertexmap) {\n        obj = vertexmap[vertextag]\n      } else {\n        obj = {\n          pos: vertex.pos,\n          normals: []\n        }\n        vertexmap[vertextag] = obj\n      }\n      obj.normals.push(polygon.plane.normal)\n    })\n  })\n\n        // and build spheres at each vertex\n        // We will try to set the x and z axis to the normals of 2 planes\n        // This will ensure that our sphere tesselation somewhat matches 2 planes\n  for (let vertextag in vertexmap) {\n    let vertexobj = vertexmap[vertextag]\n            // use the first normal to be the x axis of our sphere:\n    let xaxis = vertexobj.normals[0].unit()\n            // and find a suitable z axis. We will use the normal which is most perpendicular to the x axis:\n    let bestzaxis = null\n    let bestzaxisorthogonality = 0\n    for (let i = 1; i < vertexobj.normals.length; i++) {\n      let normal = vertexobj.normals[i].unit()\n      let cross = xaxis.cross(normal)\n      let crosslength = cross.length()\n      if (crosslength > 0.05) {\n        if (crosslength > bestzaxisorthogonality) {\n          bestzaxisorthogonality = crosslength\n          bestzaxis = normal\n        }\n      }\n    }\n    if (!bestzaxis) {\n      bestzaxis = xaxis.randomNonParallelVector()\n    }\n    let yaxis = xaxis.cross(bestzaxis).unit()\n    let zaxis = yaxis.cross(xaxis)\n    let _sphere = CSG.sphere({\n      center: vertexobj.pos,\n      radius: radius,\n      resolution: resolution,\n      axes: [xaxis, yaxis, zaxis]\n    })\n    result = result.unionSub(_sphere, false, false)\n  }\n\n  return result\n}\n\nmodule.exports = {\n  expand,\n  contract,\n  expandedShellOfCAG,\n  expandedShellOfCCSG\n}\n","const {Connector} = require('./connectors')\nconst Vertex3D = require('./math/Vertex3')\nconst Vector2D = require('./math/Vector2')\nconst Vector3D = require('./math/Vector3')\nconst Polygon = require('./math/Polygon3')\n\nconst {fromPolygons} = require('./CSGFactories')\nconst {fromSides, fromFakeCSG} = require('./CAGFactories')\n\nconst canonicalize = require('./utils/canonicalize')\nconst retesselate = require('./utils/retesellate')\nconst {isCAGValid, isSelfIntersecting, hasPointInside} = require('./utils/cagValidation')\nconst {area, getBounds} = require('./utils/cagMeasurements')\n\n// all of these are good candidates for elimination in this scope, since they are part of a functional api\nconst {overCutInsideCorners} = require('../api/ops-cnc')\nconst {extrudeInOrthonormalBasis, extrudeInPlane, extrude, rotateExtrude} = require('../api/ops-extrusions')\nconst cagoutlinePaths = require('../api/cagOutlinePaths')\nconst center = require('../api/center')\nconst {expand, contract, expandedShellOfCAG} = require('../api/ops-expandContract')\n/**\n * Class CAG\n * Holds a solid area geometry like CSG but 2D.\n * Each area consists of a number of sides.\n * Each side is a line between 2 points.\n * @constructor\n */\nlet CAG = function () {\n  this.sides = []\n  this.isCanonicalized = false\n}\n\nCAG.prototype = {\n  union: function (cag) {\n    let cags\n    if (cag instanceof Array) {\n      cags = cag\n    } else {\n      cags = [cag]\n    }\n    let r = this._toCSGWall(-1, 1)\n    r = r.union(\n            cags.map(function (cag) {\n              return cag._toCSGWall(-1, 1).reTesselated()\n            }), false, false)\n    return fromFakeCSG(r).canonicalized()\n  },\n\n  subtract: function (cag) {\n    let cags\n    if (cag instanceof Array) {\n      cags = cag\n    } else {\n      cags = [cag]\n    }\n    let r = this._toCSGWall(-1, 1)\n    cags.map(function (cag) {\n      r = r.subtractSub(cag._toCSGWall(-1, 1), false, false)\n    })\n    r = r.reTesselated()\n    r = r.canonicalized()\n    r = fromFakeCSG(r)\n    r = r.canonicalized()\n    return r\n  },\n\n  intersect: function (cag) {\n    let cags\n    if (cag instanceof Array) {\n      cags = cag\n    } else {\n      cags = [cag]\n    }\n    let r = this._toCSGWall(-1, 1)\n    cags.map(function (cag) {\n      r = r.intersectSub(cag._toCSGWall(-1, 1), false, false)\n    })\n    r = r.reTesselated()\n    r = r.canonicalized()\n    r = fromFakeCSG(r)\n    r = r.canonicalized()\n    return r\n  },\n\n  transform: function (matrix4x4) {\n    let ismirror = matrix4x4.isMirroring()\n    let newsides = this.sides.map(function (side) {\n      return side.transform(matrix4x4)\n    })\n    let result = fromSides(newsides)\n    if (ismirror) {\n      result = result.flipped()\n    }\n    return result\n  },\n\n  flipped: function () {\n    let newsides = this.sides.map(function (side) {\n      return side.flipped()\n    })\n    newsides.reverse()\n    return fromSides(newsides)\n  },\n\n  // ALIAS !\n  center: function (axes) {\n    return center({axes: axes}, [this])\n  },\n\n  // ALIAS !\n  expandedShell: function (radius, resolution) {\n    return expandedShellOfCAG(this, radius, resolution)\n  },\n\n  // ALIAS !\n  expand: function (radius, resolution) {\n    return expand(this, radius, resolution)\n  },\n\n  contract: function (radius, resolution) {\n    return contract(this, radius, resolution)\n  },\n\n  // ALIAS !\n  area: function () {\n    return area(this)\n  },\n\n  // ALIAS !\n  getBounds: function () {\n    return getBounds(this)\n  },\n  // ALIAS !\n  isSelfIntersecting: function (debug) {\n    return isSelfIntersecting(this, debug)\n  },\n  // extrusion: all aliases to simple functions\n  extrudeInOrthonormalBasis: function (orthonormalbasis, depth, options) {\n    return extrudeInOrthonormalBasis(this, orthonormalbasis, depth, options)\n  },\n\n  // ALIAS !\n  extrudeInPlane: function (axis1, axis2, depth, options) {\n    return extrudeInPlane(this, axis1, axis2, depth, options)\n  },\n\n  // ALIAS !\n  extrude: function (options) {\n    return extrude(this, options)\n  },\n\n  // ALIAS !\n  rotateExtrude: function (options) { // FIXME options should be optional\n    return rotateExtrude(this, options)\n  },\n\n  // ALIAS !\n  check: function () {\n    return isCAGValid(this)\n  },\n\n  // ALIAS !\n  canonicalized: function () {\n    return canonicalize(this)\n  },\n\n  // ALIAS !\n  reTesselated: function () {\n    return retesselate(this)\n  },\n\n  // ALIAS !\n  getOutlinePaths: function () {\n    return cagoutlinePaths(this)\n  },\n\n  // ALIAS !\n  overCutInsideCorners: function (cutterradius) {\n    return overCutInsideCorners(this, cutterradius)\n  },\n\n  // ALIAS !\n  hasPointInside: function (point) {\n    return hasPointInside(this, point)\n  },\n\n  // All the toXXX functions\n  toString: function () {\n    let result = 'CAG (' + this.sides.length + ' sides):\\n'\n    this.sides.map(function (side) {\n      result += '  ' + side.toString() + '\\n'\n    })\n    return result\n  },\n\n  _toCSGWall: function (z0, z1) {\n    let polygons = this.sides.map(function (side) {\n      return side.toPolygon3D(z0, z1)\n    })\n    return fromPolygons(polygons)\n  },\n\n  _toVector3DPairs: function (m) {\n        // transform m\n    let pairs = this.sides.map(function (side) {\n      let p0 = side.vertex0.pos\n      let p1 = side.vertex1.pos\n      return [Vector3D.Create(p0.x, p0.y, 0),\n        Vector3D.Create(p1.x, p1.y, 0)]\n    })\n    if (typeof m !== 'undefined') {\n      pairs = pairs.map(function (pair) {\n        return pair.map(function (v) {\n          return v.transform(m)\n        })\n      })\n    }\n    return pairs\n  },\n\n  /*\n    * transform a cag into the polygons of a corresponding 3d plane, positioned per options\n    * Accepts a connector for plane positioning, or optionally\n    * single translation, axisVector, normalVector arguments\n    * (toConnector has precedence over single arguments if provided)\n    */\n  _toPlanePolygons: function (options) {\n    const defaults = {\n      flipped: false\n    }\n    options = Object.assign({}, defaults, options)\n    let {flipped} = options\n    // reference connector for transformation\n    let origin = [0, 0, 0]\n    let defaultAxis = [0, 0, 1]\n    let defaultNormal = [0, 1, 0]\n    let thisConnector = new Connector(origin, defaultAxis, defaultNormal)\n    // translated connector per options\n    let translation = options.translation || origin\n    let axisVector = options.axisVector || defaultAxis\n    let normalVector = options.normalVector || defaultNormal\n    // will override above if options has toConnector\n    let toConnector = options.toConnector ||\n            new Connector(translation, axisVector, normalVector)\n    // resulting transform\n    let m = thisConnector.getTransformationTo(toConnector, false, 0)\n    // create plane as a (partial non-closed) CSG in XY plane\n    let bounds = this.getBounds()\n    bounds[0] = bounds[0].minus(new Vector2D(1, 1))\n    bounds[1] = bounds[1].plus(new Vector2D(1, 1))\n    let csgshell = this._toCSGWall(-1, 1)\n    let csgplane = fromPolygons([new Polygon([\n      new Vertex3D(new Vector3D(bounds[0].x, bounds[0].y, 0)),\n      new Vertex3D(new Vector3D(bounds[1].x, bounds[0].y, 0)),\n      new Vertex3D(new Vector3D(bounds[1].x, bounds[1].y, 0)),\n      new Vertex3D(new Vector3D(bounds[0].x, bounds[1].y, 0))\n    ])])\n    if (flipped) {\n      csgplane = csgplane.invert()\n    }\n    // intersectSub -> prevent premature retesselate/canonicalize\n    csgplane = csgplane.intersectSub(csgshell)\n    // only keep the polygons in the z plane:\n    let polys = csgplane.polygons.filter(function (polygon) {\n      return Math.abs(polygon.plane.normal.z) > 0.99\n    })\n    // finally, position the plane per passed transformations\n    return polys.map(function (poly) {\n      return poly.transform(m)\n    })\n  },\n\n  /*\n    * given 2 connectors, this returns all polygons of a \"wall\" between 2\n    * copies of this cag, positioned in 3d space as \"bottom\" and\n    * \"top\" plane per connectors toConnector1, and toConnector2, respectively\n    */\n  _toWallPolygons: function (options) {\n        // normals are going to be correct as long as toConn2.point - toConn1.point\n        // points into cag normal direction (check in caller)\n        // arguments: options.toConnector1, options.toConnector2, options.cag\n        //     walls go from toConnector1 to toConnector2\n        //     optionally, target cag to point to - cag needs to have same number of sides as this!\n    let origin = [0, 0, 0]\n    let defaultAxis = [0, 0, 1]\n    let defaultNormal = [0, 1, 0]\n    let thisConnector = new Connector(origin, defaultAxis, defaultNormal)\n        // arguments:\n    let toConnector1 = options.toConnector1\n        // let toConnector2 = new Connector([0, 0, -30], defaultAxis, defaultNormal);\n    let toConnector2 = options.toConnector2\n    if (!(toConnector1 instanceof Connector && toConnector2 instanceof Connector)) {\n      throw new Error('could not parse Connector arguments toConnector1 or toConnector2')\n    }\n    if (options.cag) {\n      if (options.cag.sides.length !== this.sides.length) {\n        throw new Error('target cag needs same sides count as start cag')\n      }\n    }\n        // target cag is same as this unless specified\n    let toCag = options.cag || this\n    let m1 = thisConnector.getTransformationTo(toConnector1, false, 0)\n    let m2 = thisConnector.getTransformationTo(toConnector2, false, 0)\n    let vps1 = this._toVector3DPairs(m1)\n    let vps2 = toCag._toVector3DPairs(m2)\n\n    let polygons = []\n    vps1.forEach(function (vp1, i) {\n      polygons.push(new Polygon([\n        new Vertex3D(vps2[i][1]), new Vertex3D(vps2[i][0]), new Vertex3D(vp1[0])]))\n      polygons.push(new Polygon([\n        new Vertex3D(vps2[i][1]), new Vertex3D(vp1[0]), new Vertex3D(vp1[1])]))\n    })\n    return polygons\n  },\n\n    /**\n     * Convert to a list of points.\n     * @return {points[]} list of points in 2D space\n     */\n  toPoints: function () {\n    let points = this.sides.map(function (side) {\n      let v0 = side.vertex0\n      // let v1 = side.vertex1\n      return v0.pos\n    })\n    // due to the logic of fromPoints()\n    // move the first point to the last\n    if (points.length > 0) {\n      points.push(points.shift())\n    }\n    return points\n  },\n\n    /** Convert to compact binary form.\n   * See fromCompactBinary.\n   * @return {CompactBinary}\n   */\n  toCompactBinary: function () {\n    let cag = this.canonicalized()\n    let numsides = cag.sides.length\n    let vertexmap = {}\n    let vertices = []\n    let numvertices = 0\n    let sideVertexIndices = new Uint32Array(2 * numsides)\n    let sidevertexindicesindex = 0\n    cag.sides.map(function (side) {\n      [side.vertex0, side.vertex1].map(function (v) {\n        let vertextag = v.getTag()\n        let vertexindex\n        if (!(vertextag in vertexmap)) {\n          vertexindex = numvertices++\n          vertexmap[vertextag] = vertexindex\n          vertices.push(v)\n        } else {\n          vertexindex = vertexmap[vertextag]\n        }\n        sideVertexIndices[sidevertexindicesindex++] = vertexindex\n      })\n    })\n    let vertexData = new Float64Array(numvertices * 2)\n    let verticesArrayIndex = 0\n    vertices.map(function (v) {\n      let pos = v.pos\n      vertexData[verticesArrayIndex++] = pos._x\n      vertexData[verticesArrayIndex++] = pos._y\n    })\n    let result = {\n      'class': 'CAG',\n      sideVertexIndices: sideVertexIndices,\n      vertexData: vertexData\n    }\n    return result\n  }\n}\n\nmodule.exports = CAG\n","const CAG = require('../CAG')\nconst {fromPoints} = require('../CAGFactories')\n\n/*\n2D polygons are now supported through the CAG class.\nWith many improvements (see documentation):\n  - shapes do no longer have to be convex\n  - union/intersect/subtract is supported\n  - expand / contract are supported\n\nBut we'll keep CSG.Polygon2D as a stub for backwards compatibility\n*/\nfunction Polygon2D (points) {\n  const cag = fromPoints(points)\n  this.sides = cag.sides\n}\n\nPolygon2D.prototype = CAG.prototype\n\nmodule.exports = Polygon2D\n","const Vector3D = require('./math/Vector3')\nconst Vertex = require('./math/Vertex3')\nconst Plane = require('./math/Plane')\nconst Polygon2D = require('./math/Polygon2')\nconst Polygon3D = require('./math/Polygon3')\n\n/** Construct a CSG solid from a list of `Polygon` instances.\n * @param {Polygon[]} polygons - list of polygons\n * @returns {CSG} new CSG object\n */\nconst fromPolygons = function (polygons) {\n  const CSG = require('./CSG')\n  let csg = new CSG()\n  csg.polygons = polygons\n  csg.isCanonicalized = false\n  csg.isRetesselated = false\n  return csg\n}\n\n/** Construct a CSG solid from a list of pre-generated slices.\n * See Polygon.prototype.solidFromSlices() for details.\n * @param {Object} options - options passed to solidFromSlices()\n * @returns {CSG} new CSG object\n */\nfunction fromSlices (options) {\n  return Polygon2D.createFromPoints([\n        [0, 0, 0],\n        [1, 0, 0],\n        [1, 1, 0],\n        [0, 1, 0]\n  ]).solidFromSlices(options)\n}\n\n/** Reconstruct a CSG solid from an object with identical property names.\n * @param {Object} obj - anonymous object, typically from JSON\n * @returns {CSG} new CSG object\n */\nfunction fromObject (obj) {\n  let polygons = obj.polygons.map(function (p) {\n    return Polygon3D.fromObject(p)\n  })\n  let csg = fromPolygons(polygons)\n  csg.isCanonicalized = obj.isCanonicalized\n  csg.isRetesselated = obj.isRetesselated\n  return csg\n}\n\n/** Reconstruct a CSG from the output of toCompactBinary().\n * @param {CompactBinary} bin - see toCompactBinary().\n * @returns {CSG} new CSG object\n */\nfunction fromCompactBinary (bin) {\n  if (bin['class'] !== 'CSG') throw new Error('Not a CSG')\n  let planes = []\n  let planeData = bin.planeData\n  let numplanes = planeData.length / 4\n  let arrayindex = 0\n  let x, y, z, w, normal, plane\n  for (let planeindex = 0; planeindex < numplanes; planeindex++) {\n    x = planeData[arrayindex++]\n    y = planeData[arrayindex++]\n    z = planeData[arrayindex++]\n    w = planeData[arrayindex++]\n    normal = Vector3D.Create(x, y, z)\n    plane = new Plane(normal, w)\n    planes.push(plane)\n  }\n\n  let vertices = []\n  const vertexData = bin.vertexData\n  const numvertices = vertexData.length / 3\n  let pos\n  let vertex\n  arrayindex = 0\n  for (let vertexindex = 0; vertexindex < numvertices; vertexindex++) {\n    x = vertexData[arrayindex++]\n    y = vertexData[arrayindex++]\n    z = vertexData[arrayindex++]\n    pos = Vector3D.Create(x, y, z)\n    vertex = new Vertex(pos)\n    vertices.push(vertex)\n  }\n\n  let shareds = bin.shared.map(function (shared) {\n    return Polygon3D.Shared.fromObject(shared)\n  })\n\n  let polygons = []\n  let numpolygons = bin.numPolygons\n  let numVerticesPerPolygon = bin.numVerticesPerPolygon\n  let polygonVertices = bin.polygonVertices\n  let polygonPlaneIndexes = bin.polygonPlaneIndexes\n  let polygonSharedIndexes = bin.polygonSharedIndexes\n  let numpolygonvertices\n  let polygonvertices\n  let shared\n  let polygon // already defined plane,\n  arrayindex = 0\n  for (let polygonindex = 0; polygonindex < numpolygons; polygonindex++) {\n    numpolygonvertices = numVerticesPerPolygon[polygonindex]\n    polygonvertices = []\n    for (let i = 0; i < numpolygonvertices; i++) {\n      polygonvertices.push(vertices[polygonVertices[arrayindex++]])\n    }\n    plane = planes[polygonPlaneIndexes[polygonindex]]\n    shared = shareds[polygonSharedIndexes[polygonindex]]\n    polygon = new Polygon3D(polygonvertices, shared, plane)\n    polygons.push(polygon)\n  }\n  let csg = fromPolygons(polygons)\n  csg.isCanonicalized = true\n  csg.isRetesselated = true\n  return csg\n}\n\nmodule.exports = {\n  fromPolygons,\n  fromSlices,\n  fromObject,\n  fromCompactBinary\n}\n","const Polygon = require('../core/math/Polygon3')\nconst {fromPolygons} = require('../core/CSGFactories')\nconst {fnSortByIndex} = require('../core/utils')\n\n// FIXME: WHY is this for 3D polygons and not for 2D shapes ?\n/**\n * Creates solid from slices (Polygon) by generating walls\n * @param {Object} options Solid generating options\n *  - numslices {Number} Number of slices to be generated\n *  - callback(t, slice) {Function} Callback function generating slices.\n *          arguments: t = [0..1], slice = [0..numslices - 1]\n *          return: Polygon or null to skip\n *  - loop {Boolean} no flats, only walls, it's used to generate solids like a tor\n */\nconst solidFromSlices = function (polygon, options) {\n  let polygons = []\n  let csg = null\n  let prev = null\n  let bottom = null\n  let top = null\n  let numSlices = 2\n  let bLoop = false\n  let fnCallback\n  let flipped = null\n\n  if (options) {\n    bLoop = Boolean(options['loop'])\n\n    if (options.numslices) { numSlices = options.numslices }\n\n    if (options.callback) {\n      fnCallback = options.callback\n    }\n  }\n  if (!fnCallback) {\n    let square = Polygon.createFromPoints([\n                  [0, 0, 0],\n                  [1, 0, 0],\n                  [1, 1, 0],\n                  [0, 1, 0]\n    ])\n    fnCallback = function (t, slice) {\n      return t === 0 || t === 1 ? square.translate([0, 0, t]) : null\n    }\n  }\n  for (let i = 0, iMax = numSlices - 1; i <= iMax; i++) {\n    csg = fnCallback.call(polygon, i / iMax, i)\n    if (csg) {\n      if (!(csg instanceof Polygon)) {\n        throw new Error('Polygon.solidFromSlices callback error: Polygon expected')\n      }\n      csg.checkIfConvex()\n\n      if (prev) { // generate walls\n        if (flipped === null) { // not generated yet\n          flipped = prev.plane.signedDistanceToPoint(csg.vertices[0].pos) < 0\n        }\n        _addWalls(polygons, prev, csg, flipped)\n      } else { // the first - will be a bottom\n        bottom = csg\n      }\n      prev = csg\n    } // callback can return null to skip that slice\n  }\n  top = csg\n\n  if (bLoop) {\n    let bSameTopBottom = bottom.vertices.length === top.vertices.length &&\n                  bottom.vertices.every(function (v, index) {\n                    return v.pos.equals(top.vertices[index].pos)\n                  })\n    // if top and bottom are not the same -\n    // generate walls between them\n    if (!bSameTopBottom) {\n      _addWalls(polygons, top, bottom, flipped)\n    } // else - already generated\n  } else {\n    // save top and bottom\n    // TODO: flip if necessary\n    polygons.unshift(flipped ? bottom : bottom.flipped())\n    polygons.push(flipped ? top.flipped() : top)\n  }\n  return fromPolygons(polygons)\n}\n\n/**\n * @param walls Array of wall polygons\n * @param bottom Bottom polygon\n * @param top Top polygon\n */\nconst _addWalls = function (walls, bottom, top, bFlipped) {\n  let bottomPoints = bottom.vertices.slice(0) // make a copy\n  let topPoints = top.vertices.slice(0) // make a copy\n  let color = top.shared || null\n\n        // check if bottom perimeter is closed\n  if (!bottomPoints[0].pos.equals(bottomPoints[bottomPoints.length - 1].pos)) {\n    bottomPoints.push(bottomPoints[0])\n  }\n\n        // check if top perimeter is closed\n  if (!topPoints[0].pos.equals(topPoints[topPoints.length - 1].pos)) {\n    topPoints.push(topPoints[0])\n  }\n  if (bFlipped) {\n    bottomPoints = bottomPoints.reverse()\n    topPoints = topPoints.reverse()\n  }\n\n  let iTopLen = topPoints.length - 1\n  let iBotLen = bottomPoints.length - 1\n  let iExtra = iTopLen - iBotLen// how many extra triangles we need\n  let bMoreTops = iExtra > 0\n  let bMoreBottoms = iExtra < 0\n\n  let aMin = [] // indexes to start extra triangles (polygon with minimal square)\n        // init - we need exactly /iExtra/ small triangles\n  for (let i = Math.abs(iExtra); i > 0; i--) {\n    aMin.push({\n      len: Infinity,\n      index: -1\n    })\n  }\n\n  let len\n  if (bMoreBottoms) {\n    for (let i = 0; i < iBotLen; i++) {\n      len = bottomPoints[i].pos.distanceToSquared(bottomPoints[i + 1].pos)\n                // find the element to replace\n      for (let j = aMin.length - 1; j >= 0; j--) {\n        if (aMin[j].len > len) {\n          aMin[j].len = len\n          aMin.index = j\n          break\n        }\n      } // for\n    }\n  } else if (bMoreTops) {\n    for (let i = 0; i < iTopLen; i++) {\n      len = topPoints[i].pos.distanceToSquared(topPoints[i + 1].pos)\n                // find the element to replace\n      for (let j = aMin.length - 1; j >= 0; j--) {\n        if (aMin[j].len > len) {\n          aMin[j].len = len\n          aMin.index = j\n          break\n        }\n      } // for\n    }\n  } // if\n  // sort by index\n  aMin.sort(fnSortByIndex)\n  let getTriangle = function addWallsPutTriangle (pointA, pointB, pointC, color) {\n    return new Polygon([pointA, pointB, pointC], color)\n  // return bFlipped ? triangle.flipped() : triangle;\n  }\n\n  let bpoint = bottomPoints[0]\n  let tpoint = topPoints[0]\n  let secondPoint\n  let nBotFacet\n  let nTopFacet // length of triangle facet side\n  for (let iB = 0, iT = 0, iMax = iTopLen + iBotLen; iB + iT < iMax;) {\n    if (aMin.length) {\n      if (bMoreTops && iT === aMin[0].index) { // one vertex is on the bottom, 2 - on the top\n        secondPoint = topPoints[++iT]\n                    // console.log('<<< extra top: ' + secondPoint + ', ' + tpoint + ', bottom: ' + bpoint);\n        walls.push(getTriangle(\n                        secondPoint, tpoint, bpoint, color\n                    ))\n        tpoint = secondPoint\n        aMin.shift()\n        continue\n      } else if (bMoreBottoms && iB === aMin[0].index) {\n        secondPoint = bottomPoints[++iB]\n        walls.push(getTriangle(\n                        tpoint, bpoint, secondPoint, color\n                    ))\n        bpoint = secondPoint\n        aMin.shift()\n        continue\n      }\n    }\n            // choose the shortest path\n    if (iB < iBotLen) { // one vertex is on the top, 2 - on the bottom\n      nBotFacet = tpoint.pos.distanceToSquared(bottomPoints[iB + 1].pos)\n    } else {\n      nBotFacet = Infinity\n    }\n    if (iT < iTopLen) { // one vertex is on the bottom, 2 - on the top\n      nTopFacet = bpoint.pos.distanceToSquared(topPoints[iT + 1].pos)\n    } else {\n      nTopFacet = Infinity\n    }\n    if (nBotFacet <= nTopFacet) {\n      secondPoint = bottomPoints[++iB]\n      walls.push(getTriangle(\n                    tpoint, bpoint, secondPoint, color\n                ))\n      bpoint = secondPoint\n    } else if (iT < iTopLen) { // nTopFacet < Infinity\n      secondPoint = topPoints[++iT]\n                // console.log('<<< top: ' + secondPoint + ', ' + tpoint + ', bottom: ' + bpoint);\n      walls.push(getTriangle(\n                    secondPoint, tpoint, bpoint, color\n                ))\n      tpoint = secondPoint\n    };\n  }\n  return walls\n}\n\nmodule.exports = solidFromSlices\n","const Vector3D = require('./Vector3')\nconst Vertex = require('./Vertex3')\nconst Matrix4x4 = require('./Matrix4')\nconst {_CSGDEBUG, EPS, getTag, areaEPS} = require('../constants')\n\n/** Class Polygon\n * Represents a convex polygon. The vertices used to initialize a polygon must\n *   be coplanar and form a convex loop. They do not have to be `Vertex`\n *   instances but they must behave similarly (duck typing can be used for\n *   customization).\n * <br>\n * Each convex polygon has a `shared` property, which is shared between all\n *   polygons that are clones of each other or were split from the same polygon.\n *   This can be used to define per-polygon properties (such as surface color).\n * <br>\n * The plane of the polygon is calculated from the vertex coordinates if not provided.\n *   The plane can alternatively be passed as the third argument to avoid calculations.\n *\n * @constructor\n * @param {Vertex[]} vertices - list of vertices\n * @param {Polygon.Shared} [shared=defaultShared] - shared property to apply\n * @param {Plane} [plane] - plane of the polygon\n *\n * @example\n * const vertices = [\n *   new CSG.Vertex(new CSG.Vector3D([0, 0, 0])),\n *   new CSG.Vertex(new CSG.Vector3D([0, 10, 0])),\n *   new CSG.Vertex(new CSG.Vector3D([0, 10, 10]))\n * ]\n * let observed = new Polygon(vertices)\n */\nlet Polygon = function (vertices, shared, plane) {\n  this.vertices = vertices\n  if (!shared) shared = Polygon.defaultShared\n  this.shared = shared\n    // let numvertices = vertices.length;\n\n  if (arguments.length >= 3) {\n    this.plane = plane\n  } else {\n    const Plane = require('./Plane') // FIXME: circular dependencies\n    this.plane = Plane.fromVector3Ds(vertices[0].pos, vertices[1].pos, vertices[2].pos)\n  }\n\n  if (_CSGDEBUG) {\n    if (!this.checkIfConvex()) {\n      throw new Error('Not convex!')\n    }\n  }\n}\n\nPolygon.prototype = {\n  /** Check whether the polygon is convex. (it should be, otherwise we will get unexpected results)\n   * @returns {boolean}\n   */\n  checkIfConvex: function () {\n    return Polygon.verticesConvex(this.vertices, this.plane.normal)\n  },\n\n  // FIXME what? why does this return this, and not a new polygon?\n  // FIXME is this used?\n  setColor: function (args) {\n    let newshared = Polygon.Shared.fromColor.apply(this, arguments)\n    this.shared = newshared\n    return this\n  },\n\n  getSignedVolume: function () {\n    let signedVolume = 0\n    for (let i = 0; i < this.vertices.length - 2; i++) {\n      signedVolume += this.vertices[0].pos.dot(this.vertices[i + 1].pos\n                .cross(this.vertices[i + 2].pos))\n    }\n    signedVolume /= 6\n    return signedVolume\n  },\n\n    // Note: could calculate vectors only once to speed up\n  getArea: function () {\n    let polygonArea = 0\n    for (let i = 0; i < this.vertices.length - 2; i++) {\n      polygonArea += this.vertices[i + 1].pos.minus(this.vertices[0].pos)\n                .cross(this.vertices[i + 2].pos.minus(this.vertices[i + 1].pos)).length()\n    }\n    polygonArea /= 2\n    return polygonArea\n  },\n\n    // accepts array of features to calculate\n    // returns array of results\n  getTetraFeatures: function (features) {\n    let result = []\n    features.forEach(function (feature) {\n      if (feature === 'volume') {\n        result.push(this.getSignedVolume())\n      } else if (feature === 'area') {\n        result.push(this.getArea())\n      }\n    }, this)\n    return result\n  },\n\n    // Extrude a polygon into the direction offsetvector\n    // Returns a CSG object\n  extrude: function (offsetvector) {\n    const {fromPolygons} = require('../CSGFactories') // because of circular dependencies\n\n    let newpolygons = []\n\n    let polygon1 = this\n    let direction = polygon1.plane.normal.dot(offsetvector)\n    if (direction > 0) {\n      polygon1 = polygon1.flipped()\n    }\n    newpolygons.push(polygon1)\n    let polygon2 = polygon1.translate(offsetvector)\n    let numvertices = this.vertices.length\n    for (let i = 0; i < numvertices; i++) {\n      let sidefacepoints = []\n      let nexti = (i < (numvertices - 1)) ? i + 1 : 0\n      sidefacepoints.push(polygon1.vertices[i].pos)\n      sidefacepoints.push(polygon2.vertices[i].pos)\n      sidefacepoints.push(polygon2.vertices[nexti].pos)\n      sidefacepoints.push(polygon1.vertices[nexti].pos)\n      let sidefacepolygon = Polygon.createFromPoints(sidefacepoints, this.shared)\n      newpolygons.push(sidefacepolygon)\n    }\n    polygon2 = polygon2.flipped()\n    newpolygons.push(polygon2)\n    return fromPolygons(newpolygons)\n  },\n\n  translate: function (offset) {\n    return this.transform(Matrix4x4.translation(offset))\n  },\n\n    // returns an array with a Vector3D (center point) and a radius\n  boundingSphere: function () {\n    if (!this.cachedBoundingSphere) {\n      let box = this.boundingBox()\n      let middle = box[0].plus(box[1]).times(0.5)\n      let radius3 = box[1].minus(middle)\n      let radius = radius3.length()\n      this.cachedBoundingSphere = [middle, radius]\n    }\n    return this.cachedBoundingSphere\n  },\n\n    // returns an array of two Vector3Ds (minimum coordinates and maximum coordinates)\n  boundingBox: function () {\n    if (!this.cachedBoundingBox) {\n      let minpoint, maxpoint\n      let vertices = this.vertices\n      let numvertices = vertices.length\n      if (numvertices === 0) {\n        minpoint = new Vector3D(0, 0, 0)\n      } else {\n        minpoint = vertices[0].pos\n      }\n      maxpoint = minpoint\n      for (let i = 1; i < numvertices; i++) {\n        let point = vertices[i].pos\n        minpoint = minpoint.min(point)\n        maxpoint = maxpoint.max(point)\n      }\n      this.cachedBoundingBox = [minpoint, maxpoint]\n    }\n    return this.cachedBoundingBox\n  },\n\n  flipped: function () {\n    let newvertices = this.vertices.map(function (v) {\n      return v.flipped()\n    })\n    newvertices.reverse()\n    let newplane = this.plane.flipped()\n    return new Polygon(newvertices, this.shared, newplane)\n  },\n\n    // Affine transformation of polygon. Returns a new Polygon\n  transform: function (matrix4x4) {\n    let newvertices = this.vertices.map(function (v) {\n      return v.transform(matrix4x4)\n    })\n    let newplane = this.plane.transform(matrix4x4)\n    if (matrix4x4.isMirroring()) {\n            // need to reverse the vertex order\n            // in order to preserve the inside/outside orientation:\n      newvertices.reverse()\n    }\n    return new Polygon(newvertices, this.shared, newplane)\n  },\n\n  toString: function () {\n    let result = 'Polygon plane: ' + this.plane.toString() + '\\n'\n    this.vertices.map(function (vertex) {\n      result += '  ' + vertex.toString() + '\\n'\n    })\n    return result\n  },\n\n    // project the 3D polygon onto a plane\n  projectToOrthoNormalBasis: function (orthobasis) {\n    const CAG = require('../CAG')\n    const {fromPointsNoCheck} = require('../CAGFactories') // circular dependencies\n    let points2d = this.vertices.map(function (vertex) {\n      return orthobasis.to2D(vertex.pos)\n    })\n\n    let result = fromPointsNoCheck(points2d)\n    let area = result.area()\n    if (Math.abs(area) < areaEPS) {\n      // the polygon was perpendicular to the orthnormal plane. The resulting 2D polygon would be degenerate\n      // return an empty area instead:\n      result = new CAG()\n    } else if (area < 0) {\n      result = result.flipped()\n    }\n    return result\n  },\n\n  // ALIAS ONLY!!\n  solidFromSlices: function (options) {\n    const solidFromSlices = require('../../api/solidFromSlices')\n    return solidFromSlices(this, options)\n  }\n\n}\n\n// create from an untyped object with identical property names:\nPolygon.fromObject = function (obj) {\n  const Plane = require('./Plane') // FIXME: circular dependencies\n  let vertices = obj.vertices.map(function (v) {\n    return Vertex.fromObject(v)\n  })\n  let shared = Polygon.Shared.fromObject(obj.shared)\n  let plane = Plane.fromObject(obj.plane)\n  return new Polygon(vertices, shared, plane)\n}\n\n/** Create a polygon from the given points.\n *\n * @param {Array[]} points - list of points\n * @param {Polygon.Shared} [shared=defaultShared] - shared property to apply\n * @param {Plane} [plane] - plane of the polygon\n *\n * @example\n * const points = [\n *   [0,  0, 0],\n *   [0, 10, 0],\n *   [0, 10, 10]\n * ]\n * let observed = CSG.Polygon.createFromPoints(points)\n */\nPolygon.createFromPoints = function (points, shared, plane) {\n  // FIXME : this circular dependency does not work !\n  // const {fromPoints} = require('./polygon3Factories')\n  // return fromPoints(points, shared, plane)\n  let vertices = []\n  points.map(function (p) {\n    let vec = new Vector3D(p)\n    let vertex = new Vertex(vec)\n    vertices.push(vertex)\n  })\n  let polygon\n  if (arguments.length < 3) {\n    polygon = new Polygon(vertices, shared)\n  } else {\n    polygon = new Polygon(vertices, shared, plane)\n  }\n  return polygon\n}\n\nPolygon.verticesConvex = function (vertices, planenormal) {\n  let numvertices = vertices.length\n  if (numvertices > 2) {\n    let prevprevpos = vertices[numvertices - 2].pos\n    let prevpos = vertices[numvertices - 1].pos\n    for (let i = 0; i < numvertices; i++) {\n      let pos = vertices[i].pos\n      if (!Polygon.isConvexPoint(prevprevpos, prevpos, pos, planenormal)) {\n        return false\n      }\n      prevprevpos = prevpos\n      prevpos = pos\n    }\n  }\n  return true\n}\n\n// calculate whether three points form a convex corner\n//  prevpoint, point, nextpoint: the 3 coordinates (Vector3D instances)\n//  normal: the normal vector of the plane\nPolygon.isConvexPoint = function (prevpoint, point, nextpoint, normal) {\n  let crossproduct = point.minus(prevpoint).cross(nextpoint.minus(point))\n  let crossdotnormal = crossproduct.dot(normal)\n  return (crossdotnormal >= 0)\n}\n\nPolygon.isStrictlyConvexPoint = function (prevpoint, point, nextpoint, normal) {\n  let crossproduct = point.minus(prevpoint).cross(nextpoint.minus(point))\n  let crossdotnormal = crossproduct.dot(normal)\n  return (crossdotnormal >= EPS)\n}\n\n/** Class Polygon.Shared\n * Holds the shared properties for each polygon (Currently only color).\n * @constructor\n * @param {Array[]} color - array containing RGBA values, or null\n *\n * @example\n *   let shared = new CSG.Polygon.Shared([0, 0, 0, 1])\n */\nPolygon.Shared = function (color) {\n  if (color !== null && color !== undefined) {\n    if (color.length !== 4) {\n      throw new Error('Expecting 4 element array')\n    }\n  }\n  this.color = color\n}\n\nPolygon.Shared.fromObject = function (obj) {\n  return new Polygon.Shared(obj.color)\n}\n\n/** Create Polygon.Shared from color values.\n * @param {number} r - value of RED component\n * @param {number} g - value of GREEN component\n * @param {number} b - value of BLUE component\n * @param {number} [a] - value of ALPHA component\n * @param {Array[]} [color] - OR array containing RGB values (optional Alpha)\n *\n * @example\n * let s1 = Polygon.Shared.fromColor(0,0,0)\n * let s2 = Polygon.Shared.fromColor([0,0,0,1])\n */\nPolygon.Shared.fromColor = function (args) {\n  let color\n  if (arguments.length === 1) {\n    color = arguments[0].slice() // make deep copy\n  } else {\n    color = []\n    for (let i = 0; i < arguments.length; i++) {\n      color.push(arguments[i])\n    }\n  }\n  if (color.length === 3) {\n    color.push(1)\n  } else if (color.length !== 4) {\n    throw new Error('setColor expects either an array with 3 or 4 elements, or 3 or 4 parameters.')\n  }\n  return new Polygon.Shared(color)\n}\n\nPolygon.Shared.prototype = {\n  getTag: function () {\n    let result = this.tag\n    if (!result) {\n      result = getTag()\n      this.tag = result\n    }\n    return result\n  },\n    // get a string uniquely identifying this object\n  getHash: function () {\n    if (!this.color) return 'null'\n    return this.color.join('/')\n  }\n}\n\nPolygon.defaultShared = new Polygon.Shared(null)\n\nmodule.exports = Polygon\n","const {_CSGDEBUG, EPS} = require('./constants')\nconst Vertex = require('./math/Vertex3')\nconst Polygon = require('./math/Polygon3')\n\n// Returns object:\n// .type:\n//   0: coplanar-front\n//   1: coplanar-back\n//   2: front\n//   3: back\n//   4: spanning\n// In case the polygon is spanning, returns:\n// .front: a Polygon of the front part\n// .back: a Polygon of the back part\nfunction splitPolygonByPlane (plane, polygon) {\n  let result = {\n    type: null,\n    front: null,\n    back: null\n  }\n      // cache in local lets (speedup):\n  let planenormal = plane.normal\n  let vertices = polygon.vertices\n  let numvertices = vertices.length\n  if (polygon.plane.equals(plane)) {\n    result.type = 0\n  } else {\n    let thisw = plane.w\n    let hasfront = false\n    let hasback = false\n    let vertexIsBack = []\n    let MINEPS = -EPS\n    for (let i = 0; i < numvertices; i++) {\n      let t = planenormal.dot(vertices[i].pos) - thisw\n      let isback = (t < 0)\n      vertexIsBack.push(isback)\n      if (t > EPS) hasfront = true\n      if (t < MINEPS) hasback = true\n    }\n    if ((!hasfront) && (!hasback)) {\n              // all points coplanar\n      let t = planenormal.dot(polygon.plane.normal)\n      result.type = (t >= 0) ? 0 : 1\n    } else if (!hasback) {\n      result.type = 2\n    } else if (!hasfront) {\n      result.type = 3\n    } else {\n              // spanning\n      result.type = 4\n      let frontvertices = []\n      let backvertices = []\n      let isback = vertexIsBack[0]\n      for (let vertexindex = 0; vertexindex < numvertices; vertexindex++) {\n        let vertex = vertices[vertexindex]\n        let nextvertexindex = vertexindex + 1\n        if (nextvertexindex >= numvertices) nextvertexindex = 0\n        let nextisback = vertexIsBack[nextvertexindex]\n        if (isback === nextisback) {\n                      // line segment is on one side of the plane:\n          if (isback) {\n            backvertices.push(vertex)\n          } else {\n            frontvertices.push(vertex)\n          }\n        } else {\n                      // line segment intersects plane:\n          let point = vertex.pos\n          let nextpoint = vertices[nextvertexindex].pos\n          let intersectionpoint = plane.splitLineBetweenPoints(point, nextpoint)\n          let intersectionvertex = new Vertex(intersectionpoint)\n          if (isback) {\n            backvertices.push(vertex)\n            backvertices.push(intersectionvertex)\n            frontvertices.push(intersectionvertex)\n          } else {\n            frontvertices.push(vertex)\n            frontvertices.push(intersectionvertex)\n            backvertices.push(intersectionvertex)\n          }\n        }\n        isback = nextisback\n      } // for vertexindex\n              // remove duplicate vertices:\n      let EPS_SQUARED = EPS * EPS\n      if (backvertices.length >= 3) {\n        let prevvertex = backvertices[backvertices.length - 1]\n        for (let vertexindex = 0; vertexindex < backvertices.length; vertexindex++) {\n          let vertex = backvertices[vertexindex]\n          if (vertex.pos.distanceToSquared(prevvertex.pos) < EPS_SQUARED) {\n            backvertices.splice(vertexindex, 1)\n            vertexindex--\n          }\n          prevvertex = vertex\n        }\n      }\n      if (frontvertices.length >= 3) {\n        let prevvertex = frontvertices[frontvertices.length - 1]\n        for (let vertexindex = 0; vertexindex < frontvertices.length; vertexindex++) {\n          let vertex = frontvertices[vertexindex]\n          if (vertex.pos.distanceToSquared(prevvertex.pos) < EPS_SQUARED) {\n            frontvertices.splice(vertexindex, 1)\n            vertexindex--\n          }\n          prevvertex = vertex\n        }\n      }\n      if (frontvertices.length >= 3) {\n        result.front = new Polygon(frontvertices, polygon.shared, polygon.plane)\n      }\n      if (backvertices.length >= 3) {\n        result.back = new Polygon(backvertices, polygon.shared, polygon.plane)\n      }\n    }\n  }\n  return result\n}\n\n// # class PolygonTreeNode\n// This class manages hierarchical splits of polygons\n// At the top is a root node which doesn hold a polygon, only child PolygonTreeNodes\n// Below that are zero or more 'top' nodes; each holds a polygon. The polygons can be in different planes\n// splitByPlane() splits a node by a plane. If the plane intersects the polygon, two new child nodes\n// are created holding the splitted polygon.\n// getPolygons() retrieves the polygon from the tree. If for PolygonTreeNode the polygon is split but\n// the two split parts (child nodes) are still intact, then the unsplit polygon is returned.\n// This ensures that we can safely split a polygon into many fragments. If the fragments are untouched,\n//  getPolygons() will return the original unsplit polygon instead of the fragments.\n// remove() removes a polygon from the tree. Once a polygon is removed, the parent polygons are invalidated\n// since they are no longer intact.\n// constructor creates the root node:\nconst PolygonTreeNode = function () {\n  this.parent = null\n  this.children = []\n  this.polygon = null\n  this.removed = false\n}\n\nPolygonTreeNode.prototype = {\n    // fill the tree with polygons. Should be called on the root node only; child nodes must\n    // always be a derivate (split) of the parent node.\n  addPolygons: function (polygons) {\n    // new polygons can only be added to root node; children can only be splitted polygons\n    if (!this.isRootNode()) {\n      throw new Error('Assertion failed')\n    }\n    let _this = this\n    polygons.map(function (polygon) {\n      _this.addChild(polygon)\n    })\n  },\n\n    // remove a node\n    // - the siblings become toplevel nodes\n    // - the parent is removed recursively\n  remove: function () {\n    if (!this.removed) {\n      this.removed = true\n\n      if (_CSGDEBUG) {\n        if (this.isRootNode()) throw new Error('Assertion failed') // can't remove root node\n        if (this.children.length) throw new Error('Assertion failed') // we shouldn't remove nodes with children\n      }\n\n            // remove ourselves from the parent's children list:\n      let parentschildren = this.parent.children\n      let i = parentschildren.indexOf(this)\n      if (i < 0) throw new Error('Assertion failed')\n      parentschildren.splice(i, 1)\n\n            // invalidate the parent's polygon, and of all parents above it:\n      this.parent.recursivelyInvalidatePolygon()\n    }\n  },\n\n  isRemoved: function () {\n    return this.removed\n  },\n\n  isRootNode: function () {\n    return !this.parent\n  },\n\n    // invert all polygons in the tree. Call on the root node\n  invert: function () {\n    if (!this.isRootNode()) throw new Error('Assertion failed') // can only call this on the root node\n    this.invertSub()\n  },\n\n  getPolygon: function () {\n    if (!this.polygon) throw new Error('Assertion failed') // doesn't have a polygon, which means that it has been broken down\n    return this.polygon\n  },\n\n  getPolygons: function (result) {\n    let children = [this]\n    let queue = [children]\n    let i, j, l, node\n    for (i = 0; i < queue.length; ++i) { // queue size can change in loop, don't cache length\n      children = queue[i]\n      for (j = 0, l = children.length; j < l; j++) { // ok to cache length\n        node = children[j]\n        if (node.polygon) {\n                    // the polygon hasn't been broken yet. We can ignore the children and return our polygon:\n          result.push(node.polygon)\n        } else {\n                    // our polygon has been split up and broken, so gather all subpolygons from the children\n          queue.push(node.children)\n        }\n      }\n    }\n  },\n\n    // split the node by a plane; add the resulting nodes to the frontnodes and backnodes array\n    // If the plane doesn't intersect the polygon, the 'this' object is added to one of the arrays\n    // If the plane does intersect the polygon, two new child nodes are created for the front and back fragments,\n    //  and added to both arrays.\n  splitByPlane: function (plane, coplanarfrontnodes, coplanarbacknodes, frontnodes, backnodes) {\n    if (this.children.length) {\n      let queue = [this.children]\n      let i\n      let j\n      let l\n      let node\n      let nodes\n      for (i = 0; i < queue.length; i++) { // queue.length can increase, do not cache\n        nodes = queue[i]\n        for (j = 0, l = nodes.length; j < l; j++) { // ok to cache length\n          node = nodes[j]\n          if (node.children.length) {\n            queue.push(node.children)\n          } else {\n                        // no children. Split the polygon:\n            node._splitByPlane(plane, coplanarfrontnodes, coplanarbacknodes, frontnodes, backnodes)\n          }\n        }\n      }\n    } else {\n      this._splitByPlane(plane, coplanarfrontnodes, coplanarbacknodes, frontnodes, backnodes)\n    }\n  },\n\n    // only to be called for nodes with no children\n  _splitByPlane: function (plane, coplanarfrontnodes, coplanarbacknodes, frontnodes, backnodes) {\n    let polygon = this.polygon\n    if (polygon) {\n      let bound = polygon.boundingSphere()\n      let sphereradius = bound[1] + EPS // FIXME Why add imprecision?\n      let planenormal = plane.normal\n      let spherecenter = bound[0]\n      let d = planenormal.dot(spherecenter) - plane.w\n      if (d > sphereradius) {\n        frontnodes.push(this)\n      } else if (d < -sphereradius) {\n        backnodes.push(this)\n      } else {\n        let splitresult = splitPolygonByPlane(plane, polygon)\n        switch (splitresult.type) {\n          case 0:\n                        // coplanar front:\n            coplanarfrontnodes.push(this)\n            break\n\n          case 1:\n                        // coplanar back:\n            coplanarbacknodes.push(this)\n            break\n\n          case 2:\n                        // front:\n            frontnodes.push(this)\n            break\n\n          case 3:\n                        // back:\n            backnodes.push(this)\n            break\n\n          case 4:\n                        // spanning:\n            if (splitresult.front) {\n              let frontnode = this.addChild(splitresult.front)\n              frontnodes.push(frontnode)\n            }\n            if (splitresult.back) {\n              let backnode = this.addChild(splitresult.back)\n              backnodes.push(backnode)\n            }\n            break\n        }\n      }\n    }\n  },\n\n    // PRIVATE methods from here:\n    // add child to a node\n    // this should be called whenever the polygon is split\n    // a child should be created for every fragment of the split polygon\n    // returns the newly created child\n  addChild: function (polygon) {\n    let newchild = new PolygonTreeNode()\n    newchild.parent = this\n    newchild.polygon = polygon\n    this.children.push(newchild)\n    return newchild\n  },\n\n  invertSub: function () {\n    let children = [this]\n    let queue = [children]\n    let i, j, l, node\n    for (i = 0; i < queue.length; i++) {\n      children = queue[i]\n      for (j = 0, l = children.length; j < l; j++) {\n        node = children[j]\n        if (node.polygon) {\n          node.polygon = node.polygon.flipped()\n        }\n        queue.push(node.children)\n      }\n    }\n  },\n\n  recursivelyInvalidatePolygon: function () {\n    let node = this\n    while (node.polygon) {\n      node.polygon = null\n      if (node.parent) {\n        node = node.parent\n      }\n    }\n  }\n}\n\n// # class Tree\n// This is the root of a BSP tree\n// We are using this separate class for the root of the tree, to hold the PolygonTreeNode root\n// The actual tree is kept in this.rootnode\nconst Tree = function (polygons) {\n  this.polygonTree = new PolygonTreeNode()\n  this.rootnode = new Node(null)\n  if (polygons) this.addPolygons(polygons)\n}\n\nTree.prototype = {\n  invert: function () {\n    this.polygonTree.invert()\n    this.rootnode.invert()\n  },\n\n    // Remove all polygons in this BSP tree that are inside the other BSP tree\n    // `tree`.\n  clipTo: function (tree, alsoRemovecoplanarFront) {\n    alsoRemovecoplanarFront = !!alsoRemovecoplanarFront\n    this.rootnode.clipTo(tree, alsoRemovecoplanarFront)\n  },\n\n  allPolygons: function () {\n    let result = []\n    this.polygonTree.getPolygons(result)\n    return result\n  },\n\n  addPolygons: function (polygons) {\n    let _this = this\n    let polygontreenodes = polygons.map(function (p) {\n      return _this.polygonTree.addChild(p)\n    })\n    this.rootnode.addPolygonTreeNodes(polygontreenodes)\n  }\n}\n\n// # class Node\n// Holds a node in a BSP tree. A BSP tree is built from a collection of polygons\n// by picking a polygon to split along.\n// Polygons are not stored directly in the tree, but in PolygonTreeNodes, stored in\n// this.polygontreenodes. Those PolygonTreeNodes are children of the owning\n// Tree.polygonTree\n// This is not a leafy BSP tree since there is\n// no distinction between internal and leaf nodes.\nconst Node = function (parent) {\n  this.plane = null\n  this.front = null\n  this.back = null\n  this.polygontreenodes = []\n  this.parent = parent\n}\n\nNode.prototype = {\n    // Convert solid space to empty space and empty space to solid space.\n  invert: function () {\n    let queue = [this]\n    let node\n    for (let i = 0; i < queue.length; i++) {\n      node = queue[i]\n      if (node.plane) node.plane = node.plane.flipped()\n      if (node.front) queue.push(node.front)\n      if (node.back) queue.push(node.back)\n      let temp = node.front\n      node.front = node.back\n      node.back = temp\n    }\n  },\n\n    // clip polygontreenodes to our plane\n    // calls remove() for all clipped PolygonTreeNodes\n  clipPolygons: function (polygontreenodes, alsoRemovecoplanarFront) {\n    let args = {'node': this, 'polygontreenodes': polygontreenodes}\n    let node\n    let stack = []\n\n    do {\n      node = args.node\n      polygontreenodes = args.polygontreenodes\n\n            // begin \"function\"\n      if (node.plane) {\n        let backnodes = []\n        let frontnodes = []\n        let coplanarfrontnodes = alsoRemovecoplanarFront ? backnodes : frontnodes\n        let plane = node.plane\n        let numpolygontreenodes = polygontreenodes.length\n        for (let i = 0; i < numpolygontreenodes; i++) {\n          let node1 = polygontreenodes[i]\n          if (!node1.isRemoved()) {\n            node1.splitByPlane(plane, coplanarfrontnodes, backnodes, frontnodes, backnodes)\n          }\n        }\n\n        if (node.front && (frontnodes.length > 0)) {\n          stack.push({'node': node.front, 'polygontreenodes': frontnodes})\n        }\n        let numbacknodes = backnodes.length\n        if (node.back && (numbacknodes > 0)) {\n          stack.push({'node': node.back, 'polygontreenodes': backnodes})\n        } else {\n                    // there's nothing behind this plane. Delete the nodes behind this plane:\n          for (let i = 0; i < numbacknodes; i++) {\n            backnodes[i].remove()\n          }\n        }\n      }\n      args = stack.pop()\n    } while (typeof (args) !== 'undefined')\n  },\n\n    // Remove all polygons in this BSP tree that are inside the other BSP tree\n    // `tree`.\n  clipTo: function (tree, alsoRemovecoplanarFront) {\n    let node = this\n    let stack = []\n    do {\n      if (node.polygontreenodes.length > 0) {\n        tree.rootnode.clipPolygons(node.polygontreenodes, alsoRemovecoplanarFront)\n      }\n      if (node.front) stack.push(node.front)\n      if (node.back) stack.push(node.back)\n      node = stack.pop()\n    } while (typeof (node) !== 'undefined')\n  },\n\n  addPolygonTreeNodes: function (polygontreenodes) {\n    let args = {'node': this, 'polygontreenodes': polygontreenodes}\n    let node\n    let stack = []\n    do {\n      node = args.node\n      polygontreenodes = args.polygontreenodes\n\n      if (polygontreenodes.length === 0) {\n        args = stack.pop()\n        continue\n      }\n      let _this = node\n      if (!node.plane) {\n        let bestplane = polygontreenodes[0].getPolygon().plane\n        node.plane = bestplane\n      }\n      let frontnodes = []\n      let backnodes = []\n\n      for (let i = 0, n = polygontreenodes.length; i < n; ++i) {\n        polygontreenodes[i].splitByPlane(_this.plane, _this.polygontreenodes, backnodes, frontnodes, backnodes)\n      }\n\n      if (frontnodes.length > 0) {\n        if (!node.front) node.front = new Node(node)\n        stack.push({'node': node.front, 'polygontreenodes': frontnodes})\n      }\n      if (backnodes.length > 0) {\n        if (!node.back) node.back = new Node(node)\n        stack.push({'node': node.back, 'polygontreenodes': backnodes})\n      }\n\n      args = stack.pop()\n    } while (typeof (args) !== 'undefined')\n  },\n\n  getParentPlaneNormals: function (normals, maxdepth) {\n    if (maxdepth > 0) {\n      if (this.parent) {\n        normals.push(this.parent.plane.normal)\n        this.parent.getParentPlaneNormals(normals, maxdepth - 1)\n      }\n    }\n  }\n}\n\nmodule.exports = Tree\n","// ////////////////////////////////////\n// # Class Properties\n// This class is used to store properties of a solid\n// A property can for example be a Vertex, a Plane or a Line3D\n// Whenever an affine transform is applied to the CSG solid, all its properties are\n// transformed as well.\n// The properties can be stored in a complex nested structure (using arrays and objects)\nconst Properties = function () {}\n\nProperties.prototype = {\n  _transform: function (matrix4x4) {\n    let result = new Properties()\n    Properties.transformObj(this, result, matrix4x4)\n    return result\n  },\n  _merge: function (otherproperties) {\n    let result = new Properties()\n    Properties.cloneObj(this, result)\n    Properties.addFrom(result, otherproperties)\n    return result\n  }\n}\n\nProperties.transformObj = function (source, result, matrix4x4) {\n  for (let propertyname in source) {\n    if (propertyname === '_transform') continue\n    if (propertyname === '_merge') continue\n    let propertyvalue = source[propertyname]\n    let transformed = propertyvalue\n    if (typeof (propertyvalue) === 'object') {\n      if (('transform' in propertyvalue) && (typeof (propertyvalue.transform) === 'function')) {\n        transformed = propertyvalue.transform(matrix4x4)\n      } else if (propertyvalue instanceof Array) {\n        transformed = []\n        Properties.transformObj(propertyvalue, transformed, matrix4x4)\n      } else if (propertyvalue instanceof Properties) {\n        transformed = new Properties()\n        Properties.transformObj(propertyvalue, transformed, matrix4x4)\n      }\n    }\n    result[propertyname] = transformed\n  }\n}\n\nProperties.cloneObj = function (source, result) {\n  for (let propertyname in source) {\n    if (propertyname === '_transform') continue\n    if (propertyname === '_merge') continue\n    let propertyvalue = source[propertyname]\n    let cloned = propertyvalue\n    if (typeof (propertyvalue) === 'object') {\n      if (propertyvalue instanceof Array) {\n        cloned = []\n        for (let i = 0; i < propertyvalue.length; i++) {\n          cloned.push(propertyvalue[i])\n        }\n      } else if (propertyvalue instanceof Properties) {\n        cloned = new Properties()\n        Properties.cloneObj(propertyvalue, cloned)\n      }\n    }\n    result[propertyname] = cloned\n  }\n}\n\nProperties.addFrom = function (result, otherproperties) {\n  for (let propertyname in otherproperties) {\n    if (propertyname === '_transform') continue\n    if (propertyname === '_merge') continue\n    if ((propertyname in result) &&\n            (typeof (result[propertyname]) === 'object') &&\n            (result[propertyname] instanceof Properties) &&\n            (typeof (otherproperties[propertyname]) === 'object') &&\n            (otherproperties[propertyname] instanceof Properties)) {\n      Properties.addFrom(result[propertyname], otherproperties[propertyname])\n    } else if (!(propertyname in result)) {\n      result[propertyname] = otherproperties[propertyname]\n    }\n  }\n}\n\nmodule.exports = Properties\n","const {EPS} = require('../constants')\nconst Polygon = require('../math/Polygon3')\nconst Plane = require('../math/Plane')\n\nfunction addSide (sidemap, vertextag2sidestart, vertextag2sideend, vertex0, vertex1, polygonindex) {\n  let starttag = vertex0.getTag()\n  let endtag = vertex1.getTag()\n  if (starttag === endtag) throw new Error('Assertion failed')\n  let newsidetag = starttag + '/' + endtag\n  let reversesidetag = endtag + '/' + starttag\n  if (reversesidetag in sidemap) {\n    // we have a matching reverse oriented side.\n    // Instead of adding the new side, cancel out the reverse side:\n    // console.log(\"addSide(\"+newsidetag+\") has reverse side:\");\n    deleteSide(sidemap, vertextag2sidestart, vertextag2sideend, vertex1, vertex0, null)\n    return null\n  }\n  //  console.log(\"addSide(\"+newsidetag+\")\");\n  let newsideobj = {\n    vertex0: vertex0,\n    vertex1: vertex1,\n    polygonindex: polygonindex\n  }\n  if (!(newsidetag in sidemap)) {\n    sidemap[newsidetag] = [newsideobj]\n  } else {\n    sidemap[newsidetag].push(newsideobj)\n  }\n  if (starttag in vertextag2sidestart) {\n    vertextag2sidestart[starttag].push(newsidetag)\n  } else {\n    vertextag2sidestart[starttag] = [newsidetag]\n  }\n  if (endtag in vertextag2sideend) {\n    vertextag2sideend[endtag].push(newsidetag)\n  } else {\n    vertextag2sideend[endtag] = [newsidetag]\n  }\n  return newsidetag\n}\n\nfunction deleteSide (sidemap, vertextag2sidestart, vertextag2sideend, vertex0, vertex1, polygonindex) {\n  let starttag = vertex0.getTag()\n  let endtag = vertex1.getTag()\n  let sidetag = starttag + '/' + endtag\n  // console.log(\"deleteSide(\"+sidetag+\")\");\n  if (!(sidetag in sidemap)) throw new Error('Assertion failed')\n  let idx = -1\n  let sideobjs = sidemap[sidetag]\n  for (let i = 0; i < sideobjs.length; i++) {\n    let sideobj = sideobjs[i]\n    if (sideobj.vertex0 !== vertex0) continue\n    if (sideobj.vertex1 !== vertex1) continue\n    if (polygonindex !== null) {\n      if (sideobj.polygonindex !== polygonindex) continue\n    }\n    idx = i\n    break\n  }\n  if (idx < 0) throw new Error('Assertion failed')\n  sideobjs.splice(idx, 1)\n  if (sideobjs.length === 0) {\n    delete sidemap[sidetag]\n  }\n  idx = vertextag2sidestart[starttag].indexOf(sidetag)\n  if (idx < 0) throw new Error('Assertion failed')\n  vertextag2sidestart[starttag].splice(idx, 1)\n  if (vertextag2sidestart[starttag].length === 0) {\n    delete vertextag2sidestart[starttag]\n  }\n\n  idx = vertextag2sideend[endtag].indexOf(sidetag)\n  if (idx < 0) throw new Error('Assertion failed')\n  vertextag2sideend[endtag].splice(idx, 1)\n  if (vertextag2sideend[endtag].length === 0) {\n    delete vertextag2sideend[endtag]\n  }\n}\n\n/*\n     fixTJunctions:\n\n     Suppose we have two polygons ACDB and EDGF:\n\n      A-----B\n      |     |\n      |     E--F\n      |     |  |\n      C-----D--G\n\n     Note that vertex E forms a T-junction on the side BD. In this case some STL slicers will complain\n     that the solid is not watertight. This is because the watertightness check is done by checking if\n     each side DE is matched by another side ED.\n\n     This function will return a new solid with ACDB replaced by ACDEB\n\n     Note that this can create polygons that are slightly non-convex (due to rounding errors). Therefore the result should\n     not be used for further CSG operations!\n*/\nconst fixTJunctions = function (fromPolygons, csg) {\n  csg = csg.canonicalized()\n  let sidemap = {}\n\n  // STEP 1\n  for (let polygonindex = 0; polygonindex < csg.polygons.length; polygonindex++) {\n    let polygon = csg.polygons[polygonindex]\n    let numvertices = polygon.vertices.length\n    // should be true\n    if (numvertices >= 3) {\n      let vertex = polygon.vertices[0]\n      let vertextag = vertex.getTag()\n      for (let vertexindex = 0; vertexindex < numvertices; vertexindex++) {\n        let nextvertexindex = vertexindex + 1\n        if (nextvertexindex === numvertices) nextvertexindex = 0\n        let nextvertex = polygon.vertices[nextvertexindex]\n        let nextvertextag = nextvertex.getTag()\n        let sidetag = vertextag + '/' + nextvertextag\n        let reversesidetag = nextvertextag + '/' + vertextag\n        if (reversesidetag in sidemap) {\n          // this side matches the same side in another polygon. Remove from sidemap:\n          let ar = sidemap[reversesidetag]\n          ar.splice(-1, 1)\n          if (ar.length === 0) {\n            delete sidemap[reversesidetag]\n          }\n        } else {\n          let sideobj = {\n            vertex0: vertex,\n            vertex1: nextvertex,\n            polygonindex: polygonindex\n          }\n          if (!(sidetag in sidemap)) {\n            sidemap[sidetag] = [sideobj]\n          } else {\n            sidemap[sidetag].push(sideobj)\n          }\n        }\n        vertex = nextvertex\n        vertextag = nextvertextag\n      }\n    }\n  }\n  // STEP 2\n  // now sidemap contains 'unmatched' sides\n  // i.e. side AB in one polygon does not have a matching side BA in another polygon\n  let vertextag2sidestart = {}\n  let vertextag2sideend = {}\n  let sidestocheck = {}\n  let sidemapisempty = true\n  for (let sidetag in sidemap) {\n    sidemapisempty = false\n    sidestocheck[sidetag] = true\n    sidemap[sidetag].map(function (sideobj) {\n      let starttag = sideobj.vertex0.getTag()\n      let endtag = sideobj.vertex1.getTag()\n      if (starttag in vertextag2sidestart) {\n        vertextag2sidestart[starttag].push(sidetag)\n      } else {\n        vertextag2sidestart[starttag] = [sidetag]\n      }\n      if (endtag in vertextag2sideend) {\n        vertextag2sideend[endtag].push(sidetag)\n      } else {\n        vertextag2sideend[endtag] = [sidetag]\n      }\n    })\n  }\n\n  // STEP 3 : if sidemap is not empty\n  if (!sidemapisempty) {\n    // make a copy of the polygons array, since we are going to modify it:\n    let polygons = csg.polygons.slice(0)\n    while (true) {\n      let sidemapisempty = true\n      for (let sidetag in sidemap) {\n        sidemapisempty = false\n        sidestocheck[sidetag] = true\n      }\n      if (sidemapisempty) break\n      let donesomething = false\n      while (true) {\n        let sidetagtocheck = null\n        for (let sidetag in sidestocheck) {\n          sidetagtocheck = sidetag\n          break // FIXME  : say what now ?\n        }\n        if (sidetagtocheck === null) break // sidestocheck is empty, we're done!\n        let donewithside = true\n        if (sidetagtocheck in sidemap) {\n          let sideobjs = sidemap[sidetagtocheck]\n          if (sideobjs.length === 0) throw new Error('Assertion failed')\n          let sideobj = sideobjs[0]\n          for (let directionindex = 0; directionindex < 2; directionindex++) {\n            let startvertex = (directionindex === 0) ? sideobj.vertex0 : sideobj.vertex1\n            let endvertex = (directionindex === 0) ? sideobj.vertex1 : sideobj.vertex0\n            let startvertextag = startvertex.getTag()\n            let endvertextag = endvertex.getTag()\n            let matchingsides = []\n            if (directionindex === 0) {\n              if (startvertextag in vertextag2sideend) {\n                matchingsides = vertextag2sideend[startvertextag]\n              }\n            } else {\n              if (startvertextag in vertextag2sidestart) {\n                matchingsides = vertextag2sidestart[startvertextag]\n              }\n            }\n            for (let matchingsideindex = 0; matchingsideindex < matchingsides.length; matchingsideindex++) {\n              let matchingsidetag = matchingsides[matchingsideindex]\n              let matchingside = sidemap[matchingsidetag][0]\n              let matchingsidestartvertex = (directionindex === 0) ? matchingside.vertex0 : matchingside.vertex1\n              let matchingsideendvertex = (directionindex === 0) ? matchingside.vertex1 : matchingside.vertex0\n              let matchingsidestartvertextag = matchingsidestartvertex.getTag()\n              let matchingsideendvertextag = matchingsideendvertex.getTag()\n              if (matchingsideendvertextag !== startvertextag) throw new Error('Assertion failed')\n              if (matchingsidestartvertextag === endvertextag) {\n                // matchingside cancels sidetagtocheck\n                deleteSide(sidemap, vertextag2sidestart, vertextag2sideend, startvertex, endvertex, null)\n                deleteSide(sidemap, vertextag2sidestart, vertextag2sideend, endvertex, startvertex, null)\n                donewithside = false\n                directionindex = 2 // skip reverse direction check\n                donesomething = true\n                break\n              } else {\n                let startpos = startvertex.pos\n                let endpos = endvertex.pos\n                let checkpos = matchingsidestartvertex.pos\n                let direction = checkpos.minus(startpos)\n                // Now we need to check if endpos is on the line startpos-checkpos:\n                let t = endpos.minus(startpos).dot(direction) / direction.dot(direction)\n                if ((t > 0) && (t < 1)) {\n                  let closestpoint = startpos.plus(direction.times(t))\n                  let distancesquared = closestpoint.distanceToSquared(endpos)\n                  if (distancesquared < (EPS * EPS)) {\n                    // Yes it's a t-junction! We need to split matchingside in two:\n                    let polygonindex = matchingside.polygonindex\n                    let polygon = polygons[polygonindex]\n                    // find the index of startvertextag in polygon:\n                    let insertionvertextag = matchingside.vertex1.getTag()\n                    let insertionvertextagindex = -1\n                    for (let i = 0; i < polygon.vertices.length; i++) {\n                      if (polygon.vertices[i].getTag() === insertionvertextag) {\n                        insertionvertextagindex = i\n                        break\n                      }\n                    }\n                    if (insertionvertextagindex < 0) throw new Error('Assertion failed')\n                    // split the side by inserting the vertex:\n                    let newvertices = polygon.vertices.slice(0)\n                    newvertices.splice(insertionvertextagindex, 0, endvertex)\n                    let newpolygon = new Polygon(newvertices, polygon.shared /* polygon.plane */)\n\n                    // calculate plane with differents point\n                    if (isNaN(newpolygon.plane.w)) {\n                      let found = false\n                      let loop = function (callback) {\n                        newpolygon.vertices.forEach(function (item) {\n                          if (found) return\n                          callback(item)\n                        })\n                      }\n\n                      loop(function (a) {\n                        loop(function (b) {\n                          loop(function (c) {\n                            newpolygon.plane = Plane.fromPoints(a.pos, b.pos, c.pos)\n                            if (!isNaN(newpolygon.plane.w)) {\n                              found = true\n                            }\n                          })\n                        })\n                      })\n                    }\n                    polygons[polygonindex] = newpolygon\n                    // remove the original sides from our maps\n                    // deleteSide(sideobj.vertex0, sideobj.vertex1, null)\n                    deleteSide(sidemap, vertextag2sidestart, vertextag2sideend, matchingside.vertex0, matchingside.vertex1, polygonindex)\n                    let newsidetag1 = addSide(sidemap, vertextag2sidestart, vertextag2sideend, matchingside.vertex0, endvertex, polygonindex)\n                    let newsidetag2 = addSide(sidemap, vertextag2sidestart, vertextag2sideend, endvertex, matchingside.vertex1, polygonindex)\n                    if (newsidetag1 !== null) sidestocheck[newsidetag1] = true\n                    if (newsidetag2 !== null) sidestocheck[newsidetag2] = true\n                    donewithside = false\n                    directionindex = 2 // skip reverse direction check\n                    donesomething = true\n                    break\n                  } // if(distancesquared < 1e-10)\n                } // if( (t > 0) && (t < 1) )\n              } // if(endingstidestartvertextag === endvertextag)\n            } // for matchingsideindex\n          } // for directionindex\n        } // if(sidetagtocheck in sidemap)\n        if (donewithside) {\n          delete sidestocheck[sidetagtocheck]\n        }\n      }\n      if (!donesomething) break\n    }\n    let newcsg = fromPolygons(polygons)\n    newcsg.properties = csg.properties\n    newcsg.isCanonicalized = true\n    newcsg.isRetesselated = true\n    csg = newcsg\n  }\n\n  // FIXME : what is even the point of this ???\n  /* sidemapisempty = true\n  for (let sidetag in sidemap) {\n    sidemapisempty = false\n    break\n  }\n  */\n\n  return csg\n}\n\nmodule.exports = fixTJunctions\n","const Vector3D = require('../math/Vector3')\n\n/**\n   * Returns an array of Vector3D, providing minimum coordinates and maximum coordinates\n   * of this solid.\n   * @returns {Vector3D[]}\n   * @example\n   * let bounds = A.getBounds()\n   * let minX = bounds[0].x\n   */\nconst bounds = function (csg) {\n  if (!csg.cachedBoundingBox) {\n    let minpoint = new Vector3D(0, 0, 0)\n    let maxpoint = new Vector3D(0, 0, 0)\n    let polygons = csg.polygons\n    let numpolygons = polygons.length\n    for (let i = 0; i < numpolygons; i++) {\n      let polygon = polygons[i]\n      let bounds = polygon.boundingBox()\n      if (i === 0) {\n        minpoint = bounds[0]\n        maxpoint = bounds[1]\n      } else {\n        minpoint = minpoint.min(bounds[0])\n        maxpoint = maxpoint.max(bounds[1])\n      }\n    }\n      // FIXME: not ideal, we are mutating the input, we need to move some of it out\n    csg.cachedBoundingBox = [minpoint, maxpoint]\n  }\n  return csg.cachedBoundingBox\n}\n\nconst volume = function (csg) {\n  let result = csg.toTriangles().map(function (triPoly) {\n    return triPoly.getTetraFeatures(['volume'])\n  })\n  console.log('volume', result)\n}\n\nconst area = function (csg) {\n  let result = csg.toTriangles().map(function (triPoly) {\n    return triPoly.getTetraFeatures(['area'])\n  })\n  console.log('area', result)\n}\n\nmodule.exports = {bounds, volume, area}\n","const CAG = require('../CAG') // FIXME: circular dependency !\nconst {EPS} = require('../constants')\n\n// project the 3D CSG onto a plane\n// This returns a 2D CAG with the 'shadow' shape of the 3D solid when projected onto the\n // plane represented by the orthonormal basis\nconst projectToOrthoNormalBasis = function (csg, orthobasis) {\n  let cags = []\n  csg.polygons.filter(function (p) {\n    // only return polys in plane, others may disturb result\n    return p.plane.normal.minus(orthobasis.plane.normal).lengthSquared() < (EPS * EPS)\n  })\n  .map(function (polygon) {\n    let cag = polygon.projectToOrthoNormalBasis(orthobasis)\n    if (cag.sides.length > 0) {\n      cags.push(cag)\n    }\n  })\n  let result = new CAG().union(cags)\n  return result\n}\n\nmodule.exports = {projectToOrthoNormalBasis}\n","const {EPS} = require('../core/constants')\nconst Plane = require('../core/math/Plane')\nconst Vector2 = require('../core/math/Vector2')\nconst Vertex3 = require('../core/math/Vertex3')\nconst Polygon3 = require('../core/math/Polygon3')\nconst OrthoNormalBasis = require('../core/math/OrthoNormalBasis')\n\n/** cuts a csg along a orthobasis\n * @param  {CSG} csg the csg object to cut\n * @param  {Orthobasis} orthobasis the orthobasis to cut along\n */\nconst sectionCut = function (csg, orthobasis) {\n  let plane1 = orthobasis.plane\n  let plane2 = orthobasis.plane.flipped()\n  plane1 = new Plane(plane1.normal, plane1.w)\n  plane2 = new Plane(plane2.normal, plane2.w + (5 * EPS))\n  let cut3d = csg.cutByPlane(plane1)\n  cut3d = cut3d.cutByPlane(plane2)\n  return cut3d.projectToOrthoNormalBasis(orthobasis)\n}\n\n/** Cut the solid by a plane. Returns the solid on the back side of the plane\n * @param  {Plane} plane\n * @returns {CSG} the solid on the back side of the plane\n */\nconst cutByPlane = function (csg, plane) {\n  if (csg.polygons.length === 0) {\n    const CSG = require('../core/CSG') // FIXME: circular dependency ! CSG => cutByPlane => CSG\n    return new CSG()\n  }\n  // Ideally we would like to do an intersection with a polygon of inifinite size\n  // but this is not supported by our implementation. As a workaround, we will create\n  // a cube, with one face on the plane, and a size larger enough so that the entire\n  // solid fits in the cube.\n  // find the max distance of any vertex to the center of the plane:\n  let planecenter = plane.normal.times(plane.w)\n  let maxdistance = 0\n  csg.polygons.map(function (polygon) {\n    polygon.vertices.map(function (vertex) {\n      let distance = vertex.pos.distanceToSquared(planecenter)\n      if (distance > maxdistance) maxdistance = distance\n    })\n  })\n  maxdistance = Math.sqrt(maxdistance)\n  maxdistance *= 1.01 // make sure it's really larger\n  // Now build a polygon on the plane, at any point farther than maxdistance from the plane center:\n  let vertices = []\n  let orthobasis = new OrthoNormalBasis(plane)\n  vertices.push(new Vertex3(orthobasis.to3D(new Vector2(maxdistance, -maxdistance))))\n  vertices.push(new Vertex3(orthobasis.to3D(new Vector2(-maxdistance, -maxdistance))))\n  vertices.push(new Vertex3(orthobasis.to3D(new Vector2(-maxdistance, maxdistance))))\n  vertices.push(new Vertex3(orthobasis.to3D(new Vector2(maxdistance, maxdistance))))\n  const polygon = new Polygon3(vertices, null, plane.flipped())\n\n  // and extrude the polygon into a cube, backwards of the plane:\n  const cube = polygon.extrude(plane.normal.times(-maxdistance))\n\n  // Now we can do the intersection:\n  let result = csg.intersect(cube)\n  result.properties = csg.properties // keep original properties\n  return result\n}\n\nmodule.exports = {sectionCut, cutByPlane}\n","const Tree = require('./trees')\nconst Polygon = require('./math/Polygon3')\nconst Plane = require('./math/Plane')\nconst OrthoNormalBasis = require('./math/OrthoNormalBasis')\n\nconst CAG = require('./CAG') // FIXME: for some weird reason if CAG is imported AFTER frompolygons, a lot of things break???\n\nconst Properties = require('./Properties')\nconst {fromPolygons} = require('./CSGFactories') // FIXME: circular dependency !\n\nconst fixTJunctions = require('./utils/fixTJunctions')\nconst canonicalize = require('./utils/canonicalize')\nconst retesselate = require('./utils/retesellate')\nconst {bounds} = require('./utils/csgMeasurements')\nconst {projectToOrthoNormalBasis} = require('./utils/csgProjections')\n\nconst {lieFlat, getTransformationToFlatLying, getTransformationAndInverseTransformationToFlatLying} = require('../api/ops-cnc')\nconst {sectionCut, cutByPlane} = require('../api/ops-cuts')\nconst center = require('../api/center')\nconst {expand, contract, expandedShellOfCCSG} = require('../api/ops-expandContract')\n\n/** Class CSG\n * Holds a binary space partition tree representing a 3D solid. Two solids can\n * be combined using the `union()`, `subtract()`, and `intersect()` methods.\n * @constructor\n */\nlet CSG = function () {\n  this.polygons = []\n  this.properties = new Properties()\n  this.isCanonicalized = true\n  this.isRetesselated = true\n}\n\nCSG.prototype = {\n  /**\n   * Return a new CSG solid representing the space in either this solid or\n   * in the given solids. Neither this solid nor the given solids are modified.\n   * @param {CSG[]} csg - list of CSG objects\n   * @returns {CSG} new CSG object\n   * @example\n   * let C = A.union(B)\n   * @example\n   * +-------+            +-------+\n   * |       |            |       |\n   * |   A   |            |       |\n   * |    +--+----+   =   |       +----+\n   * +----+--+    |       +----+       |\n   *      |   B   |            |       |\n   *      |       |            |       |\n   *      +-------+            +-------+\n   */\n  union: function (csg) {\n    let csgs\n    if (csg instanceof Array) {\n      csgs = csg.slice(0)\n      csgs.push(this)\n    } else {\n      csgs = [this, csg]\n    }\n\n    let i\n    // combine csg pairs in a way that forms a balanced binary tree pattern\n    for (i = 1; i < csgs.length; i += 2) {\n      csgs.push(csgs[i - 1].unionSub(csgs[i]))\n    }\n    return csgs[i - 1].reTesselated().canonicalized()\n  },\n\n  unionSub: function (csg, retesselate, canonicalize) {\n    if (!this.mayOverlap(csg)) {\n      return this.unionForNonIntersecting(csg)\n    } else {\n      let a = new Tree(this.polygons)\n      let b = new Tree(csg.polygons)\n      a.clipTo(b, false)\n\n            // b.clipTo(a, true); // ERROR: this doesn't work\n      b.clipTo(a)\n      b.invert()\n      b.clipTo(a)\n      b.invert()\n\n      let newpolygons = a.allPolygons().concat(b.allPolygons())\n      let result = fromPolygons(newpolygons)\n      result.properties = this.properties._merge(csg.properties)\n      if (retesselate) result = result.reTesselated()\n      if (canonicalize) result = result.canonicalized()\n      return result\n    }\n  },\n\n  // Like union, but when we know that the two solids are not intersecting\n  // Do not use if you are not completely sure that the solids do not intersect!\n  unionForNonIntersecting: function (csg) {\n    let newpolygons = this.polygons.concat(csg.polygons)\n    let result = fromPolygons(newpolygons)\n    result.properties = this.properties._merge(csg.properties)\n    result.isCanonicalized = this.isCanonicalized && csg.isCanonicalized\n    result.isRetesselated = this.isRetesselated && csg.isRetesselated\n    return result\n  },\n\n  /**\n   * Return a new CSG solid representing space in this solid but\n   * not in the given solids. Neither this solid nor the given solids are modified.\n   * @param {CSG[]} csg - list of CSG objects\n   * @returns {CSG} new CSG object\n   * @example\n   * let C = A.subtract(B)\n   * @example\n   * +-------+            +-------+\n   * |       |            |       |\n   * |   A   |            |       |\n   * |    +--+----+   =   |    +--+\n   * +----+--+    |       +----+\n   *      |   B   |\n   *      |       |\n   *      +-------+\n   */\n  subtract: function (csg) {\n    let csgs\n    if (csg instanceof Array) {\n      csgs = csg\n    } else {\n      csgs = [csg]\n    }\n    let result = this\n    for (let i = 0; i < csgs.length; i++) {\n      let islast = (i === (csgs.length - 1))\n      result = result.subtractSub(csgs[i], islast, islast)\n    }\n    return result\n  },\n\n  subtractSub: function (csg, retesselate, canonicalize) {\n    let a = new Tree(this.polygons)\n    let b = new Tree(csg.polygons)\n    a.invert()\n    a.clipTo(b)\n    b.clipTo(a, true)\n    a.addPolygons(b.allPolygons())\n    a.invert()\n    let result = fromPolygons(a.allPolygons())\n    result.properties = this.properties._merge(csg.properties)\n    if (retesselate) result = result.reTesselated()\n    if (canonicalize) result = result.canonicalized()\n    return result\n  },\n\n  /**\n   * Return a new CSG solid representing space in both this solid and\n   * in the given solids. Neither this solid nor the given solids are modified.\n   * @param {CSG[]} csg - list of CSG objects\n   * @returns {CSG} new CSG object\n   * @example\n   * let C = A.intersect(B)\n   * @example\n   * +-------+\n   * |       |\n   * |   A   |\n   * |    +--+----+   =   +--+\n   * +----+--+    |       +--+\n   *      |   B   |\n   *      |       |\n   *      +-------+\n   */\n  intersect: function (csg) {\n    let csgs\n    if (csg instanceof Array) {\n      csgs = csg\n    } else {\n      csgs = [csg]\n    }\n    let result = this\n    for (let i = 0; i < csgs.length; i++) {\n      let islast = (i === (csgs.length - 1))\n      result = result.intersectSub(csgs[i], islast, islast)\n    }\n    return result\n  },\n\n  intersectSub: function (csg, retesselate, canonicalize) {\n    let a = new Tree(this.polygons)\n    let b = new Tree(csg.polygons)\n    a.invert()\n    b.clipTo(a)\n    b.invert()\n    a.clipTo(b)\n    b.clipTo(a)\n    a.addPolygons(b.allPolygons())\n    a.invert()\n    let result = fromPolygons(a.allPolygons())\n    result.properties = this.properties._merge(csg.properties)\n    if (retesselate) result = result.reTesselated()\n    if (canonicalize) result = result.canonicalized()\n    return result\n  },\n\n  /**\n   * Return a new CSG solid with solid and empty space switched.\n   * This solid is not modified.\n   * @returns {CSG} new CSG object\n   * @example\n   * let B = A.invert()\n   */\n  invert: function () {\n    let flippedpolygons = this.polygons.map(function (p) {\n      return p.flipped()\n    })\n    return fromPolygons(flippedpolygons)\n    // TODO: flip properties?\n  },\n\n  // Affine transformation of CSG object. Returns a new CSG object\n  transform1: function (matrix4x4) {\n    let newpolygons = this.polygons.map(function (p) {\n      return p.transform(matrix4x4)\n    })\n    let result = fromPolygons(newpolygons)\n    result.properties = this.properties._transform(matrix4x4)\n    result.isRetesselated = this.isRetesselated\n    return result\n  },\n\n  /**\n   * Return a new CSG solid that is transformed using the given Matrix.\n   * Several matrix transformations can be combined before transforming this solid.\n   * @param {CSG.Matrix4x4} matrix4x4 - matrix to be applied\n   * @returns {CSG} new CSG object\n   * @example\n   * var m = new CSG.Matrix4x4()\n   * m = m.multiply(CSG.Matrix4x4.rotationX(40))\n   * m = m.multiply(CSG.Matrix4x4.translation([-.5, 0, 0]))\n   * let B = A.transform(m)\n   */\n  transform: function (matrix4x4) {\n    let ismirror = matrix4x4.isMirroring()\n    let transformedvertices = {}\n    let transformedplanes = {}\n    let newpolygons = this.polygons.map(function (p) {\n      let newplane\n      let plane = p.plane\n      let planetag = plane.getTag()\n      if (planetag in transformedplanes) {\n        newplane = transformedplanes[planetag]\n      } else {\n        newplane = plane.transform(matrix4x4)\n        transformedplanes[planetag] = newplane\n      }\n      let newvertices = p.vertices.map(function (v) {\n        let newvertex\n        let vertextag = v.getTag()\n        if (vertextag in transformedvertices) {\n          newvertex = transformedvertices[vertextag]\n        } else {\n          newvertex = v.transform(matrix4x4)\n          transformedvertices[vertextag] = newvertex\n        }\n        return newvertex\n      })\n      if (ismirror) newvertices.reverse()\n      return new Polygon(newvertices, p.shared, newplane)\n    })\n    let result = fromPolygons(newpolygons)\n    result.properties = this.properties._transform(matrix4x4)\n    result.isRetesselated = this.isRetesselated\n    result.isCanonicalized = this.isCanonicalized\n    return result\n  },\n\n  // ALIAS !\n  center: function (axes) {\n    return center({axes: axes},[this])\n  },\n\n  // ALIAS !\n  expand: function (radius, resolution) {\n    return expand(this, radius, resolution)\n  },\n\n  // ALIAS !\n  contract: function (radius, resolution) {\n    return contract(this, radius, resolution)\n  },\n\n  // ALIAS !\n  expandedShell: function (radius, resolution, unionWithThis) {\n    return expandedShellOfCCSG(this, radius, resolution, unionWithThis)\n  },\n\n  // cut the solid at a plane, and stretch the cross-section found along plane normal\n  // note: only used in roundedCube() internally\n  stretchAtPlane: function (normal, point, length) {\n    let plane = Plane.fromNormalAndPoint(normal, point)\n    let onb = new OrthoNormalBasis(plane)\n    let crosssect = this.sectionCut(onb)\n    let midpiece = crosssect.extrudeInOrthonormalBasis(onb, length)\n    let piece1 = this.cutByPlane(plane)\n    let piece2 = this.cutByPlane(plane.flipped())\n    let result = piece1.union([midpiece, piece2.translate(plane.normal.times(length))])\n    return result\n  },\n\n  // ALIAS !\n  canonicalized: function () {\n    return canonicalize(this)\n  },\n\n  // ALIAS !\n  reTesselated: function () {\n    return retesselate(this)\n  },\n\n  // ALIAS !\n  fixTJunctions: function () {\n    return fixTJunctions(fromPolygons, this)\n  },\n\n  // ALIAS !\n  getBounds: function () {\n    return bounds(this)\n  },\n\n  /** returns true if there is a possibility that the two solids overlap\n   * returns false if we can be sure that they do not overlap\n   * NOTE: this is critical as it is used in UNIONs\n   * @param  {CSG} csg\n   */\n  mayOverlap: function (csg) {\n    if ((this.polygons.length === 0) || (csg.polygons.length === 0)) {\n      return false\n    } else {\n      let mybounds = bounds(this)\n      let otherbounds = bounds(csg)\n      if (mybounds[1].x < otherbounds[0].x) return false\n      if (mybounds[0].x > otherbounds[1].x) return false\n      if (mybounds[1].y < otherbounds[0].y) return false\n      if (mybounds[0].y > otherbounds[1].y) return false\n      if (mybounds[1].z < otherbounds[0].z) return false\n      if (mybounds[0].z > otherbounds[1].z) return false\n      return true\n    }\n  },\n\n  // ALIAS !\n  cutByPlane: function (plane) {\n    return cutByPlane(this, plane)\n  },\n\n  /**\n   * Connect a solid to another solid, such that two Connectors become connected\n   * @param  {Connector} myConnector a Connector of this solid\n   * @param  {Connector} otherConnector a Connector to which myConnector should be connected\n   * @param  {Boolean} mirror false: the 'axis' vectors of the connectors should point in the same direction\n   * true: the 'axis' vectors of the connectors should point in opposite direction\n   * @param  {Float} normalrotation degrees of rotation between the 'normal' vectors of the two\n   * connectors\n   * @returns {CSG} this csg, tranformed accordingly\n   */\n  connectTo: function (myConnector, otherConnector, mirror, normalrotation) {\n    let matrix = myConnector.getTransformationTo(otherConnector, mirror, normalrotation)\n    return this.transform(matrix)\n  },\n\n  /**\n   * set the .shared property of all polygons\n   * @param  {Object} shared\n   * @returns {CSG} Returns a new CSG solid, the original is unmodified!\n   */\n  setShared: function (shared) {\n    let polygons = this.polygons.map(function (p) {\n      return new Polygon(p.vertices, shared, p.plane)\n    })\n    let result = fromPolygons(polygons)\n    result.properties = this.properties // keep original properties\n    result.isRetesselated = this.isRetesselated\n    result.isCanonicalized = this.isCanonicalized\n    return result\n  },\n\n  /** sets the color of this csg: non mutating, returns a new CSG\n   * @param  {Object} args\n   * @returns {CSG} a copy of this CSG, with the given color\n   */\n  setColor: function (args) {\n    let newshared = Polygon.Shared.fromColor.apply(this, arguments)\n    return this.setShared(newshared)\n  },\n\n  // ALIAS !\n  getTransformationAndInverseTransformationToFlatLying: function () {\n    return getTransformationAndInverseTransformationToFlatLying(this)\n  },\n\n  // ALIAS !\n  getTransformationToFlatLying: function () {\n    return getTransformationToFlatLying(this)\n  },\n\n  // ALIAS !\n  lieFlat: function () {\n    return lieFlat(this)\n  },\n\n  // project the 3D CSG onto a plane\n  // This returns a 2D CAG with the 'shadow' shape of the 3D solid when projected onto the\n  // plane represented by the orthonormal basis\n  projectToOrthoNormalBasis: function (orthobasis) {\n    // FIXME:  DEPENDS ON CAG !!\n    return projectToOrthoNormalBasis(this, orthobasis)\n  },\n\n  // FIXME: not finding any uses within our code ?\n  sectionCut: function (orthobasis) {\n    return sectionCut(this, orthobasis)\n  },\n\n  /**\n   * Returns an array of values for the requested features of this solid.\n   * Supported Features: 'volume', 'area'\n   * @param {String[]} features - list of features to calculate\n   * @returns {Float[]} values\n   * @example\n   * let volume = A.getFeatures('volume')\n   * let values = A.getFeatures('area','volume')\n   */\n  getFeatures: function (features) {\n    if (!(features instanceof Array)) {\n      features = [features]\n    }\n    let result = this.toTriangles().map(function (triPoly) {\n      return triPoly.getTetraFeatures(features)\n    })\n    .reduce(function (pv, v) {\n      return v.map(function (feat, i) {\n        return feat + (pv === 0 ? 0 : pv[i])\n      })\n    }, 0)\n    return (result.length === 1) ? result[0] : result\n  },\n  /** @return {Polygon[]} The list of polygons. */\n  toPolygons: function () {\n    return this.polygons\n  },\n\n  toString: function () {\n    let result = 'CSG solid:\\n'\n    this.polygons.map(function (p) {\n      result += p.toString()\n    })\n    return result\n  },\n\n  /** returns a compact binary representation of this csg\n   * usually used to transfer CSG objects to/from webworkes\n   * NOTE: very interesting compact format, with a lot of reusable ideas\n   * @returns {Object} compact binary representation of a CSG\n   */\n  toCompactBinary: function () {\n    let csg = this.canonicalized()\n    let numpolygons = csg.polygons.length\n    let numpolygonvertices = 0\n\n    let numvertices = 0\n    let vertexmap = {}\n    let vertices = []\n\n    let numplanes = 0\n    let planemap = {}\n    let planes = []\n\n    let shareds = []\n    let sharedmap = {}\n    let numshared = 0\n        // for (let i = 0, iMax = csg.polygons.length; i < iMax; i++) {\n        //  let p = csg.polygons[i];\n        //  for (let j = 0, jMax = p.length; j < jMax; j++) {\n        //      ++numpolygonvertices;\n        //      let vertextag = p[j].getTag();\n        //      if(!(vertextag in vertexmap)) {\n        //          vertexmap[vertextag] = numvertices++;\n        //          vertices.push(p[j]);\n        //      }\n        //  }\n    csg.polygons.map(function (polygon) {\n      // FIXME: why use map if we do not return anything ?\n      // either for... or forEach\n      polygon.vertices.map(function (vertex) {\n        ++numpolygonvertices\n        let vertextag = vertex.getTag()\n        if (!(vertextag in vertexmap)) {\n          vertexmap[vertextag] = numvertices++\n          vertices.push(vertex)\n        }\n      })\n\n      let planetag = polygon.plane.getTag()\n      if (!(planetag in planemap)) {\n        planemap[planetag] = numplanes++\n        planes.push(polygon.plane)\n      }\n      let sharedtag = polygon.shared.getTag()\n      if (!(sharedtag in sharedmap)) {\n        sharedmap[sharedtag] = numshared++\n        shareds.push(polygon.shared)\n      }\n    })\n\n    let numVerticesPerPolygon = new Uint32Array(numpolygons)\n    let polygonSharedIndexes = new Uint32Array(numpolygons)\n    let polygonVertices = new Uint32Array(numpolygonvertices)\n    let polygonPlaneIndexes = new Uint32Array(numpolygons)\n    let vertexData = new Float64Array(numvertices * 3)\n    let planeData = new Float64Array(numplanes * 4)\n    let polygonVerticesIndex = 0\n\n    // FIXME: doublecheck : why does it go through the whole polygons again?\n    // can we optimise that ? (perhap due to needing size to init buffers above)\n    for (let polygonindex = 0; polygonindex < numpolygons; ++polygonindex) {\n      let polygon = csg.polygons[polygonindex]\n      numVerticesPerPolygon[polygonindex] = polygon.vertices.length\n      polygon.vertices.map(function (vertex) {\n        let vertextag = vertex.getTag()\n        let vertexindex = vertexmap[vertextag]\n        polygonVertices[polygonVerticesIndex++] = vertexindex\n      })\n      let planetag = polygon.plane.getTag()\n      let planeindex = planemap[planetag]\n      polygonPlaneIndexes[polygonindex] = planeindex\n      let sharedtag = polygon.shared.getTag()\n      let sharedindex = sharedmap[sharedtag]\n      polygonSharedIndexes[polygonindex] = sharedindex\n    }\n    let verticesArrayIndex = 0\n    vertices.map(function (vertex) {\n      const pos = vertex.pos\n      vertexData[verticesArrayIndex++] = pos._x\n      vertexData[verticesArrayIndex++] = pos._y\n      vertexData[verticesArrayIndex++] = pos._z\n    })\n    let planesArrayIndex = 0\n    planes.map(function (plane) {\n      const normal = plane.normal\n      planeData[planesArrayIndex++] = normal._x\n      planeData[planesArrayIndex++] = normal._y\n      planeData[planesArrayIndex++] = normal._z\n      planeData[planesArrayIndex++] = plane.w\n    })\n\n    let result = {\n      'class': 'CSG',\n      numPolygons: numpolygons,\n      numVerticesPerPolygon: numVerticesPerPolygon,\n      polygonPlaneIndexes: polygonPlaneIndexes,\n      polygonSharedIndexes: polygonSharedIndexes,\n      polygonVertices: polygonVertices,\n      vertexData: vertexData,\n      planeData: planeData,\n      shared: shareds\n    }\n    return result\n  },\n\n  /** returns the triangles of this csg\n   * @returns {Polygons} triangulated polygons\n   */\n  toTriangles: function () {\n    let polygons = []\n    this.polygons.forEach(function (poly) {\n      let firstVertex = poly.vertices[0]\n      for (let i = poly.vertices.length - 3; i >= 0; i--) {\n        polygons.push(new Polygon(\n          [\n            firstVertex,\n            poly.vertices[i + 1],\n            poly.vertices[i + 2]\n          ],\n          poly.shared,\n          poly.plane))\n      }\n    })\n    return polygons\n  }\n}\n\nmodule.exports = CSG\n","const CAG = require('../core/CAG')\nconst {parseOptionAs2DVector, parseOptionAsFloat, parseOptionAsInt} = require('./optionParsers')\nconst {defaultResolution2D} = require('../core/constants')\nconst Vector2D = require('../core/math/Vector2')\nconst Vertex2 = require('../core/math/Vertex2')\nconst Path2D = require('../core/math/Path2')\nconst {fromCompactBinary, fromPoints, fromPath2, fromSides} = require('../core/CAGFactories')\n\n/** Construct a circle.\n * @param {Object} [options] - options for construction\n * @param {Vector2D} [options.center=[0,0]] - center of circle\n * @param {Number} [options.radius=1] - radius of circle\n * @param {Number} [options.resolution=defaultResolution2D] - number of sides per 360 rotation\n * @returns {CAG} new CAG object\n */\nconst circle = function (options) {\n  options = options || {}\n  let center = parseOptionAs2DVector(options, 'center', [0, 0])\n  let radius = parseOptionAsFloat(options, 'radius', 1)\n  let resolution = parseOptionAsInt(options, 'resolution', defaultResolution2D)\n  let points = []\n  for (let i = 0; i < resolution; i++) {\n    let radians = 2 * Math.PI * i / resolution\n    let point = Vector2D.fromAngleRadians(radians).times(radius).plus(center)\n    points.push(point)\n  }\n  return fromPoints(points)\n}\n\n/** Construct an ellispe.\n * @param {Object} [options] - options for construction\n * @param {Vector2D} [options.center=[0,0]] - center of ellipse\n * @param {Vector2D} [options.radius=[1,1]] - radius of ellipse, width and height\n * @param {Number} [options.resolution=defaultResolution2D] - number of sides per 360 rotation\n * @returns {CAG} new CAG object\n */\nconst ellipse = function (options) {\n  options = options || {}\n  let c = parseOptionAs2DVector(options, 'center', [0, 0])\n  let r = parseOptionAs2DVector(options, 'radius', [1, 1])\n  r = r.abs() // negative radii make no sense\n  let res = parseOptionAsInt(options, 'resolution', defaultResolution2D)\n\n  let e2 = new Path2D([[c.x, c.y + r.y]])\n  e2 = e2.appendArc([c.x, c.y - r.y], {\n    xradius: r.x,\n    yradius: r.y,\n    xaxisrotation: 0,\n    resolution: res,\n    clockwise: true,\n    large: false\n  })\n  e2 = e2.appendArc([c.x, c.y + r.y], {\n    xradius: r.x,\n    yradius: r.y,\n    xaxisrotation: 0,\n    resolution: res,\n    clockwise: true,\n    large: false\n  })\n  e2 = e2.close()\n  return fromPath2(e2)\n}\n\n/** Construct a rectangle.\n * @param {Object} [options] - options for construction\n * @param {Vector2D} [options.center=[0,0]] - center of rectangle\n * @param {Vector2D} [options.radius=[1,1]] - radius of rectangle, width and height\n * @param {Vector2D} [options.corner1=[0,0]] - bottom left corner of rectangle (alternate)\n * @param {Vector2D} [options.corner2=[0,0]] - upper right corner of rectangle (alternate)\n * @returns {CAG} new CAG object\n */\nconst rectangle = function (options) {\n  options = options || {}\n  let c, r\n  if (('corner1' in options) || ('corner2' in options)) {\n    if (('center' in options) || ('radius' in options)) {\n      throw new Error('rectangle: should either give a radius and center parameter, or a corner1 and corner2 parameter')\n    }\n    let corner1 = parseOptionAs2DVector(options, 'corner1', [0, 0])\n    let corner2 = parseOptionAs2DVector(options, 'corner2', [1, 1])\n    c = corner1.plus(corner2).times(0.5)\n    r = corner2.minus(corner1).times(0.5)\n  } else {\n    c = parseOptionAs2DVector(options, 'center', [0, 0])\n    r = parseOptionAs2DVector(options, 'radius', [1, 1])\n  }\n  r = r.abs() // negative radii make no sense\n  let rswap = new Vector2D(r.x, -r.y)\n  let points = [\n    c.plus(r), c.plus(rswap), c.minus(r), c.minus(rswap)\n  ]\n  return fromPoints(points)\n}\n\n/** Construct a rounded rectangle.\n * @param {Object} [options] - options for construction\n * @param {Vector2D} [options.center=[0,0]] - center of rounded rectangle\n * @param {Vector2D} [options.radius=[1,1]] - radius of rounded rectangle, width and height\n * @param {Vector2D} [options.corner1=[0,0]] - bottom left corner of rounded rectangle (alternate)\n * @param {Vector2D} [options.corner2=[0,0]] - upper right corner of rounded rectangle (alternate)\n * @param {Number} [options.roundradius=0.2] - round radius of corners\n * @param {Number} [options.resolution=defaultResolution2D] - number of sides per 360 rotation\n * @returns {CAG} new CAG object\n *\n * @example\n * let r = roundedRectangle({\n *   center: [0, 0],\n *   radius: [5, 10],\n *   roundradius: 2,\n *   resolution: 36,\n * });\n */\nconst roundedRectangle = function (options) {\n  options = options || {}\n  let center, radius\n  if (('corner1' in options) || ('corner2' in options)) {\n    if (('center' in options) || ('radius' in options)) {\n      throw new Error('roundedRectangle: should either give a radius and center parameter, or a corner1 and corner2 parameter')\n    }\n    let corner1 = parseOptionAs2DVector(options, 'corner1', [0, 0])\n    let corner2 = parseOptionAs2DVector(options, 'corner2', [1, 1])\n    center = corner1.plus(corner2).times(0.5)\n    radius = corner2.minus(corner1).times(0.5)\n  } else {\n    center = parseOptionAs2DVector(options, 'center', [0, 0])\n    radius = parseOptionAs2DVector(options, 'radius', [1, 1])\n  }\n  radius = radius.abs() // negative radii make no sense\n  let roundradius = parseOptionAsFloat(options, 'roundradius', 0.2)\n  let resolution = parseOptionAsInt(options, 'resolution', defaultResolution2D)\n  let maxroundradius = Math.min(radius.x, radius.y)\n  maxroundradius -= 0.1\n  roundradius = Math.min(roundradius, maxroundradius)\n  roundradius = Math.max(0, roundradius)\n  radius = new Vector2D(radius.x - roundradius, radius.y - roundradius)\n  let rect = rectangle({\n    center: center,\n    radius: radius\n  })\n  if (roundradius > 0) {\n    rect = rect.expand(roundradius, resolution)\n  }\n  return rect\n}\n\n/** Reconstruct a CAG from the output of toCompactBinary().\n * @param {CompactBinary} bin - see toCompactBinary()\n * @returns {CAG} new CAG object\n */\n/*fromCompactBinary = function (bin) {\n  if (bin['class'] !== 'CAG') throw new Error('Not a CAG')\n  let vertices = []\n  let vertexData = bin.vertexData\n  let numvertices = vertexData.length / 2\n  let arrayindex = 0\n  for (let vertexindex = 0; vertexindex < numvertices; vertexindex++) {\n    let x = vertexData[arrayindex++]\n    let y = vertexData[arrayindex++]\n    let pos = new Vector2D(x, y)\n    let vertex = new Vertex2(pos)\n    vertices.push(vertex)\n  }\n\n  let sides = []\n  let numsides = bin.sideVertexIndices.length / 2\n  arrayindex = 0\n  for (let sideindex = 0; sideindex < numsides; sideindex++) {\n    let vertexindex0 = bin.sideVertexIndices[arrayindex++]\n    let vertexindex1 = bin.sideVertexIndices[arrayindex++]\n    let side = new Side(vertices[vertexindex0], vertices[vertexindex1])\n    sides.push(side)\n  }\n  let cag = fromSides(sides)\n  cag.isCanonicalized = true\n  return cag\n}*/\n\nmodule.exports = {\n  circle,\n  ellipse,\n  rectangle,\n  roundedRectangle,\n  fromCompactBinary\n}\n","const {parseOption, parseOptionAs3DVector, parseOptionAs2DVector, parseOptionAs3DVectorList, parseOptionAsFloat, parseOptionAsInt} = require('./optionParsers')\nconst {defaultResolution3D, defaultResolution2D, EPS} = require('../core/constants')\nconst Vector3 = require('../core/math/Vector3')\nconst Vertex3 = require('../core/math/Vertex3')\nconst Polygon3 = require('../core/math/Polygon3')\nconst {Connector} = require('../core/connectors')\nconst Properties = require('../core/Properties')\nconst {fromPolygons} = require('../core/CSGFactories')\n\n/** Construct an axis-aligned solid cuboid.\n * @param {Object} [options] - options for construction\n * @param {Vector3} [options.center=[0,0,0]] - center of cube\n * @param {Vector3} [options.radius=[1,1,1]] - radius of cube, single scalar also possible\n * @returns {CSG} new 3D solid\n *\n * @example\n * let cube = CSG.cube({\n *   center: [5, 5, 5],\n *   radius: 5, // scalar radius\n * });\n */\nconst cube = function (options) {\n  let c\n  let r\n  let corner1\n  let corner2\n  options = options || {}\n  if (('corner1' in options) || ('corner2' in options)) {\n    if (('center' in options) || ('radius' in options)) {\n      throw new Error('cube: should either give a radius and center parameter, or a corner1 and corner2 parameter')\n    }\n    corner1 = parseOptionAs3DVector(options, 'corner1', [0, 0, 0])\n    corner2 = parseOptionAs3DVector(options, 'corner2', [1, 1, 1])\n    c = corner1.plus(corner2).times(0.5)\n    r = corner2.minus(corner1).times(0.5)\n  } else {\n    c = parseOptionAs3DVector(options, 'center', [0, 0, 0])\n    r = parseOptionAs3DVector(options, 'radius', [1, 1, 1])\n  }\n  r = r.abs() // negative radii make no sense\n  let result = fromPolygons([\n    [\n            [0, 4, 6, 2],\n            [-1, 0, 0]\n    ],\n    [\n            [1, 3, 7, 5],\n            [+1, 0, 0]\n    ],\n    [\n            [0, 1, 5, 4],\n            [0, -1, 0]\n    ],\n    [\n            [2, 6, 7, 3],\n            [0, +1, 0]\n    ],\n    [\n            [0, 2, 3, 1],\n            [0, 0, -1]\n    ],\n    [\n            [4, 5, 7, 6],\n            [0, 0, +1]\n    ]\n  ].map(function (info) {\n    let vertices = info[0].map(function (i) {\n      let pos = new Vector3(\n                c.x + r.x * (2 * !!(i & 1) - 1), c.y + r.y * (2 * !!(i & 2) - 1), c.z + r.z * (2 * !!(i & 4) - 1))\n      return new Vertex3(pos)\n    })\n    return new Polygon3(vertices, null /* , plane */)\n  }))\n  result.properties.cube = new Properties()\n  result.properties.cube.center = new Vector3(c)\n    // add 6 connectors, at the centers of each face:\n  result.properties.cube.facecenters = [\n    new Connector(new Vector3([r.x, 0, 0]).plus(c), [1, 0, 0], [0, 0, 1]),\n    new Connector(new Vector3([-r.x, 0, 0]).plus(c), [-1, 0, 0], [0, 0, 1]),\n    new Connector(new Vector3([0, r.y, 0]).plus(c), [0, 1, 0], [0, 0, 1]),\n    new Connector(new Vector3([0, -r.y, 0]).plus(c), [0, -1, 0], [0, 0, 1]),\n    new Connector(new Vector3([0, 0, r.z]).plus(c), [0, 0, 1], [1, 0, 0]),\n    new Connector(new Vector3([0, 0, -r.z]).plus(c), [0, 0, -1], [1, 0, 0])\n  ]\n  return result\n}\n\n/** Construct a solid sphere\n * @param {Object} [options] - options for construction\n * @param {Vector3} [options.center=[0,0,0]] - center of sphere\n * @param {Number} [options.radius=1] - radius of sphere\n * @param {Number} [options.resolution=defaultResolution3D] - number of polygons per 360 degree revolution\n * @param {Array} [options.axes] -  an array with 3 vectors for the x, y and z base vectors\n * @returns {CSG} new 3D solid\n *\n *\n * @example\n * let sphere = CSG.sphere({\n *   center: [0, 0, 0],\n *   radius: 2,\n *   resolution: 32,\n * });\n*/\nconst sphere = function (options) {\n  options = options || {}\n  let center = parseOptionAs3DVector(options, 'center', [0, 0, 0])\n  let radius = parseOptionAsFloat(options, 'radius', 1)\n  let resolution = parseOptionAsInt(options, 'resolution', defaultResolution3D)\n  let xvector, yvector, zvector\n  if ('axes' in options) {\n    xvector = options.axes[0].unit().times(radius)\n    yvector = options.axes[1].unit().times(radius)\n    zvector = options.axes[2].unit().times(radius)\n  } else {\n    xvector = new Vector3([1, 0, 0]).times(radius)\n    yvector = new Vector3([0, -1, 0]).times(radius)\n    zvector = new Vector3([0, 0, 1]).times(radius)\n  }\n  if (resolution < 4) resolution = 4\n  let qresolution = Math.round(resolution / 4)\n  let prevcylinderpoint\n  let polygons = []\n  for (let slice1 = 0; slice1 <= resolution; slice1++) {\n    let angle = Math.PI * 2.0 * slice1 / resolution\n    let cylinderpoint = xvector.times(Math.cos(angle)).plus(yvector.times(Math.sin(angle)))\n    if (slice1 > 0) {\n            // cylinder vertices:\n      let vertices = []\n      let prevcospitch, prevsinpitch\n      for (let slice2 = 0; slice2 <= qresolution; slice2++) {\n        let pitch = 0.5 * Math.PI * slice2 / qresolution\n        let cospitch = Math.cos(pitch)\n        let sinpitch = Math.sin(pitch)\n        if (slice2 > 0) {\n          vertices = []\n          vertices.push(new Vertex3(center.plus(prevcylinderpoint.times(prevcospitch).minus(zvector.times(prevsinpitch)))))\n          vertices.push(new Vertex3(center.plus(cylinderpoint.times(prevcospitch).minus(zvector.times(prevsinpitch)))))\n          if (slice2 < qresolution) {\n            vertices.push(new Vertex3(center.plus(cylinderpoint.times(cospitch).minus(zvector.times(sinpitch)))))\n          }\n          vertices.push(new Vertex3(center.plus(prevcylinderpoint.times(cospitch).minus(zvector.times(sinpitch)))))\n          polygons.push(new Polygon3(vertices))\n          vertices = []\n          vertices.push(new Vertex3(center.plus(prevcylinderpoint.times(prevcospitch).plus(zvector.times(prevsinpitch)))))\n          vertices.push(new Vertex3(center.plus(cylinderpoint.times(prevcospitch).plus(zvector.times(prevsinpitch)))))\n          if (slice2 < qresolution) {\n            vertices.push(new Vertex3(center.plus(cylinderpoint.times(cospitch).plus(zvector.times(sinpitch)))))\n          }\n          vertices.push(new Vertex3(center.plus(prevcylinderpoint.times(cospitch).plus(zvector.times(sinpitch)))))\n          vertices.reverse()\n          polygons.push(new Polygon3(vertices))\n        }\n        prevcospitch = cospitch\n        prevsinpitch = sinpitch\n      }\n    }\n    prevcylinderpoint = cylinderpoint\n  }\n  let result = fromPolygons(polygons)\n  result.properties.sphere = new Properties()\n  result.properties.sphere.center = new Vector3(center)\n  result.properties.sphere.facepoint = center.plus(xvector)\n  return result\n}\n\n/** Construct a solid cylinder.\n * @param {Object} [options] - options for construction\n * @param {Vector} [options.start=[0,-1,0]] - start point of cylinder\n * @param {Vector} [options.end=[0,1,0]] - end point of cylinder\n * @param {Number} [options.radius=1] - radius of cylinder, must be scalar\n * @param {Number} [options.resolution=defaultResolution3D] - number of polygons per 360 degree revolution\n * @returns {CSG} new 3D solid\n *\n * @example\n * let cylinder = CSG.cylinder({\n *   start: [0, -10, 0],\n *   end: [0, 10, 0],\n *   radius: 10,\n *   resolution: 16\n * });\n */\nconst cylinder = function (options) {\n  let s = parseOptionAs3DVector(options, 'start', [0, -1, 0])\n  let e = parseOptionAs3DVector(options, 'end', [0, 1, 0])\n  let r = parseOptionAsFloat(options, 'radius', 1)\n  let rEnd = parseOptionAsFloat(options, 'radiusEnd', r)\n  let rStart = parseOptionAsFloat(options, 'radiusStart', r)\n  let alpha = parseOptionAsFloat(options, 'sectorAngle', 360)\n  alpha = alpha > 360 ? alpha % 360 : alpha\n\n  if ((rEnd < 0) || (rStart < 0)) {\n    throw new Error('Radius should be non-negative')\n  }\n  if ((rEnd === 0) && (rStart === 0)) {\n    throw new Error('Either radiusStart or radiusEnd should be positive')\n  }\n\n  let slices = parseOptionAsInt(options, 'resolution', defaultResolution2D) // FIXME is this 3D?\n  let ray = e.minus(s)\n  let axisZ = ray.unit() //, isY = (Math.abs(axisZ.y) > 0.5);\n  let axisX = axisZ.randomNonParallelVector().unit()\n\n    //  let axisX = new Vector3(isY, !isY, 0).cross(axisZ).unit();\n  let axisY = axisX.cross(axisZ).unit()\n  let start = new Vertex3(s)\n  let end = new Vertex3(e)\n  let polygons = []\n\n  function point (stack, slice, radius) {\n    let angle = slice * Math.PI * alpha / 180\n    let out = axisX.times(Math.cos(angle)).plus(axisY.times(Math.sin(angle)))\n    let pos = s.plus(ray.times(stack)).plus(out.times(radius))\n    return new Vertex3(pos)\n  }\n  if (alpha > 0) {\n    for (let i = 0; i < slices; i++) {\n      let t0 = i / slices\n      let t1 = (i + 1) / slices\n      if (rEnd === rStart) {\n        polygons.push(new Polygon3([start, point(0, t0, rEnd), point(0, t1, rEnd)]))\n        polygons.push(new Polygon3([point(0, t1, rEnd), point(0, t0, rEnd), point(1, t0, rEnd), point(1, t1, rEnd)]))\n        polygons.push(new Polygon3([end, point(1, t1, rEnd), point(1, t0, rEnd)]))\n      } else {\n        if (rStart > 0) {\n          polygons.push(new Polygon3([start, point(0, t0, rStart), point(0, t1, rStart)]))\n          polygons.push(new Polygon3([point(0, t0, rStart), point(1, t0, rEnd), point(0, t1, rStart)]))\n        }\n        if (rEnd > 0) {\n          polygons.push(new Polygon3([end, point(1, t1, rEnd), point(1, t0, rEnd)]))\n          polygons.push(new Polygon3([point(1, t0, rEnd), point(1, t1, rEnd), point(0, t1, rStart)]))\n        }\n      }\n    }\n    if (alpha < 360) {\n      polygons.push(new Polygon3([start, end, point(0, 0, rStart)]))\n      polygons.push(new Polygon3([point(0, 0, rStart), end, point(1, 0, rEnd)]))\n      polygons.push(new Polygon3([start, point(0, 1, rStart), end]))\n      polygons.push(new Polygon3([point(0, 1, rStart), point(1, 1, rEnd), end]))\n    }\n  }\n  let result = fromPolygons(polygons)\n  result.properties.cylinder = new Properties()\n  result.properties.cylinder.start = new Connector(s, axisZ.negated(), axisX)\n  result.properties.cylinder.end = new Connector(e, axisZ, axisX)\n  let cylCenter = s.plus(ray.times(0.5))\n  let fptVec = axisX.rotate(s, axisZ, -alpha / 2).times((rStart + rEnd) / 2)\n  let fptVec90 = fptVec.cross(axisZ)\n    // note this one is NOT a face normal for a cone. - It's horizontal from cyl perspective\n  result.properties.cylinder.facepointH = new Connector(cylCenter.plus(fptVec), fptVec, axisZ)\n  result.properties.cylinder.facepointH90 = new Connector(cylCenter.plus(fptVec90), fptVec90, axisZ)\n  return result\n}\n\n/** Construct a cylinder with rounded ends.\n * @param {Object} [options] - options for construction\n * @param {Vector3} [options.start=[0,-1,0]] - start point of cylinder\n * @param {Vector3} [options.end=[0,1,0]] - end point of cylinder\n * @param {Number} [options.radius=1] - radius of rounded ends, must be scalar\n * @param {Vector3} [options.normal] - vector determining the starting angle for tesselation. Should be non-parallel to start.minus(end)\n * @param {Number} [options.resolution=defaultResolution3D] - number of polygons per 360 degree revolution\n * @returns {CSG} new 3D solid\n *\n * @example\n * let cylinder = CSG.roundedCylinder({\n *   start: [0, -10, 0],\n *   end: [0, 10, 0],\n *   radius: 2,\n *   resolution: 16\n * });\n */\nconst roundedCylinder = function (options) {\n  let p1 = parseOptionAs3DVector(options, 'start', [0, -1, 0])\n  let p2 = parseOptionAs3DVector(options, 'end', [0, 1, 0])\n  let radius = parseOptionAsFloat(options, 'radius', 1)\n  let direction = p2.minus(p1)\n  let defaultnormal\n  if (Math.abs(direction.x) > Math.abs(direction.y)) {\n    defaultnormal = new Vector3(0, 1, 0)\n  } else {\n    defaultnormal = new Vector3(1, 0, 0)\n  }\n  let normal = parseOptionAs3DVector(options, 'normal', defaultnormal)\n  let resolution = parseOptionAsInt(options, 'resolution', defaultResolution3D)\n  if (resolution < 4) resolution = 4\n  let polygons = []\n  let qresolution = Math.floor(0.25 * resolution)\n  let length = direction.length()\n  if (length < EPS) {\n    return sphere({\n      center: p1,\n      radius: radius,\n      resolution: resolution\n    })\n  }\n  let zvector = direction.unit().times(radius)\n  let xvector = zvector.cross(normal).unit().times(radius)\n  let yvector = xvector.cross(zvector).unit().times(radius)\n  let prevcylinderpoint\n  for (let slice1 = 0; slice1 <= resolution; slice1++) {\n    let angle = Math.PI * 2.0 * slice1 / resolution\n    let cylinderpoint = xvector.times(Math.cos(angle)).plus(yvector.times(Math.sin(angle)))\n    if (slice1 > 0) {\n            // cylinder vertices:\n      let vertices = []\n      vertices.push(new Vertex3(p1.plus(cylinderpoint)))\n      vertices.push(new Vertex3(p1.plus(prevcylinderpoint)))\n      vertices.push(new Vertex3(p2.plus(prevcylinderpoint)))\n      vertices.push(new Vertex3(p2.plus(cylinderpoint)))\n      polygons.push(new Polygon3(vertices))\n      let prevcospitch, prevsinpitch\n      for (let slice2 = 0; slice2 <= qresolution; slice2++) {\n        let pitch = 0.5 * Math.PI * slice2 / qresolution\n                // let pitch = Math.asin(slice2/qresolution);\n        let cospitch = Math.cos(pitch)\n        let sinpitch = Math.sin(pitch)\n        if (slice2 > 0) {\n          vertices = []\n          vertices.push(new Vertex3(p1.plus(prevcylinderpoint.times(prevcospitch).minus(zvector.times(prevsinpitch)))))\n          vertices.push(new Vertex3(p1.plus(cylinderpoint.times(prevcospitch).minus(zvector.times(prevsinpitch)))))\n          if (slice2 < qresolution) {\n            vertices.push(new Vertex3(p1.plus(cylinderpoint.times(cospitch).minus(zvector.times(sinpitch)))))\n          }\n          vertices.push(new Vertex3(p1.plus(prevcylinderpoint.times(cospitch).minus(zvector.times(sinpitch)))))\n          polygons.push(new Polygon3(vertices))\n          vertices = []\n          vertices.push(new Vertex3(p2.plus(prevcylinderpoint.times(prevcospitch).plus(zvector.times(prevsinpitch)))))\n          vertices.push(new Vertex3(p2.plus(cylinderpoint.times(prevcospitch).plus(zvector.times(prevsinpitch)))))\n          if (slice2 < qresolution) {\n            vertices.push(new Vertex3(p2.plus(cylinderpoint.times(cospitch).plus(zvector.times(sinpitch)))))\n          }\n          vertices.push(new Vertex3(p2.plus(prevcylinderpoint.times(cospitch).plus(zvector.times(sinpitch)))))\n          vertices.reverse()\n          polygons.push(new Polygon3(vertices))\n        }\n        prevcospitch = cospitch\n        prevsinpitch = sinpitch\n      }\n    }\n    prevcylinderpoint = cylinderpoint\n  }\n  let result = fromPolygons(polygons)\n  let ray = zvector.unit()\n  let axisX = xvector.unit()\n  result.properties.roundedCylinder = new Properties()\n  result.properties.roundedCylinder.start = new Connector(p1, ray.negated(), axisX)\n  result.properties.roundedCylinder.end = new Connector(p2, ray, axisX)\n  result.properties.roundedCylinder.facepoint = p1.plus(xvector)\n  return result\n}\n\n/** Construct an elliptic cylinder.\n * @param {Object} [options] - options for construction\n * @param {Vector3} [options.start=[0,-1,0]] - start point of cylinder\n * @param {Vector3} [options.end=[0,1,0]] - end point of cylinder\n * @param {Vector2D} [options.radius=[1,1]] - radius of rounded ends, must be two dimensional array\n * @param {Vector2D} [options.radiusStart=[1,1]] - OPTIONAL radius of rounded start, must be two dimensional array\n * @param {Vector2D} [options.radiusEnd=[1,1]] - OPTIONAL radius of rounded end, must be two dimensional array\n * @param {Number} [options.resolution=defaultResolution2D] - number of polygons per 360 degree revolution\n * @returns {CSG} new 3D solid\n *\n * @example\n *     let cylinder = CSG.cylinderElliptic({\n *       start: [0, -10, 0],\n *       end: [0, 10, 0],\n *       radiusStart: [10,5],\n *       radiusEnd: [8,3],\n *       resolution: 16\n *     });\n */\n\nconst cylinderElliptic = function (options) {\n  let s = parseOptionAs3DVector(options, 'start', [0, -1, 0])\n  let e = parseOptionAs3DVector(options, 'end', [0, 1, 0])\n  let r = parseOptionAs2DVector(options, 'radius', [1, 1])\n  let rEnd = parseOptionAs2DVector(options, 'radiusEnd', r)\n  let rStart = parseOptionAs2DVector(options, 'radiusStart', r)\n\n  if ((rEnd._x < 0) || (rStart._x < 0) || (rEnd._y < 0) || (rStart._y < 0)) {\n    throw new Error('Radius should be non-negative')\n  }\n  if ((rEnd._x === 0 || rEnd._y === 0) && (rStart._x === 0 || rStart._y === 0)) {\n    throw new Error('Either radiusStart or radiusEnd should be positive')\n  }\n\n  let slices = parseOptionAsInt(options, 'resolution', defaultResolution2D) // FIXME is this correct?\n  let ray = e.minus(s)\n  let axisZ = ray.unit() //, isY = (Math.abs(axisZ.y) > 0.5);\n  let axisX = axisZ.randomNonParallelVector().unit()\n\n    //  let axisX = new Vector3(isY, !isY, 0).cross(axisZ).unit();\n  let axisY = axisX.cross(axisZ).unit()\n  let start = new Vertex3(s)\n  let end = new Vertex3(e)\n  let polygons = []\n\n  function point (stack, slice, radius) {\n    let angle = slice * Math.PI * 2\n    let out = axisX.times(radius._x * Math.cos(angle)).plus(axisY.times(radius._y * Math.sin(angle)))\n    let pos = s.plus(ray.times(stack)).plus(out)\n    return new Vertex3(pos)\n  }\n  for (let i = 0; i < slices; i++) {\n    let t0 = i / slices\n    let t1 = (i + 1) / slices\n\n    if (rEnd._x === rStart._x && rEnd._y === rStart._y) {\n      polygons.push(new Polygon3([start, point(0, t0, rEnd), point(0, t1, rEnd)]))\n      polygons.push(new Polygon3([point(0, t1, rEnd), point(0, t0, rEnd), point(1, t0, rEnd), point(1, t1, rEnd)]))\n      polygons.push(new Polygon3([end, point(1, t1, rEnd), point(1, t0, rEnd)]))\n    } else {\n      if (rStart._x > 0) {\n        polygons.push(new Polygon3([start, point(0, t0, rStart), point(0, t1, rStart)]))\n        polygons.push(new Polygon3([point(0, t0, rStart), point(1, t0, rEnd), point(0, t1, rStart)]))\n      }\n      if (rEnd._x > 0) {\n        polygons.push(new Polygon3([end, point(1, t1, rEnd), point(1, t0, rEnd)]))\n        polygons.push(new Polygon3([point(1, t0, rEnd), point(1, t1, rEnd), point(0, t1, rStart)]))\n      }\n    }\n  }\n  let result = fromPolygons(polygons)\n  result.properties.cylinder = new Properties()\n  result.properties.cylinder.start = new Connector(s, axisZ.negated(), axisX)\n  result.properties.cylinder.end = new Connector(e, axisZ, axisX)\n  result.properties.cylinder.facepoint = s.plus(axisX.times(rStart))\n  return result\n}\n\n/** Construct an axis-aligned solid rounded cuboid.\n * @param {Object} [options] - options for construction\n * @param {Vector3} [options.center=[0,0,0]] - center of rounded cube\n * @param {Vector3} [options.radius=[1,1,1]] - radius of rounded cube, single scalar is possible\n * @param {Number} [options.roundradius=0.2] - radius of rounded edges\n * @param {Number} [options.resolution=defaultResolution3D] - number of polygons per 360 degree revolution\n * @returns {CSG} new 3D solid\n *\n * @example\n * let cube = CSG.roundedCube({\n *   center: [2, 0, 2],\n *   radius: 15,\n *   roundradius: 2,\n *   resolution: 36,\n * });\n */\nconst roundedCube = function (options) {\n  let minRR = 1e-2 // minroundradius 1e-3 gives rounding errors already\n  let center\n  let cuberadius\n  let corner1\n  let corner2\n  options = options || {}\n  if (('corner1' in options) || ('corner2' in options)) {\n    if (('center' in options) || ('radius' in options)) {\n      throw new Error('roundedCube: should either give a radius and center parameter, or a corner1 and corner2 parameter')\n    }\n    corner1 = parseOptionAs3DVector(options, 'corner1', [0, 0, 0])\n    corner2 = parseOptionAs3DVector(options, 'corner2', [1, 1, 1])\n    center = corner1.plus(corner2).times(0.5)\n    cuberadius = corner2.minus(corner1).times(0.5)\n  } else {\n    center = parseOptionAs3DVector(options, 'center', [0, 0, 0])\n    cuberadius = parseOptionAs3DVector(options, 'radius', [1, 1, 1])\n  }\n  cuberadius = cuberadius.abs() // negative radii make no sense\n  let resolution = parseOptionAsInt(options, 'resolution', defaultResolution3D)\n  if (resolution < 4) resolution = 4\n  if (resolution % 2 === 1 && resolution < 8) resolution = 8 // avoid ugly\n  let roundradius = parseOptionAs3DVector(options, 'roundradius', [0.2, 0.2, 0.2])\n    // slight hack for now - total radius stays ok\n  roundradius = Vector3.Create(Math.max(roundradius.x, minRR), Math.max(roundradius.y, minRR), Math.max(roundradius.z, minRR))\n  let innerradius = cuberadius.minus(roundradius)\n  if (innerradius.x < 0 || innerradius.y < 0 || innerradius.z < 0) {\n    throw new Error('roundradius <= radius!')\n  }\n  let res = sphere({radius: 1, resolution: resolution})\n  res = res.scale(roundradius)\n  innerradius.x > EPS && (res = res.stretchAtPlane([1, 0, 0], [0, 0, 0], 2 * innerradius.x))\n  innerradius.y > EPS && (res = res.stretchAtPlane([0, 1, 0], [0, 0, 0], 2 * innerradius.y))\n  innerradius.z > EPS && (res = res.stretchAtPlane([0, 0, 1], [0, 0, 0], 2 * innerradius.z))\n  res = res.translate([-innerradius.x + center.x, -innerradius.y + center.y, -innerradius.z + center.z])\n  res = res.reTesselated()\n  res.properties.roundedCube = new Properties()\n  res.properties.roundedCube.center = new Vertex3(center)\n  res.properties.roundedCube.facecenters = [\n    new Connector(new Vector3([cuberadius.x, 0, 0]).plus(center), [1, 0, 0], [0, 0, 1]),\n    new Connector(new Vector3([-cuberadius.x, 0, 0]).plus(center), [-1, 0, 0], [0, 0, 1]),\n    new Connector(new Vector3([0, cuberadius.y, 0]).plus(center), [0, 1, 0], [0, 0, 1]),\n    new Connector(new Vector3([0, -cuberadius.y, 0]).plus(center), [0, -1, 0], [0, 0, 1]),\n    new Connector(new Vector3([0, 0, cuberadius.z]).plus(center), [0, 0, 1], [1, 0, 0]),\n    new Connector(new Vector3([0, 0, -cuberadius.z]).plus(center), [0, 0, -1], [1, 0, 0])\n  ]\n  return res\n}\n\n/** Create a polyhedron using Openscad style arguments.\n * Define face vertices clockwise looking from outside.\n * @param {Object} [options] - options for construction\n * @returns {CSG} new 3D solid\n */\nconst polyhedron = function (options) {\n  options = options || {}\n  if (('points' in options) !== ('faces' in options)) {\n    throw new Error(\"polyhedron needs 'points' and 'faces' arrays\")\n  }\n  let vertices = parseOptionAs3DVectorList(options, 'points', [\n            [1, 1, 0],\n            [1, -1, 0],\n            [-1, -1, 0],\n            [-1, 1, 0],\n            [0, 0, 1]\n  ])\n        .map(function (pt) {\n          return new Vertex3(pt)\n        })\n  let faces = parseOption(options, 'faces', [\n            [0, 1, 4],\n            [1, 2, 4],\n            [2, 3, 4],\n            [3, 0, 4],\n            [1, 0, 3],\n            [2, 1, 3]\n  ])\n    // Openscad convention defines inward normals - so we have to invert here\n  faces.forEach(function (face) {\n    face.reverse()\n  })\n  let polygons = faces.map(function (face) {\n    return new Polygon3(face.map(function (idx) {\n      return vertices[idx]\n    }))\n  })\n\n    // TODO: facecenters as connectors? probably overkill. Maybe centroid\n    // the re-tesselation here happens because it's so easy for a user to\n    // create parametrized polyhedrons that end up with 1-2 dimensional polygons.\n    // These will create infinite loops at CSG.Tree()\n  return fromPolygons(polygons).reTesselated()\n}\n\nmodule.exports = {\n  cube,\n  sphere,\n  roundedCube,\n  cylinder,\n  roundedCylinder,\n  cylinderElliptic,\n  polyhedron\n}\n","const CSG = require('../core/CSG')\nconst {cube} = require('./primitives3d')\n\n// For debugging\n// Creates a new solid with a tiny cube at every vertex of the source solid\n// this is seperated from the CSG class itself because of the dependency on cube\nconst toPointCloud = function (csg, cuberadius) {\n  csg = csg.reTesselated()\n\n  let result = new CSG()\n\n    // make a list of all unique vertices\n    // For each vertex we also collect the list of normals of the planes touching the vertices\n  let vertexmap = {}\n  csg.polygons.map(function (polygon) {\n    polygon.vertices.map(function (vertex) {\n      vertexmap[vertex.getTag()] = vertex.pos\n    })\n  })\n\n  for (let vertextag in vertexmap) {\n    let pos = vertexmap[vertextag]\n    let _cube = cube({\n      center: pos,\n      radius: cuberadius\n    })\n    result = result.unionSub(_cube, false, false)\n  }\n  result = result.reTesselated()\n  return result\n}\n\nmodule.exports = {toPointCloud}\n","/*\n## License\n\nCopyright (c) 2014 bebbi (elghatta@gmail.com)\nCopyright (c) 2013 Eduard Bespalov (edwbes@gmail.com)\nCopyright (c) 2012 Joost Nieuwenhuijse (joost@newhouse.nl)\nCopyright (c) 2011 Evan Wallace (http://evanw.github.com/csg.js/)\nCopyright (c) 2012 Alexandre Girard (https://github.com/alx)\n\nAll code released under MIT license\n\n## Overview\n\nFor an overview of the CSG process see the original csg.js code:\nhttp://evanw.github.com/csg.js/\n\nCSG operations through BSP trees suffer from one problem: heavy fragmentation\nof polygons. If two CSG solids of n polygons are unified, the resulting solid may have\nin the order of n*n polygons, because each polygon is split by the planes of all other\npolygons. After a few operations the number of polygons explodes.\n\nThis version of CSG.js solves the problem in 3 ways:\n\n1. Every polygon split is recorded in a tree (CSG.PolygonTreeNode). This is a separate\ntree, not to be confused with the CSG tree. If a polygon is split into two parts but in\nthe end both fragments have not been discarded by the CSG operation, we can retrieve\nthe original unsplit polygon from the tree, instead of the two fragments.\n\nThis does not completely solve the issue though: if a polygon is split multiple times\nthe number of fragments depends on the order of subsequent splits, and we might still\nend up with unncessary splits:\nSuppose a polygon is first split into A and B, and then into A1, B1, A2, B2. Suppose B2 is\ndiscarded. We will end up with 2 polygons: A and B1. Depending on the actual split boundaries\nwe could still have joined A and B1 into one polygon. Therefore a second approach is used as well:\n\n2. After CSG operations all coplanar polygon fragments are joined by a retesselating\noperation. See CSG.reTesselated(). Retesselation is done through a\nlinear sweep over the polygon surface. The sweep line passes over the y coordinates\nof all vertices in the polygon. Polygons are split at each sweep line, and the fragments\nare joined horizontally and vertically into larger polygons (making sure that we\nwill end up with convex polygons).\nThis still doesn't solve the problem completely: due to floating point imprecisions\nwe may end up with small gaps between polygons, and polygons may not be exactly coplanar\nanymore, and as a result the retesselation algorithm may fail to join those polygons.\nTherefore:\n\n3. A canonicalization algorithm is implemented: it looks for vertices that have\napproximately the same coordinates (with a certain tolerance, say 1e-5) and replaces\nthem with the same vertex. If polygons share a vertex they will actually point to the\nsame CSG.Vertex instance. The same is done for polygon planes. See CSG.canonicalized().\n\nPerformance improvements to the original CSG.js:\n\nReplaced the flip() and invert() methods by flipped() and inverted() which don't\nmodify the source object. This allows to get rid of all clone() calls, so that\nmultiple polygons can refer to the same CSG.Plane instance etc.\n\nThe original union() used an extra invert(), clipTo(), invert() sequence just to remove the\ncoplanar front faces from b; this is now combined in a single b.clipTo(a, true) call.\n\nDetection whether a polygon is in front or in back of a plane: for each polygon\nwe are caching the coordinates of the bounding sphere. If the bounding sphere is\nin front or in back of the plane we don't have to check the individual vertices\nanymore.\n\nOther additions to the original CSG.js:\n\nCSG.Vector class has been renamed into CSG.Vector3D\n\nClasses for 3D lines, 2D vectors, 2D lines, and methods to find the intersection of\na line and a plane etc.\n\nTransformations: CSG.transform(), CSG.translate(), CSG.rotate(), CSG.scale()\n\nExpanding or contracting a solid: CSG.expand() and CSG.contract(). Creates nice\nsmooth corners.\n\nThe vertex normal has been removed since it complicates retesselation. It's not needed\nfor solid CAD anyway.\n\n*/\n\nconst {addTransformationMethodsToPrototype, addCenteringToPrototype} = require('./src/core/mutators')\nlet CSG = require('./src/core/CSG')\nlet CAG = require('./src/core/CAG')\n\n// FIXME: how many are actual usefull to be exposed as API ?? looks like a code smell\nconst { _CSGDEBUG,\n  defaultResolution2D,\n  defaultResolution3D,\n  EPS,\n  angleEPS,\n  areaEPS,\n  all,\n  top,\n  bottom,\n  left,\n  right,\n  front,\n  back,\n  staticTag,\n  getTag} = require('./src/core/constants')\n\nCSG._CSGDEBUG = _CSGDEBUG\nCSG.defaultResolution2D = defaultResolution2D\nCSG.defaultResolution3D = defaultResolution3D\nCSG.EPS = EPS\nCSG.angleEPS = angleEPS\nCSG.areaEPS = areaEPS\nCSG.all = all\nCSG.top = top\nCSG.bottom = bottom\nCSG.left = left\nCSG.right = right\nCSG.front = front\nCSG.back = back\nCSG.staticTag = staticTag\nCSG.getTag = getTag\n\n// eek ! all this is kept for backwards compatibility...for now\nCSG.Vector2D = require('./src/core/math/Vector2')\nCSG.Vector3D = require('./src/core/math/Vector3')\nCSG.Vertex = require('./src/core/math/Vertex3')\nCAG.Vertex = require('./src/core/math/Vertex2')\nCSG.Plane = require('./src/core/math/Plane')\nCSG.Polygon = require('./src/core/math/Polygon3')\nCSG.Polygon2D = require('./src/core/math/Polygon2')\nCSG.Line2D = require('./src/core/math/Line2')\nCSG.Line3D = require('./src/core/math/Line3')\nCSG.Path2D = require('./src/core/math/Path2')\nCSG.OrthoNormalBasis = require('./src/core/math/OrthoNormalBasis')\nCSG.Matrix4x4 = require('./src/core/math/Matrix4')\n\nCAG.Side = require('./src/core/math/Side')\n\nCSG.Connector = require('./src/core/connectors').Connector\nCSG.ConnectorList = require('./src/core/connectors').ConnectorList\nCSG.Properties = require('./src/core/Properties')\n\nconst {circle, ellipse, rectangle, roundedRectangle} = require('./src/api/primitives2d')\nconst {sphere, cube, roundedCube, cylinder, roundedCylinder, cylinderElliptic, polyhedron} = require('./src/api/primitives3d')\n\nCSG.sphere = sphere\nCSG.cube = cube\nCSG.roundedCube = roundedCube\nCSG.cylinder = cylinder\nCSG.roundedCylinder = roundedCylinder\nCSG.cylinderElliptic = cylinderElliptic\nCSG.polyhedron = polyhedron\n\nCAG.circle = circle\nCAG.ellipse = ellipse\nCAG.rectangle = rectangle\nCAG.roundedRectangle = roundedRectangle\n\n// injecting factories\nconst {fromPolygons, fromCompactBinary, fromObject, fromSlices} = require('./src/core/CSGFactories')\nCSG.fromCompactBinary = fromCompactBinary\nCSG.fromObject = fromObject\nCSG.fromSlices = fromSlices\nCSG.fromPolygons = fromPolygons\n\nCSG.toPointCloud = require('./src/api/debugHelpers').toPointCloud\n\nconst CAGFactories = require('./src/core/CAGFactories')\nCAG.fromSides = CAGFactories.fromSides\nCAG.fromObject = CAGFactories.fromObject\nCAG.fromPoints = CAGFactories.fromPoints\nCAG.fromPointsNoCheck = CAGFactories.fromPointsNoCheck\nCAG.fromPath2 = CAGFactories.fromPath2\nCAG.fromFakeCSG = CAGFactories.fromFakeCSG\nCAG.fromCompactBinary = CAGFactories.fromCompactBinary\n\n/// ////////////////////////////////////\n// option parsers\nconst optionsParsers = require('./src/api/optionParsers')\n\n// ////////////////////////////////////\naddTransformationMethodsToPrototype(CSG.prototype)\naddTransformationMethodsToPrototype(CSG.Vector2D.prototype)\naddTransformationMethodsToPrototype(CSG.Vector3D.prototype)\naddTransformationMethodsToPrototype(CSG.Vertex.prototype)\naddTransformationMethodsToPrototype(CSG.Plane.prototype)\naddTransformationMethodsToPrototype(CSG.Polygon.prototype)\naddTransformationMethodsToPrototype(CSG.Line2D.prototype)\naddTransformationMethodsToPrototype(CSG.Line3D.prototype)\naddTransformationMethodsToPrototype(CSG.Path2D.prototype)\naddTransformationMethodsToPrototype(CSG.OrthoNormalBasis.prototype)\naddTransformationMethodsToPrototype(CSG.Connector.prototype)\n\naddTransformationMethodsToPrototype(CAG.prototype)\naddTransformationMethodsToPrototype(CAG.Side.prototype)\naddTransformationMethodsToPrototype(CAG.Vertex.prototype)\n\nCSG.parseOptionAs2DVector = optionsParsers.parseOptionAs3DVector\nCSG.parseOptionAs3DVector = optionsParsers.parseOptionAs3DVector\nCSG.parseOptionAs3DVectorList = optionsParsers.parseOptionAs3DVectorList\nCSG.parseOptionAsBool = optionsParsers.parseOptionAsBool\nCSG.parseOptionAsFloat = optionsParsers.parseOptionAsFloat\nCSG.parseOptionAsInt = optionsParsers.parseOptionAsInt\n// this is needed for now, otherwise there are missing features in Polygon2D\nCSG.Polygon2D.prototype = CAG.prototype\n\n// utilities\nconst {isCAG, isCSG} = require('./src/core/utils')\n\nconst globalApi = Object.assign({}, {CSG, CAG}, optionsParsers, {isCAG, isCSG})\n\nmodule.exports = globalApi\n","const {CAG} = require('../../csg')// we have to import from top level otherwise prototypes are not complete..\nconst {fromPoints} = require('../core/CAGFactories')\n\n/** Construct a square/rectangle\n * @param {Object} [options] - options for construction\n * @param {Float} [options.size=1] - size of the square, either as array or scalar\n * @param {Boolean} [options.center=true] - wether to center the square/rectangle or not\n * @returns {CAG} new square\n *\n * @example\n * let square1 = square({\n *   size: 10\n * })\n */\nfunction square () {\n  let v = [1, 1]\n  let off\n  let a = arguments\n  let params = a[0]\n\n  if (params && Number.isFinite(params)) v = [params, params]\n  if (params && params.length) {\n    v = a[0]\n    params = a[1]\n  }\n  if (params && params.size && params.size.length) v = params.size\n\n  off = [v[0] / 2, v[1] / 2]\n  if (params && params.center === true) off = [0, 0]\n\n  return CAG.rectangle({center: off, radius: [v[0] / 2, v[1] / 2]})\n}\n\n/** Construct a circle\n * @param {Object} [options] - options for construction\n * @param {Float} [options.r=1] - radius of the circle\n * @param {Integer} [options.fn=32] - segments of circle (ie quality/ resolution)\n * @param {Boolean} [options.center=true] - wether to center the circle or not\n * @returns {CAG} new circle\n *\n * @example\n * let circle1 = circle({\n *   r: 10\n * })\n */\nfunction circle (params) {\n  const defaults = {\n    r: 1,\n    fn: 32,\n    center: false\n  }\n  let {r, fn, center} = Object.assign({}, defaults, params)\n  if (params && !params.r && !params.fn && !params.center) r = params\n  let offset = center === true ? [0, 0] : [r, r]\n  return CAG.circle({center: offset, radius: r, resolution: fn})\n}\n\n/** Construct a polygon either from arrays of paths and points,\n * or just arrays of points nested paths (multiple paths) and flat paths are supported\n * @param {Object} [options] - options for construction or either flat or nested array of points\n * @param {Array} [options.points] - points of the polygon : either flat or nested array of points\n * @param {Array} [options.paths] - paths of the polygon : either flat or nested array of points index\n * @returns {CAG} new polygon\n *\n * @example\n * let roof = [[10,11], [0,11], [5,20]]\n * let wall = [[0,0], [10,0], [10,10], [0,10]]\n *\n * let poly = polygon(roof)\n * or\n * let poly = polygon([roof, wall])\n * or\n * let poly = polygon({ points: roof })\n * or\n * let poly = polygon({ points: [roof, wall] })\n * or\n * let poly = polygon({ points: roof, path: [0, 1, 2] })\n * or\n * let poly = polygon({ points: [roof, wall], path: [[0, 1, 2], [3, 4, 5, 6]] })\n * or\n * let poly = polygon({ points: roof.concat(wall), paths: [[0, 1, 2], [3, 4, 5], [3, 6, 5]] })\n */\nfunction polygon (params) { // array of po(ints) and pa(ths)\n  let points = []\n  if (params.paths && params.paths.length && params.paths[0].length) { // pa(th): [[0,1,2],[2,3,1]] (two paths)\n    if (typeof params.points[0][0] !== 'number') { // flatten points array\n      params.points = params.points.reduce((a, b) => a.concat(b))\n    }\n    params.paths.forEach((path, i) => {\n      points.push([])\n      path.forEach(j => points[i].push(params.points[j]))\n    })\n  } else if (params.paths && params.paths.length) { // pa(th): [0,1,2,3,4] (single path)\n    params.paths.forEach(i => points.push(params.points[i]))\n  } else { // pa(th) = po(ints)\n    if (params.length) {\n      points = params\n    } else {\n      points = params.points\n    }\n  }\n  return fromPoints(points)\n}\n\n// FIXME: errr this is kinda just a special case of a polygon , why do we need it ?\n/** Construct a triangle\n * @returns {CAG} new triangle\n *\n * @example\n * let triangle = trangle({\n *   length: 10\n * })\n */\nfunction triangle () {\n  let a = arguments\n  if (a[0] && a[0].length) a = a[0]\n  return fromPoints(a)\n}\n\nmodule.exports = {\n  circle,\n  square,\n  polygon,\n  triangle\n}\n","const Matrix4 = require('../core/math/Matrix4')\nconst Plane = require('../core/math/Plane')\nconst Vector3 = require('../core/math/Vector3')\nconst { union } = require('./ops-booleans')\nconst { fromPoints } = require('../core/CAGFactories')\nconst { isCAG } = require('../core/utils')\n// -- 3D transformations (OpenSCAD like notion)\n\n/** translate an object in 2D/3D space\n * @param {Object} vector - 3D vector to translate the given object(s) by\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to translate\n * @returns {CSG} new CSG object , translated by the given amount\n *\n * @example\n * let movedSphere = translate([10,2,0], sphere())\n */\nfunction translate (vector, ...objects) {      // v, obj or array\n  // workaround needed to determine if we are dealing with an array of objects\n  const _objects = (objects.length >= 1 && objects[0].length) ? objects[0] : objects\n  let object = _objects[0]\n\n  if (_objects.length > 1) {\n    for (let i = 1; i < _objects.length; i++) { // FIXME/ why is union really needed ??\n      object = object.union(_objects[i])\n    }\n  }\n  return object.translate(vector)\n}\n\n/** scale an object in 2D/3D space\n * @param {Float|Array} scale - either an array or simple number to scale object(s) by\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to scale\n * @returns {CSG} new CSG object , scaled by the given amount\n *\n * @example\n * let scaledSphere = scale([0.2,15,1], sphere())\n */\nfunction scale (scale, ...objects) {         // v, obj or array\n  const _objects = (objects.length >= 1 && objects[0].length) ? objects[0] : objects\n  let object = _objects[0]\n\n  if (_objects.length > 1) {\n    for (let i = 1; i < _objects.length; i++) { // FIXME/ why is union really needed ??\n      object = object.union(_objects[i])\n    }\n  }\n  return object.scale(scale)\n}\n\n/** rotate an object in 2D/3D space\n * @param {Float|Array} rotation - either an array or simple number to rotate object(s) by\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to rotate\n * @returns {CSG} new CSG object , rotated by the given amount\n *\n * @example\n * let rotatedSphere = rotate([0.2,15,1], sphere())\n */\nfunction rotate () {\n  let o\n  let i\n  let v\n  let r = 1\n  let a = arguments\n  if (!a[0].length) {        // rotate(r,[x,y,z],o)\n    r = a[0]\n    v = a[1]\n    i = 2\n    if (a[2].length) { a = a[2]; i = 0 }\n  } else {                   // rotate([x,y,z],o)\n    v = a[0]\n    i = 1\n    if (a[1].length) { a = a[1]; i = 0 }\n  }\n  for (o = a[i++]; i < a.length; i++) {\n    o = o.union(a[i])\n  }\n  if (r !== 1) {\n    return o.rotate([0, 0, 0], v, r)\n  } else {\n    return o.rotateX(v[0]).rotateY(v[1]).rotateZ(v[2])\n  }\n}\n\n/** apply the given matrix transform to the given objects\n * @param {Array} matrix - the 4x4 matrix to apply, as a simple 1d array of 16 elements\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to transform\n * @returns {CSG} new CSG object , transformed\n *\n * @example\n * const angle = 45\n * let transformedShape = transform([\n * cos(angle), -sin(angle), 0, 10,\n * sin(angle),  cos(angle), 0, 20,\n * 0         ,           0, 1, 30,\n * 0,           0, 0,  1\n * ], sphere())\n */\nfunction transform (matrix, ...objects) { // v, obj or array\n  const _objects = (objects.length >= 1 && objects[0].length) ? objects[0] : objects\n  let object = _objects[0]\n\n  if (_objects.length > 1) {\n    for (let i = 1; i < _objects.length; i++) { // FIXME/ why is union really needed ??\n      object = object.union(_objects[i])\n    }\n  }\n\n  let transformationMatrix\n  if (!Array.isArray(matrix)) {\n    throw new Error('Matrix needs to be an array')\n  }\n  matrix.forEach(element => {\n    if (!Number.isFinite(element)) {\n      throw new Error('you can only use a flat array of valid, finite numbers (float and integers)')\n    }\n  })\n  transformationMatrix = new Matrix4(matrix)\n  return object.transform(transformationMatrix)\n}\n\n\n/**\n * Center the given object(s) about the given axes\n * @param {Array|Boolean} axes=[true,true,true]|true  - an array of boolean values that indicate the axes (X,Y,Z) to center upon. A single boolean is also allowed.\n * @param {...Object} object one or more objects to center, i.e. objects are CSG or CAG\n * @returns {CSG} new CSG object , translated by the given amount\n *\n * @example\n * let csg = center([true,false,false], sphere()) // center about the X axis\n */\nfunction center (axes, ...objects) {\n  const _objects = (objects.length >= 1 && objects[0].length) ? objects[0] : objects\n  let object = _objects[0]\n\n  if (_objects.length > 1) {\n    for (let i = 1; i < _objects.length; i++) { // FIXME/ why is union really needed ??\n      object = object.union(_objects[i])\n    }\n  }\n  if (! Array.isArray(axes)) {\n    axes = [axes,axes,axes]\n  }\n  return object.center(axes)\n}\n\n/** mirror an object in 2D/3D space\n * @param {Array} vector - the axes to mirror the object(s) by\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to mirror\n * @returns {CSG} new CSG object , mirrored\n *\n * @example\n * let rotatedSphere = mirror([0.2,15,1], sphere())\n */\nfunction mirror (vector, ...objects) {\n  const _objects = (objects.length >= 1 && objects[0].length) ? objects[0] : objects\n  let object = _objects[0]\n\n  if (_objects.length > 1) {\n    for (let i = 1; i < _objects.length; i++) { // FIXME/ why is union really needed ??\n      object = object.union(_objects[i])\n    }\n  }\n  const plane = new Plane(new Vector3(vector[0], vector[1], vector[2]).unit(), 0)\n  return object.mirrored(plane)\n}\n\n/** expand an object in 2D/3D space\n * @param {float} radius - the radius to expand by\n * @param {Object} object a CSG/CAG objects to expand\n * @returns {CSG/CAG} new CSG/CAG object , expanded\n *\n * @example\n * let expanededShape = expand([0.2,15,1], sphere())\n */\nfunction expand (radius, n, object) {\n  return object.expand(radius, n)\n}\n\n/** contract an object(s) in 2D/3D space\n * @param {float} radius - the radius to contract by\n * @param {Object} object a CSG/CAG objects to contract\n * @returns {CSG/CAG} new CSG/CAG object , contracted\n *\n * @example\n * let contractedShape = contract([0.2,15,1], sphere())\n */\nfunction contract (radius, n, object) {\n  return object.contract(radius, n)\n}\n\n/** create a minkowski sum of the given shapes\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to create a hull around\n * @returns {CSG} new CSG object , mirrored\n *\n * @example\n * let hulled = hull(rect(), circle())\n */\nfunction minkowski () {\n  console.log('minkowski() not yet implemented')\n}\n\n/** create a convex hull of the given shapes\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to create a hull around\n * @returns {CSG} new CSG object , a hull around the given shapes\n *\n * @example\n * let hulled = hull(rect(), circle())\n */\nfunction hull () {\n  let pts = []\n\n  let a = arguments\n  if (a[0].length) a = a[0]\n  let done = []\n\n  for (let i = 0; i < a.length; i++) {              // extract all points of the CAG in the argument list\n    let cag = a[i]\n    if (!isCAG(cag)) {\n      throw new Error('ERROR: hull() accepts only 2D forms / CAG')\n    }\n    for (let j = 0; j < cag.sides.length; j++) {\n      let x = cag.sides[j].vertex0.pos.x\n      let y = cag.sides[j].vertex0.pos.y\n      // avoid some coord to appear multiple times\n      if (done['' + x + ',' + y]) {\n        continue\n      }\n      pts.push({ x: x, y: y })\n      done['' + x + ',' + y]++\n         // echo(x,y);\n    }\n  }\n   // echo(pts.length+\" points in\",pts);\n\n   // from http://www.psychedelicdevelopment.com/grahamscan/\n   //    see also at https://github.com/bkiers/GrahamScan/blob/master/src/main/cg/GrahamScan.java\n  let ConvexHullPoint = function (i, a, d) {\n    this.index = i\n    this.angle = a\n    this.distance = d\n\n    this.compare = function (p) {\n      if (this.angle < p.angle) {\n        return -1\n      } else if (this.angle > p.angle) {\n        return 1\n      } else {\n        if (this.distance < p.distance) {\n          return -1\n        } else if (this.distance > p.distance) {\n          return 1\n        }\n      }\n      return 0\n    }\n  }\n\n  let ConvexHull = function () {\n    this.points = null\n    this.indices = null\n\n    this.getIndices = function () {\n      return this.indices\n    }\n\n    this.clear = function () {\n      this.indices = null\n      this.points = null\n    }\n\n    this.ccw = function (p1, p2, p3) {\n      let ccw = (this.points[p2].x - this.points[p1].x) * (this.points[p3].y - this.points[p1].y) -\n                   (this.points[p2].y - this.points[p1].y) * (this.points[p3].x - this.points[p1].x)\n      // we need this, otherwise sorting never ends, see https://github.com/Spiritdude/OpenJSCAD.org/issues/18\n      if (ccw < 1e-5) {\n        return 0\n      }\n      return ccw\n    }\n\n    this.angle = function (o, a) {\n         // return Math.atan((this.points[a].y-this.points[o].y) / (this.points[a].x - this.points[o].x));\n      return Math.atan2((this.points[a].y - this.points[o].y), (this.points[a].x - this.points[o].x))\n    }\n\n    this.distance = function (a, b) {\n      return ((this.points[b].x - this.points[a].x) * (this.points[b].x - this.points[a].x) +\n                 (this.points[b].y - this.points[a].y) * (this.points[b].y - this.points[a].y))\n    }\n\n    this.compute = function (_points) {\n      this.indices = null\n      if (_points.length < 3) {\n        return\n      }\n      this.points = _points\n\n         // Find the lowest point\n      let min = 0\n      for (let i = 1; i < this.points.length; i++) {\n        if (this.points[i].y === this.points[min].y) {\n          if (this.points[i].x < this.points[min].x) {\n            min = i\n          }\n        } else if (this.points[i].y < this.points[min].y) {\n          min = i\n        }\n      }\n\n         // Calculate angle and distance from base\n      let al = []\n      let ang = 0.0\n      let dist = 0.0\n      for (let i = 0; i < this.points.length; i++) {\n        if (i === min) {\n          continue\n        }\n        ang = this.angle(min, i)\n        if (ang < 0) {\n          ang += Math.PI\n        }\n        dist = this.distance(min, i)\n        al.push(new ConvexHullPoint(i, ang, dist))\n      }\n\n      al.sort(function (a, b) { return a.compare(b) })\n\n         // Create stack\n      let stack = new Array(this.points.length + 1)\n      let j = 2\n      for (let i = 0; i < this.points.length; i++) {\n        if (i === min) {\n          continue\n        }\n        stack[j] = al[j - 2].index\n        j++\n      }\n      stack[0] = stack[this.points.length]\n      stack[1] = min\n\n      let tmp\n      let M = 2\n      for (let i = 3; i <= this.points.length; i++) {\n        while (this.ccw(stack[M - 1], stack[M], stack[i]) <= 0) {\n          M--\n        }\n        M++\n        tmp = stack[i]\n        stack[i] = stack[M]\n        stack[M] = tmp\n      }\n\n      this.indices = new Array(M)\n      for (let i = 0; i < M; i++) {\n        this.indices[i] = stack[i + 1]\n      }\n    }\n  }\n\n  let hull = new ConvexHull()\n\n  hull.compute(pts)\n  let indices = hull.getIndices()\n\n  if (indices && indices.length > 0) {\n    let ch = []\n    for (let i = 0; i < indices.length; i++) {\n      ch.push(pts[indices[i]])\n    }\n    return fromPoints(ch)\n  }\n}\n\n/** create a chain hull of the given shapes\n * Originally \"Whosa whatsis\" suggested \"Chain Hull\" ,\n * as described at https://plus.google.com/u/0/105535247347788377245/posts/aZGXKFX1ACN\n * essentially hull A+B, B+C, C+D and then union those\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to create a chain hull around\n * @returns {CSG} new CSG object ,which a chain hull of the inputs\n *\n * @example\n * let hulled = chain_hull(rect(), circle())\n */\nfunction chain_hull (params, objects) {\n  /*\n  const defaults = {\n    closed: false\n  }\n  const closed = Object.assign({}, defaults, params) */\n  let a = arguments\n  let closed = false\n  let j = 0\n\n  if (a[j].closed !== undefined) {\n    closed = a[j++].closed\n  }\n\n  if (a[j].length) { a = a[j] }\n\n  let hulls = []\n  let hullsAmount = a.length - (closed ? 0 : 1)\n  for (let i = 0; i < hullsAmount; i++) {\n    hulls.push(hull(a[i], a[(i + 1) % a.length]))\n  }\n  return union(hulls)\n}\n\nmodule.exports = {\n  translate,\n  center,\n  scale,\n  rotate,\n  transform,\n  mirror,\n  expand,\n  contract,\n  minkowski,\n  hull,\n  chain_hull\n}\n","\r\ndeclare var require: any\r\n\r\nconst {CSG} = require('@jscad/csg/csg')\r\nconst { circle } = require('@jscad/csg/src/api/primitives2d-api')\r\nconst { rotate_extrude } = require('@jscad/csg/src/api/ops-extrusions')\r\nconst { translate, scale } = require('@jscad/csg/src/api/ops-transformations')\r\nconst Polygon3 = require('@jscad/csg/src/core/math/Polygon3')\r\nconst Vector3 = require('@jscad/csg/src/core/math/Vector3')\r\nconst Vertex3 = require('@jscad/csg/src/core/math/Vertex3')\r\n\r\nexport namespace jscadLocal {\r\n/** Construct a cuboid\r\n * @param {Object} [options] - options for construction\r\n * @param {Float} [options.size=1] - size of the side of the cuboid : can be either:\r\n * - a scalar : ie a single float, in which case all dimensions will be the same\r\n * - or an array: to specify different dimensions along x/y/z\r\n * @param {Integer} [options.fn=32] - segments of the sphere (ie quality/resolution)\r\n * @param {Integer} [options.fno=32] - segments of extrusion (ie quality)\r\n * @param {String} [options.type='normal'] - type of sphere : either 'normal' or 'geodesic'\r\n * @returns {CSG} new sphere\r\n *\r\n * @example\r\n * let cube1 = cube({\r\n *   r: 10,\r\n *   fn: 20\r\n * })\r\n */\r\nexport function cube (params) {\r\n  const defaults = {\r\n    size: 1,\r\n    offset: [0, 0, 0],\r\n    round: false,\r\n    radius: 0,\r\n    fn: 8\r\n  }\r\n\r\n  let {round, radius, fn, size} = Object.assign({}, defaults, params)\r\n  let offset = [0, 0, 0]\r\n  let v = null\r\n  if (params && params.length) v = params\r\n  if (params && params.size && params.size.length) v = params.size // { size: [1,2,3] }\r\n  if (params && params.size && !params.size.length) size = params.size // { size: 1 }\r\n  if (params && (typeof params !== 'object')) size = params// (2)\r\n  if (params && params.round === true) {\r\n    round = true\r\n    radius = v && v.length ? (v[0] + v[1] + v[2]) / 30 : size / 10\r\n  }\r\n  if (params && params.radius) {\r\n    round = true\r\n    radius = params.radius\r\n  }\r\n\r\n  let x = size\r\n  let y = size\r\n  let z = size\r\n  if (v && v.length) {\r\n    [x, y, z] = v\r\n  }\r\n  offset = [x / 2, y / 2, z / 2] // center: false default\r\n  let object = round ?\r\n    CSG.roundedCube({\r\n      radius: [x / 2, y / 2, z / 2],\r\n      roundradius: radius,\r\n      resolution: fn\r\n    }) :\r\n    CSG.cube({\r\n      radius: [x / 2, y / 2, z / 2]\r\n    })\r\n  if (params && params.offset && params.offset.length) {\r\n    offset = [params.offset[0], params.offset[1], params.offset[2]]\r\n  } else if (params && params.center && params.center.length) {\r\n    offset = [params.center[0] ? 0 : x / 2, params.center[1] ? 0 : y / 2, params.center[2] ? 0 : z / 2]\r\n  } else if (params && params.center === true) {\r\n    offset = [0, 0, 0]\r\n  } else if (params && params.center === false) {\r\n    offset = [x / 2, y / 2, z / 2]\r\n  }\r\n  return (offset[0] || offset[1] || offset[2]) ? translate(offset, object) : object\r\n}\r\n\r\n/** Construct a sphere\r\n * @param {Object} [options] - options for construction\r\n * @param {Float} [options.r=1] - radius of the sphere\r\n * @param {Integer} [options.fn=32] - segments of the sphere (ie quality/resolution)\r\n * @param {Integer} [options.fno=32] - segments of extrusion (ie quality)\r\n * @param {String} [options.type='normal'] - type of sphere : either 'normal' or 'geodesic'\r\n * @returns {CSG} new sphere\r\n *\r\n * @example\r\n * let sphere1 = sphere({\r\n *   r: 10,\r\n *   fn: 20\r\n * })\r\n */\r\nexport function sphere (params) {\r\n  const defaults = {\r\n    r: 1,\r\n    fn: 32,\r\n    type: 'normal'\r\n  }\r\n\r\n  let {r, fn, type} = Object.assign({}, defaults, params)\r\n  let offset = [0, 0, 0] // center: false (default)\r\n  if (params && (typeof params !== 'object')) {\r\n    r = params\r\n  }\r\n  // let zoffset = 0 // sphere() in openscad has no center:true|false\r\n\r\n  let output = type === 'geodesic' ? geodesicSphere(params) : CSG.sphere({radius: r, resolution: fn})\r\n\r\n  // preparing individual x,y,z center\r\n  if (params && params.center && params.center.length) {\r\n    offset = [params.center[0] ? 0 : r, params.center[1] ? 0 : r, params.center[2] ? 0 : r]\r\n  } else if (params && params.center === true) {\r\n    offset = [0, 0, 0]\r\n  } else if (params && params.center === false) {\r\n    offset = [r, r, r]\r\n  }\r\n  return (offset[0] || offset[1] || offset[2]) ? translate(offset, output) : output\r\n}\r\n\r\nfunction geodesicSphere (params) {\r\n  const defaults = {\r\n    r: 1,\r\n    fn: 5\r\n  }\r\n  let {r, fn} = Object.assign({}, defaults, params)\r\n\r\n  let ci = [ // hard-coded data of icosahedron (20 faces, all triangles)\r\n    [0.850651, 0.000000, -0.525731],\r\n    [0.850651, -0.000000, 0.525731],\r\n    [-0.850651, -0.000000, 0.525731],\r\n    [-0.850651, 0.000000, -0.525731],\r\n    [0.000000, -0.525731, 0.850651],\r\n    [0.000000, 0.525731, 0.850651],\r\n    [0.000000, 0.525731, -0.850651],\r\n    [0.000000, -0.525731, -0.850651],\r\n    [-0.525731, -0.850651, -0.000000],\r\n    [0.525731, -0.850651, -0.000000],\r\n    [0.525731, 0.850651, 0.000000],\r\n    [-0.525731, 0.850651, 0.000000]]\r\n\r\n  let ti = [ [0, 9, 1], [1, 10, 0], [6, 7, 0], [10, 6, 0], [7, 9, 0], [5, 1, 4], [4, 1, 9], [5, 10, 1], [2, 8, 3], [3, 11, 2], [2, 5, 4],\r\n    [4, 8, 2], [2, 11, 5], [3, 7, 6], [6, 11, 3], [8, 7, 3], [9, 8, 4], [11, 10, 5], [10, 11, 6], [8, 9, 7]]\r\n\r\n  let geodesicSubDivide = function (p, fn, offset) {\r\n    let p1 = p[0]\r\n    let p2 = p[1]\r\n    let p3 = p[2]\r\n    let n = offset\r\n    let c = []\r\n    let f = []\r\n\r\n    //           p3\r\n    //           /\\\r\n    //          /__\\     fn = 3\r\n    //      i  /\\  /\\\r\n    //        /__\\/__\\       total triangles = 9 (fn*fn)\r\n    //       /\\  /\\  /\\\r\n    //     0/__\\/__\\/__\\\r\n    //    p1 0   j      p2\r\n\r\n    for (let i = 0; i < fn; i++) {\r\n      for (let j = 0; j < fn - i; j++) {\r\n        let t0 = i / fn\r\n        let t1 = (i + 1) / fn\r\n        let s0 = j / (fn - i)\r\n        let s1 = (j + 1) / (fn - i)\r\n        let s2 = fn - i - 1 ? j / (fn - i - 1) : 1\r\n        let q = []\r\n\r\n        q[0] = mix3(mix3(p1, p2, s0), p3, t0)\r\n        q[1] = mix3(mix3(p1, p2, s1), p3, t0)\r\n        q[2] = mix3(mix3(p1, p2, s2), p3, t1)\r\n\r\n        // -- normalize\r\n        for (let k = 0; k < 3; k++) {\r\n          let r = Math.sqrt(q[k][0] * q[k][0] + q[k][1] * q[k][1] + q[k][2] * q[k][2])\r\n          for (let l = 0; l < 3; l++) {\r\n            q[k][l] /= r\r\n          }\r\n        }\r\n        c.push(q[0], q[1], q[2])\r\n        f.push([n, n + 1, n + 2]); n += 3\r\n\r\n        if (j < fn - i - 1) {\r\n          let s3 = fn - i - 1 ? (j + 1) / (fn - i - 1) : 1\r\n          q[0] = mix3(mix3(p1, p2, s1), p3, t0)\r\n          q[1] = mix3(mix3(p1, p2, s3), p3, t1)\r\n          q[2] = mix3(mix3(p1, p2, s2), p3, t1)\r\n\r\n          // -- normalize\r\n          for (let k = 0; k < 3; k++) {\r\n            let r = Math.sqrt(q[k][0] * q[k][0] + q[k][1] * q[k][1] + q[k][2] * q[k][2])\r\n            for (let l = 0; l < 3; l++) {\r\n              q[k][l] /= r\r\n            }\r\n          }\r\n          c.push(q[0], q[1], q[2])\r\n          f.push([n, n + 1, n + 2]); n += 3\r\n        }\r\n      }\r\n    }\r\n    return { points: c, triangles: f, offset: n }\r\n  }\r\n\r\n  const mix3 = function (a, b, f) {\r\n    let _f = 1 - f\r\n    let c = []\r\n    for (let i = 0; i < 3; i++) {\r\n      c[i] = a[i] * _f + b[i] * f\r\n    }\r\n    return c\r\n  }\r\n\r\n  if (params) {\r\n    if (params.fn) fn = Math.floor(params.fn / 6)\r\n  }\r\n\r\n  if (fn <= 0) fn = 1\r\n\r\n  let c = []\r\n  let f = []\r\n  let offset = 0\r\n\r\n  for (let i = 0; i < ti.length; i++) {\r\n    let g = geodesicSubDivide([ ci[ti[i][0]], ci[ti[i][1]], ci[ti[i][2]]], fn, offset)\r\n    c = c.concat(g.points)\r\n    f = f.concat(g.triangles)\r\n    offset = g.offset\r\n  }\r\n  return scale(r, polyhedron({points: c, triangles: f}))\r\n}\r\n\r\n/** Construct a cylinder\r\n * @param {Object} [options] - options for construction\r\n * @param {Float} [options.r=1] - radius of the cylinder\r\n * @param {Float} [options.r1=1] - radius of the top of the cylinder\r\n * @param {Float} [options.r2=1] - radius of the bottom of the cylinder\r\n * @param {Float} [options.d=1] - diameter of the cylinder\r\n * @param {Float} [options.d1=1] - diameter of the top of the cylinder\r\n * @param {Float} [options.d2=1] - diameter of the bottom of the cylinder\r\n * @param {Integer} [options.fn=32] - number of sides of the cylinder (ie quality/resolution)\r\n * @returns {CSG} new cylinder\r\n *\r\n * @example\r\n * let cylinder = cylinder({\r\n *   d: 10,\r\n *   fn: 20\r\n * })\r\n */\r\nexport function cylinder (params) {\r\n  const defaults = {\r\n    r: 1,\r\n    r1: 1,\r\n    r2: 1,\r\n    h: 1,\r\n    fn: 32,\r\n    round: false\r\n  }\r\n  let {r1, r2, h, fn, round} = Object.assign({}, defaults, params)\r\n  let offset = [0, 0, 0]\r\n  let a = arguments\r\n  if (params && params.d) {\r\n    r1 = r2 = params.d / 2\r\n  }\r\n  if (params && params.r) {\r\n    r1 = params.r\r\n    r2 = params.r\r\n  }\r\n  if (params && params.h) {\r\n    h = params.h\r\n  }\r\n  if (params && (params.r1 || params.r2)) {\r\n    r1 = params.r1\r\n    r2 = params.r2\r\n    if (params.h) h = params.h\r\n  }\r\n  if (params && (params.d1 || params.d2)) {\r\n    r1 = params.d1 / 2\r\n    r2 = params.d2 / 2\r\n  }\r\n\r\n  if (a && a[0] && a[0].length) {\r\n    a = a[0]\r\n    r1 = a[0]\r\n    r2 = a[1]\r\n    h = a[2]\r\n    if (a.length === 4) fn = a[3]\r\n  }\r\n\r\n  let object\r\n  if (params && (params.start && params.end)) {\r\n    object = round\r\n      ? CSG.roundedCylinder({start: params.start, end: params.end, radiusStart: r1, radiusEnd: r2, resolution: fn})\r\n      : CSG.cylinder({start: params.start, end: params.end, radiusStart: r1, radiusEnd: r2, resolution: fn})\r\n  } else {\r\n    object = round\r\n      ? CSG.roundedCylinder({start: [0, 0, 0], end: [0, 0, h], radiusStart: r1, radiusEnd: r2, resolution: fn})\r\n      : CSG.cylinder({start: [0, 0, 0], end: [0, 0, h], radiusStart: r1, radiusEnd: r2, resolution: fn})\r\n    let r = r1 > r2 ? r1 : r2\r\n    if (params && params.center && params.center.length) { // preparing individual x,y,z center\r\n      offset = [params.center[0] ? 0 : r, params.center[1] ? 0 : r, params.center[2] ? -h / 2 : 0]\r\n    } else if (params && params.center === true) {\r\n      offset = [0, 0, -h / 2]\r\n    } else if (params && params.center === false) {\r\n      offset = [0, 0, 0]\r\n    }\r\n    object = (offset[0] || offset[1] || offset[2]) ? translate(offset, object) : object\r\n  }\r\n  return object\r\n}\r\n\r\n/** Construct a torus\r\n * @param {Object} [options] - options for construction\r\n * @param {Float} [options.ri=1] - radius of base circle\r\n * @param {Float} [options.ro=4] - radius offset\r\n * @param {Integer} [options.fni=16] - segments of base circle (ie quality)\r\n * @param {Integer} [options.fno=32] - segments of extrusion (ie quality)\r\n * @param {Integer} [options.roti=0] - rotation angle of base circle\r\n * @returns {CSG} new torus\r\n *\r\n * @example\r\n * let torus1 = torus({\r\n *   ri: 10\r\n * })\r\n */\r\nfunction torus (params) {\r\n  const defaults = {\r\n    ri: 1,\r\n    ro: 4,\r\n    fni: 16,\r\n    fno: 32,\r\n    roti: 0\r\n  }\r\n  params = Object.assign({}, defaults, params)\r\n\r\n  /* possible enhancements ? declarative limits\r\n  const limits = {\r\n    fni: {min: 3},\r\n    fno: {min: 3}\r\n  } */\r\n\r\n  let {ri, ro, fni, fno, roti} = params\r\n\r\n  if (fni < 3) fni = 3\r\n  if (fno < 3) fno = 3\r\n\r\n  let baseCircle = circle({r: ri, fn: fni, center: true})\r\n\r\n  if (roti) baseCircle = baseCircle.rotateZ(roti)\r\n  let result = rotate_extrude({fn: fno}, translate([ro, 0, 0], baseCircle))\r\n  // result = result.union(result)\r\n  return result\r\n}\r\n\r\n/** Construct a polyhedron from the given triangles/ polygons/points\r\n * @param {Object} [options] - options for construction\r\n * @param {Array} [options.triangles] - triangles to build the polyhedron from\r\n * @param {Array} [options.polygons] - polygons to build the polyhedron from\r\n * @param {Array} [options.points] - points to build the polyhedron from\r\n * @param {Array} [options.colors] - colors to apply to the polyhedron\r\n * @returns {CSG} new polyhedron\r\n *\r\n * @example\r\n * let torus1 = polyhedron({\r\n *   points: [...]\r\n * })\r\n */\r\nfunction polyhedron (params) {\r\n  let pgs = []\r\n  let ref = params.triangles || params.polygons\r\n  let colors = params.colors || null\r\n\r\n  for (let i = 0; i < ref.length; i++) {\r\n    let pp = []\r\n    for (let j = 0; j < ref[i].length; j++) {\r\n      pp[j] = params.points[ref[i][j]]\r\n    }\r\n\r\n    let v = []\r\n    for (let j = ref[i].length - 1; j >= 0; j--) { // --- we reverse order for examples of OpenSCAD work\r\n      v.push(new Vertex3(new Vector3(pp[j][0], pp[j][1], pp[j][2])))\r\n    }\r\n    let s = Polygon3.defaultShared\r\n    if (colors && colors[i]) {\r\n      s = Polygon3.Shared.fromColor(colors[i])\r\n    }\r\n    pgs.push(new Polygon3(v, s))\r\n  }\r\n\r\n  // forced to import here, otherwise out of order imports mess things up\r\n  const {fromPolygons} = require('@jscad/csg/src/core/CSGFactories'); // require('../core/CSGFactories')\r\n  return fromPolygons(pgs)\r\n}\r\n\r\n}\r\n/* module.exports = {\r\n  cube,\r\n  sphere,\r\n  cylinder,\r\n  geodesicSphere,\r\n  torus,\r\n  polyhedron\r\n} */\r\n","\n/// //////////FUNCTIONAL API\nconst {CSG} = require('../../csg')\nconst { circle } = require('./primitives2d-api')\nconst { rotate_extrude } = require('./ops-extrusions')\nconst { translate, scale } = require('./ops-transformations')\nconst Polygon3 = require('../core/math/Polygon3')\nconst Vector3 = require('../core/math/Vector3')\nconst Vertex3 = require('../core/math/Vertex3')\n\n/** Construct a cuboid\n * @param {Object} [options] - options for construction\n * @param {Float} [options.size=1] - size of the side of the cuboid : can be either:\n * - a scalar : ie a single float, in which case all dimensions will be the same\n * - or an array: to specify different dimensions along x/y/z\n * @param {Integer} [options.fn=32] - segments of the sphere (ie quality/resolution)\n * @param {Integer} [options.fno=32] - segments of extrusion (ie quality)\n * @param {String} [options.type='normal'] - type of sphere : either 'normal' or 'geodesic'\n * @returns {CSG} new sphere\n *\n * @example\n * let cube1 = cube({\n *   r: 10,\n *   fn: 20\n * })\n */\nfunction cube (params) {\n  const defaults = {\n    size: 1,\n    offset: [0, 0, 0],\n    round: false,\n    radius: 0,\n    fn: 8\n  }\n\n  let {round, radius, fn, size} = Object.assign({}, defaults, params)\n  let offset = [0, 0, 0]\n  let v = null\n  if (params && params.length) v = params\n  if (params && params.size && params.size.length) v = params.size // { size: [1,2,3] }\n  if (params && params.size && !params.size.length) size = params.size // { size: 1 }\n  if (params && (typeof params !== 'object')) size = params// (2)\n  if (params && params.round === true) {\n    round = true\n    radius = v && v.length ? (v[0] + v[1] + v[2]) / 30 : size / 10\n  }\n  if (params && params.radius) {\n    round = true\n    radius = params.radius\n  }\n\n  let x = size\n  let y = size\n  let z = size\n  if (v && v.length) {\n    [x, y, z] = v\n  }\n  offset = [x / 2, y / 2, z / 2] // center: false default\n  let object = round\n    ? CSG.roundedCube({radius: [x / 2, y / 2, z / 2], roundradius: radius, resolution: fn})\n    : CSG.cube({radius: [x / 2, y / 2, z / 2]})\n  if (params && params.center && params.center.length) {\n    offset = [params.center[0] ? 0 : x / 2, params.center[1] ? 0 : y / 2, params.center[2] ? 0 : z / 2]\n  } else if (params && params.center === true) {\n    offset = [0, 0, 0]\n  } else if (params && params.center === false) {\n    offset = [x / 2, y / 2, z / 2]\n  }\n  return (offset[0] || offset[1] || offset[2]) ? translate(offset, object) : object\n}\n\n/** Construct a sphere\n * @param {Object} [options] - options for construction\n * @param {Float} [options.r=1] - radius of the sphere\n * @param {Integer} [options.fn=32] - segments of the sphere (ie quality/resolution)\n * @param {Integer} [options.fno=32] - segments of extrusion (ie quality)\n * @param {String} [options.type='normal'] - type of sphere : either 'normal' or 'geodesic'\n * @returns {CSG} new sphere\n *\n * @example\n * let sphere1 = sphere({\n *   r: 10,\n *   fn: 20\n * })\n */\nfunction sphere (params) {\n  const defaults = {\n    r: 1,\n    fn: 32,\n    type: 'normal'\n  }\n\n  let {r, fn, type} = Object.assign({}, defaults, params)\n  let offset = [0, 0, 0] // center: false (default)\n  if (params && (typeof params !== 'object')) {\n    r = params\n  }\n  // let zoffset = 0 // sphere() in openscad has no center:true|false\n\n  let output = type === 'geodesic' ? geodesicSphere(params) : CSG.sphere({radius: r, resolution: fn})\n\n  // preparing individual x,y,z center\n  if (params && params.center && params.center.length) {\n    offset = [params.center[0] ? 0 : r, params.center[1] ? 0 : r, params.center[2] ? 0 : r]\n  } else if (params && params.center === true) {\n    offset = [0, 0, 0]\n  } else if (params && params.center === false) {\n    offset = [r, r, r]\n  }\n  return (offset[0] || offset[1] || offset[2]) ? translate(offset, output) : output\n}\n\nfunction geodesicSphere (params) {\n  const defaults = {\n    r: 1,\n    fn: 5\n  }\n  let {r, fn} = Object.assign({}, defaults, params)\n\n  let ci = [ // hard-coded data of icosahedron (20 faces, all triangles)\n    [0.850651, 0.000000, -0.525731],\n    [0.850651, -0.000000, 0.525731],\n    [-0.850651, -0.000000, 0.525731],\n    [-0.850651, 0.000000, -0.525731],\n    [0.000000, -0.525731, 0.850651],\n    [0.000000, 0.525731, 0.850651],\n    [0.000000, 0.525731, -0.850651],\n    [0.000000, -0.525731, -0.850651],\n    [-0.525731, -0.850651, -0.000000],\n    [0.525731, -0.850651, -0.000000],\n    [0.525731, 0.850651, 0.000000],\n    [-0.525731, 0.850651, 0.000000]]\n\n  let ti = [ [0, 9, 1], [1, 10, 0], [6, 7, 0], [10, 6, 0], [7, 9, 0], [5, 1, 4], [4, 1, 9], [5, 10, 1], [2, 8, 3], [3, 11, 2], [2, 5, 4],\n    [4, 8, 2], [2, 11, 5], [3, 7, 6], [6, 11, 3], [8, 7, 3], [9, 8, 4], [11, 10, 5], [10, 11, 6], [8, 9, 7]]\n\n  let geodesicSubDivide = function (p, fn, offset) {\n    let p1 = p[0]\n    let p2 = p[1]\n    let p3 = p[2]\n    let n = offset\n    let c = []\n    let f = []\n\n    //           p3\n    //           /\\\n    //          /__\\     fn = 3\n    //      i  /\\  /\\\n    //        /__\\/__\\       total triangles = 9 (fn*fn)\n    //       /\\  /\\  /\\\n    //     0/__\\/__\\/__\\\n    //    p1 0   j      p2\n\n    for (let i = 0; i < fn; i++) {\n      for (let j = 0; j < fn - i; j++) {\n        let t0 = i / fn\n        let t1 = (i + 1) / fn\n        let s0 = j / (fn - i)\n        let s1 = (j + 1) / (fn - i)\n        let s2 = fn - i - 1 ? j / (fn - i - 1) : 1\n        let q = []\n\n        q[0] = mix3(mix3(p1, p2, s0), p3, t0)\n        q[1] = mix3(mix3(p1, p2, s1), p3, t0)\n        q[2] = mix3(mix3(p1, p2, s2), p3, t1)\n\n        // -- normalize\n        for (let k = 0; k < 3; k++) {\n          let r = Math.sqrt(q[k][0] * q[k][0] + q[k][1] * q[k][1] + q[k][2] * q[k][2])\n          for (let l = 0; l < 3; l++) {\n            q[k][l] /= r\n          }\n        }\n        c.push(q[0], q[1], q[2])\n        f.push([n, n + 1, n + 2]); n += 3\n\n        if (j < fn - i - 1) {\n          let s3 = fn - i - 1 ? (j + 1) / (fn - i - 1) : 1\n          q[0] = mix3(mix3(p1, p2, s1), p3, t0)\n          q[1] = mix3(mix3(p1, p2, s3), p3, t1)\n          q[2] = mix3(mix3(p1, p2, s2), p3, t1)\n\n          // -- normalize\n          for (let k = 0; k < 3; k++) {\n            let r = Math.sqrt(q[k][0] * q[k][0] + q[k][1] * q[k][1] + q[k][2] * q[k][2])\n            for (let l = 0; l < 3; l++) {\n              q[k][l] /= r\n            }\n          }\n          c.push(q[0], q[1], q[2])\n          f.push([n, n + 1, n + 2]); n += 3\n        }\n      }\n    }\n    return { points: c, triangles: f, offset: n }\n  }\n\n  const mix3 = function (a, b, f) {\n    let _f = 1 - f\n    let c = []\n    for (let i = 0; i < 3; i++) {\n      c[i] = a[i] * _f + b[i] * f\n    }\n    return c\n  }\n\n  if (params) {\n    if (params.fn) fn = Math.floor(params.fn / 6)\n  }\n\n  if (fn <= 0) fn = 1\n\n  let c = []\n  let f = []\n  let offset = 0\n\n  for (let i = 0; i < ti.length; i++) {\n    let g = geodesicSubDivide([ ci[ti[i][0]], ci[ti[i][1]], ci[ti[i][2]]], fn, offset)\n    c = c.concat(g.points)\n    f = f.concat(g.triangles)\n    offset = g.offset\n  }\n  return scale(r, polyhedron({points: c, triangles: f}))\n}\n\n/** Construct a cylinder\n * @param {Object} [options] - options for construction\n * @param {Float} [options.r=1] - radius of the cylinder\n * @param {Float} [options.r1=1] - radius of the top of the cylinder\n * @param {Float} [options.r2=1] - radius of the bottom of the cylinder\n * @param {Float} [options.d=1] - diameter of the cylinder\n * @param {Float} [options.d1=1] - diameter of the top of the cylinder\n * @param {Float} [options.d2=1] - diameter of the bottom of the cylinder\n * @param {Integer} [options.fn=32] - number of sides of the cylinder (ie quality/resolution)\n * @returns {CSG} new cylinder\n *\n * @example\n * let cylinder = cylinder({\n *   d: 10,\n *   fn: 20\n * })\n */\nfunction cylinder (params) {\n  const defaults = {\n    r: 1,\n    r1: 1,\n    r2: 1,\n    h: 1,\n    fn: 32,\n    round: false\n  }\n  let {r1, r2, h, fn, round} = Object.assign({}, defaults, params)\n  let offset = [0, 0, 0]\n  let a = arguments\n  if (params && params.d) {\n    r1 = r2 = params.d / 2\n  }\n  if (params && params.r) {\n    r1 = params.r\n    r2 = params.r\n  }\n  if (params && params.h) {\n    h = params.h\n  }\n  if (params && (params.r1 || params.r2)) {\n    r1 = params.r1\n    r2 = params.r2\n    if (params.h) h = params.h\n  }\n  if (params && (params.d1 || params.d2)) {\n    r1 = params.d1 / 2\n    r2 = params.d2 / 2\n  }\n\n  if (a && a[0] && a[0].length) {\n    a = a[0]\n    r1 = a[0]\n    r2 = a[1]\n    h = a[2]\n    if (a.length === 4) fn = a[3]\n  }\n\n  let object\n  if (params && (params.start && params.end)) {\n    object = round\n      ? CSG.roundedCylinder({start: params.start, end: params.end, radiusStart: r1, radiusEnd: r2, resolution: fn})\n      : CSG.cylinder({start: params.start, end: params.end, radiusStart: r1, radiusEnd: r2, resolution: fn})\n  } else {\n    object = round\n      ? CSG.roundedCylinder({start: [0, 0, 0], end: [0, 0, h], radiusStart: r1, radiusEnd: r2, resolution: fn})\n      : CSG.cylinder({start: [0, 0, 0], end: [0, 0, h], radiusStart: r1, radiusEnd: r2, resolution: fn})\n    let r = r1 > r2 ? r1 : r2\n    if (params && params.center && params.center.length) { // preparing individual x,y,z center\n      offset = [params.center[0] ? 0 : r, params.center[1] ? 0 : r, params.center[2] ? -h / 2 : 0]\n    } else if (params && params.center === true) {\n      offset = [0, 0, -h / 2]\n    } else if (params && params.center === false) {\n      offset = [0, 0, 0]\n    }\n    object = (offset[0] || offset[1] || offset[2]) ? translate(offset, object) : object\n  }\n  return object\n}\n\n/** Construct a torus\n * @param {Object} [options] - options for construction\n * @param {Float} [options.ri=1] - radius of base circle\n * @param {Float} [options.ro=4] - radius offset\n * @param {Integer} [options.fni=16] - segments of base circle (ie quality)\n * @param {Integer} [options.fno=32] - segments of extrusion (ie quality)\n * @param {Integer} [options.roti=0] - rotation angle of base circle\n * @returns {CSG} new torus\n *\n * @example\n * let torus1 = torus({\n *   ri: 10\n * })\n */\nfunction torus (params) {\n  const defaults = {\n    ri: 1,\n    ro: 4,\n    fni: 16,\n    fno: 32,\n    roti: 0\n  }\n  params = Object.assign({}, defaults, params)\n\n  /* possible enhancements ? declarative limits\n  const limits = {\n    fni: {min: 3},\n    fno: {min: 3}\n  } */\n\n  let {ri, ro, fni, fno, roti} = params\n\n  if (fni < 3) fni = 3\n  if (fno < 3) fno = 3\n\n  let baseCircle = circle({r: ri, fn: fni, center: true})\n\n  if (roti) baseCircle = baseCircle.rotateZ(roti)\n  let result = rotate_extrude({fn: fno}, translate([ro, 0, 0], baseCircle))\n  // result = result.union(result)\n  return result\n}\n\n/** Construct a polyhedron from the given triangles/ polygons/points\n * @param {Object} [options] - options for construction\n * @param {Array} [options.triangles] - triangles to build the polyhedron from\n * @param {Array} [options.polygons] - polygons to build the polyhedron from\n * @param {Array} [options.points] - points to build the polyhedron from\n * @param {Array} [options.colors] - colors to apply to the polyhedron\n * @returns {CSG} new polyhedron\n *\n * @example\n * let torus1 = polyhedron({\n *   points: [...]\n * })\n */\nfunction polyhedron (params) {\n  let pgs = []\n  let ref = params.triangles || params.polygons\n  let colors = params.colors || null\n\n  for (let i = 0; i < ref.length; i++) {\n    let pp = []\n    for (let j = 0; j < ref[i].length; j++) {\n      pp[j] = params.points[ref[i][j]]\n    }\n\n    let v = []\n    for (let j = ref[i].length - 1; j >= 0; j--) { // --- we reverse order for examples of OpenSCAD work\n      v.push(new Vertex3(new Vector3(pp[j][0], pp[j][1], pp[j][2])))\n    }\n    let s = Polygon3.defaultShared\n    if (colors && colors[i]) {\n      s = Polygon3.Shared.fromColor(colors[i])\n    }\n    pgs.push(new Polygon3(v, s))\n  }\n\n  // forced to import here, otherwise out of order imports mess things up\n  const {fromPolygons} = require('../core/CSGFactories')\n  return fromPolygons(pgs)\n}\n\nmodule.exports = {\n  cube,\n  sphere,\n  cylinder,\n  geodesicSphere,\n  torus,\n  polyhedron\n}\n","// color table from http://www.w3.org/TR/css3-color/\nconst cssColors = {\n// basic color keywords\n  'black': [ 0 / 255, 0 / 255, 0 / 255 ],\n  'silver': [ 192 / 255, 192 / 255, 192 / 255 ],\n  'gray': [ 128 / 255, 128 / 255, 128 / 255 ],\n  'white': [ 255 / 255, 255 / 255, 255 / 255 ],\n  'maroon': [ 128 / 255, 0 / 255, 0 / 255 ],\n  'red': [ 255 / 255, 0 / 255, 0 / 255 ],\n  'purple': [ 128 / 255, 0 / 255, 128 / 255 ],\n  'fuchsia': [ 255 / 255, 0 / 255, 255 / 255 ],\n  'green': [ 0 / 255, 128 / 255, 0 / 255 ],\n  'lime': [ 0 / 255, 255 / 255, 0 / 255 ],\n  'olive': [ 128 / 255, 128 / 255, 0 / 255 ],\n  'yellow': [ 255 / 255, 255 / 255, 0 / 255 ],\n  'navy': [ 0 / 255, 0 / 255, 128 / 255 ],\n  'blue': [ 0 / 255, 0 / 255, 255 / 255 ],\n  'teal': [ 0 / 255, 128 / 255, 128 / 255 ],\n  'aqua': [ 0 / 255, 255 / 255, 255 / 255 ],\n  // extended color keywords\n  'aliceblue': [ 240 / 255, 248 / 255, 255 / 255 ],\n  'antiquewhite': [ 250 / 255, 235 / 255, 215 / 255 ],\n  // 'aqua': [ 0 / 255, 255 / 255, 255 / 255 ],\n  'aquamarine': [ 127 / 255, 255 / 255, 212 / 255 ],\n  'azure': [ 240 / 255, 255 / 255, 255 / 255 ],\n  'beige': [ 245 / 255, 245 / 255, 220 / 255 ],\n  'bisque': [ 255 / 255, 228 / 255, 196 / 255 ],\n  // 'black': [ 0 / 255, 0 / 255, 0 / 255 ],\n  'blanchedalmond': [ 255 / 255, 235 / 255, 205 / 255 ],\n  // 'blue': [ 0 / 255, 0 / 255, 255 / 255 ],\n  'blueviolet': [ 138 / 255, 43 / 255, 226 / 255 ],\n  'brown': [ 165 / 255, 42 / 255, 42 / 255 ],\n  'burlywood': [ 222 / 255, 184 / 255, 135 / 255 ],\n  'cadetblue': [ 95 / 255, 158 / 255, 160 / 255 ],\n  'chartreuse': [ 127 / 255, 255 / 255, 0 / 255 ],\n  'chocolate': [ 210 / 255, 105 / 255, 30 / 255 ],\n  'coral': [ 255 / 255, 127 / 255, 80 / 255 ],\n  'cornflowerblue': [ 100 / 255, 149 / 255, 237 / 255 ],\n  'cornsilk': [ 255 / 255, 248 / 255, 220 / 255 ],\n  'crimson': [ 220 / 255, 20 / 255, 60 / 255 ],\n  'cyan': [ 0 / 255, 255 / 255, 255 / 255 ],\n  'darkblue': [ 0 / 255, 0 / 255, 139 / 255 ],\n  'darkcyan': [ 0 / 255, 139 / 255, 139 / 255 ],\n  'darkgoldenrod': [ 184 / 255, 134 / 255, 11 / 255 ],\n  'darkgray': [ 169 / 255, 169 / 255, 169 / 255 ],\n  'darkgreen': [ 0 / 255, 100 / 255, 0 / 255 ],\n  'darkgrey': [ 169 / 255, 169 / 255, 169 / 255 ],\n  'darkkhaki': [ 189 / 255, 183 / 255, 107 / 255 ],\n  'darkmagenta': [ 139 / 255, 0 / 255, 139 / 255 ],\n  'darkolivegreen': [ 85 / 255, 107 / 255, 47 / 255 ],\n  'darkorange': [ 255 / 255, 140 / 255, 0 / 255 ],\n  'darkorchid': [ 153 / 255, 50 / 255, 204 / 255 ],\n  'darkred': [ 139 / 255, 0 / 255, 0 / 255 ],\n  'darksalmon': [ 233 / 255, 150 / 255, 122 / 255 ],\n  'darkseagreen': [ 143 / 255, 188 / 255, 143 / 255 ],\n  'darkslateblue': [ 72 / 255, 61 / 255, 139 / 255 ],\n  'darkslategray': [ 47 / 255, 79 / 255, 79 / 255 ],\n  'darkslategrey': [ 47 / 255, 79 / 255, 79 / 255 ],\n  'darkturquoise': [ 0 / 255, 206 / 255, 209 / 255 ],\n  'darkviolet': [ 148 / 255, 0 / 255, 211 / 255 ],\n  'deeppink': [ 255 / 255, 20 / 255, 147 / 255 ],\n  'deepskyblue': [ 0 / 255, 191 / 255, 255 / 255 ],\n  'dimgray': [ 105 / 255, 105 / 255, 105 / 255 ],\n  'dimgrey': [ 105 / 255, 105 / 255, 105 / 255 ],\n  'dodgerblue': [ 30 / 255, 144 / 255, 255 / 255 ],\n  'firebrick': [ 178 / 255, 34 / 255, 34 / 255 ],\n  'floralwhite': [ 255 / 255, 250 / 255, 240 / 255 ],\n  'forestgreen': [ 34 / 255, 139 / 255, 34 / 255 ],\n  // 'fuchsia': [ 255 / 255, 0 / 255, 255 / 255 ],\n  'gainsboro': [ 220 / 255, 220 / 255, 220 / 255 ],\n  'ghostwhite': [ 248 / 255, 248 / 255, 255 / 255 ],\n  'gold': [ 255 / 255, 215 / 255, 0 / 255 ],\n  'goldenrod': [ 218 / 255, 165 / 255, 32 / 255 ],\n  // 'gray': [ 128 / 255, 128 / 255, 128 / 255 ],\n  // 'green': [ 0 / 255, 128 / 255, 0 / 255 ],\n  'greenyellow': [ 173 / 255, 255 / 255, 47 / 255 ],\n  'grey': [ 128 / 255, 128 / 255, 128 / 255 ],\n  'honeydew': [ 240 / 255, 255 / 255, 240 / 255 ],\n  'hotpink': [ 255 / 255, 105 / 255, 180 / 255 ],\n  'indianred': [ 205 / 255, 92 / 255, 92 / 255 ],\n  'indigo': [ 75 / 255, 0 / 255, 130 / 255 ],\n  'ivory': [ 255 / 255, 255 / 255, 240 / 255 ],\n  'khaki': [ 240 / 255, 230 / 255, 140 / 255 ],\n  'lavender': [ 230 / 255, 230 / 255, 250 / 255 ],\n  'lavenderblush': [ 255 / 255, 240 / 255, 245 / 255 ],\n  'lawngreen': [ 124 / 255, 252 / 255, 0 / 255 ],\n  'lemonchiffon': [ 255 / 255, 250 / 255, 205 / 255 ],\n  'lightblue': [ 173 / 255, 216 / 255, 230 / 255 ],\n  'lightcoral': [ 240 / 255, 128 / 255, 128 / 255 ],\n  'lightcyan': [ 224 / 255, 255 / 255, 255 / 255 ],\n  'lightgoldenrodyellow': [ 250 / 255, 250 / 255, 210 / 255 ],\n  'lightgray': [ 211 / 255, 211 / 255, 211 / 255 ],\n  'lightgreen': [ 144 / 255, 238 / 255, 144 / 255 ],\n  'lightgrey': [ 211 / 255, 211 / 255, 211 / 255 ],\n  'lightpink': [ 255 / 255, 182 / 255, 193 / 255 ],\n  'lightsalmon': [ 255 / 255, 160 / 255, 122 / 255 ],\n  'lightseagreen': [ 32 / 255, 178 / 255, 170 / 255 ],\n  'lightskyblue': [ 135 / 255, 206 / 255, 250 / 255 ],\n  'lightslategray': [ 119 / 255, 136 / 255, 153 / 255 ],\n  'lightslategrey': [ 119 / 255, 136 / 255, 153 / 255 ],\n  'lightsteelblue': [ 176 / 255, 196 / 255, 222 / 255 ],\n  'lightyellow': [ 255 / 255, 255 / 255, 224 / 255 ],\n  // 'lime': [ 0 / 255, 255 / 255, 0 / 255 ],\n  'limegreen': [ 50 / 255, 205 / 255, 50 / 255 ],\n  'linen': [ 250 / 255, 240 / 255, 230 / 255 ],\n  'magenta': [ 255 / 255, 0 / 255, 255 / 255 ],\n  // 'maroon': [ 128 / 255, 0 / 255, 0 / 255 ],\n  'mediumaquamarine': [ 102 / 255, 205 / 255, 170 / 255 ],\n  'mediumblue': [ 0 / 255, 0 / 255, 205 / 255 ],\n  'mediumorchid': [ 186 / 255, 85 / 255, 211 / 255 ],\n  'mediumpurple': [ 147 / 255, 112 / 255, 219 / 255 ],\n  'mediumseagreen': [ 60 / 255, 179 / 255, 113 / 255 ],\n  'mediumslateblue': [ 123 / 255, 104 / 255, 238 / 255 ],\n  'mediumspringgreen': [ 0 / 255, 250 / 255, 154 / 255 ],\n  'mediumturquoise': [ 72 / 255, 209 / 255, 204 / 255 ],\n  'mediumvioletred': [ 199 / 255, 21 / 255, 133 / 255 ],\n  'midnightblue': [ 25 / 255, 25 / 255, 112 / 255 ],\n  'mintcream': [ 245 / 255, 255 / 255, 250 / 255 ],\n  'mistyrose': [ 255 / 255, 228 / 255, 225 / 255 ],\n  'moccasin': [ 255 / 255, 228 / 255, 181 / 255 ],\n  'navajowhite': [ 255 / 255, 222 / 255, 173 / 255 ],\n  // 'navy': [ 0 / 255, 0 / 255, 128 / 255 ],\n  'oldlace': [ 253 / 255, 245 / 255, 230 / 255 ],\n  // 'olive': [ 128 / 255, 128 / 255, 0 / 255 ],\n  'olivedrab': [ 107 / 255, 142 / 255, 35 / 255 ],\n  'orange': [ 255 / 255, 165 / 255, 0 / 255 ],\n  'orangered': [ 255 / 255, 69 / 255, 0 / 255 ],\n  'orchid': [ 218 / 255, 112 / 255, 214 / 255 ],\n  'palegoldenrod': [ 238 / 255, 232 / 255, 170 / 255 ],\n  'palegreen': [ 152 / 255, 251 / 255, 152 / 255 ],\n  'paleturquoise': [ 175 / 255, 238 / 255, 238 / 255 ],\n  'palevioletred': [ 219 / 255, 112 / 255, 147 / 255 ],\n  'papayawhip': [ 255 / 255, 239 / 255, 213 / 255 ],\n  'peachpuff': [ 255 / 255, 218 / 255, 185 / 255 ],\n  'peru': [ 205 / 255, 133 / 255, 63 / 255 ],\n  'pink': [ 255 / 255, 192 / 255, 203 / 255 ],\n  'plum': [ 221 / 255, 160 / 255, 221 / 255 ],\n  'powderblue': [ 176 / 255, 224 / 255, 230 / 255 ],\n  // 'purple': [ 128 / 255, 0 / 255, 128 / 255 ],\n  // 'red': [ 255 / 255, 0 / 255, 0 / 255 ],\n  'rosybrown': [ 188 / 255, 143 / 255, 143 / 255 ],\n  'royalblue': [ 65 / 255, 105 / 255, 225 / 255 ],\n  'saddlebrown': [ 139 / 255, 69 / 255, 19 / 255 ],\n  'salmon': [ 250 / 255, 128 / 255, 114 / 255 ],\n  'sandybrown': [ 244 / 255, 164 / 255, 96 / 255 ],\n  'seagreen': [ 46 / 255, 139 / 255, 87 / 255 ],\n  'seashell': [ 255 / 255, 245 / 255, 238 / 255 ],\n  'sienna': [ 160 / 255, 82 / 255, 45 / 255 ],\n  // 'silver': [ 192 / 255, 192 / 255, 192 / 255 ],\n  'skyblue': [ 135 / 255, 206 / 255, 235 / 255 ],\n  'slateblue': [ 106 / 255, 90 / 255, 205 / 255 ],\n  'slategray': [ 112 / 255, 128 / 255, 144 / 255 ],\n  'slategrey': [ 112 / 255, 128 / 255, 144 / 255 ],\n  'snow': [ 255 / 255, 250 / 255, 250 / 255 ],\n  'springgreen': [ 0 / 255, 255 / 255, 127 / 255 ],\n  'steelblue': [ 70 / 255, 130 / 255, 180 / 255 ],\n  'tan': [ 210 / 255, 180 / 255, 140 / 255 ],\n  // 'teal': [ 0 / 255, 128 / 255, 128 / 255 ],\n  'thistle': [ 216 / 255, 191 / 255, 216 / 255 ],\n  'tomato': [ 255 / 255, 99 / 255, 71 / 255 ],\n  'turquoise': [ 64 / 255, 224 / 255, 208 / 255 ],\n  'violet': [ 238 / 255, 130 / 255, 238 / 255 ],\n  'wheat': [ 245 / 255, 222 / 255, 179 / 255 ],\n  // 'white': [ 255 / 255, 255 / 255, 255 / 255 ],\n  'whitesmoke': [ 245 / 255, 245 / 255, 245 / 255 ],\n  // 'yellow': [ 255 / 255, 255 / 255, 0 / 255 ],\n  'yellowgreen': [ 154 / 255, 205 / 255, 50 / 255 ]\n}\n\n/**\n * Converts an CSS color name to RGB color.\n *\n * @param   String  s       The CSS color name\n * @return  Array           The RGB representation, or [0,0,0] default\n */\nfunction css2rgb (s) {\n  return cssColors[s.toLowerCase()]\n}\n\n// color( (array[r,g,b] | css-string) [,alpha] (,array[objects] | list of objects) )\n/** apply the given color to the input object(s)\n * @param {Object} color - either an array or a hex string of color values\n * @param {Object|Array} objects either a single or multiple CSG/CAG objects to color\n * @returns {CSG} new CSG object , with the given color\n *\n * @example\n * let redSphere = color([1,0,0,1], sphere())\n */\nfunction color (color) {\n  let object\n  let i = 1\n  let a = arguments\n\n  // assume first argument is RGB array\n  // but check if first argument is CSS string\n  if (typeof color === 'string') {\n    color = css2rgb(color)\n  }\n  // check if second argument is alpha\n  if (Number.isFinite(a[i])) {\n    color = color.concat(a[i])\n    i++\n  }\n  // check if next argument is an an array\n  if (Array.isArray(a[i])) {\n    a = a[i]\n    i = 0\n  } // use this as the list of objects\n  for (object = a[i++]; i < a.length; i++) {\n    object = object.union(a[i])\n  }\n  return object.setColor(color)\n}\n\n// from http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\n/**\n * Converts an RGB color value to HSL. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n * Assumes r, g, and b are contained in the set [0, 1] and\n * returns h, s, and l in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSL representation\n */\nfunction rgb2hsl (r, g, b) {\n  if (r.length) {\n    b = r[2]\n    g = r[1]\n    r = r[0]\n  }\n  let max = Math.max(r, g, b)\n  let min = Math.min(r, g, b)\n  let h\n  let s\n  let l = (max + min) / 2\n\n  if (max === min) {\n    h = s = 0 // achromatic\n  } else {\n    let d = max - min\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      case g:\n        h = (b - r) / d + 2\n        break\n      case b:\n        h = (r - g) / d + 4\n        break\n    }\n    h /= 6\n  }\n\n  return [h, s, l]\n}\n\n/**\n * Converts an HSL color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n * Assumes h, s, and l are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 1].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  l       The lightness\n * @return  Array           The RGB representation\n */\nfunction hsl2rgb (h, s, l) {\n  if (h.length) {\n    h = h[0]\n    s = h[1]\n    l = h[2]\n  }\n  let r\n  let g\n  let b\n\n  if (s === 0) {\n    r = g = b = l // achromatic\n  } else {\n    let q = l < 0.5 ? l * (1 + s) : l + s - l * s\n    let p = 2 * l - q\n    r = hue2rgb(p, q, h + 1 / 3)\n    g = hue2rgb(p, q, h)\n    b = hue2rgb(p, q, h - 1 / 3)\n  }\n\n  return [r, g, b]\n}\n\nfunction hue2rgb (p, q, t) {\n  if (t < 0) t += 1\n  if (t > 1) t -= 1\n  if (t < 1 / 6) return p + (q - p) * 6 * t\n  if (t < 1 / 2) return q\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n  return p\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 1] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\n\nfunction rgb2hsv (r, g, b) {\n  if (r.length) {\n    r = r[0]\n    g = r[1]\n    b = r[2]\n  }\n  let max = Math.max(r, g, b)\n  let min = Math.min(r, g, b)\n  let h\n  let s\n  let v = max\n\n  let d = max - min\n  s = max === 0 ? 0 : d / max\n\n  if (max === min) {\n    h = 0 // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      case g:\n        h = (b - r) / d + 2\n        break\n      case b:\n        h = (r - g) / d + 4\n        break\n    }\n    h /= 6\n  }\n\n  return [h, s, v]\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 1].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nfunction hsv2rgb (h, s, v) {\n  if (h.length) {\n    h = h[0]\n    s = h[1]\n    v = h[2]\n  }\n  let r, g, b\n\n  let i = Math.floor(h * 6)\n  let f = h * 6 - i\n  let p = v * (1 - s)\n  let q = v * (1 - f * s)\n  let t = v * (1 - (1 - f) * s)\n\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p\n      break\n    case 1:\n      r = q, g = v, b = p\n      break\n    case 2:\n      r = p, g = v, b = t\n      break\n    case 3:\n      r = p, g = q, b = v\n      break\n    case 4:\n      r = t, g = p, b = v\n      break\n    case 5:\n      r = v, g = p, b = q\n      break\n  }\n\n  return [r, g, b]\n}\n\n/**\n * Converts a HTML5 color value (string) to RGB values\n * See the color input type of HTML5 forms\n * Conversion formula:\n * - split the string; \"#RRGGBB\" into RGB components\n * - convert the HEX value into RGB values\n */\nfunction html2rgb (s) {\n  let r = 0\n  let g = 0\n  let b = 0\n  if (s.length === 7) {\n    r = parseInt('0x' + s.slice(1, 3)) / 255\n    g = parseInt('0x' + s.slice(3, 5)) / 255\n    b = parseInt('0x' + s.slice(5, 7)) / 255\n  }\n  return [r, g, b]\n}\n\n/**\n * Converts RGB color value to HTML5 color value (string)\n * Conversion forumla:\n * - convert R, G, B into HEX strings\n * - return HTML formatted string \"#RRGGBB\"\n */\nfunction rgb2html (r, g, b) {\n  if (r.length) {\n    r = r[0]\n    g = r[1]\n    b = r[2]\n  }\n  let s = '#' +\n  Number(0x1000000 + r * 255 * 0x10000 + g * 255 * 0x100 + b * 255).toString(16).substring(1, 7)\n  return s\n}\n\nmodule.exports = {\n  css2rgb,\n  color,\n  rgb2hsl,\n  hsl2rgb,\n  rgb2hsv,\n  hsv2rgb,\n  html2rgb,\n  rgb2html\n}\n","// -- Math functions (360 deg based vs 2pi)\nfunction sin (a) {\n  return Math.sin(a / 360 * Math.PI * 2)\n}\nfunction cos (a) {\n  return Math.cos(a / 360 * Math.PI * 2)\n}\nfunction asin (a) {\n  return Math.asin(a) / (Math.PI * 2) * 360\n}\nfunction acos (a) {\n  return Math.acos(a) / (Math.PI * 2) * 360\n}\nfunction tan (a) {\n  return Math.tan(a / 360 * Math.PI * 2)\n}\nfunction atan (a) {\n  return Math.atan(a) / (Math.PI * 2) * 360\n}\nfunction atan2 (a, b) {\n  return Math.atan2(a, b) / (Math.PI * 2) * 360\n}\nfunction ceil (a) {\n  return Math.ceil(a)\n}\nfunction floor (a) {\n  return Math.floor(a)\n}\nfunction abs (a) {\n  return Math.abs(a)\n}\nfunction min (a, b) {\n  return a < b ? a : b\n}\nfunction max (a, b) {\n  return a > b ? a : b\n}\nfunction rands (min, max, vn, seed) {\n  // -- seed is ignored for now, FIX IT (requires reimplementation of random())\n  //    see http://stackoverflow.com/questions/424292/how-to-create-my-own-javascript-random-number-generator-that-i-can-also-set-the\n  var v = new Array(vn)\n  for (var i = 0; i < vn; i++) {\n    v[i] = Math.random() * (max - min) + min\n  }\n}\nfunction log (a) {\n  return Math.log(a)\n}\nfunction lookup (ix, v) {\n  var r = 0\n  for (var i = 0; i < v.length; i++) {\n    var a0 = v[i]\n    if (a0[0] >= ix) {\n      i--\n      a0 = v[i]\n      var a1 = v[i + 1]\n      var m = 0\n      if (a0[0] !== a1[0]) {\n        m = abs((ix - a0[0]) / (a1[0] - a0[0]))\n      }\n      // echo(\">>\",i,ix,a0[0],a1[0],\";\",m,a0[1],a1[1])\n      if (m > 0) {\n        r = a0[1] * (1 - m) + a1[1] * m\n      } else {\n        r = a0[1]\n      }\n      return r\n    }\n  }\n  return r\n}\n\nfunction pow (a, b) {\n  return Math.pow(a, b)\n}\n\nfunction sign (a) {\n  return a < 0 ? -1 : (a > 1 ? 1 : 0)\n}\n\nfunction sqrt (a) {\n  return Math.sqrt(a)\n}\n\nfunction round (a) {\n  return floor(a + 0.5)\n}\n\nmodule.exports = {\n  sin,\n  cos,\n  asin,\n  acos,\n  tan,\n  atan,\n  atan2,\n  ceil,\n  floor,\n  abs,\n  min,\n  max,\n  rands,\n  log,\n  lookup,\n  pow,\n  sign,\n  sqrt,\n  round\n}\n","// -- data source from from http://paulbourke.net/dataformats/hershey/\n// -- reduced to save some bytes...\n// { [ascii code]: [width, x, y, ...] } - undefined value as path separator\nmodule.exports = {\n  height: 14,\n  32:[16],\n  33:[10,5,21,5,7,,5,2,4,1,5,0,6,1,5,2],\n  34:[16,4,21,4,14,,12,21,12,14],\n  35:[21,11,25,4,-7,,17,25,10,-7,,4,12,18,12,,3,6,17,6],\n  36:[20,8,25,8,-4,,12,25,12,-4,,17,18,15,20,12,21,8,21,5,20,3,18,3,16,4,14,5,13,7,12,13,10,15,9,16,8,17,6,17,3,15,1,12,0,8,0,5,1,3,3],\n  37:[24,21,21,3,0,,8,21,10,19,10,17,9,15,7,14,5,14,3,16,3,18,4,20,6,21,8,21,10,20,13,19,16,19,19,20,21,21,,17,7,15,6,14,4,14,2,16,0,18,0,20,1,21,3,21,5,19,7,17,7],\n  38:[26,23,12,23,13,22,14,21,14,20,13,19,11,17,6,15,3,13,1,11,0,7,0,5,1,4,2,3,4,3,6,4,8,5,9,12,13,13,14,14,16,14,18,13,20,11,21,9,20,8,18,8,16,9,13,11,10,16,3,18,1,20,0,22,0,23,1,23,2],\n  39:[10,5,19,4,20,5,21,6,20,6,18,5,16,4,15],\n  40:[14,11,25,9,23,7,20,5,16,4,11,4,7,5,2,7,-2,9,-5,11,-7],\n  41:[14,3,25,5,23,7,20,9,16,10,11,10,7,9,2,7,-2,5,-5,3,-7],\n  42:[16,8,21,8,9,,3,18,13,12,,13,18,3,12],\n  43:[26,13,18,13,0,,4,9,22,9],\n  44:[10,6,1,5,0,4,1,5,2,6,1,6,-1,5,-3,4,-4],\n  45:[26,4,9,22,9],\n  46:[10,5,2,4,1,5,0,6,1,5,2],\n  47:[22,20,25,2,-7],\n  48:[20,9,21,6,20,4,17,3,12,3,9,4,4,6,1,9,0,11,0,14,1,16,4,17,9,17,12,16,17,14,20,11,21,9,21],\n  49:[20,6,17,8,18,11,21,11,0],\n  50:[20,4,16,4,17,5,19,6,20,8,21,12,21,14,20,15,19,16,17,16,15,15,13,13,10,3,0,17,0],\n  51:[20,5,21,16,21,10,13,13,13,15,12,16,11,17,8,17,6,16,3,14,1,11,0,8,0,5,1,4,2,3,4],\n  52:[20,13,21,3,7,18,7,,13,21,13,0],\n  53:[20,15,21,5,21,4,12,5,13,8,14,11,14,14,13,16,11,17,8,17,6,16,3,14,1,11,0,8,0,5,1,4,2,3,4],\n  54:[20,16,18,15,20,12,21,10,21,7,20,5,17,4,12,4,7,5,3,7,1,10,0,11,0,14,1,16,3,17,6,17,7,16,10,14,12,11,13,10,13,7,12,5,10,4,7],\n  55:[20,17,21,7,0,,3,21,17,21],\n  56:[20,8,21,5,20,4,18,4,16,5,14,7,13,11,12,14,11,16,9,17,7,17,4,16,2,15,1,12,0,8,0,5,1,4,2,3,4,3,7,4,9,6,11,9,12,13,13,15,14,16,16,16,18,15,20,12,21,8,21],\n  57:[20,16,14,15,11,13,9,10,8,9,8,6,9,4,11,3,14,3,15,4,18,6,20,9,21,10,21,13,20,15,18,16,14,16,9,15,4,13,1,10,0,8,0,5,1,4,3],\n  58:[10,5,14,4,13,5,12,6,13,5,14,,5,2,4,1,5,0,6,1,5,2],\n  59:[10,5,14,4,13,5,12,6,13,5,14,,6,1,5,0,4,1,5,2,6,1,6,-1,5,-3,4,-4],\n  60:[24,20,18,4,9,20,0],\n  61:[26,4,12,22,12,,4,6,22,6],\n  62:[24,4,18,20,9,4,0],\n  63:[18,3,16,3,17,4,19,5,20,7,21,11,21,13,20,14,19,15,17,15,15,14,13,13,12,9,10,9,7,,9,2,8,1,9,0,10,1,9,2],\n  64:[27,18,13,17,15,15,16,12,16,10,15,9,14,8,11,8,8,9,6,11,5,14,5,16,6,17,8,,12,16,10,14,9,11,9,8,10,6,11,5,,18,16,17,8,17,6,19,5,21,5,23,7,24,10,24,12,23,15,22,17,20,19,18,20,15,21,12,21,9,20,7,19,5,17,4,15,3,12,3,9,4,6,5,4,7,2,9,1,12,0,15,0,18,1,20,2,21,3,,19,16,18,8,18,6,19,5],\n  65:[18,9,21,1,0,,9,21,17,0,,4,7,14,7],\n  66:[21,4,21,4,0,,4,21,13,21,16,20,17,19,18,17,18,15,17,13,16,12,13,11,,4,11,13,11,16,10,17,9,18,7,18,4,17,2,16,1,13,0,4,0],\n  67:[21,18,16,17,18,15,20,13,21,9,21,7,20,5,18,4,16,3,13,3,8,4,5,5,3,7,1,9,0,13,0,15,1,17,3,18,5],\n  68:[21,4,21,4,0,,4,21,11,21,14,20,16,18,17,16,18,13,18,8,17,5,16,3,14,1,11,0,4,0],\n  69:[19,4,21,4,0,,4,21,17,21,,4,11,12,11,,4,0,17,0],\n  70:[18,4,21,4,0,,4,21,17,21,,4,11,12,11],\n  71:[21,18,16,17,18,15,20,13,21,9,21,7,20,5,18,4,16,3,13,3,8,4,5,5,3,7,1,9,0,13,0,15,1,17,3,18,5,18,8,,13,8,18,8],\n  72:[22,4,21,4,0,,18,21,18,0,,4,11,18,11],\n  73:[8,4,21,4,0],\n  74:[16,12,21,12,5,11,2,10,1,8,0,6,0,4,1,3,2,2,5,2,7],\n  75:[21,4,21,4,0,,18,21,4,7,,9,12,18,0],\n  76:[17,4,21,4,0,,4,0,16,0],\n  77:[24,4,21,4,0,,4,21,12,0,,20,21,12,0,,20,21,20,0],\n  78:[22,4,21,4,0,,4,21,18,0,,18,21,18,0],\n  79:[22,9,21,7,20,5,18,4,16,3,13,3,8,4,5,5,3,7,1,9,0,13,0,15,1,17,3,18,5,19,8,19,13,18,16,17,18,15,20,13,21,9,21],\n  80:[21,4,21,4,0,,4,21,13,21,16,20,17,19,18,17,18,14,17,12,16,11,13,10,4,10],\n  81:[22,9,21,7,20,5,18,4,16,3,13,3,8,4,5,5,3,7,1,9,0,13,0,15,1,17,3,18,5,19,8,19,13,18,16,17,18,15,20,13,21,9,21,,12,4,18,-2],\n  82:[21,4,21,4,0,,4,21,13,21,16,20,17,19,18,17,18,15,17,13,16,12,13,11,4,11,,11,11,18,0],\n  83:[20,17,18,15,20,12,21,8,21,5,20,3,18,3,16,4,14,5,13,7,12,13,10,15,9,16,8,17,6,17,3,15,1,12,0,8,0,5,1,3,3],\n  84:[16,8,21,8,0,,1,21,15,21],\n  85:[22,4,21,4,6,5,3,7,1,10,0,12,0,15,1,17,3,18,6,18,21],\n  86:[18,1,21,9,0,,17,21,9,0],\n  87:[24,2,21,7,0,,12,21,7,0,,12,21,17,0,,22,21,17,0],\n  88:[20,3,21,17,0,,17,21,3,0],\n  89:[18,1,21,9,11,9,0,,17,21,9,11],\n  90:[20,17,21,3,0,,3,21,17,21,,3,0,17,0],\n  91:[14,4,25,4,-7,,5,25,5,-7,,4,25,11,25,,4,-7,11,-7],\n  92:[14,0,21,14,-3],\n  93:[14,9,25,9,-7,,10,25,10,-7,,3,25,10,25,,3,-7,10,-7],\n  94:[16,6,15,8,18,10,15,,3,12,8,17,13,12,,8,17,8,0],\n  95:[16,0,-2,16,-2],\n  96:[10,6,21,5,20,4,18,4,16,5,15,6,16,5,17],\n  97:[19,15,14,15,0,,15,11,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],\n  98:[19,4,21,4,0,,4,11,6,13,8,14,11,14,13,13,15,11,16,8,16,6,15,3,13,1,11,0,8,0,6,1,4,3],\n  99:[18,15,11,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],\n  100:[19,15,21,15,0,,15,11,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],\n  101:[18,3,8,15,8,15,10,14,12,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],\n  102:[12,10,21,8,21,6,20,5,17,5,0,,2,14,9,14],\n  103:[19,15,14,15,-2,14,-5,13,-6,11,-7,8,-7,6,-6,,15,11,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],\n  104:[19,4,21,4,0,,4,10,7,13,9,14,12,14,14,13,15,10,15,0],\n  105:[8,3,21,4,20,5,21,4,22,3,21,,4,14,4,0],\n  106:[10,5,21,6,20,7,21,6,22,5,21,,6,14,6,-3,5,-6,3,-7,1,-7],\n  107:[17,4,21,4,0,,14,14,4,4,,8,8,15,0],\n  108:[8,4,21,4,0],\n  109:[30,4,14,4,0,,4,10,7,13,9,14,12,14,14,13,15,10,15,0,,15,10,18,13,20,14,23,14,25,13,26,10,26,0],\n  110:[19,4,14,4,0,,4,10,7,13,9,14,12,14,14,13,15,10,15,0],\n  111:[19,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3,16,6,16,8,15,11,13,13,11,14,8,14],\n  112:[19,4,14,4,-7,,4,11,6,13,8,14,11,14,13,13,15,11,16,8,16,6,15,3,13,1,11,0,8,0,6,1,4,3],\n  113:[19,15,14,15,-7,,15,11,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],\n  114:[13,4,14,4,0,,4,8,5,11,7,13,9,14,12,14],\n  115:[17,14,11,13,13,10,14,7,14,4,13,3,11,4,9,6,8,11,7,13,6,14,4,14,3,13,1,10,0,7,0,4,1,3,3],\n  116:[12,5,21,5,4,6,1,8,0,10,0,,2,14,9,14],\n  117:[19,4,14,4,4,5,1,7,0,10,0,12,1,15,4,,15,14,15,0],\n  118:[16,2,14,8,0,,14,14,8,0],\n  119:[22,3,14,7,0,,11,14,7,0,,11,14,15,0,,19,14,15,0],\n  120:[17,3,14,14,0,,14,14,3,0],\n  121:[16,2,14,8,0,,14,14,8,0,6,-4,4,-6,2,-7,1,-7],\n  122:[17,14,14,3,0,,3,14,14,14,,3,0,14,0],\n  123:[14,9,25,7,24,6,23,5,21,5,19,6,17,7,16,8,14,8,12,6,10,,7,24,6,22,6,20,7,18,8,17,9,15,9,13,8,11,4,9,8,7,9,5,9,3,8,1,7,0,6,-2,6,-4,7,-6,,6,8,8,6,8,4,7,2,6,1,5,-1,5,-3,6,-5,7,-6,9,-7],\n  124:[8,4,25,4,-7],\n  125:[14,5,25,7,24,8,23,9,21,9,19,8,17,7,16,6,14,6,12,8,10,,7,24,8,22,8,20,7,18,6,17,5,15,5,13,6,11,10,9,6,7,5,5,5,3,6,1,7,0,8,-2,8,-4,7,-6,,8,8,6,6,6,4,7,2,8,1,9,-1,9,-3,8,-5,7,-6,5,-7],\n  126:[24,3,6,3,8,4,11,6,12,8,12,10,11,14,8,16,7,18,7,20,8,21,10,,3,8,4,10,6,11,8,11,10,10,14,7,16,6,18,6,20,7,21,10,21,12]\n}\n","const defaultFont = require('../fonts/single-line/hershey/simplex.js')\nconst { union } = require('./ops-booleans')\n\nconst defaultsVectorParams = {\n  xOffset: 0,\n  yOffset: 0,\n  input: '?',\n  align: 'left',\n  font: defaultFont,\n  height: 14, // == old vector_xxx simplex font height\n  lineSpacing: 2.142857142857143, // == 30/14 == old vector_xxx ratio\n  letterSpacing: 1,\n  extrudeOffset: 0\n}\n\n// vectorsXXX parameters handler\nfunction vectorParams (options, input) {\n  if (!input && typeof options === 'string') {\n    options = { input: options }\n  }\n  options = options || {}\n  let params = Object.assign({}, defaultsVectorParams, options)\n  params.input = input || params.input\n  return params\n}\n\n// translate text line\nfunction translateLine (options, line) {\n  const { x, y } = Object.assign({ x: 0, y: 0 }, options || {})\n  let segments = line.segments\n  let segment = null\n  let point = null\n  for (let i = 0, il = segments.length; i < il; i++) {\n    segment = segments[i]\n    for (let j = 0, jl = segment.length; j < jl; j++) {\n      point = segment[j]\n      segment[j] = [point[0] + x, point[1] + y]\n    }\n  }\n  return line\n}\n\n/** Represents a character as segments\n* @typedef {Object} VectorCharObject\n* @property {Float} width - character width\n* @property {Float} height - character height (uppercase)\n* @property {Array} segments - character segments [[[x, y], ...], ...]\n*/\n\n/** Construct a {@link VectorCharObject} from a ascii character whose code is between 31 and 127,\n* if the character is not supported it is replaced by a question mark.\n* @param {Object|String} [options] - options for construction or ascii character\n* @param {Float} [options.xOffset=0] - x offset\n* @param {Float} [options.yOffset=0] - y offset\n* @param {Float} [options.height=21] - font size (uppercase height)\n* @param {Float} [options.extrudeOffset=0] - width of the extrusion that will be applied (manually) after the creation of the character\n* @param {String} [options.input='?'] - ascii character (ignored/overwrited if provided as seconds parameter)\n* @param {String} [char='?'] - ascii character\n* @returns {VectorCharObject}\n*\n* @example\n* let vectorCharObject = vectorChar()\n* or\n* let vectorCharObject = vectorChar('A')\n* or\n* let vectorCharObject = vectorChar({ xOffset: 57 }, 'C')\n* or\n* let vectorCharObject = vectorChar({ xOffset: 78, input: '!' })\n*/\nfunction vectorChar (options, char) {\n  let {\n    xOffset, yOffset, input, font, height, extrudeOffset\n  } = vectorParams(options, char)\n  let code = input.charCodeAt(0)\n  if (!code || !font[code]) {\n    code = 63 // 63 => ?\n  }\n  let glyph = [].concat(font[code])\n  let ratio = (height - extrudeOffset) / font.height\n  let extrudeYOffset = (extrudeOffset / 2)\n  let width = glyph.shift() * ratio\n  let segments = []\n  let polyline = []\n  for (let i = 0, il = glyph.length; i < il; i += 2) {\n    gx = ratio * glyph[i] + xOffset\n    gy = ratio * glyph[i + 1] + yOffset + extrudeYOffset\n    if (glyph[i] !== undefined) {\n      polyline.push([ gx, gy ])\n      continue\n    }\n    segments.push(polyline)\n    polyline = []\n    i--\n  }\n  if (polyline.length) {\n    segments.push(polyline)\n  }\n  return { width, height, segments }\n}\n\n/** Construct an array of character segments from a ascii string whose characters code is between 31 and 127,\n* if one character is not supported it is replaced by a question mark.\n* @param {Object|String} [options] - options for construction or ascii string\n* @param {Float} [options.xOffset=0] - x offset\n* @param {Float} [options.yOffset=0] - y offset\n* @param {Float} [options.height=21] - font size (uppercase height)\n* @param {Float} [options.lineSpacing=1.4] - line spacing expressed as a percentage of font size\n* @param {Float} [options.letterSpacing=1] - extra letter spacing expressed as a percentage of font size\n* @param {String} [options.align='left'] - multi-line text alignement: left, center or right\n* @param {Float} [options.extrudeOffset=0] - width of the extrusion that will be applied (manually) after the creation of the character\n* @param {String} [options.input='?'] - ascii string (ignored/overwrited if provided as seconds parameter)\n* @param {String} [text='?'] - ascii string\n* @returns {Array} characters segments [[[x, y], ...], ...]\n*\n* @example\n* let textSegments = vectorText()\n* or\n* let textSegments = vectorText('OpenJSCAD')\n* or\n* let textSegments = vectorText({ yOffset: -50 }, 'OpenJSCAD')\n* or\n* let textSegments = vectorText({ yOffset: -80, input: 'OpenJSCAD' })\n*/\nfunction vectorText (options, text) {\n  let {\n    xOffset, yOffset, input, font, height, align, extrudeOffset, lineSpacing, letterSpacing\n  } = vectorParams(options, text)\n  let [ x, y ] = [ xOffset, yOffset ]\n  let [ i, il, char, vect, width, diff ] = []\n  let line = { width: 0, segments: [] }\n  let lines = []\n  let output = []\n  let maxWidth = 0\n  let lineStart = x\n  const pushLine = () => {\n    lines.push(line)\n    maxWidth = Math.max(maxWidth, line.width)\n    line = { width: 0, segments: [] }\n  }\n  for (i = 0, il = input.length; i < il; i++) {\n    char = input[i]\n    vect = vectorChar({ xOffset: x, yOffset: y, font, height, extrudeOffset }, char)\n    if (char === '\\n') {\n      x = lineStart\n      y -= vect.height * lineSpacing\n      pushLine()\n      continue\n    }\n    width = vect.width * letterSpacing\n    line.width += width\n    x += width\n    if (char !== ' ') {\n      line.segments = line.segments.concat(vect.segments)\n    }\n  }\n  if (line.segments.length) {\n    pushLine()\n  }\n  for (i = 0, il = lines.length; i < il; i++) {\n    line = lines[i]\n    if (maxWidth > line.width) {\n      diff = maxWidth - line.width\n      if (align === 'right') {\n        line = translateLine({ x: diff }, line)\n      } else if (align === 'center') {\n        line = translateLine({ x: diff / 2 }, line)\n      }\n    }\n    output = output.concat(line.segments)\n  }\n  return output\n}\n\n/** Construct a {@link VectorCharObject} from a ascii character whose code is between 31 and 127,\n* if the character is not supported it is replaced by a question mark.\n* @param {Float} x - x offset\n* @param {Float} y - y offset\n* @param {String} char - ascii character\n* @returns {VectorCharObject}\n* @deprecated >= v2\n\n* @example\n* let vectorCharObject = vector_char(36, 0, 'B')\n*/\nfunction vector_char (x, y, char) {\n  return vectorChar({ xOffset: x, yOffset: y }, char)\n}\n\n/** Construct an array of character segments from a ascii string whose characters code is between 31 and 127,\n* if one character is not supported it is replaced by a question mark.\n* @param {Float} x - x offset\n* @param {Float} y - y offset\n* @param {String} text - ascii string\n* @returns {Array} characters segments [[[x, y], ...], ...]\n* @deprecated >= v2\n*\n* @example\n* let textSegments = vector_text(0, -20, 'OpenJSCAD')\n*/\nfunction vector_text (x, y, text) {\n  return vectorText({ xOffset: x, yOffset: y }, text)\n}\n\nmodule.exports = {\n  vector_char,\n  vector_text,\n  vectorChar,\n  vectorText\n}\n","function echo () {\n  console.warn('echo() will be deprecated in the near future: please use console.log/warn/error instead')\n  var s = '', a = arguments\n  for (var i = 0; i < a.length; i++) {\n    if (i) s += ', '\n    s += a[i]\n  }\n  // var t = (new Date()-global.time)/1000\n  // console.log(t,s)\n  console.log(s)\n}\n\nmodule.exports = {\n  echo\n}\n","function log (txt) {\n  console.warn('log() will be deprecated in the near future: please use console.log/warn/error instead')\n  var timeInMs = Date.now()\n  var prevtime// OpenJsCad.log.prevLogTime\n  if (!prevtime) prevtime = timeInMs\n  var deltatime = timeInMs - prevtime\n  log.prevLogTime = timeInMs\n  var timefmt = (deltatime * 0.001).toFixed(3)\n  txt = '[' + timefmt + '] ' + txt\n  if ((typeof (console) === 'object') && (typeof (console.log) === 'function')) {\n    console.log(txt)\n  } else if ((typeof (self) === 'object') && (typeof (self.postMessage) === 'function')) {\n    self.postMessage({cmd: 'log', txt: txt})\n  } else throw new Error('Cannot log')\n}\n\n// See Processor.setStatus()\n// Note: leave for compatibility\nfunction status (s) {\n  log(s)\n}\n\nmodule.exports = {\n  log,\n  status\n}\n","\nconst primitives3d = require('./primitives3d-api')\nconst primitives2d = require('./primitives2d-api')\nconst booleanOps = require('./ops-booleans')\nconst transformations = require('./ops-transformations')\nconst extrusions = require('./ops-extrusions')\nconst color = require('./color')\nconst maths = require('./maths')\nconst text = require('./text')\nconst { echo } = require('./debug')\n\n// these are 'external' to this api and we basically just re-export for old api compatibility\n// ...needs to be reviewed\nconst { CAG, CSG } = require('../../csg')\nconst { log } = require('./log') // FIXME: this is a duplicate of the one in openjscad itself,*/\n\n// mostly likely needs to be removed since it is in the OpenJsCad namespace anyway, leaving here\n// for now\n\nconst exportedApi = {\n  csg: {CAG, CSG},\n  primitives2d,\n  primitives3d,\n  booleanOps,\n  transformations,\n  extrusions,\n  color,\n  maths,\n  text,\n  OpenJsCad: {OpenJsCad: {log}},\n  debug: {echo}\n}\n\nmodule.exports = exportedApi\n","const api = require('./src/api/index')\n// const csg = require('./csg')\n\nmodule.exports = api // {api, csg}\n","\nimport {\n  Scene,\n  PerspectiveCamera,\n  CameraHelper,\n  WebGLRenderer,\n  PCFSoftShadowMap,\n  DirectionalLight,\n  DirectionalLightHelper,\n  AmbientLight,\n  Vector3,\n  GridHelper,\n  AxesHelper,\n  Mesh,\n  PlaneGeometry,\n  MeshPhongMaterial,\n  MeshBasicMaterial,\n  ShadowMaterial,\n  BoxGeometry,\n  SphereGeometry,\n  IcosahedronGeometry,\n  TorusGeometry,\n  CylinderGeometry\n} from \"three/build/three.module.js\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nimport { VertexNormalsHelper } from \"three/examples/jsm/helpers/VertexNormalsHelper.js\";\nimport Modeling from \"@jscad/modeling\";\nimport CSG2Geom from \"./csg-2-geom.js\";\nimport * as THREE from 'three';\nimport {earcut} from 'three/src/extras/Earcut.js';\n\n\n// old csg import\nimport { jscadLocal } from './jscad-primitives3d-api';\nimport { OrthographicCamera } from \"three/build/three.module.js\";\n\nconst { oldUnion, oldDifference } = require('@jscad/csg/api').booleanOps;\n\nconst scene = new Scene();\n// const camera = new PerspectiveCamera(\n//   75,\n//   window.innerWidth / window.innerHeight,\n//   1,\n//   50\n// );\n// const camera = new OrthographicCameraCamera(\n//   75,\n//   window.innerWidth / window.innerHeight,\n//   1,\n//   50\n// );\nconst camera = new OrthographicCamera(window.innerWidth / -2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / -2, 0, 10000);\n\nconst renderer = new WebGLRenderer();\nrenderer.setSize(window.innerWidth, window.innerHeight);\nrenderer.setClearColor(0x444444);\nrenderer.shadowMap.enabled = true;\nrenderer.shadowMap.type = PCFSoftShadowMap;\ndocument.body.appendChild(renderer.domElement);\n\nconst keyLight = new DirectionalLight(0xffffff, 0.5);\nkeyLight.position.set(5, 10, 5);\nkeyLight.castShadow = true;\nscene.add(keyLight);\nconst helper = new DirectionalLightHelper(keyLight, 2);\n// scene.add(helper);\nconst shadowFrustumSize = 12;\nkeyLight.shadow.camera.near = 1;\nkeyLight.shadow.camera.far = 20;\nkeyLight.shadow.camera.top = shadowFrustumSize;\nkeyLight.shadow.camera.bottom = -shadowFrustumSize;\nkeyLight.shadow.camera.left = -shadowFrustumSize;\nkeyLight.shadow.camera.right = shadowFrustumSize;\nconst shadowCameraHelper = new CameraHelper(keyLight.shadow.camera);\n//scene.add(shadowCameraHelper);\n\nconst ambientLight = new AmbientLight(0xffffff, 0.5);\n// scene.add(ambientLight);\n\nconst shadowMaterial = new ShadowMaterial();\nshadowMaterial.opacity = 0.5;\nconst shadowPlane = new Mesh(new PlaneGeometry(16, 16), shadowMaterial);\nshadowPlane.receiveShadow = true;\nshadowPlane.rotation.x = Math.PI / -2;\n// scene.add(shadowPlane);\n\n// const gridHelper = new GridHelper(16, 16, 0x111111);\n// scene.add(gridHelper);\n\nconst axesHelper = new AxesHelper(2);\naxesHelper.position.set(-6, 0, 6);\n// scene.add(axesHelper);\n\nconst cameraLookTarget = new Vector3(0, 0, 0);\ncamera.position.set(0, 5, 10);\ncamera.lookAt(cameraLookTarget);\n\nconst controls = new OrbitControls(camera, renderer.domElement);\n\nconst {\n  cube,\n  cuboid,\n  cylinder,\n  cylinderElliptic,\n  geodesicSphere,\n  roundedCuboid,\n  roundedCylinder,\n  sphere,\n  torus\n} = Modeling.primitives;\nconst { translate, rotate, scale } = Modeling.transforms;\nconst { intersect, subtract, union } = Modeling.booleans;\nconst material = new MeshPhongMaterial();\nconst wireMaterial = new MeshBasicMaterial({ color: 0xffff00 });\nwireMaterial.wireframe = true;\n\nconst normalsLength = 0.3;\nlet csgMesh;\nlet csgGeometry;\nlet wireMesh;\nlet normalsHelper;\n\n// section 1\nlet size = 50;\nlet cuttingSize = (size/2)-5;\nlet topFrontCube = [size / 5, -size / 5, -size / 5 ];\nlet topBackCube = [size / 5, -size / 5, -size / 1.5 ];\nlet bottomFrontCube = [size / 5, -size / 1.5, -size / 5];\nlet bottomBackCube = [size / 5, -size / 1.5, -size / 1.5];\n\n\nlet start = performance.now();\ncsgGeometry = CSG2Geom(\n  translate(\n    [0,0,0],//[-3, 1, 6],\n    union(\n      // intersect(cube({ size: 1.5 }), sphere({ segments: 24 })),\n      subtract(cube({center: [size/2, -size/2, -size/2], size: size}),\n      // sphere({center: [1,1,1], radius: 1.00, segments: 24 }),\n      cube({center: topFrontCube, size: cuttingSize }),\n      cube({center: topBackCube, size: cuttingSize }),\n      cube({center: bottomFrontCube, size: cuttingSize }),\n      cube({center: bottomBackCube, size: cuttingSize })\n      )\n    )\n  )\n);\n\nconsole.log(\"Time taken by JSCAD/modeling = \"+ (performance.now()-start) + \" milliseconds.\");\n\ncsgMesh = new Mesh(csgGeometry, material);\ncsgMesh.position.set(0, 0, 0);\ncsgMesh.castShadow = true;\nscene.add(csgMesh);\n// wireMesh = csgMesh.clone();\n// wireMesh.material = wireMaterial;\n// scene.add(wireMesh);\nnormalsHelper = new VertexNormalsHelper(csgMesh, normalsLength);\n\n\n// Global Variables - cube or geometric object\nconst geometry = new THREE.BoxGeometry(15, 15, 15);\nconst mater = new THREE.MeshPhongMaterial({color: 'purple'});\nconst threeCube = new THREE.Mesh(geometry, mater);\nscene.add(threeCube);\nconsole.log(threeCube.geometry.toJSON());\n\n\n\n// old csg\n// let L = 120;      // Length of Manifold\n// let W = 100;    // Width of Manifold\n// let H = 100;\n\n// let cubeMaterial = new THREE.LineBasicMaterial({ color:\"0xff00ff\", linewidth: 1 });\n// let csgBlock = jscadLocal.cube({ size: [L, W, H], center: false, offset: [L / 2, -W / 2, -H / 2] });\n// let resBody = csgBlock;\n// let ManifoldObj = new THREE.Object3D();\n// ManifoldObj.add(csgBlock,cubeMaterial);\n// scene.add(ManifoldObj)\n\n\n\n\n// scene.add(csgBlock);\n// section 2\n\nfunction update() {\n  controls.update();\n}\n\nfunction render() {\n  renderer.render(scene, camera);\n}\n\nfunction handleAnimationFrame() {\n  window.requestAnimationFrame(handleAnimationFrame);\n  update();\n  render();\n}\n\nhandleAnimationFrame();\n\nfunction handleResize() {\n  const width = window.innerWidth;\n  const height = window.innerHeight;\n\n  camera.aspect = width / height;\n  camera.updateProjectionMatrix();\n\n  renderer.setSize(width, height);\n}\n\nfunction debounce(callback, wait) {\n  let timeoutId = null;\n  return (...args) => {\n    window.clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(() => {\n      callback.apply(null, args);\n    }, wait);\n  };\n}\n\nwindow.addEventListener(\"resize\", debounce(handleResize, 300), false);\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}