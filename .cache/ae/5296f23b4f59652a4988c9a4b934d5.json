{"id":"node_modules/@jscad/modeling/src/primitives/star.js","dependencies":[{"name":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\package.json","includedInParent":true,"mtime":1695875987294},{"name":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\package.json","includedInParent":true,"mtime":1695809278048},{"name":"../maths/vec2","loc":{"line":1,"column":21,"index":21},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\primitives\\star.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\maths\\vec2\\index.js"},{"name":"../geometries/geom2","loc":{"line":3,"column":22,"index":61},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\primitives\\star.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\geometries\\geom2\\index.js"},{"name":"./commonChecks","loc":{"line":5,"column":47,"index":132},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\primitives\\star.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\primitives\\commonChecks.js"}],"generated":{"js":"const vec2 = require('../maths/vec2')\n\nconst geom2 = require('../geometries/geom2')\n\nconst { isGT, isGTE, isNumberArray } = require('./commonChecks')\n\n// @see http://www.jdawiseman.com/papers/easymath/surds_star_inner_radius.html\nconst getRadiusRatio = (vertices, density) => {\n  if (vertices > 0 && density > 1 && density < vertices / 2) {\n    return Math.cos(Math.PI * density / vertices) / Math.cos(Math.PI * (density - 1) / vertices)\n  }\n  return 0\n}\n\nconst getPoints = (vertices, radius, startAngle, center) => {\n  const a = (Math.PI * 2) / vertices\n\n  const points = []\n  for (let i = 0; i < vertices; i++) {\n    const point = vec2.fromAngleRadians(a * i + startAngle)\n    vec2.scale(point, radius, point)\n    vec2.add(point, center, point)\n    points.push(point)\n  }\n  return points\n}\n\n/**\n * Construct a star in two dimensional space.\n * @see https://en.wikipedia.org/wiki/Star_polygon\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0]] - center of star\n * @param {Number} [options.vertices=5] - number of vertices (P) on the star\n * @param {Number} [options.density=2] - density (Q) of star\n * @param {Number} [options.outerRadius=1] - outer radius of vertices\n * @param {Number} [options.innerRadius=0] - inner radius of vertices, or zero to calculate\n * @param {Number} [options.startAngle=0] - starting angle for first vertice, in radians\n * @returns {geom2} new 2D geometry\n * @alias module:modeling/primitives.star\n *\n * @example\n * let star1 = star({vertices: 8, outerRadius: 10}) // star with 8/2 density\n * let star2 = star({vertices: 12, outerRadius: 40, innerRadius: 20}) // star with given radius\n */\nconst star = (options) => {\n  const defaults = {\n    center: [0, 0],\n    vertices: 5,\n    outerRadius: 1,\n    innerRadius: 0,\n    density: 2,\n    startAngle: 0\n  }\n  let { center, vertices, outerRadius, innerRadius, density, startAngle } = Object.assign({}, defaults, options)\n\n  if (!isNumberArray(center, 2)) throw new Error('center must be an array of X and Y values')\n  if (!isGTE(vertices, 2)) throw new Error('vertices must be two or more')\n  if (!isGT(outerRadius, 0)) throw new Error('outerRadius must be greater than zero')\n  if (!isGTE(innerRadius, 0)) throw new Error('innerRadius must be greater than zero')\n  if (!isGTE(startAngle, 0)) throw new Error('startAngle must be greater than zero')\n\n  // force integers\n  vertices = Math.floor(vertices)\n  density = Math.floor(density)\n\n  startAngle = startAngle % (Math.PI * 2)\n\n  if (innerRadius === 0) {\n    if (!isGTE(density, 2)) throw new Error('density must be two or more')\n    innerRadius = outerRadius * getRadiusRatio(vertices, density)\n  }\n\n  const centerv = vec2.fromArray(center)\n\n  const outerPoints = getPoints(vertices, outerRadius, startAngle, centerv)\n  const innerPoints = getPoints(vertices, innerRadius, startAngle + Math.PI / vertices, centerv)\n\n  const allPoints = []\n  for (let i = 0; i < vertices; i++) {\n    allPoints.push(outerPoints[i])\n    allPoints.push(innerPoints[i])\n  }\n\n  return geom2.fromPoints(allPoints)\n}\n\nmodule.exports = star\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@jscad/modeling/src/primitives/star.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}}],"sources":{"node_modules/@jscad/modeling/src/primitives/star.js":"const vec2 = require('../maths/vec2')\n\nconst geom2 = require('../geometries/geom2')\n\nconst { isGT, isGTE, isNumberArray } = require('./commonChecks')\n\n// @see http://www.jdawiseman.com/papers/easymath/surds_star_inner_radius.html\nconst getRadiusRatio = (vertices, density) => {\n  if (vertices > 0 && density > 1 && density < vertices / 2) {\n    return Math.cos(Math.PI * density / vertices) / Math.cos(Math.PI * (density - 1) / vertices)\n  }\n  return 0\n}\n\nconst getPoints = (vertices, radius, startAngle, center) => {\n  const a = (Math.PI * 2) / vertices\n\n  const points = []\n  for (let i = 0; i < vertices; i++) {\n    const point = vec2.fromAngleRadians(a * i + startAngle)\n    vec2.scale(point, radius, point)\n    vec2.add(point, center, point)\n    points.push(point)\n  }\n  return points\n}\n\n/**\n * Construct a star in two dimensional space.\n * @see https://en.wikipedia.org/wiki/Star_polygon\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0]] - center of star\n * @param {Number} [options.vertices=5] - number of vertices (P) on the star\n * @param {Number} [options.density=2] - density (Q) of star\n * @param {Number} [options.outerRadius=1] - outer radius of vertices\n * @param {Number} [options.innerRadius=0] - inner radius of vertices, or zero to calculate\n * @param {Number} [options.startAngle=0] - starting angle for first vertice, in radians\n * @returns {geom2} new 2D geometry\n * @alias module:modeling/primitives.star\n *\n * @example\n * let star1 = star({vertices: 8, outerRadius: 10}) // star with 8/2 density\n * let star2 = star({vertices: 12, outerRadius: 40, innerRadius: 20}) // star with given radius\n */\nconst star = (options) => {\n  const defaults = {\n    center: [0, 0],\n    vertices: 5,\n    outerRadius: 1,\n    innerRadius: 0,\n    density: 2,\n    startAngle: 0\n  }\n  let { center, vertices, outerRadius, innerRadius, density, startAngle } = Object.assign({}, defaults, options)\n\n  if (!isNumberArray(center, 2)) throw new Error('center must be an array of X and Y values')\n  if (!isGTE(vertices, 2)) throw new Error('vertices must be two or more')\n  if (!isGT(outerRadius, 0)) throw new Error('outerRadius must be greater than zero')\n  if (!isGTE(innerRadius, 0)) throw new Error('innerRadius must be greater than zero')\n  if (!isGTE(startAngle, 0)) throw new Error('startAngle must be greater than zero')\n\n  // force integers\n  vertices = Math.floor(vertices)\n  density = Math.floor(density)\n\n  startAngle = startAngle % (Math.PI * 2)\n\n  if (innerRadius === 0) {\n    if (!isGTE(density, 2)) throw new Error('density must be two or more')\n    innerRadius = outerRadius * getRadiusRatio(vertices, density)\n  }\n\n  const centerv = vec2.fromArray(center)\n\n  const outerPoints = getPoints(vertices, outerRadius, startAngle, centerv)\n  const innerPoints = getPoints(vertices, innerRadius, startAngle + Math.PI / vertices, centerv)\n\n  const allPoints = []\n  for (let i = 0; i < vertices; i++) {\n    allPoints.push(outerPoints[i])\n    allPoints.push(innerPoints[i])\n  }\n\n  return geom2.fromPoints(allPoints)\n}\n\nmodule.exports = star\n"},"lineCount":88}},"error":null,"hash":"b2539c6091dd2b234127cfeb8c97bc0f","cacheData":{"env":{}}}