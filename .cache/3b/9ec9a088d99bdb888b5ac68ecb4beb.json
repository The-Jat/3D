{"id":"node_modules/@jscad/csg/src/api/ops-transformations.js","dependencies":[{"name":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\package.json","includedInParent":true,"mtime":1695875987294},{"name":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\package.json","includedInParent":true,"mtime":1695872748353},{"name":"../core/math/Matrix4","loc":{"line":1,"column":24,"index":24},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\api\\ops-transformations.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\math\\Matrix4.js"},{"name":"../core/math/Plane","loc":{"line":2,"column":22,"index":70},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\api\\ops-transformations.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\math\\Plane.js"},{"name":"../core/math/Vector3","loc":{"line":3,"column":24,"index":116},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\api\\ops-transformations.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\math\\Vector3.js"},{"name":"./ops-booleans","loc":{"line":4,"column":26,"index":166},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\api\\ops-transformations.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\api\\ops-booleans.js"},{"name":"../core/CAGFactories","loc":{"line":5,"column":31,"index":215},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\api\\ops-transformations.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\CAGFactories.js"},{"name":"../core/utils","loc":{"line":6,"column":26,"index":265},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\api\\ops-transformations.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\utils.js"}],"generated":{"js":"const Matrix4 = require('../core/math/Matrix4')\nconst Plane = require('../core/math/Plane')\nconst Vector3 = require('../core/math/Vector3')\nconst { union } = require('./ops-booleans')\nconst { fromPoints } = require('../core/CAGFactories')\nconst { isCAG } = require('../core/utils')\n// -- 3D transformations (OpenSCAD like notion)\n\n/** translate an object in 2D/3D space\n * @param {Object} vector - 3D vector to translate the given object(s) by\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to translate\n * @returns {CSG} new CSG object , translated by the given amount\n *\n * @example\n * let movedSphere = translate([10,2,0], sphere())\n */\nfunction translate (vector, ...objects) {      // v, obj or array\n  // workaround needed to determine if we are dealing with an array of objects\n  const _objects = (objects.length >= 1 && objects[0].length) ? objects[0] : objects\n  let object = _objects[0]\n\n  if (_objects.length > 1) {\n    for (let i = 1; i < _objects.length; i++) { // FIXME/ why is union really needed ??\n      object = object.union(_objects[i])\n    }\n  }\n  return object.translate(vector)\n}\n\n/** scale an object in 2D/3D space\n * @param {Float|Array} scale - either an array or simple number to scale object(s) by\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to scale\n * @returns {CSG} new CSG object , scaled by the given amount\n *\n * @example\n * let scaledSphere = scale([0.2,15,1], sphere())\n */\nfunction scale (scale, ...objects) {         // v, obj or array\n  const _objects = (objects.length >= 1 && objects[0].length) ? objects[0] : objects\n  let object = _objects[0]\n\n  if (_objects.length > 1) {\n    for (let i = 1; i < _objects.length; i++) { // FIXME/ why is union really needed ??\n      object = object.union(_objects[i])\n    }\n  }\n  return object.scale(scale)\n}\n\n/** rotate an object in 2D/3D space\n * @param {Float|Array} rotation - either an array or simple number to rotate object(s) by\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to rotate\n * @returns {CSG} new CSG object , rotated by the given amount\n *\n * @example\n * let rotatedSphere = rotate([0.2,15,1], sphere())\n */\nfunction rotate () {\n  let o\n  let i\n  let v\n  let r = 1\n  let a = arguments\n  if (!a[0].length) {        // rotate(r,[x,y,z],o)\n    r = a[0]\n    v = a[1]\n    i = 2\n    if (a[2].length) { a = a[2]; i = 0 }\n  } else {                   // rotate([x,y,z],o)\n    v = a[0]\n    i = 1\n    if (a[1].length) { a = a[1]; i = 0 }\n  }\n  for (o = a[i++]; i < a.length; i++) {\n    o = o.union(a[i])\n  }\n  if (r !== 1) {\n    return o.rotate([0, 0, 0], v, r)\n  } else {\n    return o.rotateX(v[0]).rotateY(v[1]).rotateZ(v[2])\n  }\n}\n\n/** apply the given matrix transform to the given objects\n * @param {Array} matrix - the 4x4 matrix to apply, as a simple 1d array of 16 elements\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to transform\n * @returns {CSG} new CSG object , transformed\n *\n * @example\n * const angle = 45\n * let transformedShape = transform([\n * cos(angle), -sin(angle), 0, 10,\n * sin(angle),  cos(angle), 0, 20,\n * 0         ,           0, 1, 30,\n * 0,           0, 0,  1\n * ], sphere())\n */\nfunction transform (matrix, ...objects) { // v, obj or array\n  const _objects = (objects.length >= 1 && objects[0].length) ? objects[0] : objects\n  let object = _objects[0]\n\n  if (_objects.length > 1) {\n    for (let i = 1; i < _objects.length; i++) { // FIXME/ why is union really needed ??\n      object = object.union(_objects[i])\n    }\n  }\n\n  let transformationMatrix\n  if (!Array.isArray(matrix)) {\n    throw new Error('Matrix needs to be an array')\n  }\n  matrix.forEach(element => {\n    if (!Number.isFinite(element)) {\n      throw new Error('you can only use a flat array of valid, finite numbers (float and integers)')\n    }\n  })\n  transformationMatrix = new Matrix4(matrix)\n  return object.transform(transformationMatrix)\n}\n\n\n/**\n * Center the given object(s) about the given axes\n * @param {Array|Boolean} axes=[true,true,true]|true  - an array of boolean values that indicate the axes (X,Y,Z) to center upon. A single boolean is also allowed.\n * @param {...Object} object one or more objects to center, i.e. objects are CSG or CAG\n * @returns {CSG} new CSG object , translated by the given amount\n *\n * @example\n * let csg = center([true,false,false], sphere()) // center about the X axis\n */\nfunction center (axes, ...objects) {\n  const _objects = (objects.length >= 1 && objects[0].length) ? objects[0] : objects\n  let object = _objects[0]\n\n  if (_objects.length > 1) {\n    for (let i = 1; i < _objects.length; i++) { // FIXME/ why is union really needed ??\n      object = object.union(_objects[i])\n    }\n  }\n  if (! Array.isArray(axes)) {\n    axes = [axes,axes,axes]\n  }\n  return object.center(axes)\n}\n\n/** mirror an object in 2D/3D space\n * @param {Array} vector - the axes to mirror the object(s) by\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to mirror\n * @returns {CSG} new CSG object , mirrored\n *\n * @example\n * let rotatedSphere = mirror([0.2,15,1], sphere())\n */\nfunction mirror (vector, ...objects) {\n  const _objects = (objects.length >= 1 && objects[0].length) ? objects[0] : objects\n  let object = _objects[0]\n\n  if (_objects.length > 1) {\n    for (let i = 1; i < _objects.length; i++) { // FIXME/ why is union really needed ??\n      object = object.union(_objects[i])\n    }\n  }\n  const plane = new Plane(new Vector3(vector[0], vector[1], vector[2]).unit(), 0)\n  return object.mirrored(plane)\n}\n\n/** expand an object in 2D/3D space\n * @param {float} radius - the radius to expand by\n * @param {Object} object a CSG/CAG objects to expand\n * @returns {CSG/CAG} new CSG/CAG object , expanded\n *\n * @example\n * let expanededShape = expand([0.2,15,1], sphere())\n */\nfunction expand (radius, n, object) {\n  return object.expand(radius, n)\n}\n\n/** contract an object(s) in 2D/3D space\n * @param {float} radius - the radius to contract by\n * @param {Object} object a CSG/CAG objects to contract\n * @returns {CSG/CAG} new CSG/CAG object , contracted\n *\n * @example\n * let contractedShape = contract([0.2,15,1], sphere())\n */\nfunction contract (radius, n, object) {\n  return object.contract(radius, n)\n}\n\n/** create a minkowski sum of the given shapes\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to create a hull around\n * @returns {CSG} new CSG object , mirrored\n *\n * @example\n * let hulled = hull(rect(), circle())\n */\nfunction minkowski () {\n  console.log('minkowski() not yet implemented')\n}\n\n/** create a convex hull of the given shapes\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to create a hull around\n * @returns {CSG} new CSG object , a hull around the given shapes\n *\n * @example\n * let hulled = hull(rect(), circle())\n */\nfunction hull () {\n  let pts = []\n\n  let a = arguments\n  if (a[0].length) a = a[0]\n  let done = []\n\n  for (let i = 0; i < a.length; i++) {              // extract all points of the CAG in the argument list\n    let cag = a[i]\n    if (!isCAG(cag)) {\n      throw new Error('ERROR: hull() accepts only 2D forms / CAG')\n    }\n    for (let j = 0; j < cag.sides.length; j++) {\n      let x = cag.sides[j].vertex0.pos.x\n      let y = cag.sides[j].vertex0.pos.y\n      // avoid some coord to appear multiple times\n      if (done['' + x + ',' + y]) {\n        continue\n      }\n      pts.push({ x: x, y: y })\n      done['' + x + ',' + y]++\n         // echo(x,y);\n    }\n  }\n   // echo(pts.length+\" points in\",pts);\n\n   // from http://www.psychedelicdevelopment.com/grahamscan/\n   //    see also at https://github.com/bkiers/GrahamScan/blob/master/src/main/cg/GrahamScan.java\n  let ConvexHullPoint = function (i, a, d) {\n    this.index = i\n    this.angle = a\n    this.distance = d\n\n    this.compare = function (p) {\n      if (this.angle < p.angle) {\n        return -1\n      } else if (this.angle > p.angle) {\n        return 1\n      } else {\n        if (this.distance < p.distance) {\n          return -1\n        } else if (this.distance > p.distance) {\n          return 1\n        }\n      }\n      return 0\n    }\n  }\n\n  let ConvexHull = function () {\n    this.points = null\n    this.indices = null\n\n    this.getIndices = function () {\n      return this.indices\n    }\n\n    this.clear = function () {\n      this.indices = null\n      this.points = null\n    }\n\n    this.ccw = function (p1, p2, p3) {\n      let ccw = (this.points[p2].x - this.points[p1].x) * (this.points[p3].y - this.points[p1].y) -\n                   (this.points[p2].y - this.points[p1].y) * (this.points[p3].x - this.points[p1].x)\n      // we need this, otherwise sorting never ends, see https://github.com/Spiritdude/OpenJSCAD.org/issues/18\n      if (ccw < 1e-5) {\n        return 0\n      }\n      return ccw\n    }\n\n    this.angle = function (o, a) {\n         // return Math.atan((this.points[a].y-this.points[o].y) / (this.points[a].x - this.points[o].x));\n      return Math.atan2((this.points[a].y - this.points[o].y), (this.points[a].x - this.points[o].x))\n    }\n\n    this.distance = function (a, b) {\n      return ((this.points[b].x - this.points[a].x) * (this.points[b].x - this.points[a].x) +\n                 (this.points[b].y - this.points[a].y) * (this.points[b].y - this.points[a].y))\n    }\n\n    this.compute = function (_points) {\n      this.indices = null\n      if (_points.length < 3) {\n        return\n      }\n      this.points = _points\n\n         // Find the lowest point\n      let min = 0\n      for (let i = 1; i < this.points.length; i++) {\n        if (this.points[i].y === this.points[min].y) {\n          if (this.points[i].x < this.points[min].x) {\n            min = i\n          }\n        } else if (this.points[i].y < this.points[min].y) {\n          min = i\n        }\n      }\n\n         // Calculate angle and distance from base\n      let al = []\n      let ang = 0.0\n      let dist = 0.0\n      for (let i = 0; i < this.points.length; i++) {\n        if (i === min) {\n          continue\n        }\n        ang = this.angle(min, i)\n        if (ang < 0) {\n          ang += Math.PI\n        }\n        dist = this.distance(min, i)\n        al.push(new ConvexHullPoint(i, ang, dist))\n      }\n\n      al.sort(function (a, b) { return a.compare(b) })\n\n         // Create stack\n      let stack = new Array(this.points.length + 1)\n      let j = 2\n      for (let i = 0; i < this.points.length; i++) {\n        if (i === min) {\n          continue\n        }\n        stack[j] = al[j - 2].index\n        j++\n      }\n      stack[0] = stack[this.points.length]\n      stack[1] = min\n\n      let tmp\n      let M = 2\n      for (let i = 3; i <= this.points.length; i++) {\n        while (this.ccw(stack[M - 1], stack[M], stack[i]) <= 0) {\n          M--\n        }\n        M++\n        tmp = stack[i]\n        stack[i] = stack[M]\n        stack[M] = tmp\n      }\n\n      this.indices = new Array(M)\n      for (let i = 0; i < M; i++) {\n        this.indices[i] = stack[i + 1]\n      }\n    }\n  }\n\n  let hull = new ConvexHull()\n\n  hull.compute(pts)\n  let indices = hull.getIndices()\n\n  if (indices && indices.length > 0) {\n    let ch = []\n    for (let i = 0; i < indices.length; i++) {\n      ch.push(pts[indices[i]])\n    }\n    return fromPoints(ch)\n  }\n}\n\n/** create a chain hull of the given shapes\n * Originally \"Whosa whatsis\" suggested \"Chain Hull\" ,\n * as described at https://plus.google.com/u/0/105535247347788377245/posts/aZGXKFX1ACN\n * essentially hull A+B, B+C, C+D and then union those\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to create a chain hull around\n * @returns {CSG} new CSG object ,which a chain hull of the inputs\n *\n * @example\n * let hulled = chain_hull(rect(), circle())\n */\nfunction chain_hull (params, objects) {\n  /*\n  const defaults = {\n    closed: false\n  }\n  const closed = Object.assign({}, defaults, params) */\n  let a = arguments\n  let closed = false\n  let j = 0\n\n  if (a[j].closed !== undefined) {\n    closed = a[j++].closed\n  }\n\n  if (a[j].length) { a = a[j] }\n\n  let hulls = []\n  let hullsAmount = a.length - (closed ? 0 : 1)\n  for (let i = 0; i < hullsAmount; i++) {\n    hulls.push(hull(a[i], a[(i + 1) % a.length]))\n  }\n  return union(hulls)\n}\n\nmodule.exports = {\n  translate,\n  center,\n  scale,\n  rotate,\n  transform,\n  mirror,\n  expand,\n  contract,\n  minkowski,\n  hull,\n  chain_hull\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-transformations.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}}],"sources":{"node_modules/@jscad/csg/src/api/ops-transformations.js":"const Matrix4 = require('../core/math/Matrix4')\nconst Plane = require('../core/math/Plane')\nconst Vector3 = require('../core/math/Vector3')\nconst { union } = require('./ops-booleans')\nconst { fromPoints } = require('../core/CAGFactories')\nconst { isCAG } = require('../core/utils')\n// -- 3D transformations (OpenSCAD like notion)\n\n/** translate an object in 2D/3D space\n * @param {Object} vector - 3D vector to translate the given object(s) by\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to translate\n * @returns {CSG} new CSG object , translated by the given amount\n *\n * @example\n * let movedSphere = translate([10,2,0], sphere())\n */\nfunction translate (vector, ...objects) {      // v, obj or array\n  // workaround needed to determine if we are dealing with an array of objects\n  const _objects = (objects.length >= 1 && objects[0].length) ? objects[0] : objects\n  let object = _objects[0]\n\n  if (_objects.length > 1) {\n    for (let i = 1; i < _objects.length; i++) { // FIXME/ why is union really needed ??\n      object = object.union(_objects[i])\n    }\n  }\n  return object.translate(vector)\n}\n\n/** scale an object in 2D/3D space\n * @param {Float|Array} scale - either an array or simple number to scale object(s) by\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to scale\n * @returns {CSG} new CSG object , scaled by the given amount\n *\n * @example\n * let scaledSphere = scale([0.2,15,1], sphere())\n */\nfunction scale (scale, ...objects) {         // v, obj or array\n  const _objects = (objects.length >= 1 && objects[0].length) ? objects[0] : objects\n  let object = _objects[0]\n\n  if (_objects.length > 1) {\n    for (let i = 1; i < _objects.length; i++) { // FIXME/ why is union really needed ??\n      object = object.union(_objects[i])\n    }\n  }\n  return object.scale(scale)\n}\n\n/** rotate an object in 2D/3D space\n * @param {Float|Array} rotation - either an array or simple number to rotate object(s) by\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to rotate\n * @returns {CSG} new CSG object , rotated by the given amount\n *\n * @example\n * let rotatedSphere = rotate([0.2,15,1], sphere())\n */\nfunction rotate () {\n  let o\n  let i\n  let v\n  let r = 1\n  let a = arguments\n  if (!a[0].length) {        // rotate(r,[x,y,z],o)\n    r = a[0]\n    v = a[1]\n    i = 2\n    if (a[2].length) { a = a[2]; i = 0 }\n  } else {                   // rotate([x,y,z],o)\n    v = a[0]\n    i = 1\n    if (a[1].length) { a = a[1]; i = 0 }\n  }\n  for (o = a[i++]; i < a.length; i++) {\n    o = o.union(a[i])\n  }\n  if (r !== 1) {\n    return o.rotate([0, 0, 0], v, r)\n  } else {\n    return o.rotateX(v[0]).rotateY(v[1]).rotateZ(v[2])\n  }\n}\n\n/** apply the given matrix transform to the given objects\n * @param {Array} matrix - the 4x4 matrix to apply, as a simple 1d array of 16 elements\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to transform\n * @returns {CSG} new CSG object , transformed\n *\n * @example\n * const angle = 45\n * let transformedShape = transform([\n * cos(angle), -sin(angle), 0, 10,\n * sin(angle),  cos(angle), 0, 20,\n * 0         ,           0, 1, 30,\n * 0,           0, 0,  1\n * ], sphere())\n */\nfunction transform (matrix, ...objects) { // v, obj or array\n  const _objects = (objects.length >= 1 && objects[0].length) ? objects[0] : objects\n  let object = _objects[0]\n\n  if (_objects.length > 1) {\n    for (let i = 1; i < _objects.length; i++) { // FIXME/ why is union really needed ??\n      object = object.union(_objects[i])\n    }\n  }\n\n  let transformationMatrix\n  if (!Array.isArray(matrix)) {\n    throw new Error('Matrix needs to be an array')\n  }\n  matrix.forEach(element => {\n    if (!Number.isFinite(element)) {\n      throw new Error('you can only use a flat array of valid, finite numbers (float and integers)')\n    }\n  })\n  transformationMatrix = new Matrix4(matrix)\n  return object.transform(transformationMatrix)\n}\n\n\n/**\n * Center the given object(s) about the given axes\n * @param {Array|Boolean} axes=[true,true,true]|true  - an array of boolean values that indicate the axes (X,Y,Z) to center upon. A single boolean is also allowed.\n * @param {...Object} object one or more objects to center, i.e. objects are CSG or CAG\n * @returns {CSG} new CSG object , translated by the given amount\n *\n * @example\n * let csg = center([true,false,false], sphere()) // center about the X axis\n */\nfunction center (axes, ...objects) {\n  const _objects = (objects.length >= 1 && objects[0].length) ? objects[0] : objects\n  let object = _objects[0]\n\n  if (_objects.length > 1) {\n    for (let i = 1; i < _objects.length; i++) { // FIXME/ why is union really needed ??\n      object = object.union(_objects[i])\n    }\n  }\n  if (! Array.isArray(axes)) {\n    axes = [axes,axes,axes]\n  }\n  return object.center(axes)\n}\n\n/** mirror an object in 2D/3D space\n * @param {Array} vector - the axes to mirror the object(s) by\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to mirror\n * @returns {CSG} new CSG object , mirrored\n *\n * @example\n * let rotatedSphere = mirror([0.2,15,1], sphere())\n */\nfunction mirror (vector, ...objects) {\n  const _objects = (objects.length >= 1 && objects[0].length) ? objects[0] : objects\n  let object = _objects[0]\n\n  if (_objects.length > 1) {\n    for (let i = 1; i < _objects.length; i++) { // FIXME/ why is union really needed ??\n      object = object.union(_objects[i])\n    }\n  }\n  const plane = new Plane(new Vector3(vector[0], vector[1], vector[2]).unit(), 0)\n  return object.mirrored(plane)\n}\n\n/** expand an object in 2D/3D space\n * @param {float} radius - the radius to expand by\n * @param {Object} object a CSG/CAG objects to expand\n * @returns {CSG/CAG} new CSG/CAG object , expanded\n *\n * @example\n * let expanededShape = expand([0.2,15,1], sphere())\n */\nfunction expand (radius, n, object) {\n  return object.expand(radius, n)\n}\n\n/** contract an object(s) in 2D/3D space\n * @param {float} radius - the radius to contract by\n * @param {Object} object a CSG/CAG objects to contract\n * @returns {CSG/CAG} new CSG/CAG object , contracted\n *\n * @example\n * let contractedShape = contract([0.2,15,1], sphere())\n */\nfunction contract (radius, n, object) {\n  return object.contract(radius, n)\n}\n\n/** create a minkowski sum of the given shapes\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to create a hull around\n * @returns {CSG} new CSG object , mirrored\n *\n * @example\n * let hulled = hull(rect(), circle())\n */\nfunction minkowski () {\n  console.log('minkowski() not yet implemented')\n}\n\n/** create a convex hull of the given shapes\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to create a hull around\n * @returns {CSG} new CSG object , a hull around the given shapes\n *\n * @example\n * let hulled = hull(rect(), circle())\n */\nfunction hull () {\n  let pts = []\n\n  let a = arguments\n  if (a[0].length) a = a[0]\n  let done = []\n\n  for (let i = 0; i < a.length; i++) {              // extract all points of the CAG in the argument list\n    let cag = a[i]\n    if (!isCAG(cag)) {\n      throw new Error('ERROR: hull() accepts only 2D forms / CAG')\n    }\n    for (let j = 0; j < cag.sides.length; j++) {\n      let x = cag.sides[j].vertex0.pos.x\n      let y = cag.sides[j].vertex0.pos.y\n      // avoid some coord to appear multiple times\n      if (done['' + x + ',' + y]) {\n        continue\n      }\n      pts.push({ x: x, y: y })\n      done['' + x + ',' + y]++\n         // echo(x,y);\n    }\n  }\n   // echo(pts.length+\" points in\",pts);\n\n   // from http://www.psychedelicdevelopment.com/grahamscan/\n   //    see also at https://github.com/bkiers/GrahamScan/blob/master/src/main/cg/GrahamScan.java\n  let ConvexHullPoint = function (i, a, d) {\n    this.index = i\n    this.angle = a\n    this.distance = d\n\n    this.compare = function (p) {\n      if (this.angle < p.angle) {\n        return -1\n      } else if (this.angle > p.angle) {\n        return 1\n      } else {\n        if (this.distance < p.distance) {\n          return -1\n        } else if (this.distance > p.distance) {\n          return 1\n        }\n      }\n      return 0\n    }\n  }\n\n  let ConvexHull = function () {\n    this.points = null\n    this.indices = null\n\n    this.getIndices = function () {\n      return this.indices\n    }\n\n    this.clear = function () {\n      this.indices = null\n      this.points = null\n    }\n\n    this.ccw = function (p1, p2, p3) {\n      let ccw = (this.points[p2].x - this.points[p1].x) * (this.points[p3].y - this.points[p1].y) -\n                   (this.points[p2].y - this.points[p1].y) * (this.points[p3].x - this.points[p1].x)\n      // we need this, otherwise sorting never ends, see https://github.com/Spiritdude/OpenJSCAD.org/issues/18\n      if (ccw < 1e-5) {\n        return 0\n      }\n      return ccw\n    }\n\n    this.angle = function (o, a) {\n         // return Math.atan((this.points[a].y-this.points[o].y) / (this.points[a].x - this.points[o].x));\n      return Math.atan2((this.points[a].y - this.points[o].y), (this.points[a].x - this.points[o].x))\n    }\n\n    this.distance = function (a, b) {\n      return ((this.points[b].x - this.points[a].x) * (this.points[b].x - this.points[a].x) +\n                 (this.points[b].y - this.points[a].y) * (this.points[b].y - this.points[a].y))\n    }\n\n    this.compute = function (_points) {\n      this.indices = null\n      if (_points.length < 3) {\n        return\n      }\n      this.points = _points\n\n         // Find the lowest point\n      let min = 0\n      for (let i = 1; i < this.points.length; i++) {\n        if (this.points[i].y === this.points[min].y) {\n          if (this.points[i].x < this.points[min].x) {\n            min = i\n          }\n        } else if (this.points[i].y < this.points[min].y) {\n          min = i\n        }\n      }\n\n         // Calculate angle and distance from base\n      let al = []\n      let ang = 0.0\n      let dist = 0.0\n      for (let i = 0; i < this.points.length; i++) {\n        if (i === min) {\n          continue\n        }\n        ang = this.angle(min, i)\n        if (ang < 0) {\n          ang += Math.PI\n        }\n        dist = this.distance(min, i)\n        al.push(new ConvexHullPoint(i, ang, dist))\n      }\n\n      al.sort(function (a, b) { return a.compare(b) })\n\n         // Create stack\n      let stack = new Array(this.points.length + 1)\n      let j = 2\n      for (let i = 0; i < this.points.length; i++) {\n        if (i === min) {\n          continue\n        }\n        stack[j] = al[j - 2].index\n        j++\n      }\n      stack[0] = stack[this.points.length]\n      stack[1] = min\n\n      let tmp\n      let M = 2\n      for (let i = 3; i <= this.points.length; i++) {\n        while (this.ccw(stack[M - 1], stack[M], stack[i]) <= 0) {\n          M--\n        }\n        M++\n        tmp = stack[i]\n        stack[i] = stack[M]\n        stack[M] = tmp\n      }\n\n      this.indices = new Array(M)\n      for (let i = 0; i < M; i++) {\n        this.indices[i] = stack[i + 1]\n      }\n    }\n  }\n\n  let hull = new ConvexHull()\n\n  hull.compute(pts)\n  let indices = hull.getIndices()\n\n  if (indices && indices.length > 0) {\n    let ch = []\n    for (let i = 0; i < indices.length; i++) {\n      ch.push(pts[indices[i]])\n    }\n    return fromPoints(ch)\n  }\n}\n\n/** create a chain hull of the given shapes\n * Originally \"Whosa whatsis\" suggested \"Chain Hull\" ,\n * as described at https://plus.google.com/u/0/105535247347788377245/posts/aZGXKFX1ACN\n * essentially hull A+B, B+C, C+D and then union those\n * @param {Object(s)|Array} objects either a single or multiple CSG/CAG objects to create a chain hull around\n * @returns {CSG} new CSG object ,which a chain hull of the inputs\n *\n * @example\n * let hulled = chain_hull(rect(), circle())\n */\nfunction chain_hull (params, objects) {\n  /*\n  const defaults = {\n    closed: false\n  }\n  const closed = Object.assign({}, defaults, params) */\n  let a = arguments\n  let closed = false\n  let j = 0\n\n  if (a[j].closed !== undefined) {\n    closed = a[j++].closed\n  }\n\n  if (a[j].length) { a = a[j] }\n\n  let hulls = []\n  let hullsAmount = a.length - (closed ? 0 : 1)\n  for (let i = 0; i < hullsAmount; i++) {\n    hulls.push(hull(a[i], a[(i + 1) % a.length]))\n  }\n  return union(hulls)\n}\n\nmodule.exports = {\n  translate,\n  center,\n  scale,\n  rotate,\n  transform,\n  mirror,\n  expand,\n  contract,\n  minkowski,\n  hull,\n  chain_hull\n}\n"},"lineCount":421}},"error":null,"hash":"2643c2d6fe67f5743e2065a1dcffd446","cacheData":{"env":{}}}