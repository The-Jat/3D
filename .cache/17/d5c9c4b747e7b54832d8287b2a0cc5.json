{"id":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","dependencies":[{"name":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\package.json","includedInParent":true,"mtime":1695875987294},{"name":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\package.json","includedInParent":true,"mtime":1695809278048},{"name":"../vec3","loc":{"line":1,"column":21,"index":21},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\maths\\line3\\fromPlanes.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\maths\\vec3\\index.js"},{"name":"../utils","loc":{"line":2,"column":33,"index":65},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\maths\\line3\\fromPlanes.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\maths\\utils\\index.js"},{"name":"../constants","loc":{"line":4,"column":24,"index":102},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\maths\\line3\\fromPlanes.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\maths\\constants.js"},{"name":"./fromPointAndDirection","loc":{"line":6,"column":38,"index":157},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\maths\\line3\\fromPlanes.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\maths\\line3\\fromPointAndDirection.js"}],"generated":{"js":"const vec3 = require('../vec3')\nconst { solve2Linear } = require('../utils')\n\nconst { EPS } = require('../constants')\n\nconst fromPointAndDirection = require('./fromPointAndDirection')\n\n/**\n * Create a line in 3D space from the intersection of the given planes.\n *\n * @param {plane} a - the first plane of reference\n * @param {plane} b - the second plane of reference\n * @returns {line3} a new unbounded line\n * @alias module:modeling/maths/line3.fromPlanes\n */\nconst fromPlanes = (plane1, plane2) => {\n  let direction = vec3.cross(plane1, plane2)\n  let length = vec3.length(direction)\n  if (length < EPS) {\n    throw new Error('parallel planes do not intersect')\n  }\n  length = (1.0 / length)\n  direction = vec3.scale(length, direction)\n\n  const absx = Math.abs(direction[0])\n  const absy = Math.abs(direction[1])\n  const absz = Math.abs(direction[2])\n  let origin\n  let r\n  if ((absx >= absy) && (absx >= absz)) {\n    // find a point p for which x is zero\n    r = solve2Linear(plane1[1], plane1[2], plane2[1], plane2[2], plane1[3], plane2[3])\n    origin = vec3.fromValues(0, r[0], r[1])\n  } else if ((absy >= absx) && (absy >= absz)) {\n    // find a point p for which y is zero\n    r = solve2Linear(plane1[0], plane1[2], plane2[0], plane2[2], plane1[3], plane2[3])\n    origin = vec3.fromValues(r[0], 0, r[1])\n  } else {\n    // find a point p for which z is zero\n    r = solve2Linear(plane1[0], plane1[1], plane2[0], plane2[1], plane1[3], plane2[3])\n    origin = vec3.fromValues(r[0], r[1], 0)\n  }\n  return fromPointAndDirection(origin, direction)\n}\n\nmodule.exports = fromPlanes\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}}],"sources":{"node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js":"const vec3 = require('../vec3')\nconst { solve2Linear } = require('../utils')\n\nconst { EPS } = require('../constants')\n\nconst fromPointAndDirection = require('./fromPointAndDirection')\n\n/**\n * Create a line in 3D space from the intersection of the given planes.\n *\n * @param {plane} a - the first plane of reference\n * @param {plane} b - the second plane of reference\n * @returns {line3} a new unbounded line\n * @alias module:modeling/maths/line3.fromPlanes\n */\nconst fromPlanes = (plane1, plane2) => {\n  let direction = vec3.cross(plane1, plane2)\n  let length = vec3.length(direction)\n  if (length < EPS) {\n    throw new Error('parallel planes do not intersect')\n  }\n  length = (1.0 / length)\n  direction = vec3.scale(length, direction)\n\n  const absx = Math.abs(direction[0])\n  const absy = Math.abs(direction[1])\n  const absz = Math.abs(direction[2])\n  let origin\n  let r\n  if ((absx >= absy) && (absx >= absz)) {\n    // find a point p for which x is zero\n    r = solve2Linear(plane1[1], plane1[2], plane2[1], plane2[2], plane1[3], plane2[3])\n    origin = vec3.fromValues(0, r[0], r[1])\n  } else if ((absy >= absx) && (absy >= absz)) {\n    // find a point p for which y is zero\n    r = solve2Linear(plane1[0], plane1[2], plane2[0], plane2[2], plane1[3], plane2[3])\n    origin = vec3.fromValues(r[0], 0, r[1])\n  } else {\n    // find a point p for which z is zero\n    r = solve2Linear(plane1[0], plane1[1], plane2[0], plane2[1], plane1[3], plane2[3])\n    origin = vec3.fromValues(r[0], r[1], 0)\n  }\n  return fromPointAndDirection(origin, direction)\n}\n\nmodule.exports = fromPlanes\n"},"lineCount":47}},"error":null,"hash":"2655ddb1fef321965e1437b1e57392d1","cacheData":{"env":{}}}