{"id":"node_modules/@jscad/csg/src/api/log.js","dependencies":[{"name":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\package.json","includedInParent":true,"mtime":1695875987294},{"name":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\package.json","includedInParent":true,"mtime":1695872748353}],"generated":{"js":"function log (txt) {\n  console.warn('log() will be deprecated in the near future: please use console.log/warn/error instead')\n  var timeInMs = Date.now()\n  var prevtime// OpenJsCad.log.prevLogTime\n  if (!prevtime) prevtime = timeInMs\n  var deltatime = timeInMs - prevtime\n  log.prevLogTime = timeInMs\n  var timefmt = (deltatime * 0.001).toFixed(3)\n  txt = '[' + timefmt + '] ' + txt\n  if ((typeof (console) === 'object') && (typeof (console.log) === 'function')) {\n    console.log(txt)\n  } else if ((typeof (self) === 'object') && (typeof (self.postMessage) === 'function')) {\n    self.postMessage({cmd: 'log', txt: txt})\n  } else throw new Error('Cannot log')\n}\n\n// See Processor.setStatus()\n// Note: leave for compatibility\nfunction status (s) {\n  log(s)\n}\n\nmodule.exports = {\n  log,\n  status\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@jscad/csg/src/api/log.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}}],"sources":{"node_modules/@jscad/csg/src/api/log.js":"function log (txt) {\n  console.warn('log() will be deprecated in the near future: please use console.log/warn/error instead')\n  var timeInMs = Date.now()\n  var prevtime// OpenJsCad.log.prevLogTime\n  if (!prevtime) prevtime = timeInMs\n  var deltatime = timeInMs - prevtime\n  log.prevLogTime = timeInMs\n  var timefmt = (deltatime * 0.001).toFixed(3)\n  txt = '[' + timefmt + '] ' + txt\n  if ((typeof (console) === 'object') && (typeof (console.log) === 'function')) {\n    console.log(txt)\n  } else if ((typeof (self) === 'object') && (typeof (self.postMessage) === 'function')) {\n    self.postMessage({cmd: 'log', txt: txt})\n  } else throw new Error('Cannot log')\n}\n\n// See Processor.setStatus()\n// Note: leave for compatibility\nfunction status (s) {\n  log(s)\n}\n\nmodule.exports = {\n  log,\n  status\n}\n"},"lineCount":27}},"error":null,"hash":"4a2ccc3cb20e44b40d07ceb93ef7e756","cacheData":{"env":{}}}