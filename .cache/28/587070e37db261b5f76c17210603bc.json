{"id":"node_modules/@jscad/modeling/src/geometries/path2/eachPoint.js","dependencies":[{"name":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\package.json","includedInParent":true,"mtime":1695875987294},{"name":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\package.json","includedInParent":true,"mtime":1695809278048},{"name":"./toPoints","loc":{"line":1,"column":25,"index":25},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\geometries\\path2\\eachPoint.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\geometries\\path2\\toPoints.js"}],"generated":{"js":"const toPoints = require('./toPoints')\n\n/**\n * Calls a function for each point in the geometry.\n * @param {Object} options - options\n * @param {Function} thunk - the function to call\n * @param {path2} geometry - the geometry to traverse\n * @alias module:modeling/geometries/path2.eachPoint\n *\n * @example\n * eachPoint({}, accumulate, geometry)\n */\nconst eachPoint = (options, thunk, path) => {\n  toPoints(path).forEach(thunk)\n}\n\nmodule.exports = eachPoint\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@jscad/modeling/src/geometries/path2/eachPoint.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/path2/eachPoint.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/path2/eachPoint.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/path2/eachPoint.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/path2/eachPoint.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/path2/eachPoint.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/path2/eachPoint.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/path2/eachPoint.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/path2/eachPoint.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/path2/eachPoint.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/path2/eachPoint.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/path2/eachPoint.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/path2/eachPoint.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/path2/eachPoint.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/path2/eachPoint.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/path2/eachPoint.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/path2/eachPoint.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/path2/eachPoint.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}}],"sources":{"node_modules/@jscad/modeling/src/geometries/path2/eachPoint.js":"const toPoints = require('./toPoints')\n\n/**\n * Calls a function for each point in the geometry.\n * @param {Object} options - options\n * @param {Function} thunk - the function to call\n * @param {path2} geometry - the geometry to traverse\n * @alias module:modeling/geometries/path2.eachPoint\n *\n * @example\n * eachPoint({}, accumulate, geometry)\n */\nconst eachPoint = (options, thunk, path) => {\n  toPoints(path).forEach(thunk)\n}\n\nmodule.exports = eachPoint\n"},"lineCount":18}},"error":null,"hash":"69acd732bfb53b3500dbb153df8ee685","cacheData":{"env":{}}}