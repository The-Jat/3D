{"id":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","dependencies":[{"name":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\package.json","includedInParent":true,"mtime":1695875987294},{"name":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\package.json","includedInParent":true,"mtime":1695809278048},{"name":"./edges","loc":{"line":1,"column":107,"index":107},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\operations\\modifiers\\repairTjunctions.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\operations\\modifiers\\edges.js"}],"generated":{"js":"const { polygonsToEdges, edgesToPolygons, cullOpenEdges, splitEdge, removePolygons, addPolygon } = require('./edges')\n\n/*\n */\nconst repairTjunctions = (epsilon, polygons) => {\n  const edges = polygonsToEdges(polygons)\n  let openedges = cullOpenEdges(edges)\n  if (openedges.length === 0) return polygons\n\n  // split open edges until no longer possible\n  let splitting = true\n  while (splitting) {\n    let splitcount = 0\n    for (let i = 0; i < openedges.length; i++) {\n      const edge = openedges[i]\n      if (edge && edge.polygons && edge.polygons.length === 1) {\n        const newpolygons = splitEdge(openedges, edge, epsilon)\n        if (newpolygons) {\n          openedges[i] = null\n          addPolygon(openedges, newpolygons[0])\n          addPolygon(openedges, newpolygons[1])\n\n          // adjust the master list as well\n          removePolygons(edges, edge)\n          // add edges for each new polygon\n          addPolygon(edges, newpolygons[0])\n          addPolygon(edges, newpolygons[1])\n\n          splitcount++\n          break // start again\n        }\n      }\n    }\n    splitting = (splitcount > 0)\n  }\n  openedges = openedges.filter((edge) => (edge && edge.polygons && edge.polygons.length === 1))\n  if (openedges.length > 0) console.warn('Repair of all T-junctions failed:', openedges.length)\n\n  // rebuild the list of polygons from the edges\n  polygons = edgesToPolygons(edges)\n  return polygons\n}\n\nmodule.exports = repairTjunctions\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}}],"sources":{"node_modules/@jscad/modeling/src/operations/modifiers/repairTjunctions.js":"const { polygonsToEdges, edgesToPolygons, cullOpenEdges, splitEdge, removePolygons, addPolygon } = require('./edges')\n\n/*\n */\nconst repairTjunctions = (epsilon, polygons) => {\n  const edges = polygonsToEdges(polygons)\n  let openedges = cullOpenEdges(edges)\n  if (openedges.length === 0) return polygons\n\n  // split open edges until no longer possible\n  let splitting = true\n  while (splitting) {\n    let splitcount = 0\n    for (let i = 0; i < openedges.length; i++) {\n      const edge = openedges[i]\n      if (edge && edge.polygons && edge.polygons.length === 1) {\n        const newpolygons = splitEdge(openedges, edge, epsilon)\n        if (newpolygons) {\n          openedges[i] = null\n          addPolygon(openedges, newpolygons[0])\n          addPolygon(openedges, newpolygons[1])\n\n          // adjust the master list as well\n          removePolygons(edges, edge)\n          // add edges for each new polygon\n          addPolygon(edges, newpolygons[0])\n          addPolygon(edges, newpolygons[1])\n\n          splitcount++\n          break // start again\n        }\n      }\n    }\n    splitting = (splitcount > 0)\n  }\n  openedges = openedges.filter((edge) => (edge && edge.polygons && edge.polygons.length === 1))\n  if (openedges.length > 0) console.warn('Repair of all T-junctions failed:', openedges.length)\n\n  // rebuild the list of polygons from the edges\n  polygons = edgesToPolygons(edges)\n  return polygons\n}\n\nmodule.exports = repairTjunctions\n"},"lineCount":45}},"error":null,"hash":"3b2c0e1eaa3df581c2815f875a9e99b5","cacheData":{"env":{}}}