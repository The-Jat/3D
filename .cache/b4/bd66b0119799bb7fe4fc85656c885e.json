{"id":"node_modules/@jscad/modeling/src/utils/radiusToSegments.js","dependencies":[{"name":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\package.json","includedInParent":true,"mtime":1695875987294},{"name":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\package.json","includedInParent":true,"mtime":1695809278048}],"generated":{"js":"/**\n * Calculate the number of segments from the given radius based on minimum length or angle.\n * @param {Number} radius - radius of the requested shape\n * @param {Number} minimumLength - minimum length of segments; 0 > length\n * @param {Number} minimumAngle - minimum angle (radians) between segments; 0 > angle < Math.PI * 2\n * @returns {Number} number of segments to complete the radius\n * @alias module:modeling/utils.radiusToSegments\n */\nconst radiusToSegments = (radius, minimumLength, minimumAngle) => {\n  const ss = minimumLength > 0 ? radius * 2 * Math.PI / minimumLength : 0\n  const as = minimumAngle > 0 ? Math.PI * 2 / minimumAngle : 0\n  // minimum segments is four(4) for round primitives\n  return Math.ceil(Math.max(ss, as, 4))\n}\n\nmodule.exports = radiusToSegments\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@jscad/modeling/src/utils/radiusToSegments.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@jscad/modeling/src/utils/radiusToSegments.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@jscad/modeling/src/utils/radiusToSegments.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@jscad/modeling/src/utils/radiusToSegments.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@jscad/modeling/src/utils/radiusToSegments.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@jscad/modeling/src/utils/radiusToSegments.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@jscad/modeling/src/utils/radiusToSegments.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@jscad/modeling/src/utils/radiusToSegments.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@jscad/modeling/src/utils/radiusToSegments.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@jscad/modeling/src/utils/radiusToSegments.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@jscad/modeling/src/utils/radiusToSegments.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@jscad/modeling/src/utils/radiusToSegments.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@jscad/modeling/src/utils/radiusToSegments.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@jscad/modeling/src/utils/radiusToSegments.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@jscad/modeling/src/utils/radiusToSegments.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@jscad/modeling/src/utils/radiusToSegments.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@jscad/modeling/src/utils/radiusToSegments.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}}],"sources":{"node_modules/@jscad/modeling/src/utils/radiusToSegments.js":"/**\n * Calculate the number of segments from the given radius based on minimum length or angle.\n * @param {Number} radius - radius of the requested shape\n * @param {Number} minimumLength - minimum length of segments; 0 > length\n * @param {Number} minimumAngle - minimum angle (radians) between segments; 0 > angle < Math.PI * 2\n * @returns {Number} number of segments to complete the radius\n * @alias module:modeling/utils.radiusToSegments\n */\nconst radiusToSegments = (radius, minimumLength, minimumAngle) => {\n  const ss = minimumLength > 0 ? radius * 2 * Math.PI / minimumLength : 0\n  const as = minimumAngle > 0 ? Math.PI * 2 / minimumAngle : 0\n  // minimum segments is four(4) for round primitives\n  return Math.ceil(Math.max(ss, as, 4))\n}\n\nmodule.exports = radiusToSegments\n"},"lineCount":17}},"error":null,"hash":"40c40cbe9edfb9506ca450963455ad04","cacheData":{"env":{}}}