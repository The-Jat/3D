{"id":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","dependencies":[{"name":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\package.json","includedInParent":true,"mtime":1695875987294},{"name":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\package.json","includedInParent":true,"mtime":1695809278048},{"name":"../../utils/flatten","loc":{"line":1,"column":24,"index":24},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\operations\\modifiers\\snap.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\utils\\flatten.js"},{"name":"../../maths/vec2","loc":{"line":3,"column":21,"index":69},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\operations\\modifiers\\snap.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\maths\\vec2\\index.js"},{"name":"../../geometries/geom2","loc":{"line":5,"column":22,"index":112},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\operations\\modifiers\\snap.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\geometries\\geom2\\index.js"},{"name":"../../geometries/geom3","loc":{"line":6,"column":22,"index":160},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\operations\\modifiers\\snap.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\geometries\\geom3\\index.js"},{"name":"../../geometries/path2","loc":{"line":7,"column":22,"index":208},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\operations\\modifiers\\snap.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\geometries\\path2\\index.js"},{"name":"../../measurements/measureEpsilon","loc":{"line":9,"column":31,"index":266},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\operations\\modifiers\\snap.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\measurements\\measureEpsilon.js"},{"name":"./snapPolygons","loc":{"line":11,"column":29,"index":333},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\operations\\modifiers\\snap.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\operations\\modifiers\\snapPolygons.js"}],"generated":{"js":"const flatten = require('../../utils/flatten')\n\nconst vec2 = require('../../maths/vec2')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\nconst measureEpsilon = require('../../measurements/measureEpsilon')\n\nconst snapPolygons = require('./snapPolygons')\n\nconst snapPath2 = (geometry) => {\n  const epsilon = measureEpsilon(geometry)\n  const points = path2.toPoints(geometry)\n  const newpoints = points.map((point) => vec2.snap(vec2.create(), epsilon, point))\n  // snap can produce duplicate points, remove those\n  return path2.create(newpoints)\n}\n\nconst snapGeom2 = (geometry) => {\n  const epsilon = measureEpsilon(geometry)\n  const sides = geom2.toSides(geometry)\n  let newsides = sides.map((side) => [vec2.snap(vec2.create(), epsilon, side[0]), vec2.snap(vec2.create(), epsilon, side[1])])\n  // snap can produce sides with zero (0) length, remove those\n  newsides = newsides.filter((side) => !vec2.equals(side[0], side[1]))\n  return geom2.create(newsides)\n}\n\nconst snapGeom3 = (geometry) => {\n  const epsilon = measureEpsilon(geometry)\n  const polygons = geom3.toPolygons(geometry)\n  const newpolygons = snapPolygons(epsilon, polygons)\n  return geom3.create(newpolygons)\n}\n\n/**\n * Snap the given geometries to the overall precision (epsilon) of the geometry.\n * @see measurements.measureEpsilon()\n * @param {...Object} geometries - the geometries to snap\n * @return {Object|Array} the snapped geometry, or a list of snapped geometries\n */\nconst snap = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n\n  const results = geometries.map((geometry) => {\n    if (path2.isA(geometry)) return snapPath2(geometry)\n    if (geom2.isA(geometry)) return snapGeom2(geometry)\n    if (geom3.isA(geometry)) return snapGeom3(geometry)\n    return geometry\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = snap\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/modifiers/snap.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}}],"sources":{"node_modules/@jscad/modeling/src/operations/modifiers/snap.js":"const flatten = require('../../utils/flatten')\n\nconst vec2 = require('../../maths/vec2')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\nconst measureEpsilon = require('../../measurements/measureEpsilon')\n\nconst snapPolygons = require('./snapPolygons')\n\nconst snapPath2 = (geometry) => {\n  const epsilon = measureEpsilon(geometry)\n  const points = path2.toPoints(geometry)\n  const newpoints = points.map((point) => vec2.snap(vec2.create(), epsilon, point))\n  // snap can produce duplicate points, remove those\n  return path2.create(newpoints)\n}\n\nconst snapGeom2 = (geometry) => {\n  const epsilon = measureEpsilon(geometry)\n  const sides = geom2.toSides(geometry)\n  let newsides = sides.map((side) => [vec2.snap(vec2.create(), epsilon, side[0]), vec2.snap(vec2.create(), epsilon, side[1])])\n  // snap can produce sides with zero (0) length, remove those\n  newsides = newsides.filter((side) => !vec2.equals(side[0], side[1]))\n  return geom2.create(newsides)\n}\n\nconst snapGeom3 = (geometry) => {\n  const epsilon = measureEpsilon(geometry)\n  const polygons = geom3.toPolygons(geometry)\n  const newpolygons = snapPolygons(epsilon, polygons)\n  return geom3.create(newpolygons)\n}\n\n/**\n * Snap the given geometries to the overall precision (epsilon) of the geometry.\n * @see measurements.measureEpsilon()\n * @param {...Object} geometries - the geometries to snap\n * @return {Object|Array} the snapped geometry, or a list of snapped geometries\n */\nconst snap = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n\n  const results = geometries.map((geometry) => {\n    if (path2.isA(geometry)) return snapPath2(geometry)\n    if (geom2.isA(geometry)) return snapGeom2(geometry)\n    if (geom3.isA(geometry)) return snapGeom3(geometry)\n    return geometry\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = snap\n"},"lineCount":57}},"error":null,"hash":"b68512fd0c6249b660431658674492e9","cacheData":{"env":{}}}