{"id":"node_modules/@jscad/modeling/src/maths/vec3/fromVec2.js","dependencies":[{"name":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\package.json","includedInParent":true,"mtime":1695875987294},{"name":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\package.json","includedInParent":true,"mtime":1695809278048},{"name":"./fromValues","loc":{"line":1,"column":27,"index":27},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\maths\\vec3\\fromVec2.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\maths\\vec3\\fromValues.js"}],"generated":{"js":"const fromValues = require('./fromValues')\n\n/**\n * Create a new vector by extending a 2D vector with a Z value.\n * @param {Array} vector - the vector of values\n * @param {Number} [z=0] - Z value\n * @alias module:modeling/maths/vec3.fromVec2\n */\nconst fromVector2 = (vec2, z = 0) => fromValues(vec2[0], vec2[1], z)\n\nmodule.exports = fromVector2\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@jscad/modeling/src/maths/vec3/fromVec2.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec3/fromVec2.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec3/fromVec2.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec3/fromVec2.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec3/fromVec2.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec3/fromVec2.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec3/fromVec2.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec3/fromVec2.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec3/fromVec2.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec3/fromVec2.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec3/fromVec2.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec3/fromVec2.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}}],"sources":{"node_modules/@jscad/modeling/src/maths/vec3/fromVec2.js":"const fromValues = require('./fromValues')\n\n/**\n * Create a new vector by extending a 2D vector with a Z value.\n * @param {Array} vector - the vector of values\n * @param {Number} [z=0] - Z value\n * @alias module:modeling/maths/vec3.fromVec2\n */\nconst fromVector2 = (vec2, z = 0) => fromValues(vec2[0], vec2[1], z)\n\nmodule.exports = fromVector2\n"},"lineCount":12}},"error":null,"hash":"fea0e7a5484559c58b3bc26f21d5008c","cacheData":{"env":{}}}