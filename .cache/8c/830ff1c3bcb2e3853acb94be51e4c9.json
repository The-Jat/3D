{"id":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","dependencies":[{"name":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\package.json","includedInParent":true,"mtime":1695875987294},{"name":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\package.json","includedInParent":true,"mtime":1695872748353},{"name":"../math/Vector2","loc":{"line":1,"column":25,"index":25},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\utils\\cagMeasurements.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\math\\Vector2.js"}],"generated":{"js":"const Vector2D = require('../math/Vector2')\n\n// see http://local.wasp.uwa.edu.au/~pbourke/geometry/polyarea/ :\n// Area of the polygon. For a counter clockwise rotating polygon the area is positive, otherwise negative\n// Note(bebbi): this looks wrong. See polygon getArea()\nconst area = function (cag) {\n  let polygonArea = 0\n  cag.sides.map(function (side) {\n    polygonArea += side.vertex0.pos.cross(side.vertex1.pos)\n  })\n  polygonArea *= 0.5\n  return polygonArea\n}\n\nconst getBounds = function (cag) {\n  let minpoint\n  if (cag.sides.length === 0) {\n    minpoint = new Vector2D(0, 0)\n  } else {\n    minpoint = cag.sides[0].vertex0.pos\n  }\n  let maxpoint = minpoint\n  cag.sides.map(function (side) {\n    minpoint = minpoint.min(side.vertex0.pos)\n    minpoint = minpoint.min(side.vertex1.pos)\n    maxpoint = maxpoint.max(side.vertex0.pos)\n    maxpoint = maxpoint.max(side.vertex1.pos)\n  })\n  return [minpoint, maxpoint]\n}\n\nmodule.exports = {area, getBounds}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}}],"sources":{"node_modules/@jscad/csg/src/core/utils/cagMeasurements.js":"const Vector2D = require('../math/Vector2')\n\n// see http://local.wasp.uwa.edu.au/~pbourke/geometry/polyarea/ :\n// Area of the polygon. For a counter clockwise rotating polygon the area is positive, otherwise negative\n// Note(bebbi): this looks wrong. See polygon getArea()\nconst area = function (cag) {\n  let polygonArea = 0\n  cag.sides.map(function (side) {\n    polygonArea += side.vertex0.pos.cross(side.vertex1.pos)\n  })\n  polygonArea *= 0.5\n  return polygonArea\n}\n\nconst getBounds = function (cag) {\n  let minpoint\n  if (cag.sides.length === 0) {\n    minpoint = new Vector2D(0, 0)\n  } else {\n    minpoint = cag.sides[0].vertex0.pos\n  }\n  let maxpoint = minpoint\n  cag.sides.map(function (side) {\n    minpoint = minpoint.min(side.vertex0.pos)\n    minpoint = minpoint.min(side.vertex1.pos)\n    maxpoint = maxpoint.max(side.vertex0.pos)\n    maxpoint = maxpoint.max(side.vertex1.pos)\n  })\n  return [minpoint, maxpoint]\n}\n\nmodule.exports = {area, getBounds}\n"},"lineCount":33}},"error":null,"hash":"fc63d8c3cbf7f384d300b6b5f78ea3de","cacheData":{"env":{}}}