{"id":"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","dependencies":[{"name":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\package.json","includedInParent":true,"mtime":1695875987294},{"name":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\package.json","includedInParent":true,"mtime":1695809278048},{"name":"../vec3","loc":{"line":1,"column":21,"index":21},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\maths\\line3\\fromPointAndDirection.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\maths\\vec3\\index.js"}],"generated":{"js":"const vec3 = require('../vec3')\n\n/**\n * Create a line in 3D space from the given point (origin) and direction.\n *\n * The point can be any random point on the line.\n * The direction must be a vector with positive or negative distance from the point.\n * See the logic of fromPoints() for appropriate values.\n *\n * @param {vec3} point start point of the line segment\n * @param {vec3} direction direction of the line segment\n * @returns {line3} a new unbounded line\n * @alias module:modeling/maths/line3.fromPointAndDirection\n */\nconst fromPointAndDirection = (point, direction) => {\n  const unit = vec3.unit(direction)\n  return [point, unit]\n}\n\nmodule.exports = fromPointAndDirection\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}}],"sources":{"node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js":"const vec3 = require('../vec3')\n\n/**\n * Create a line in 3D space from the given point (origin) and direction.\n *\n * The point can be any random point on the line.\n * The direction must be a vector with positive or negative distance from the point.\n * See the logic of fromPoints() for appropriate values.\n *\n * @param {vec3} point start point of the line segment\n * @param {vec3} direction direction of the line segment\n * @returns {line3} a new unbounded line\n * @alias module:modeling/maths/line3.fromPointAndDirection\n */\nconst fromPointAndDirection = (point, direction) => {\n  const unit = vec3.unit(direction)\n  return [point, unit]\n}\n\nmodule.exports = fromPointAndDirection\n"},"lineCount":21}},"error":null,"hash":"1e2d409c9ae7240c491c1cf135284d6e","cacheData":{"env":{}}}