{"id":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","dependencies":[{"name":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\package.json","includedInParent":true,"mtime":1695875987294},{"name":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\package.json","includedInParent":true,"mtime":1695809278048},{"name":"../../maths/vec3","loc":{"line":1,"column":21,"index":21},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\geometries\\poly3\\measureSignedVolume.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\maths\\vec3\\index.js"}],"generated":{"js":"const vec3 = require('../../maths/vec3')\n\n/**\n * Measure the signed volume of the given polygon, which must be convex.\n * The volume is that formed by the tetrahedon connected to the axis [0,0,0],\n * and will be positive or negative based on the rotation of the vertices.\n * @see http://chenlab.ece.cornell.edu/Publication/Cha/icip01_Cha.pdf\n * @param {poly3} polygon - the polygon to measure\n * @return {Number} volume of the polygon\n * @alias module:modeling/geometries/poly3.measureSignedVolume\n */\nconst measureSignedVolume = (poly3) => {\n  let signedVolume = 0\n  const vertices = poly3.vertices\n  // calculate based on triangluar polygons\n  for (let i = 0; i < vertices.length - 2; i++) {\n    const cross = vec3.cross(vertices[i + 1], vertices[i + 2])\n    signedVolume += vec3.dot(vertices[0], cross)\n  }\n  signedVolume /= 6\n  return signedVolume\n}\n\nmodule.exports = measureSignedVolume\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}}],"sources":{"node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js":"const vec3 = require('../../maths/vec3')\n\n/**\n * Measure the signed volume of the given polygon, which must be convex.\n * The volume is that formed by the tetrahedon connected to the axis [0,0,0],\n * and will be positive or negative based on the rotation of the vertices.\n * @see http://chenlab.ece.cornell.edu/Publication/Cha/icip01_Cha.pdf\n * @param {poly3} polygon - the polygon to measure\n * @return {Number} volume of the polygon\n * @alias module:modeling/geometries/poly3.measureSignedVolume\n */\nconst measureSignedVolume = (poly3) => {\n  let signedVolume = 0\n  const vertices = poly3.vertices\n  // calculate based on triangluar polygons\n  for (let i = 0; i < vertices.length - 2; i++) {\n    const cross = vec3.cross(vertices[i + 1], vertices[i + 2])\n    signedVolume += vec3.dot(vertices[0], cross)\n  }\n  signedVolume /= 6\n  return signedVolume\n}\n\nmodule.exports = measureSignedVolume\n"},"lineCount":25}},"error":null,"hash":"d65f869c43d1ff8e417432f07189839b","cacheData":{"env":{}}}