{"id":"node_modules/@jscad/csg/src/core/math/Plane.js","dependencies":[{"name":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\package.json","includedInParent":true,"mtime":1695875987294},{"name":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\package.json","includedInParent":true,"mtime":1695872748353},{"name":"./Vector3","loc":{"line":1,"column":25,"index":25},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\math\\Plane.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\math\\Vector3.js"},{"name":"./Line3","loc":{"line":2,"column":23,"index":61},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\math\\Plane.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\math\\Line3.js"},{"name":"../constants","loc":{"line":3,"column":30,"index":102},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\math\\Plane.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\constants.js"}],"generated":{"js":"const Vector3D = require('./Vector3')\nconst Line3D = require('./Line3')\nconst {EPS, getTag} = require('../constants')\n\n// # class Plane\n// Represents a plane in 3D space.\nconst Plane = function (normal, w) {\n  this.normal = normal\n  this.w = w\n}\n\n// create from an untyped object with identical property names:\nPlane.fromObject = function (obj) {\n  let normal = new Vector3D(obj.normal)\n  let w = parseFloat(obj.w)\n  return new Plane(normal, w)\n}\n\nPlane.fromVector3Ds = function (a, b, c) {\n  let n = b.minus(a).cross(c.minus(a)).unit()\n  return new Plane(n, n.dot(a))\n}\n\n// like fromVector3Ds, but allow the vectors to be on one point or one line\n// in such a case a random plane through the given points is constructed\nPlane.anyPlaneFromVector3Ds = function (a, b, c) {\n  let v1 = b.minus(a)\n  let v2 = c.minus(a)\n  if (v1.length() < EPS) {\n    v1 = v2.randomNonParallelVector()\n  }\n  if (v2.length() < EPS) {\n    v2 = v1.randomNonParallelVector()\n  }\n  let normal = v1.cross(v2)\n  if (normal.length() < EPS) {\n        // this would mean that v1 == v2.negated()\n    v2 = v1.randomNonParallelVector()\n    normal = v1.cross(v2)\n  }\n  normal = normal.unit()\n  return new Plane(normal, normal.dot(a))\n}\n\nPlane.fromPoints = function (a, b, c) {\n  a = new Vector3D(a)\n  b = new Vector3D(b)\n  c = new Vector3D(c)\n  return Plane.fromVector3Ds(a, b, c)\n}\n\nPlane.fromNormalAndPoint = function (normal, point) {\n  normal = new Vector3D(normal)\n  point = new Vector3D(point)\n  normal = normal.unit()\n  let w = point.dot(normal)\n  return new Plane(normal, w)\n}\n\nPlane.prototype = {\n  flipped: function () {\n    return new Plane(this.normal.negated(), -this.w)\n  },\n\n  getTag: function () {\n    let result = this.tag\n    if (!result) {\n      result = getTag()\n      this.tag = result\n    }\n    return result\n  },\n\n  equals: function (n) {\n    return this.normal.equals(n.normal) && this.w === n.w\n  },\n\n  transform: function (matrix4x4) {\n    let ismirror = matrix4x4.isMirroring()\n        // get two vectors in the plane:\n    let r = this.normal.randomNonParallelVector()\n    let u = this.normal.cross(r)\n    let v = this.normal.cross(u)\n        // get 3 points in the plane:\n    let point1 = this.normal.times(this.w)\n    let point2 = point1.plus(u)\n    let point3 = point1.plus(v)\n        // transform the points:\n    point1 = point1.multiply4x4(matrix4x4)\n    point2 = point2.multiply4x4(matrix4x4)\n    point3 = point3.multiply4x4(matrix4x4)\n        // and create a new plane from the transformed points:\n    let newplane = Plane.fromVector3Ds(point1, point2, point3)\n    if (ismirror) {\n            // the transform is mirroring\n            // We should mirror the plane:\n      newplane = newplane.flipped()\n    }\n    return newplane\n  },\n\n    // robust splitting of a line by a plane\n    // will work even if the line is parallel to the plane\n  splitLineBetweenPoints: function (p1, p2) {\n    let direction = p2.minus(p1)\n    let labda = (this.w - this.normal.dot(p1)) / this.normal.dot(direction)\n    if (isNaN(labda)) labda = 0\n    if (labda > 1) labda = 1\n    if (labda < 0) labda = 0\n    let result = p1.plus(direction.times(labda))\n    return result\n  },\n\n    // returns Vector3D\n  intersectWithLine: function (line3d) {\n    return line3d.intersectWithPlane(this)\n  },\n\n    // intersection of two planes\n  intersectWithPlane: function (plane) {\n    return Line3D.fromPlanes(this, plane)\n  },\n\n  signedDistanceToPoint: function (point) {\n    let t = this.normal.dot(point) - this.w\n    return t\n  },\n\n  toString: function () {\n    return '[normal: ' + this.normal.toString() + ', w: ' + this.w + ']'\n  },\n\n  mirrorPoint: function (point3d) {\n    let distance = this.signedDistanceToPoint(point3d)\n    let mirrored = point3d.minus(this.normal.times(distance * 2.0))\n    return mirrored\n  }\n}\n\nmodule.exports = Plane\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@jscad/csg/src/core/math/Plane.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}}],"sources":{"node_modules/@jscad/csg/src/core/math/Plane.js":"const Vector3D = require('./Vector3')\nconst Line3D = require('./Line3')\nconst {EPS, getTag} = require('../constants')\n\n// # class Plane\n// Represents a plane in 3D space.\nconst Plane = function (normal, w) {\n  this.normal = normal\n  this.w = w\n}\n\n// create from an untyped object with identical property names:\nPlane.fromObject = function (obj) {\n  let normal = new Vector3D(obj.normal)\n  let w = parseFloat(obj.w)\n  return new Plane(normal, w)\n}\n\nPlane.fromVector3Ds = function (a, b, c) {\n  let n = b.minus(a).cross(c.minus(a)).unit()\n  return new Plane(n, n.dot(a))\n}\n\n// like fromVector3Ds, but allow the vectors to be on one point or one line\n// in such a case a random plane through the given points is constructed\nPlane.anyPlaneFromVector3Ds = function (a, b, c) {\n  let v1 = b.minus(a)\n  let v2 = c.minus(a)\n  if (v1.length() < EPS) {\n    v1 = v2.randomNonParallelVector()\n  }\n  if (v2.length() < EPS) {\n    v2 = v1.randomNonParallelVector()\n  }\n  let normal = v1.cross(v2)\n  if (normal.length() < EPS) {\n        // this would mean that v1 == v2.negated()\n    v2 = v1.randomNonParallelVector()\n    normal = v1.cross(v2)\n  }\n  normal = normal.unit()\n  return new Plane(normal, normal.dot(a))\n}\n\nPlane.fromPoints = function (a, b, c) {\n  a = new Vector3D(a)\n  b = new Vector3D(b)\n  c = new Vector3D(c)\n  return Plane.fromVector3Ds(a, b, c)\n}\n\nPlane.fromNormalAndPoint = function (normal, point) {\n  normal = new Vector3D(normal)\n  point = new Vector3D(point)\n  normal = normal.unit()\n  let w = point.dot(normal)\n  return new Plane(normal, w)\n}\n\nPlane.prototype = {\n  flipped: function () {\n    return new Plane(this.normal.negated(), -this.w)\n  },\n\n  getTag: function () {\n    let result = this.tag\n    if (!result) {\n      result = getTag()\n      this.tag = result\n    }\n    return result\n  },\n\n  equals: function (n) {\n    return this.normal.equals(n.normal) && this.w === n.w\n  },\n\n  transform: function (matrix4x4) {\n    let ismirror = matrix4x4.isMirroring()\n        // get two vectors in the plane:\n    let r = this.normal.randomNonParallelVector()\n    let u = this.normal.cross(r)\n    let v = this.normal.cross(u)\n        // get 3 points in the plane:\n    let point1 = this.normal.times(this.w)\n    let point2 = point1.plus(u)\n    let point3 = point1.plus(v)\n        // transform the points:\n    point1 = point1.multiply4x4(matrix4x4)\n    point2 = point2.multiply4x4(matrix4x4)\n    point3 = point3.multiply4x4(matrix4x4)\n        // and create a new plane from the transformed points:\n    let newplane = Plane.fromVector3Ds(point1, point2, point3)\n    if (ismirror) {\n            // the transform is mirroring\n            // We should mirror the plane:\n      newplane = newplane.flipped()\n    }\n    return newplane\n  },\n\n    // robust splitting of a line by a plane\n    // will work even if the line is parallel to the plane\n  splitLineBetweenPoints: function (p1, p2) {\n    let direction = p2.minus(p1)\n    let labda = (this.w - this.normal.dot(p1)) / this.normal.dot(direction)\n    if (isNaN(labda)) labda = 0\n    if (labda > 1) labda = 1\n    if (labda < 0) labda = 0\n    let result = p1.plus(direction.times(labda))\n    return result\n  },\n\n    // returns Vector3D\n  intersectWithLine: function (line3d) {\n    return line3d.intersectWithPlane(this)\n  },\n\n    // intersection of two planes\n  intersectWithPlane: function (plane) {\n    return Line3D.fromPlanes(this, plane)\n  },\n\n  signedDistanceToPoint: function (point) {\n    let t = this.normal.dot(point) - this.w\n    return t\n  },\n\n  toString: function () {\n    return '[normal: ' + this.normal.toString() + ', w: ' + this.w + ']'\n  },\n\n  mirrorPoint: function (point3d) {\n    let distance = this.signedDistanceToPoint(point3d)\n    let mirrored = point3d.minus(this.normal.times(distance * 2.0))\n    return mirrored\n  }\n}\n\nmodule.exports = Plane\n"},"lineCount":141}},"error":null,"hash":"0d54e05f681b2745c20ebf99970ba5cd","cacheData":{"env":{}}}