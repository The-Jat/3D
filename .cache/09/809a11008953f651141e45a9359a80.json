{"id":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","dependencies":[{"name":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\package.json","includedInParent":true,"mtime":1695875987294},{"name":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\package.json","includedInParent":true,"mtime":1695872748353},{"name":"../core/math/Path2","loc":{"line":1,"column":23,"index":23},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\api\\cagOutlinePaths.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\math\\Path2.js"}],"generated":{"js":"const Path2D = require('../core/math/Path2')\n\nconst cagoutlinePaths = function (_cag) {\n  let cag = _cag.canonicalized()\n  let sideTagToSideMap = {}\n  let startVertexTagToSideTagMap = {}\n  cag.sides.map(function (side) {\n    let sidetag = side.getTag()\n    sideTagToSideMap[sidetag] = side\n    let startvertextag = side.vertex0.getTag()\n    if (!(startvertextag in startVertexTagToSideTagMap)) {\n      startVertexTagToSideTagMap[startvertextag] = []\n    }\n    startVertexTagToSideTagMap[startvertextag].push(sidetag)\n  })\n  let paths = []\n  while (true) {\n    let startsidetag = null\n    for (let aVertexTag in startVertexTagToSideTagMap) {\n      let sidesForcagVertex = startVertexTagToSideTagMap[aVertexTag]\n      startsidetag = sidesForcagVertex[0]\n      sidesForcagVertex.splice(0, 1)\n      if (sidesForcagVertex.length === 0) {\n        delete startVertexTagToSideTagMap[aVertexTag]\n      }\n      break\n    }\n    if (startsidetag === null) break // we've had all sides\n    let connectedVertexPoints = []\n    let sidetag = startsidetag\n    let cagside = sideTagToSideMap[sidetag]\n    let startvertextag = cagside.vertex0.getTag()\n    while (true) {\n      connectedVertexPoints.push(cagside.vertex0.pos)\n      let nextvertextag = cagside.vertex1.getTag()\n      if (nextvertextag === startvertextag) break // we've closed the polygon\n      if (!(nextvertextag in startVertexTagToSideTagMap)) {\n        throw new Error('Area is not closed!')\n      }\n      let nextpossiblesidetags = startVertexTagToSideTagMap[nextvertextag]\n      let nextsideindex = -1\n      if (nextpossiblesidetags.length === 1) {\n        nextsideindex = 0\n      } else {\n                  // more than one side starting at the same vertex. cag means we have\n                  // two shapes touching at the same corner\n        let bestangle = null\n        let cagangle = cagside.direction().angleDegrees()\n        for (let sideindex = 0; sideindex < nextpossiblesidetags.length; sideindex++) {\n          let nextpossiblesidetag = nextpossiblesidetags[sideindex]\n          let possibleside = sideTagToSideMap[nextpossiblesidetag]\n          let angle = possibleside.direction().angleDegrees()\n          let angledif = angle - cagangle\n          if (angledif < -180) angledif += 360\n          if (angledif >= 180) angledif -= 360\n          if ((nextsideindex < 0) || (angledif > bestangle)) {\n            nextsideindex = sideindex\n            bestangle = angledif\n          }\n        }\n      }\n      let nextsidetag = nextpossiblesidetags[nextsideindex]\n      nextpossiblesidetags.splice(nextsideindex, 1)\n      if (nextpossiblesidetags.length === 0) {\n        delete startVertexTagToSideTagMap[nextvertextag]\n      }\n      cagside = sideTagToSideMap[nextsidetag]\n    } // inner loop\n    // due to the logic of fromPoints()\n    // move the first point to the last\n    if (connectedVertexPoints.length > 0) {\n      connectedVertexPoints.push(connectedVertexPoints.shift())\n    }\n    let path = new Path2D(connectedVertexPoints, true)\n    paths.push(path)\n  } // outer loop\n  return paths\n}\n\nmodule.exports = cagoutlinePaths\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@jscad/csg/src/api/cagOutlinePaths.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}}],"sources":{"node_modules/@jscad/csg/src/api/cagOutlinePaths.js":"const Path2D = require('../core/math/Path2')\n\nconst cagoutlinePaths = function (_cag) {\n  let cag = _cag.canonicalized()\n  let sideTagToSideMap = {}\n  let startVertexTagToSideTagMap = {}\n  cag.sides.map(function (side) {\n    let sidetag = side.getTag()\n    sideTagToSideMap[sidetag] = side\n    let startvertextag = side.vertex0.getTag()\n    if (!(startvertextag in startVertexTagToSideTagMap)) {\n      startVertexTagToSideTagMap[startvertextag] = []\n    }\n    startVertexTagToSideTagMap[startvertextag].push(sidetag)\n  })\n  let paths = []\n  while (true) {\n    let startsidetag = null\n    for (let aVertexTag in startVertexTagToSideTagMap) {\n      let sidesForcagVertex = startVertexTagToSideTagMap[aVertexTag]\n      startsidetag = sidesForcagVertex[0]\n      sidesForcagVertex.splice(0, 1)\n      if (sidesForcagVertex.length === 0) {\n        delete startVertexTagToSideTagMap[aVertexTag]\n      }\n      break\n    }\n    if (startsidetag === null) break // we've had all sides\n    let connectedVertexPoints = []\n    let sidetag = startsidetag\n    let cagside = sideTagToSideMap[sidetag]\n    let startvertextag = cagside.vertex0.getTag()\n    while (true) {\n      connectedVertexPoints.push(cagside.vertex0.pos)\n      let nextvertextag = cagside.vertex1.getTag()\n      if (nextvertextag === startvertextag) break // we've closed the polygon\n      if (!(nextvertextag in startVertexTagToSideTagMap)) {\n        throw new Error('Area is not closed!')\n      }\n      let nextpossiblesidetags = startVertexTagToSideTagMap[nextvertextag]\n      let nextsideindex = -1\n      if (nextpossiblesidetags.length === 1) {\n        nextsideindex = 0\n      } else {\n                  // more than one side starting at the same vertex. cag means we have\n                  // two shapes touching at the same corner\n        let bestangle = null\n        let cagangle = cagside.direction().angleDegrees()\n        for (let sideindex = 0; sideindex < nextpossiblesidetags.length; sideindex++) {\n          let nextpossiblesidetag = nextpossiblesidetags[sideindex]\n          let possibleside = sideTagToSideMap[nextpossiblesidetag]\n          let angle = possibleside.direction().angleDegrees()\n          let angledif = angle - cagangle\n          if (angledif < -180) angledif += 360\n          if (angledif >= 180) angledif -= 360\n          if ((nextsideindex < 0) || (angledif > bestangle)) {\n            nextsideindex = sideindex\n            bestangle = angledif\n          }\n        }\n      }\n      let nextsidetag = nextpossiblesidetags[nextsideindex]\n      nextpossiblesidetags.splice(nextsideindex, 1)\n      if (nextpossiblesidetags.length === 0) {\n        delete startVertexTagToSideTagMap[nextvertextag]\n      }\n      cagside = sideTagToSideMap[nextsidetag]\n    } // inner loop\n    // due to the logic of fromPoints()\n    // move the first point to the last\n    if (connectedVertexPoints.length > 0) {\n      connectedVertexPoints.push(connectedVertexPoints.shift())\n    }\n    let path = new Path2D(connectedVertexPoints, true)\n    paths.push(path)\n  } // outer loop\n  return paths\n}\n\nmodule.exports = cagoutlinePaths\n"},"lineCount":81}},"error":null,"hash":"fc091770d234a14674358e734bfdf4b3","cacheData":{"env":{}}}