{"id":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","dependencies":[{"name":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\package.json","includedInParent":true,"mtime":1695875987294},{"name":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\package.json","includedInParent":true,"mtime":1695872748353},{"name":"../constants","loc":{"line":1,"column":22,"index":22},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\utils\\fixTJunctions.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\constants.js"},{"name":"../math/Polygon3","loc":{"line":2,"column":24,"index":62},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\utils\\fixTJunctions.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\math\\Polygon3.js"},{"name":"../math/Plane","loc":{"line":3,"column":22,"index":104},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\utils\\fixTJunctions.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\math\\Plane.js"}],"generated":{"js":"const {EPS} = require('../constants')\nconst Polygon = require('../math/Polygon3')\nconst Plane = require('../math/Plane')\n\nfunction addSide (sidemap, vertextag2sidestart, vertextag2sideend, vertex0, vertex1, polygonindex) {\n  let starttag = vertex0.getTag()\n  let endtag = vertex1.getTag()\n  if (starttag === endtag) throw new Error('Assertion failed')\n  let newsidetag = starttag + '/' + endtag\n  let reversesidetag = endtag + '/' + starttag\n  if (reversesidetag in sidemap) {\n    // we have a matching reverse oriented side.\n    // Instead of adding the new side, cancel out the reverse side:\n    // console.log(\"addSide(\"+newsidetag+\") has reverse side:\");\n    deleteSide(sidemap, vertextag2sidestart, vertextag2sideend, vertex1, vertex0, null)\n    return null\n  }\n  //  console.log(\"addSide(\"+newsidetag+\")\");\n  let newsideobj = {\n    vertex0: vertex0,\n    vertex1: vertex1,\n    polygonindex: polygonindex\n  }\n  if (!(newsidetag in sidemap)) {\n    sidemap[newsidetag] = [newsideobj]\n  } else {\n    sidemap[newsidetag].push(newsideobj)\n  }\n  if (starttag in vertextag2sidestart) {\n    vertextag2sidestart[starttag].push(newsidetag)\n  } else {\n    vertextag2sidestart[starttag] = [newsidetag]\n  }\n  if (endtag in vertextag2sideend) {\n    vertextag2sideend[endtag].push(newsidetag)\n  } else {\n    vertextag2sideend[endtag] = [newsidetag]\n  }\n  return newsidetag\n}\n\nfunction deleteSide (sidemap, vertextag2sidestart, vertextag2sideend, vertex0, vertex1, polygonindex) {\n  let starttag = vertex0.getTag()\n  let endtag = vertex1.getTag()\n  let sidetag = starttag + '/' + endtag\n  // console.log(\"deleteSide(\"+sidetag+\")\");\n  if (!(sidetag in sidemap)) throw new Error('Assertion failed')\n  let idx = -1\n  let sideobjs = sidemap[sidetag]\n  for (let i = 0; i < sideobjs.length; i++) {\n    let sideobj = sideobjs[i]\n    if (sideobj.vertex0 !== vertex0) continue\n    if (sideobj.vertex1 !== vertex1) continue\n    if (polygonindex !== null) {\n      if (sideobj.polygonindex !== polygonindex) continue\n    }\n    idx = i\n    break\n  }\n  if (idx < 0) throw new Error('Assertion failed')\n  sideobjs.splice(idx, 1)\n  if (sideobjs.length === 0) {\n    delete sidemap[sidetag]\n  }\n  idx = vertextag2sidestart[starttag].indexOf(sidetag)\n  if (idx < 0) throw new Error('Assertion failed')\n  vertextag2sidestart[starttag].splice(idx, 1)\n  if (vertextag2sidestart[starttag].length === 0) {\n    delete vertextag2sidestart[starttag]\n  }\n\n  idx = vertextag2sideend[endtag].indexOf(sidetag)\n  if (idx < 0) throw new Error('Assertion failed')\n  vertextag2sideend[endtag].splice(idx, 1)\n  if (vertextag2sideend[endtag].length === 0) {\n    delete vertextag2sideend[endtag]\n  }\n}\n\n/*\n     fixTJunctions:\n\n     Suppose we have two polygons ACDB and EDGF:\n\n      A-----B\n      |     |\n      |     E--F\n      |     |  |\n      C-----D--G\n\n     Note that vertex E forms a T-junction on the side BD. In this case some STL slicers will complain\n     that the solid is not watertight. This is because the watertightness check is done by checking if\n     each side DE is matched by another side ED.\n\n     This function will return a new solid with ACDB replaced by ACDEB\n\n     Note that this can create polygons that are slightly non-convex (due to rounding errors). Therefore the result should\n     not be used for further CSG operations!\n*/\nconst fixTJunctions = function (fromPolygons, csg) {\n  csg = csg.canonicalized()\n  let sidemap = {}\n\n  // STEP 1\n  for (let polygonindex = 0; polygonindex < csg.polygons.length; polygonindex++) {\n    let polygon = csg.polygons[polygonindex]\n    let numvertices = polygon.vertices.length\n    // should be true\n    if (numvertices >= 3) {\n      let vertex = polygon.vertices[0]\n      let vertextag = vertex.getTag()\n      for (let vertexindex = 0; vertexindex < numvertices; vertexindex++) {\n        let nextvertexindex = vertexindex + 1\n        if (nextvertexindex === numvertices) nextvertexindex = 0\n        let nextvertex = polygon.vertices[nextvertexindex]\n        let nextvertextag = nextvertex.getTag()\n        let sidetag = vertextag + '/' + nextvertextag\n        let reversesidetag = nextvertextag + '/' + vertextag\n        if (reversesidetag in sidemap) {\n          // this side matches the same side in another polygon. Remove from sidemap:\n          let ar = sidemap[reversesidetag]\n          ar.splice(-1, 1)\n          if (ar.length === 0) {\n            delete sidemap[reversesidetag]\n          }\n        } else {\n          let sideobj = {\n            vertex0: vertex,\n            vertex1: nextvertex,\n            polygonindex: polygonindex\n          }\n          if (!(sidetag in sidemap)) {\n            sidemap[sidetag] = [sideobj]\n          } else {\n            sidemap[sidetag].push(sideobj)\n          }\n        }\n        vertex = nextvertex\n        vertextag = nextvertextag\n      }\n    }\n  }\n  // STEP 2\n  // now sidemap contains 'unmatched' sides\n  // i.e. side AB in one polygon does not have a matching side BA in another polygon\n  let vertextag2sidestart = {}\n  let vertextag2sideend = {}\n  let sidestocheck = {}\n  let sidemapisempty = true\n  for (let sidetag in sidemap) {\n    sidemapisempty = false\n    sidestocheck[sidetag] = true\n    sidemap[sidetag].map(function (sideobj) {\n      let starttag = sideobj.vertex0.getTag()\n      let endtag = sideobj.vertex1.getTag()\n      if (starttag in vertextag2sidestart) {\n        vertextag2sidestart[starttag].push(sidetag)\n      } else {\n        vertextag2sidestart[starttag] = [sidetag]\n      }\n      if (endtag in vertextag2sideend) {\n        vertextag2sideend[endtag].push(sidetag)\n      } else {\n        vertextag2sideend[endtag] = [sidetag]\n      }\n    })\n  }\n\n  // STEP 3 : if sidemap is not empty\n  if (!sidemapisempty) {\n    // make a copy of the polygons array, since we are going to modify it:\n    let polygons = csg.polygons.slice(0)\n    while (true) {\n      let sidemapisempty = true\n      for (let sidetag in sidemap) {\n        sidemapisempty = false\n        sidestocheck[sidetag] = true\n      }\n      if (sidemapisempty) break\n      let donesomething = false\n      while (true) {\n        let sidetagtocheck = null\n        for (let sidetag in sidestocheck) {\n          sidetagtocheck = sidetag\n          break // FIXME  : say what now ?\n        }\n        if (sidetagtocheck === null) break // sidestocheck is empty, we're done!\n        let donewithside = true\n        if (sidetagtocheck in sidemap) {\n          let sideobjs = sidemap[sidetagtocheck]\n          if (sideobjs.length === 0) throw new Error('Assertion failed')\n          let sideobj = sideobjs[0]\n          for (let directionindex = 0; directionindex < 2; directionindex++) {\n            let startvertex = (directionindex === 0) ? sideobj.vertex0 : sideobj.vertex1\n            let endvertex = (directionindex === 0) ? sideobj.vertex1 : sideobj.vertex0\n            let startvertextag = startvertex.getTag()\n            let endvertextag = endvertex.getTag()\n            let matchingsides = []\n            if (directionindex === 0) {\n              if (startvertextag in vertextag2sideend) {\n                matchingsides = vertextag2sideend[startvertextag]\n              }\n            } else {\n              if (startvertextag in vertextag2sidestart) {\n                matchingsides = vertextag2sidestart[startvertextag]\n              }\n            }\n            for (let matchingsideindex = 0; matchingsideindex < matchingsides.length; matchingsideindex++) {\n              let matchingsidetag = matchingsides[matchingsideindex]\n              let matchingside = sidemap[matchingsidetag][0]\n              let matchingsidestartvertex = (directionindex === 0) ? matchingside.vertex0 : matchingside.vertex1\n              let matchingsideendvertex = (directionindex === 0) ? matchingside.vertex1 : matchingside.vertex0\n              let matchingsidestartvertextag = matchingsidestartvertex.getTag()\n              let matchingsideendvertextag = matchingsideendvertex.getTag()\n              if (matchingsideendvertextag !== startvertextag) throw new Error('Assertion failed')\n              if (matchingsidestartvertextag === endvertextag) {\n                // matchingside cancels sidetagtocheck\n                deleteSide(sidemap, vertextag2sidestart, vertextag2sideend, startvertex, endvertex, null)\n                deleteSide(sidemap, vertextag2sidestart, vertextag2sideend, endvertex, startvertex, null)\n                donewithside = false\n                directionindex = 2 // skip reverse direction check\n                donesomething = true\n                break\n              } else {\n                let startpos = startvertex.pos\n                let endpos = endvertex.pos\n                let checkpos = matchingsidestartvertex.pos\n                let direction = checkpos.minus(startpos)\n                // Now we need to check if endpos is on the line startpos-checkpos:\n                let t = endpos.minus(startpos).dot(direction) / direction.dot(direction)\n                if ((t > 0) && (t < 1)) {\n                  let closestpoint = startpos.plus(direction.times(t))\n                  let distancesquared = closestpoint.distanceToSquared(endpos)\n                  if (distancesquared < (EPS * EPS)) {\n                    // Yes it's a t-junction! We need to split matchingside in two:\n                    let polygonindex = matchingside.polygonindex\n                    let polygon = polygons[polygonindex]\n                    // find the index of startvertextag in polygon:\n                    let insertionvertextag = matchingside.vertex1.getTag()\n                    let insertionvertextagindex = -1\n                    for (let i = 0; i < polygon.vertices.length; i++) {\n                      if (polygon.vertices[i].getTag() === insertionvertextag) {\n                        insertionvertextagindex = i\n                        break\n                      }\n                    }\n                    if (insertionvertextagindex < 0) throw new Error('Assertion failed')\n                    // split the side by inserting the vertex:\n                    let newvertices = polygon.vertices.slice(0)\n                    newvertices.splice(insertionvertextagindex, 0, endvertex)\n                    let newpolygon = new Polygon(newvertices, polygon.shared /* polygon.plane */)\n\n                    // calculate plane with differents point\n                    if (isNaN(newpolygon.plane.w)) {\n                      let found = false\n                      let loop = function (callback) {\n                        newpolygon.vertices.forEach(function (item) {\n                          if (found) return\n                          callback(item)\n                        })\n                      }\n\n                      loop(function (a) {\n                        loop(function (b) {\n                          loop(function (c) {\n                            newpolygon.plane = Plane.fromPoints(a.pos, b.pos, c.pos)\n                            if (!isNaN(newpolygon.plane.w)) {\n                              found = true\n                            }\n                          })\n                        })\n                      })\n                    }\n                    polygons[polygonindex] = newpolygon\n                    // remove the original sides from our maps\n                    // deleteSide(sideobj.vertex0, sideobj.vertex1, null)\n                    deleteSide(sidemap, vertextag2sidestart, vertextag2sideend, matchingside.vertex0, matchingside.vertex1, polygonindex)\n                    let newsidetag1 = addSide(sidemap, vertextag2sidestart, vertextag2sideend, matchingside.vertex0, endvertex, polygonindex)\n                    let newsidetag2 = addSide(sidemap, vertextag2sidestart, vertextag2sideend, endvertex, matchingside.vertex1, polygonindex)\n                    if (newsidetag1 !== null) sidestocheck[newsidetag1] = true\n                    if (newsidetag2 !== null) sidestocheck[newsidetag2] = true\n                    donewithside = false\n                    directionindex = 2 // skip reverse direction check\n                    donesomething = true\n                    break\n                  } // if(distancesquared < 1e-10)\n                } // if( (t > 0) && (t < 1) )\n              } // if(endingstidestartvertextag === endvertextag)\n            } // for matchingsideindex\n          } // for directionindex\n        } // if(sidetagtocheck in sidemap)\n        if (donewithside) {\n          delete sidestocheck[sidetagtocheck]\n        }\n      }\n      if (!donesomething) break\n    }\n    let newcsg = fromPolygons(polygons)\n    newcsg.properties = csg.properties\n    newcsg.isCanonicalized = true\n    newcsg.isRetesselated = true\n    csg = newcsg\n  }\n\n  // FIXME : what is even the point of this ???\n  /* sidemapisempty = true\n  for (let sidetag in sidemap) {\n    sidemapisempty = false\n    break\n  }\n  */\n\n  return csg\n}\n\nmodule.exports = fixTJunctions\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}}],"sources":{"node_modules/@jscad/csg/src/core/utils/fixTJunctions.js":"const {EPS} = require('../constants')\nconst Polygon = require('../math/Polygon3')\nconst Plane = require('../math/Plane')\n\nfunction addSide (sidemap, vertextag2sidestart, vertextag2sideend, vertex0, vertex1, polygonindex) {\n  let starttag = vertex0.getTag()\n  let endtag = vertex1.getTag()\n  if (starttag === endtag) throw new Error('Assertion failed')\n  let newsidetag = starttag + '/' + endtag\n  let reversesidetag = endtag + '/' + starttag\n  if (reversesidetag in sidemap) {\n    // we have a matching reverse oriented side.\n    // Instead of adding the new side, cancel out the reverse side:\n    // console.log(\"addSide(\"+newsidetag+\") has reverse side:\");\n    deleteSide(sidemap, vertextag2sidestart, vertextag2sideend, vertex1, vertex0, null)\n    return null\n  }\n  //  console.log(\"addSide(\"+newsidetag+\")\");\n  let newsideobj = {\n    vertex0: vertex0,\n    vertex1: vertex1,\n    polygonindex: polygonindex\n  }\n  if (!(newsidetag in sidemap)) {\n    sidemap[newsidetag] = [newsideobj]\n  } else {\n    sidemap[newsidetag].push(newsideobj)\n  }\n  if (starttag in vertextag2sidestart) {\n    vertextag2sidestart[starttag].push(newsidetag)\n  } else {\n    vertextag2sidestart[starttag] = [newsidetag]\n  }\n  if (endtag in vertextag2sideend) {\n    vertextag2sideend[endtag].push(newsidetag)\n  } else {\n    vertextag2sideend[endtag] = [newsidetag]\n  }\n  return newsidetag\n}\n\nfunction deleteSide (sidemap, vertextag2sidestart, vertextag2sideend, vertex0, vertex1, polygonindex) {\n  let starttag = vertex0.getTag()\n  let endtag = vertex1.getTag()\n  let sidetag = starttag + '/' + endtag\n  // console.log(\"deleteSide(\"+sidetag+\")\");\n  if (!(sidetag in sidemap)) throw new Error('Assertion failed')\n  let idx = -1\n  let sideobjs = sidemap[sidetag]\n  for (let i = 0; i < sideobjs.length; i++) {\n    let sideobj = sideobjs[i]\n    if (sideobj.vertex0 !== vertex0) continue\n    if (sideobj.vertex1 !== vertex1) continue\n    if (polygonindex !== null) {\n      if (sideobj.polygonindex !== polygonindex) continue\n    }\n    idx = i\n    break\n  }\n  if (idx < 0) throw new Error('Assertion failed')\n  sideobjs.splice(idx, 1)\n  if (sideobjs.length === 0) {\n    delete sidemap[sidetag]\n  }\n  idx = vertextag2sidestart[starttag].indexOf(sidetag)\n  if (idx < 0) throw new Error('Assertion failed')\n  vertextag2sidestart[starttag].splice(idx, 1)\n  if (vertextag2sidestart[starttag].length === 0) {\n    delete vertextag2sidestart[starttag]\n  }\n\n  idx = vertextag2sideend[endtag].indexOf(sidetag)\n  if (idx < 0) throw new Error('Assertion failed')\n  vertextag2sideend[endtag].splice(idx, 1)\n  if (vertextag2sideend[endtag].length === 0) {\n    delete vertextag2sideend[endtag]\n  }\n}\n\n/*\n     fixTJunctions:\n\n     Suppose we have two polygons ACDB and EDGF:\n\n      A-----B\n      |     |\n      |     E--F\n      |     |  |\n      C-----D--G\n\n     Note that vertex E forms a T-junction on the side BD. In this case some STL slicers will complain\n     that the solid is not watertight. This is because the watertightness check is done by checking if\n     each side DE is matched by another side ED.\n\n     This function will return a new solid with ACDB replaced by ACDEB\n\n     Note that this can create polygons that are slightly non-convex (due to rounding errors). Therefore the result should\n     not be used for further CSG operations!\n*/\nconst fixTJunctions = function (fromPolygons, csg) {\n  csg = csg.canonicalized()\n  let sidemap = {}\n\n  // STEP 1\n  for (let polygonindex = 0; polygonindex < csg.polygons.length; polygonindex++) {\n    let polygon = csg.polygons[polygonindex]\n    let numvertices = polygon.vertices.length\n    // should be true\n    if (numvertices >= 3) {\n      let vertex = polygon.vertices[0]\n      let vertextag = vertex.getTag()\n      for (let vertexindex = 0; vertexindex < numvertices; vertexindex++) {\n        let nextvertexindex = vertexindex + 1\n        if (nextvertexindex === numvertices) nextvertexindex = 0\n        let nextvertex = polygon.vertices[nextvertexindex]\n        let nextvertextag = nextvertex.getTag()\n        let sidetag = vertextag + '/' + nextvertextag\n        let reversesidetag = nextvertextag + '/' + vertextag\n        if (reversesidetag in sidemap) {\n          // this side matches the same side in another polygon. Remove from sidemap:\n          let ar = sidemap[reversesidetag]\n          ar.splice(-1, 1)\n          if (ar.length === 0) {\n            delete sidemap[reversesidetag]\n          }\n        } else {\n          let sideobj = {\n            vertex0: vertex,\n            vertex1: nextvertex,\n            polygonindex: polygonindex\n          }\n          if (!(sidetag in sidemap)) {\n            sidemap[sidetag] = [sideobj]\n          } else {\n            sidemap[sidetag].push(sideobj)\n          }\n        }\n        vertex = nextvertex\n        vertextag = nextvertextag\n      }\n    }\n  }\n  // STEP 2\n  // now sidemap contains 'unmatched' sides\n  // i.e. side AB in one polygon does not have a matching side BA in another polygon\n  let vertextag2sidestart = {}\n  let vertextag2sideend = {}\n  let sidestocheck = {}\n  let sidemapisempty = true\n  for (let sidetag in sidemap) {\n    sidemapisempty = false\n    sidestocheck[sidetag] = true\n    sidemap[sidetag].map(function (sideobj) {\n      let starttag = sideobj.vertex0.getTag()\n      let endtag = sideobj.vertex1.getTag()\n      if (starttag in vertextag2sidestart) {\n        vertextag2sidestart[starttag].push(sidetag)\n      } else {\n        vertextag2sidestart[starttag] = [sidetag]\n      }\n      if (endtag in vertextag2sideend) {\n        vertextag2sideend[endtag].push(sidetag)\n      } else {\n        vertextag2sideend[endtag] = [sidetag]\n      }\n    })\n  }\n\n  // STEP 3 : if sidemap is not empty\n  if (!sidemapisempty) {\n    // make a copy of the polygons array, since we are going to modify it:\n    let polygons = csg.polygons.slice(0)\n    while (true) {\n      let sidemapisempty = true\n      for (let sidetag in sidemap) {\n        sidemapisempty = false\n        sidestocheck[sidetag] = true\n      }\n      if (sidemapisempty) break\n      let donesomething = false\n      while (true) {\n        let sidetagtocheck = null\n        for (let sidetag in sidestocheck) {\n          sidetagtocheck = sidetag\n          break // FIXME  : say what now ?\n        }\n        if (sidetagtocheck === null) break // sidestocheck is empty, we're done!\n        let donewithside = true\n        if (sidetagtocheck in sidemap) {\n          let sideobjs = sidemap[sidetagtocheck]\n          if (sideobjs.length === 0) throw new Error('Assertion failed')\n          let sideobj = sideobjs[0]\n          for (let directionindex = 0; directionindex < 2; directionindex++) {\n            let startvertex = (directionindex === 0) ? sideobj.vertex0 : sideobj.vertex1\n            let endvertex = (directionindex === 0) ? sideobj.vertex1 : sideobj.vertex0\n            let startvertextag = startvertex.getTag()\n            let endvertextag = endvertex.getTag()\n            let matchingsides = []\n            if (directionindex === 0) {\n              if (startvertextag in vertextag2sideend) {\n                matchingsides = vertextag2sideend[startvertextag]\n              }\n            } else {\n              if (startvertextag in vertextag2sidestart) {\n                matchingsides = vertextag2sidestart[startvertextag]\n              }\n            }\n            for (let matchingsideindex = 0; matchingsideindex < matchingsides.length; matchingsideindex++) {\n              let matchingsidetag = matchingsides[matchingsideindex]\n              let matchingside = sidemap[matchingsidetag][0]\n              let matchingsidestartvertex = (directionindex === 0) ? matchingside.vertex0 : matchingside.vertex1\n              let matchingsideendvertex = (directionindex === 0) ? matchingside.vertex1 : matchingside.vertex0\n              let matchingsidestartvertextag = matchingsidestartvertex.getTag()\n              let matchingsideendvertextag = matchingsideendvertex.getTag()\n              if (matchingsideendvertextag !== startvertextag) throw new Error('Assertion failed')\n              if (matchingsidestartvertextag === endvertextag) {\n                // matchingside cancels sidetagtocheck\n                deleteSide(sidemap, vertextag2sidestart, vertextag2sideend, startvertex, endvertex, null)\n                deleteSide(sidemap, vertextag2sidestart, vertextag2sideend, endvertex, startvertex, null)\n                donewithside = false\n                directionindex = 2 // skip reverse direction check\n                donesomething = true\n                break\n              } else {\n                let startpos = startvertex.pos\n                let endpos = endvertex.pos\n                let checkpos = matchingsidestartvertex.pos\n                let direction = checkpos.minus(startpos)\n                // Now we need to check if endpos is on the line startpos-checkpos:\n                let t = endpos.minus(startpos).dot(direction) / direction.dot(direction)\n                if ((t > 0) && (t < 1)) {\n                  let closestpoint = startpos.plus(direction.times(t))\n                  let distancesquared = closestpoint.distanceToSquared(endpos)\n                  if (distancesquared < (EPS * EPS)) {\n                    // Yes it's a t-junction! We need to split matchingside in two:\n                    let polygonindex = matchingside.polygonindex\n                    let polygon = polygons[polygonindex]\n                    // find the index of startvertextag in polygon:\n                    let insertionvertextag = matchingside.vertex1.getTag()\n                    let insertionvertextagindex = -1\n                    for (let i = 0; i < polygon.vertices.length; i++) {\n                      if (polygon.vertices[i].getTag() === insertionvertextag) {\n                        insertionvertextagindex = i\n                        break\n                      }\n                    }\n                    if (insertionvertextagindex < 0) throw new Error('Assertion failed')\n                    // split the side by inserting the vertex:\n                    let newvertices = polygon.vertices.slice(0)\n                    newvertices.splice(insertionvertextagindex, 0, endvertex)\n                    let newpolygon = new Polygon(newvertices, polygon.shared /* polygon.plane */)\n\n                    // calculate plane with differents point\n                    if (isNaN(newpolygon.plane.w)) {\n                      let found = false\n                      let loop = function (callback) {\n                        newpolygon.vertices.forEach(function (item) {\n                          if (found) return\n                          callback(item)\n                        })\n                      }\n\n                      loop(function (a) {\n                        loop(function (b) {\n                          loop(function (c) {\n                            newpolygon.plane = Plane.fromPoints(a.pos, b.pos, c.pos)\n                            if (!isNaN(newpolygon.plane.w)) {\n                              found = true\n                            }\n                          })\n                        })\n                      })\n                    }\n                    polygons[polygonindex] = newpolygon\n                    // remove the original sides from our maps\n                    // deleteSide(sideobj.vertex0, sideobj.vertex1, null)\n                    deleteSide(sidemap, vertextag2sidestart, vertextag2sideend, matchingside.vertex0, matchingside.vertex1, polygonindex)\n                    let newsidetag1 = addSide(sidemap, vertextag2sidestart, vertextag2sideend, matchingside.vertex0, endvertex, polygonindex)\n                    let newsidetag2 = addSide(sidemap, vertextag2sidestart, vertextag2sideend, endvertex, matchingside.vertex1, polygonindex)\n                    if (newsidetag1 !== null) sidestocheck[newsidetag1] = true\n                    if (newsidetag2 !== null) sidestocheck[newsidetag2] = true\n                    donewithside = false\n                    directionindex = 2 // skip reverse direction check\n                    donesomething = true\n                    break\n                  } // if(distancesquared < 1e-10)\n                } // if( (t > 0) && (t < 1) )\n              } // if(endingstidestartvertextag === endvertextag)\n            } // for matchingsideindex\n          } // for directionindex\n        } // if(sidetagtocheck in sidemap)\n        if (donewithside) {\n          delete sidestocheck[sidetagtocheck]\n        }\n      }\n      if (!donesomething) break\n    }\n    let newcsg = fromPolygons(polygons)\n    newcsg.properties = csg.properties\n    newcsg.isCanonicalized = true\n    newcsg.isRetesselated = true\n    csg = newcsg\n  }\n\n  // FIXME : what is even the point of this ???\n  /* sidemapisempty = true\n  for (let sidetag in sidemap) {\n    sidemapisempty = false\n    break\n  }\n  */\n\n  return csg\n}\n\nmodule.exports = fixTJunctions\n"},"lineCount":317}},"error":null,"hash":"a025493feb3e1e152b1ef59275819b5e","cacheData":{"env":{}}}