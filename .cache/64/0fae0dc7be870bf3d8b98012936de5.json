{"id":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","dependencies":[{"name":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\package.json","includedInParent":true,"mtime":1695875987294},{"name":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\package.json","includedInParent":true,"mtime":1695809278048},{"name":"../../utils/flatten","loc":{"line":1,"column":24,"index":24},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\operations\\transforms\\translate.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\utils\\flatten.js"},{"name":"../../maths/mat4","loc":{"line":3,"column":21,"index":69},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\operations\\transforms\\translate.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\maths\\mat4\\index.js"},{"name":"../../geometries/geom2","loc":{"line":5,"column":22,"index":112},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\operations\\transforms\\translate.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\geometries\\geom2\\index.js"},{"name":"../../geometries/geom3","loc":{"line":6,"column":22,"index":160},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\operations\\transforms\\translate.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\geometries\\geom3\\index.js"},{"name":"../../geometries/path2","loc":{"line":7,"column":22,"index":208},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\operations\\transforms\\translate.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\geometries\\path2\\index.js"}],"generated":{"js":"const flatten = require('../../utils/flatten')\n\nconst mat4 = require('../../maths/mat4')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\n/**\n * Translate the given geometries using the given options.\n * @param {Array} offset - offset (vector) of which to translate the geometries\n * @param {...Object} geometries - the geometries to translate\n * @return {Object|Array} the translated geometry, or a list of translated geometries\n * @alias module:modeling/transforms.translate\n *\n * @example\n * const newsphere = translate([5, 0, 10], sphere())\n */\nconst translate = (offset, ...objects) => {\n  if (!Array.isArray(offset)) throw new Error('offset must be an array')\n\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  // adjust the offset if necessary\n  offset = offset.slice() // don't modify the original\n  while (offset.length < 3) offset.push(0)\n\n  const matrix = mat4.fromTranslation(offset)\n\n  const results = objects.map((object) => {\n    if (path2.isA(object)) return path2.transform(matrix, object)\n    if (geom2.isA(object)) return geom2.transform(matrix, object)\n    if (geom3.isA(object)) return geom3.transform(matrix, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\n/**\n * Translate the given geometries along the X axis using the given options.\n * @param {Number} offset - X offset of which to translate the geometries\n * @param {...Object} geometries - the geometries to translate\n * @return {Object|Array} the translated geometry, or a list of translated geometries\n * @alias module:modeling/transforms.translateX\n */\nconst translateX = (offset, ...objects) => translate([offset, 0, 0], objects)\n\n/**\n * Translate the given geometries along the Y axis using the given options.\n * @param {Number} offset - Y offset of which to translate the geometries\n * @param {...Object} geometries - the geometries to translate\n * @return {Object|Array} the translated geometry, or a list of translated geometries\n * @alias module:modeling/transforms.translateY\n */\nconst translateY = (offset, ...objects) => translate([0, offset, 0], objects)\n\n/**\n * Translate the given geometries along the Z axis using the given options.\n * @param {Number} offset - Z offset of which to translate the geometries\n * @param {...Object} geometries - the geometries to translate\n * @return {Object|Array} the translated geometry, or a list of translated geometries\n * @alias module:modeling/transforms.translateZ\n */\nconst translateZ = (offset, ...objects) => translate([0, 0, offset], objects)\n\nmodule.exports = {\n  translate,\n  translateX,\n  translateY,\n  translateZ\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@jscad/modeling/src/operations/transforms/translate.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}}],"sources":{"node_modules/@jscad/modeling/src/operations/transforms/translate.js":"const flatten = require('../../utils/flatten')\n\nconst mat4 = require('../../maths/mat4')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\n/**\n * Translate the given geometries using the given options.\n * @param {Array} offset - offset (vector) of which to translate the geometries\n * @param {...Object} geometries - the geometries to translate\n * @return {Object|Array} the translated geometry, or a list of translated geometries\n * @alias module:modeling/transforms.translate\n *\n * @example\n * const newsphere = translate([5, 0, 10], sphere())\n */\nconst translate = (offset, ...objects) => {\n  if (!Array.isArray(offset)) throw new Error('offset must be an array')\n\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  // adjust the offset if necessary\n  offset = offset.slice() // don't modify the original\n  while (offset.length < 3) offset.push(0)\n\n  const matrix = mat4.fromTranslation(offset)\n\n  const results = objects.map((object) => {\n    if (path2.isA(object)) return path2.transform(matrix, object)\n    if (geom2.isA(object)) return geom2.transform(matrix, object)\n    if (geom3.isA(object)) return geom3.transform(matrix, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\n/**\n * Translate the given geometries along the X axis using the given options.\n * @param {Number} offset - X offset of which to translate the geometries\n * @param {...Object} geometries - the geometries to translate\n * @return {Object|Array} the translated geometry, or a list of translated geometries\n * @alias module:modeling/transforms.translateX\n */\nconst translateX = (offset, ...objects) => translate([offset, 0, 0], objects)\n\n/**\n * Translate the given geometries along the Y axis using the given options.\n * @param {Number} offset - Y offset of which to translate the geometries\n * @param {...Object} geometries - the geometries to translate\n * @return {Object|Array} the translated geometry, or a list of translated geometries\n * @alias module:modeling/transforms.translateY\n */\nconst translateY = (offset, ...objects) => translate([0, offset, 0], objects)\n\n/**\n * Translate the given geometries along the Z axis using the given options.\n * @param {Number} offset - Z offset of which to translate the geometries\n * @param {...Object} geometries - the geometries to translate\n * @return {Object|Array} the translated geometry, or a list of translated geometries\n * @alias module:modeling/transforms.translateZ\n */\nconst translateZ = (offset, ...objects) => translate([0, 0, offset], objects)\n\nmodule.exports = {\n  translate,\n  translateX,\n  translateY,\n  translateZ\n}\n"},"lineCount":73}},"error":null,"hash":"0102e516ac0102c7de4fcea134bf663b","cacheData":{"env":{}}}