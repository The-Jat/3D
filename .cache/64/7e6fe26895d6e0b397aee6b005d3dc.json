{"id":"node_modules/@jscad/modeling/src/maths/vec2/fromArray.js","dependencies":[{"name":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\package.json","includedInParent":true,"mtime":1695875987294},{"name":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\package.json","includedInParent":true,"mtime":1695809278048},{"name":"./create","loc":{"line":1,"column":23,"index":23},"parent":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\maths\\vec2\\fromArray.js","resolved":"D:\\User Profile\\Manish_VES\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\modeling\\src\\maths\\vec2\\create.js"}],"generated":{"js":"const create = require('./create')\n\n/**\n * Create a new vector initialized with the values in the given array.\n * @param {Array} data - array of numerical values\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.fromArray\n */\nconst fromArray = (data) => {\n  const out = create()\n  out[0] = data[0]\n  out[1] = data[1]\n  return out\n}\n\nmodule.exports = fromArray\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@jscad/modeling/src/maths/vec2/fromArray.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec2/fromArray.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec2/fromArray.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec2/fromArray.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec2/fromArray.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec2/fromArray.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec2/fromArray.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec2/fromArray.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec2/fromArray.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec2/fromArray.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec2/fromArray.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec2/fromArray.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec2/fromArray.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec2/fromArray.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec2/fromArray.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec2/fromArray.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@jscad/modeling/src/maths/vec2/fromArray.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}}],"sources":{"node_modules/@jscad/modeling/src/maths/vec2/fromArray.js":"const create = require('./create')\n\n/**\n * Create a new vector initialized with the values in the given array.\n * @param {Array} data - array of numerical values\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.fromArray\n */\nconst fromArray = (data) => {\n  const out = create()\n  out[0] = data[0]\n  out[1] = data[1]\n  return out\n}\n\nmodule.exports = fromArray\n"},"lineCount":17}},"error":null,"hash":"e8811e2b9180ec3baf279684c7e57202","cacheData":{"env":{}}}