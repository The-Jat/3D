{"id":"node_modules/@jscad/csg/src/api/ops-extrusions.js","dependencies":[{"name":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\package.json","includedInParent":true,"mtime":1695875987294},{"name":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\package.json","includedInParent":true,"mtime":1695872748353},{"name":"../core/constants","loc":{"line":1,"column":43,"index":43},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\api\\ops-extrusions.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\constants.js"},{"name":"../core/math/OrthoNormalBasis","loc":{"line":2,"column":33,"index":97},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\api\\ops-extrusions.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\math\\OrthoNormalBasis.js"},{"name":"./optionParsers","loc":{"line":3,"column":97,"index":227},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\api\\ops-extrusions.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\api\\optionParsers.js"},{"name":"../core/math/Vector3","loc":{"line":4,"column":25,"index":271},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\api\\ops-extrusions.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\math\\Vector3.js"},{"name":"../core/math/Matrix4","loc":{"line":5,"column":24,"index":319},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\api\\ops-extrusions.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\math\\Matrix4.js"},{"name":"../core/math/Path2","loc":{"line":6,"column":23,"index":366},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\api\\ops-extrusions.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\math\\Path2.js"},{"name":"../core/connectors","loc":{"line":7,"column":28,"index":416},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\api\\ops-extrusions.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\connectors.js"},{"name":"../core/CSGFactories","loc":{"line":8,"column":31,"index":469},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\api\\ops-extrusions.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\CSGFactories.js"},{"name":"./helpers","loc":{"line":9,"column":92,"index":585},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\api\\ops-extrusions.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\api\\helpers.js"},{"name":"../core/CAGFactories","loc":{"line":10,"column":29,"index":627},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\api\\ops-extrusions.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\CAGFactories.js"},{"name":"../core/CSG","loc":{"line":65,"column":22,"index":3634},"parent":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\api\\ops-extrusions.js","resolved":"C:\\Users\\manis\\Downloads\\jscad-threejs-csg-to-buffer-geometry-conversion\\node_modules\\@jscad\\csg\\src\\core\\CSG.js"}],"generated":{"js":"const {EPS, defaultResolution3D} = require('../core/constants')\nconst OrthoNormalBasis = require('../core/math/OrthoNormalBasis')\nconst {parseOptionAs3DVector, parseOptionAsBool, parseOptionAsFloat, parseOptionAsInt} = require('./optionParsers')\nconst Vector3D = require('../core/math/Vector3')\nconst Matrix4 = require('../core/math/Matrix4')\nconst Path2D = require('../core/math/Path2')\nconst {Connector} = require('../core/connectors')\nconst {fromPolygons} = require('../core/CSGFactories')\nconst {cagToPointsArray, clamp, rightMultiply1x3VectorToArray, polygonFromPoints} = require('./helpers')\nconst {fromPoints} = require('../core/CAGFactories')\n\n/** extrude the CAG in a certain plane.\n * Giving just a plane is not enough, multiple different extrusions in the same plane would be possible\n * by rotating around the plane's origin. An additional right-hand vector should be specified as well,\n * and this is exactly a OrthoNormalBasis.\n * @param  {CAG} cag the cag to extrude\n * @param  {Orthonormalbasis} orthonormalbasis characterizes the plane in which to extrude\n * @param  {Float} depth thickness of the extruded shape. Extrusion is done upwards from the plane\n *  (unless symmetrical option is set, see below)\n * @param  {Object} [options] - options for construction\n * @param {Boolean} [options.symmetrical=true] - extrude symmetrically in two directions about the plane\n */\nconst extrudeInOrthonormalBasis = function (cag, orthonormalbasis, depth, options) {\n      // first extrude in the regular Z plane:\n  if (!(orthonormalbasis instanceof OrthoNormalBasis)) {\n    throw new Error('extrudeInPlane: the first parameter should be a OrthoNormalBasis')\n  }\n  let extruded = cag.extrude({\n    offset: [0, 0, depth]\n  })\n  if (parseOptionAsBool(options, 'symmetrical', false)) {\n    extruded = extruded.translate([0, 0, -depth / 2])\n  }\n  let matrix = orthonormalbasis.getInverseProjectionMatrix()\n  extruded = extruded.transform(matrix)\n  return extruded\n}\n\n/** Extrude in a standard cartesian plane, specified by two axis identifiers. Each identifier can be\n * one of [\"X\",\"Y\",\"Z\",\"-X\",\"-Y\",\"-Z\"]\n * The 2d x axis will map to the first given 3D axis, the 2d y axis will map to the second.\n * See OrthoNormalBasis.GetCartesian for details.\n * @param  {CAG} cag the cag to extrude\n * @param  {String} axis1 the first axis\n * @param  {String} axis2 the second axis\n * @param  {Float} depth thickness of the extruded shape. Extrusion is done upwards from the plane\n * @param  {Object} [options] - options for construction\n * @param {Boolean} [options.symmetrical=true] - extrude symmetrically in two directions about the plane\n */\nconst extrudeInPlane = function (cag, axis1, axis2, depth, options) {\n  return extrudeInOrthonormalBasis(cag, OrthoNormalBasis.GetCartesian(axis1, axis2), depth, options)\n}\n\n/** linear extrusion of 2D shape, with optional twist\n * @param  {CAG} cag the cag to extrude\n * @param  {Object} [options] - options for construction\n * @param {Array} [options.offset=[0,0,1]] - The 2d shape is placed in in z=0 plane and extruded into direction <offset>\n * (a 3D vector as a 3 component array)\n * @param {Boolean} [options.twiststeps=defaultResolution3D] - twiststeps determines the resolution of the twist (should be >= 1)\n * @param {Boolean} [options.twistangle=0] - twistangle The final face is rotated <twistangle> degrees. Rotation is done around the origin of the 2d shape (i.e. x=0, y=0)\n * @returns {CSG} the extrude shape, as a CSG object\n * @example extruded=cag.extrude({offset: [0,0,10], twistangle: 360, twiststeps: 100});\n*/\nconst extrude = function (cag, options) {\n  const CSG = require('../core/CSG') // FIXME: circular dependencies CAG=>CSG=>CAG\n  if (cag.sides.length === 0) {\n    // empty! : FIXME: should this throw ?\n    return new CSG()\n  }\n  let offsetVector = parseOptionAs3DVector(options, 'offset', [0, 0, 1])\n  let twistangle = parseOptionAsFloat(options, 'twistangle', 0)\n  let twiststeps = parseOptionAsInt(options, 'twiststeps', defaultResolution3D)\n  if (offsetVector.z === 0) {\n    throw new Error('offset cannot be orthogonal to Z axis')\n  }\n  if (twistangle === 0 || twiststeps < 1) {\n    twiststeps = 1\n  }\n  let normalVector = Vector3D.Create(0, 1, 0)\n\n  let polygons = []\n  // bottom and top\n  polygons = polygons.concat(cag._toPlanePolygons({\n    translation: [0, 0, 0],\n    normalVector: normalVector,\n    flipped: !(offsetVector.z < 0)}\n  ))\n  polygons = polygons.concat(cag._toPlanePolygons({\n    translation: offsetVector,\n    normalVector: normalVector.rotateZ(twistangle),\n    flipped: offsetVector.z < 0}))\n  // walls\n  for (let i = 0; i < twiststeps; i++) {\n    let c1 = new Connector(offsetVector.times(i / twiststeps), [0, 0, offsetVector.z],\n              normalVector.rotateZ(i * twistangle / twiststeps))\n    let c2 = new Connector(offsetVector.times((i + 1) / twiststeps), [0, 0, offsetVector.z],\n              normalVector.rotateZ((i + 1) * twistangle / twiststeps))\n    polygons = polygons.concat(cag._toWallPolygons({toConnector1: c1, toConnector2: c2}))\n  }\n\n  return fromPolygons(polygons)\n}\n\n// THIS IS AN OLD untested !!! version of rotate extrude\n/** Extrude to into a 3D solid by rotating the origin around the Y axis.\n * (and turning everything into XY plane)\n * @param {Object} options - options for construction\n * @param {Number} [options.angle=360] - angle of rotation\n * @param {Number} [options.resolution=defaultResolution3D] - number of polygons per 360 degree revolution\n * @returns {CSG} new 3D solid\n */\nconst rotateExtrude = function (cag, options) { // FIXME options should be optional\n  let alpha = parseOptionAsFloat(options, 'angle', 360)\n  let resolution = parseOptionAsInt(options, 'resolution', defaultResolution3D)\n\n  alpha = alpha > 360 ? alpha % 360 : alpha\n  let origin = [0, 0, 0]\n  let axisV = Vector3D.Create(0, 1, 0)\n  let normalV = [0, 0, 1]\n  let polygons = []\n  // planes only needed if alpha > 0\n  let connS = new Connector(origin, axisV, normalV)\n  if (alpha > 0 && alpha < 360) {\n          // we need to rotate negative to satisfy wall function condition of\n          // building in the direction of axis vector\n    let connE = new Connector(origin, axisV.rotateZ(-alpha), normalV)\n    polygons = polygons.concat(\n              cag._toPlanePolygons({toConnector: connS, flipped: true}))\n    polygons = polygons.concat(\n              cag._toPlanePolygons({toConnector: connE}))\n  }\n  let connT1 = connS\n  let connT2\n  let step = alpha / resolution\n  for (let a = step; a <= alpha + EPS; a += step) { // FIXME Should this be angelEPS?\n    connT2 = new Connector(origin, axisV.rotateZ(-a), normalV)\n    polygons = polygons.concat(cag._toWallPolygons(\n              {toConnector1: connT1, toConnector2: connT2}))\n    connT1 = connT2\n  }\n  return fromPolygons(polygons).reTesselated()\n}\n\n// FIXME: right now linear & rotate extrude take params first, while rectangular_extrude\n// takes params second ! confusing and incoherent ! needs to be changed (BREAKING CHANGE !)\n\n/** linear extrusion of the input 2d shape\n * @param {Object} [options] - options for construction\n * @param {Float} [options.height=1] - height of the extruded shape\n * @param {Integer} [options.slices=10] - number of intermediary steps/slices\n * @param {Integer} [options.twist=0] - angle (in degrees to twist the extusion by)\n * @param {Boolean} [options.center=false] - whether to center extrusion or not\n * @param {CAG} baseShape input 2d shape\n * @returns {CSG} new extruded shape\n *\n * @example\n * let revolved = linear_extrude({height: 10}, square())\n */\nfunction linear_extrude (params, baseShape) {\n  const defaults = {\n    height: 1,\n    slices: 10,\n    twist: 0,\n    center: false\n  }\n  /* convexity = 10, */\n  const {height, twist, slices, center} = Object.assign({}, defaults, params)\n\n  // if(params.convexity) convexity = params.convexity      // abandoned\n  let output = baseShape.extrude({offset: [0, 0, height], twistangle: twist, twiststeps: slices})\n  if (center === true) {\n    const b = output.getBounds() // b[0] = min, b[1] = max\n    const offset = (b[1].plus(b[0])).times(-0.5)\n    output = output.translate(offset)\n  }\n  return output\n}\n\n/** rotate extrusion / revolve of the given 2d shape\n * @param {Object} [options] - options for construction\n * @param {Integer} [options.fn=1] - resolution/number of segments of the extrusion\n * @param {Float} [options.startAngle=1] - start angle of the extrusion, in degrees\n * @param {Float} [options.angle=1] - angle of the extrusion, in degrees\n * @param {Float} [options.overflow='cap'] - what to do with points outside of bounds (+ / - x) :\n * defaults to capping those points to 0 (only supported behaviour for now)\n * @param {CAG} baseShape input 2d shape\n * @returns {CSG} new extruded shape\n *\n * @example\n * let revolved = rotate_extrude({fn: 10}, square())\n */\nfunction rotate_extrude (params, baseShape) {\n  // note, we should perhaps alias this to revolve() as well\n  const defaults = {\n    fn: 32,\n    startAngle: 0,\n    angle: 360,\n    overflow: 'cap'\n  }\n  params = Object.assign({}, defaults, params)\n  let {fn, startAngle, angle, overflow} = params\n  if (overflow !== 'cap') {\n    throw new Error('only capping of overflowing points is supported !')\n  }\n\n  if (arguments.length < 2) { // FIXME: what the hell ??? just put params second !\n    baseShape = params\n  }\n  // are we dealing with a positive or negative angle (for normals flipping)\n  const flipped = angle > 0\n  // limit actual angle between 0 & 360, regardless of direction\n  const totalAngle = flipped ? clamp((startAngle + angle), 0, 360) : clamp((startAngle + angle), -360, 0)\n  // adapt to the totalAngle : 1 extra segment per 45 degs if not 360 deg extrusion\n  // needs to be at least one and higher then the input resolution\n  const segments = Math.max(\n    Math.floor(Math.abs(totalAngle) / 45),\n    1,\n    fn\n  )\n  // maximum distance per axis between two points before considering them to be the same\n  const overlapTolerance = 0.00001\n  // convert baseshape to just an array of points, easier to deal with\n  let shapePoints = cagToPointsArray(baseShape)\n\n  // determine if the rotate_extrude can be computed in the first place\n  // ie all the points have to be either x > 0 or x < 0\n\n  // generic solution to always have a valid solid, even if points go beyond x/ -x\n  // 1. split points up between all those on the 'left' side of the axis (x<0) & those on the 'righ' (x>0)\n  // 2. for each set of points do the extrusion operation IN OPOSITE DIRECTIONS\n  // 3. union the two resulting solids\n\n  // 1. alt : OR : just cap of points at the axis ?\n\n  // console.log('shapePoints BEFORE', shapePoints, baseShape.sides)\n\n  const pointsWithNegativeX = shapePoints.filter(x => x[0] < 0)\n  const pointsWithPositiveX = shapePoints.filter(x => x[0] >= 0)\n  const arePointsWithNegAndPosX = pointsWithNegativeX.length > 0 && pointsWithPositiveX.length > 0\n\n  if (arePointsWithNegAndPosX && overflow === 'cap') {\n    if (pointsWithNegativeX.length > pointsWithPositiveX.length) {\n      shapePoints = shapePoints.map(function (point) {\n        return [Math.min(point[0], 0), point[1]]\n      })\n    } else if (pointsWithPositiveX.length >= pointsWithNegativeX.length) {\n      shapePoints = shapePoints.map(function (point) {\n        return [Math.max(point[0], 0), point[1]]\n      })\n    }\n  }\n\n  // console.log('negXs', pointsWithNegativeX, 'pointsWithPositiveX', pointsWithPositiveX, 'arePointsWithNegAndPosX', arePointsWithNegAndPosX)\n //  console.log('shapePoints AFTER', shapePoints, baseShape.sides)\n\n  let polygons = []\n\n  // for each of the intermediary steps in the extrusion\n  for (let i = 1; i < segments + 1; i++) {\n    // for each side of the 2d shape\n    for (let j = 0; j < shapePoints.length - 1; j++) {\n      // 2 points of a side\n      const curPoint = shapePoints[j]\n      const nextPoint = shapePoints[j + 1]\n\n      // compute matrix for current and next segment angle\n      let prevMatrix = Matrix4.rotationZ((i - 1) / segments * angle + startAngle)\n      let curMatrix = Matrix4.rotationZ(i / segments * angle + startAngle)\n\n      const pointA = rightMultiply1x3VectorToArray(prevMatrix, [curPoint[0], 0, curPoint[1]])\n      const pointAP = rightMultiply1x3VectorToArray(curMatrix, [curPoint[0], 0, curPoint[1]])\n      const pointB = rightMultiply1x3VectorToArray(prevMatrix, [nextPoint[0], 0, nextPoint[1]])\n      const pointBP = rightMultiply1x3VectorToArray(curMatrix, [nextPoint[0], 0, nextPoint[1]])\n\n      // console.log(`point ${j} edge connecting ${j} to ${j + 1}`)\n      let overlappingPoints = false\n      if (Math.abs(pointA[0] - pointAP[0]) < overlapTolerance && Math.abs(pointB[1] - pointBP[1]) < overlapTolerance) {\n        // console.log('identical / overlapping points (from current angle and next one), what now ?')\n        overlappingPoints = true\n      }\n\n      // we do not generate a single quad because:\n      // 1. it does not allow eliminating unneeded triangles in case of overlapping points\n      // 2. the current cleanup routines of csg.js create degenerate shapes from those quads\n      // let polyPoints = [pointA, pointB, pointBP, pointAP]\n      // polygons.push(polygonFromPoints(polyPoints))\n\n      if (flipped) {\n        // CW\n        polygons.push(polygonFromPoints([pointA, pointB, pointBP]))\n        if (!overlappingPoints) {\n          polygons.push(polygonFromPoints([pointBP, pointAP, pointA]))\n        }\n      } else {\n        // CCW\n        if (!overlappingPoints) {\n          polygons.push(polygonFromPoints([pointA, pointAP, pointBP]))\n        }\n        polygons.push(polygonFromPoints([pointBP, pointB, pointA]))\n      }\n    }\n    // if we do not do a full extrusion, we want caps at both ends (closed volume)\n    if (Math.abs(angle) < 360) {\n      // we need to recreate the side with capped points where applicable\n      const sideShape = fromPoints(shapePoints)\n      const endMatrix = Matrix4.rotationX(90).multiply(\n        Matrix4.rotationZ(-startAngle)\n      )\n      const endCap = sideShape._toPlanePolygons({flipped: flipped})\n        .map(x => x.transform(endMatrix))\n\n      const startMatrix = Matrix4.rotationX(90).multiply(\n        Matrix4.rotationZ(-angle - startAngle)\n      )\n      const startCap = sideShape._toPlanePolygons({flipped: !flipped})\n        .map(x => x.transform(startMatrix))\n      polygons = polygons.concat(endCap).concat(startCap)\n    }\n  }\n  return fromPolygons(polygons).reTesselated().canonicalized()\n}\n\n/** rectangular extrusion of the given array of points\n * @param {Array} basePoints array of points (nested) to extrude from\n * layed out like [ [0,0], [10,0], [5,10], [0,10] ]\n * @param {Object} [options] - options for construction\n * @param {Float} [options.h=1] - height of the extruded shape\n * @param {Float} [options.w=10] - width of the extruded shape\n * @param {Integer} [options.fn=1] - resolution/number of segments of the extrusion\n * @param {Boolean} [options.closed=false] - whether to close the input path for the extrusion or not\n * @param {Boolean} [options.round=true] - whether to round the extrusion or not\n * @returns {CSG} new extruded shape\n *\n * @example\n * let revolved = rectangular_extrude({height: 10}, square())\n */\nfunction rectangular_extrude (basePoints, params) {\n  const defaults = {\n    w: 1,\n    h: 1,\n    fn: 8,\n    closed: false,\n    round: true\n  }\n  const {w, h, fn, closed, round} = Object.assign({}, defaults, params)\n  return new Path2D(basePoints, closed).rectangularExtrude(w, h, fn, round)\n}\n\nmodule.exports = {\n  extrudeInOrthonormalBasis,\n  extrudeInPlane,\n  extrude,\n  linear_extrude,\n  rotate_extrude,\n  rotateExtrude,\n  rectangular_extrude\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/@jscad/csg/src/api/ops-extrusions.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}}],"sources":{"node_modules/@jscad/csg/src/api/ops-extrusions.js":"const {EPS, defaultResolution3D} = require('../core/constants')\nconst OrthoNormalBasis = require('../core/math/OrthoNormalBasis')\nconst {parseOptionAs3DVector, parseOptionAsBool, parseOptionAsFloat, parseOptionAsInt} = require('./optionParsers')\nconst Vector3D = require('../core/math/Vector3')\nconst Matrix4 = require('../core/math/Matrix4')\nconst Path2D = require('../core/math/Path2')\nconst {Connector} = require('../core/connectors')\nconst {fromPolygons} = require('../core/CSGFactories')\nconst {cagToPointsArray, clamp, rightMultiply1x3VectorToArray, polygonFromPoints} = require('./helpers')\nconst {fromPoints} = require('../core/CAGFactories')\n\n/** extrude the CAG in a certain plane.\n * Giving just a plane is not enough, multiple different extrusions in the same plane would be possible\n * by rotating around the plane's origin. An additional right-hand vector should be specified as well,\n * and this is exactly a OrthoNormalBasis.\n * @param  {CAG} cag the cag to extrude\n * @param  {Orthonormalbasis} orthonormalbasis characterizes the plane in which to extrude\n * @param  {Float} depth thickness of the extruded shape. Extrusion is done upwards from the plane\n *  (unless symmetrical option is set, see below)\n * @param  {Object} [options] - options for construction\n * @param {Boolean} [options.symmetrical=true] - extrude symmetrically in two directions about the plane\n */\nconst extrudeInOrthonormalBasis = function (cag, orthonormalbasis, depth, options) {\n      // first extrude in the regular Z plane:\n  if (!(orthonormalbasis instanceof OrthoNormalBasis)) {\n    throw new Error('extrudeInPlane: the first parameter should be a OrthoNormalBasis')\n  }\n  let extruded = cag.extrude({\n    offset: [0, 0, depth]\n  })\n  if (parseOptionAsBool(options, 'symmetrical', false)) {\n    extruded = extruded.translate([0, 0, -depth / 2])\n  }\n  let matrix = orthonormalbasis.getInverseProjectionMatrix()\n  extruded = extruded.transform(matrix)\n  return extruded\n}\n\n/** Extrude in a standard cartesian plane, specified by two axis identifiers. Each identifier can be\n * one of [\"X\",\"Y\",\"Z\",\"-X\",\"-Y\",\"-Z\"]\n * The 2d x axis will map to the first given 3D axis, the 2d y axis will map to the second.\n * See OrthoNormalBasis.GetCartesian for details.\n * @param  {CAG} cag the cag to extrude\n * @param  {String} axis1 the first axis\n * @param  {String} axis2 the second axis\n * @param  {Float} depth thickness of the extruded shape. Extrusion is done upwards from the plane\n * @param  {Object} [options] - options for construction\n * @param {Boolean} [options.symmetrical=true] - extrude symmetrically in two directions about the plane\n */\nconst extrudeInPlane = function (cag, axis1, axis2, depth, options) {\n  return extrudeInOrthonormalBasis(cag, OrthoNormalBasis.GetCartesian(axis1, axis2), depth, options)\n}\n\n/** linear extrusion of 2D shape, with optional twist\n * @param  {CAG} cag the cag to extrude\n * @param  {Object} [options] - options for construction\n * @param {Array} [options.offset=[0,0,1]] - The 2d shape is placed in in z=0 plane and extruded into direction <offset>\n * (a 3D vector as a 3 component array)\n * @param {Boolean} [options.twiststeps=defaultResolution3D] - twiststeps determines the resolution of the twist (should be >= 1)\n * @param {Boolean} [options.twistangle=0] - twistangle The final face is rotated <twistangle> degrees. Rotation is done around the origin of the 2d shape (i.e. x=0, y=0)\n * @returns {CSG} the extrude shape, as a CSG object\n * @example extruded=cag.extrude({offset: [0,0,10], twistangle: 360, twiststeps: 100});\n*/\nconst extrude = function (cag, options) {\n  const CSG = require('../core/CSG') // FIXME: circular dependencies CAG=>CSG=>CAG\n  if (cag.sides.length === 0) {\n    // empty! : FIXME: should this throw ?\n    return new CSG()\n  }\n  let offsetVector = parseOptionAs3DVector(options, 'offset', [0, 0, 1])\n  let twistangle = parseOptionAsFloat(options, 'twistangle', 0)\n  let twiststeps = parseOptionAsInt(options, 'twiststeps', defaultResolution3D)\n  if (offsetVector.z === 0) {\n    throw new Error('offset cannot be orthogonal to Z axis')\n  }\n  if (twistangle === 0 || twiststeps < 1) {\n    twiststeps = 1\n  }\n  let normalVector = Vector3D.Create(0, 1, 0)\n\n  let polygons = []\n  // bottom and top\n  polygons = polygons.concat(cag._toPlanePolygons({\n    translation: [0, 0, 0],\n    normalVector: normalVector,\n    flipped: !(offsetVector.z < 0)}\n  ))\n  polygons = polygons.concat(cag._toPlanePolygons({\n    translation: offsetVector,\n    normalVector: normalVector.rotateZ(twistangle),\n    flipped: offsetVector.z < 0}))\n  // walls\n  for (let i = 0; i < twiststeps; i++) {\n    let c1 = new Connector(offsetVector.times(i / twiststeps), [0, 0, offsetVector.z],\n              normalVector.rotateZ(i * twistangle / twiststeps))\n    let c2 = new Connector(offsetVector.times((i + 1) / twiststeps), [0, 0, offsetVector.z],\n              normalVector.rotateZ((i + 1) * twistangle / twiststeps))\n    polygons = polygons.concat(cag._toWallPolygons({toConnector1: c1, toConnector2: c2}))\n  }\n\n  return fromPolygons(polygons)\n}\n\n// THIS IS AN OLD untested !!! version of rotate extrude\n/** Extrude to into a 3D solid by rotating the origin around the Y axis.\n * (and turning everything into XY plane)\n * @param {Object} options - options for construction\n * @param {Number} [options.angle=360] - angle of rotation\n * @param {Number} [options.resolution=defaultResolution3D] - number of polygons per 360 degree revolution\n * @returns {CSG} new 3D solid\n */\nconst rotateExtrude = function (cag, options) { // FIXME options should be optional\n  let alpha = parseOptionAsFloat(options, 'angle', 360)\n  let resolution = parseOptionAsInt(options, 'resolution', defaultResolution3D)\n\n  alpha = alpha > 360 ? alpha % 360 : alpha\n  let origin = [0, 0, 0]\n  let axisV = Vector3D.Create(0, 1, 0)\n  let normalV = [0, 0, 1]\n  let polygons = []\n  // planes only needed if alpha > 0\n  let connS = new Connector(origin, axisV, normalV)\n  if (alpha > 0 && alpha < 360) {\n          // we need to rotate negative to satisfy wall function condition of\n          // building in the direction of axis vector\n    let connE = new Connector(origin, axisV.rotateZ(-alpha), normalV)\n    polygons = polygons.concat(\n              cag._toPlanePolygons({toConnector: connS, flipped: true}))\n    polygons = polygons.concat(\n              cag._toPlanePolygons({toConnector: connE}))\n  }\n  let connT1 = connS\n  let connT2\n  let step = alpha / resolution\n  for (let a = step; a <= alpha + EPS; a += step) { // FIXME Should this be angelEPS?\n    connT2 = new Connector(origin, axisV.rotateZ(-a), normalV)\n    polygons = polygons.concat(cag._toWallPolygons(\n              {toConnector1: connT1, toConnector2: connT2}))\n    connT1 = connT2\n  }\n  return fromPolygons(polygons).reTesselated()\n}\n\n// FIXME: right now linear & rotate extrude take params first, while rectangular_extrude\n// takes params second ! confusing and incoherent ! needs to be changed (BREAKING CHANGE !)\n\n/** linear extrusion of the input 2d shape\n * @param {Object} [options] - options for construction\n * @param {Float} [options.height=1] - height of the extruded shape\n * @param {Integer} [options.slices=10] - number of intermediary steps/slices\n * @param {Integer} [options.twist=0] - angle (in degrees to twist the extusion by)\n * @param {Boolean} [options.center=false] - whether to center extrusion or not\n * @param {CAG} baseShape input 2d shape\n * @returns {CSG} new extruded shape\n *\n * @example\n * let revolved = linear_extrude({height: 10}, square())\n */\nfunction linear_extrude (params, baseShape) {\n  const defaults = {\n    height: 1,\n    slices: 10,\n    twist: 0,\n    center: false\n  }\n  /* convexity = 10, */\n  const {height, twist, slices, center} = Object.assign({}, defaults, params)\n\n  // if(params.convexity) convexity = params.convexity      // abandoned\n  let output = baseShape.extrude({offset: [0, 0, height], twistangle: twist, twiststeps: slices})\n  if (center === true) {\n    const b = output.getBounds() // b[0] = min, b[1] = max\n    const offset = (b[1].plus(b[0])).times(-0.5)\n    output = output.translate(offset)\n  }\n  return output\n}\n\n/** rotate extrusion / revolve of the given 2d shape\n * @param {Object} [options] - options for construction\n * @param {Integer} [options.fn=1] - resolution/number of segments of the extrusion\n * @param {Float} [options.startAngle=1] - start angle of the extrusion, in degrees\n * @param {Float} [options.angle=1] - angle of the extrusion, in degrees\n * @param {Float} [options.overflow='cap'] - what to do with points outside of bounds (+ / - x) :\n * defaults to capping those points to 0 (only supported behaviour for now)\n * @param {CAG} baseShape input 2d shape\n * @returns {CSG} new extruded shape\n *\n * @example\n * let revolved = rotate_extrude({fn: 10}, square())\n */\nfunction rotate_extrude (params, baseShape) {\n  // note, we should perhaps alias this to revolve() as well\n  const defaults = {\n    fn: 32,\n    startAngle: 0,\n    angle: 360,\n    overflow: 'cap'\n  }\n  params = Object.assign({}, defaults, params)\n  let {fn, startAngle, angle, overflow} = params\n  if (overflow !== 'cap') {\n    throw new Error('only capping of overflowing points is supported !')\n  }\n\n  if (arguments.length < 2) { // FIXME: what the hell ??? just put params second !\n    baseShape = params\n  }\n  // are we dealing with a positive or negative angle (for normals flipping)\n  const flipped = angle > 0\n  // limit actual angle between 0 & 360, regardless of direction\n  const totalAngle = flipped ? clamp((startAngle + angle), 0, 360) : clamp((startAngle + angle), -360, 0)\n  // adapt to the totalAngle : 1 extra segment per 45 degs if not 360 deg extrusion\n  // needs to be at least one and higher then the input resolution\n  const segments = Math.max(\n    Math.floor(Math.abs(totalAngle) / 45),\n    1,\n    fn\n  )\n  // maximum distance per axis between two points before considering them to be the same\n  const overlapTolerance = 0.00001\n  // convert baseshape to just an array of points, easier to deal with\n  let shapePoints = cagToPointsArray(baseShape)\n\n  // determine if the rotate_extrude can be computed in the first place\n  // ie all the points have to be either x > 0 or x < 0\n\n  // generic solution to always have a valid solid, even if points go beyond x/ -x\n  // 1. split points up between all those on the 'left' side of the axis (x<0) & those on the 'righ' (x>0)\n  // 2. for each set of points do the extrusion operation IN OPOSITE DIRECTIONS\n  // 3. union the two resulting solids\n\n  // 1. alt : OR : just cap of points at the axis ?\n\n  // console.log('shapePoints BEFORE', shapePoints, baseShape.sides)\n\n  const pointsWithNegativeX = shapePoints.filter(x => x[0] < 0)\n  const pointsWithPositiveX = shapePoints.filter(x => x[0] >= 0)\n  const arePointsWithNegAndPosX = pointsWithNegativeX.length > 0 && pointsWithPositiveX.length > 0\n\n  if (arePointsWithNegAndPosX && overflow === 'cap') {\n    if (pointsWithNegativeX.length > pointsWithPositiveX.length) {\n      shapePoints = shapePoints.map(function (point) {\n        return [Math.min(point[0], 0), point[1]]\n      })\n    } else if (pointsWithPositiveX.length >= pointsWithNegativeX.length) {\n      shapePoints = shapePoints.map(function (point) {\n        return [Math.max(point[0], 0), point[1]]\n      })\n    }\n  }\n\n  // console.log('negXs', pointsWithNegativeX, 'pointsWithPositiveX', pointsWithPositiveX, 'arePointsWithNegAndPosX', arePointsWithNegAndPosX)\n //  console.log('shapePoints AFTER', shapePoints, baseShape.sides)\n\n  let polygons = []\n\n  // for each of the intermediary steps in the extrusion\n  for (let i = 1; i < segments + 1; i++) {\n    // for each side of the 2d shape\n    for (let j = 0; j < shapePoints.length - 1; j++) {\n      // 2 points of a side\n      const curPoint = shapePoints[j]\n      const nextPoint = shapePoints[j + 1]\n\n      // compute matrix for current and next segment angle\n      let prevMatrix = Matrix4.rotationZ((i - 1) / segments * angle + startAngle)\n      let curMatrix = Matrix4.rotationZ(i / segments * angle + startAngle)\n\n      const pointA = rightMultiply1x3VectorToArray(prevMatrix, [curPoint[0], 0, curPoint[1]])\n      const pointAP = rightMultiply1x3VectorToArray(curMatrix, [curPoint[0], 0, curPoint[1]])\n      const pointB = rightMultiply1x3VectorToArray(prevMatrix, [nextPoint[0], 0, nextPoint[1]])\n      const pointBP = rightMultiply1x3VectorToArray(curMatrix, [nextPoint[0], 0, nextPoint[1]])\n\n      // console.log(`point ${j} edge connecting ${j} to ${j + 1}`)\n      let overlappingPoints = false\n      if (Math.abs(pointA[0] - pointAP[0]) < overlapTolerance && Math.abs(pointB[1] - pointBP[1]) < overlapTolerance) {\n        // console.log('identical / overlapping points (from current angle and next one), what now ?')\n        overlappingPoints = true\n      }\n\n      // we do not generate a single quad because:\n      // 1. it does not allow eliminating unneeded triangles in case of overlapping points\n      // 2. the current cleanup routines of csg.js create degenerate shapes from those quads\n      // let polyPoints = [pointA, pointB, pointBP, pointAP]\n      // polygons.push(polygonFromPoints(polyPoints))\n\n      if (flipped) {\n        // CW\n        polygons.push(polygonFromPoints([pointA, pointB, pointBP]))\n        if (!overlappingPoints) {\n          polygons.push(polygonFromPoints([pointBP, pointAP, pointA]))\n        }\n      } else {\n        // CCW\n        if (!overlappingPoints) {\n          polygons.push(polygonFromPoints([pointA, pointAP, pointBP]))\n        }\n        polygons.push(polygonFromPoints([pointBP, pointB, pointA]))\n      }\n    }\n    // if we do not do a full extrusion, we want caps at both ends (closed volume)\n    if (Math.abs(angle) < 360) {\n      // we need to recreate the side with capped points where applicable\n      const sideShape = fromPoints(shapePoints)\n      const endMatrix = Matrix4.rotationX(90).multiply(\n        Matrix4.rotationZ(-startAngle)\n      )\n      const endCap = sideShape._toPlanePolygons({flipped: flipped})\n        .map(x => x.transform(endMatrix))\n\n      const startMatrix = Matrix4.rotationX(90).multiply(\n        Matrix4.rotationZ(-angle - startAngle)\n      )\n      const startCap = sideShape._toPlanePolygons({flipped: !flipped})\n        .map(x => x.transform(startMatrix))\n      polygons = polygons.concat(endCap).concat(startCap)\n    }\n  }\n  return fromPolygons(polygons).reTesselated().canonicalized()\n}\n\n/** rectangular extrusion of the given array of points\n * @param {Array} basePoints array of points (nested) to extrude from\n * layed out like [ [0,0], [10,0], [5,10], [0,10] ]\n * @param {Object} [options] - options for construction\n * @param {Float} [options.h=1] - height of the extruded shape\n * @param {Float} [options.w=10] - width of the extruded shape\n * @param {Integer} [options.fn=1] - resolution/number of segments of the extrusion\n * @param {Boolean} [options.closed=false] - whether to close the input path for the extrusion or not\n * @param {Boolean} [options.round=true] - whether to round the extrusion or not\n * @returns {CSG} new extruded shape\n *\n * @example\n * let revolved = rectangular_extrude({height: 10}, square())\n */\nfunction rectangular_extrude (basePoints, params) {\n  const defaults = {\n    w: 1,\n    h: 1,\n    fn: 8,\n    closed: false,\n    round: true\n  }\n  const {w, h, fn, closed, round} = Object.assign({}, defaults, params)\n  return new Path2D(basePoints, closed).rectangularExtrude(w, h, fn, round)\n}\n\nmodule.exports = {\n  extrudeInOrthonormalBasis,\n  extrudeInPlane,\n  extrude,\n  linear_extrude,\n  rotate_extrude,\n  rotateExtrude,\n  rectangular_extrude\n}\n"},"lineCount":358}},"error":null,"hash":"f4600dc7d46a189b4cae89e6b2ac4827","cacheData":{"env":{}}}